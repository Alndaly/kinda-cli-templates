/*! For license information please see main.cc541cbc657e58b76558.js.LICENSE.txt */
(()=>{"use strict";var e,n,t,r,l,a,o,u,i,s={791:(e,n,t)=>{var r,l,a,o=t(745),u=t(294),i=t.t(u,2),s=[{path:"/",component:function(){return u.createElement("h1",null,"111")},indexRoute:{component:function(){return u.createElement("h1",null,"333")}},childRoutes:[{path:"about",component:function(){return u.createElement("h1",null,"222")}}]}];(l=r||(r={})).Pop="POP",l.Push="PUSH",l.Replace="REPLACE",function(e){e.data="data",e.deferred="deferred",e.redirect="redirect",e.error="error"}(a||(a={}));class c extends Error{}"function"==typeof Object.is&&Object.is;const{useState:f,useEffect:d,useLayoutEffect:p,useDebugValue:h}=i;"undefined"==typeof window||void 0===window.document||window.document.createElement,i.useSyncExternalStore;const m=u.createContext(null),v=u.createContext(null);class g extends u.Component{constructor(e){super(e),this.state={location:e.location,error:e.error}}static getDerivedStateFromError(e){return{error:e}}static getDerivedStateFromProps(e,n){return n.location!==e.location?{error:e.error,location:e.location}:{error:e.error||n.error,location:n.location}}componentDidCatch(e,n){console.error("React Router caught the following error during render",e,n)}render(){return this.state.error?React.createElement(RouteErrorContext.Provider,{value:this.state.error,children:this.props.component}):this.props.children}}var y,b,w;function k(e){let{basename:n="/",children:t=null,location:l,navigationType:a=r.Pop,navigator:o,static:i=!1}=e;null!=u.useContext(v)&&function(e,n){if(!1===e||null==e)throw new Error(n)}(!1);let s=n.replace(/^\/*/,"/"),c=u.useMemo((()=>({basename:s,navigator:o,static:i})),[s,o,i]);"string"==typeof l&&(l=function(e){let n={};if(e){let t=e.indexOf("#");t>=0&&(n.hash=e.substr(t),e=e.substr(0,t));let r=e.indexOf("?");r>=0&&(n.search=e.substr(r),e=e.substr(0,r)),e&&(n.pathname=e)}return n}(l));let{pathname:f="/",search:d="",hash:p="",state:h=null,key:g="default"}=l,y=u.useMemo((()=>{let e=function(e,n){if("/"===n)return e;if(!e.toLowerCase().startsWith(n.toLowerCase()))return null;let t=n.endsWith("/")?n.length-1:n.length,r=e.charAt(t);return r&&"/"!==r?null:e.slice(t)||"/"}(f,s);return null==e?null:{pathname:e,search:d,hash:p,state:h,key:g}}),[s,f,d,p,h,g]);return null==y?null:u.createElement(m.Provider,{value:c},u.createElement(v.Provider,{children:t,value:{location:y,navigationType:a}}))}!function(e){e.UseRevalidator="useRevalidator"}(y||(y={})),function(e){e.UseLoaderData="useLoaderData",e.UseActionData="useActionData",e.UseRouteError="useRouteError",e.UseNavigation="useNavigation",e.UseRouteLoaderData="useRouteLoaderData",e.UseMatches="useMatches",e.UseRevalidator="useRevalidator"}(b||(b={})),function(e){e[e.pending=0]="pending",e[e.success=1]="success",e[e.error=2]="error"}(w||(w={})),new Promise((()=>{}));class S extends u.Component{constructor(e){super(e),this.state={error:null}}static getDerivedStateFromError(e){return{error:e}}componentDidCatch(e,n){console.error("<Await> caught the following error during render",e,n)}render(){let{children:e,errorElement:n,resolve:t}=this.props,r=null,l=w.pending;if(t instanceof Promise)if(this.state.error){w.error;let e=this.state.error;Promise.reject().catch((()=>{})),Object.defineProperty(r,"_tracked",{get:()=>!0}),Object.defineProperty(r,"_error",{get:()=>e})}else t._tracked?void 0!==r._error?w.error:void 0!==r._data?w.success:w.pending:(w.pending,Object.defineProperty(t,"_tracked",{get:()=>!0}),t.then((e=>Object.defineProperty(t,"_data",{get:()=>e})),(e=>Object.defineProperty(t,"_error",{get:()=>e}))));else w.success,Promise.resolve(),Object.defineProperty(r,"_tracked",{get:()=>!0}),Object.defineProperty(r,"_data",{get:()=>t});if(l===w.error&&r._error instanceof AbortedDeferredError)throw neverSettledPromise;if(l===w.error&&!n)throw r._error;if(l===w.error)return React.createElement(AwaitContext.Provider,{value:r,children:n});if(l===w.success)return React.createElement(AwaitContext.Provider,{value:r,children:e});throw r}}var E=document.querySelector("#root");console.log("node:",E),E?o.createRoot(E).render(React.createElement(k,{routes:s})):console.error("React没有找到root根节点")},448:(e,n,t)=>{var r=t(294),l=t(840);function a(e){for(var n="https://reactjs.org/docs/error-decoder.html?invariant="+e,t=1;t<arguments.length;t++)n+="&args[]="+encodeURIComponent(arguments[t]);return"Minified React error #"+e+"; visit "+n+" for the full message or use the non-minified dev environment for full errors and additional helpful warnings."}var o=new Set,u={};function i(e,n){s(e,n),s(e+"Capture",n)}function s(e,n){for(u[e]=n,e=0;e<n.length;e++)o.add(n[e])}var c=!("undefined"==typeof window||void 0===window.document||void 0===window.document.createElement),f=Object.prototype.hasOwnProperty,d=/^[:A-Z_a-z\u00C0-\u00D6\u00D8-\u00F6\u00F8-\u02FF\u0370-\u037D\u037F-\u1FFF\u200C-\u200D\u2070-\u218F\u2C00-\u2FEF\u3001-\uD7FF\uF900-\uFDCF\uFDF0-\uFFFD][:A-Z_a-z\u00C0-\u00D6\u00D8-\u00F6\u00F8-\u02FF\u0370-\u037D\u037F-\u1FFF\u200C-\u200D\u2070-\u218F\u2C00-\u2FEF\u3001-\uD7FF\uF900-\uFDCF\uFDF0-\uFFFD\-.0-9\u00B7\u0300-\u036F\u203F-\u2040]*$/,p={},h={};function m(e,n,t,r,l,a,o){this.acceptsBooleans=2===n||3===n||4===n,this.attributeName=r,this.attributeNamespace=l,this.mustUseProperty=t,this.propertyName=e,this.type=n,this.sanitizeURL=a,this.removeEmptyString=o}var v={};"children dangerouslySetInnerHTML defaultValue defaultChecked innerHTML suppressContentEditableWarning suppressHydrationWarning style".split(" ").forEach((function(e){v[e]=new m(e,0,!1,e,null,!1,!1)})),[["acceptCharset","accept-charset"],["className","class"],["htmlFor","for"],["httpEquiv","http-equiv"]].forEach((function(e){var n=e[0];v[n]=new m(n,1,!1,e[1],null,!1,!1)})),["contentEditable","draggable","spellCheck","value"].forEach((function(e){v[e]=new m(e,2,!1,e.toLowerCase(),null,!1,!1)})),["autoReverse","externalResourcesRequired","focusable","preserveAlpha"].forEach((function(e){v[e]=new m(e,2,!1,e,null,!1,!1)})),"allowFullScreen async autoFocus autoPlay controls default defer disabled disablePictureInPicture disableRemotePlayback formNoValidate hidden loop noModule noValidate open playsInline readOnly required reversed scoped seamless itemScope".split(" ").forEach((function(e){v[e]=new m(e,3,!1,e.toLowerCase(),null,!1,!1)})),["checked","multiple","muted","selected"].forEach((function(e){v[e]=new m(e,3,!0,e,null,!1,!1)})),["capture","download"].forEach((function(e){v[e]=new m(e,4,!1,e,null,!1,!1)})),["cols","rows","size","span"].forEach((function(e){v[e]=new m(e,6,!1,e,null,!1,!1)})),["rowSpan","start"].forEach((function(e){v[e]=new m(e,5,!1,e.toLowerCase(),null,!1,!1)}));var g=/[\-:]([a-z])/g;function y(e){return e[1].toUpperCase()}function b(e,n,t,r){var l=v.hasOwnProperty(n)?v[n]:null;(null!==l?0!==l.type:r||!(2<n.length)||"o"!==n[0]&&"O"!==n[0]||"n"!==n[1]&&"N"!==n[1])&&(function(e,n,t,r){if(null==n||function(e,n,t,r){if(null!==t&&0===t.type)return!1;switch(typeof n){case"function":case"symbol":return!0;case"boolean":return!r&&(null!==t?!t.acceptsBooleans:"data-"!==(e=e.toLowerCase().slice(0,5))&&"aria-"!==e);default:return!1}}(e,n,t,r))return!0;if(r)return!1;if(null!==t)switch(t.type){case 3:return!n;case 4:return!1===n;case 5:return isNaN(n);case 6:return isNaN(n)||1>n}return!1}(n,t,l,r)&&(t=null),r||null===l?function(e){return!!f.call(h,e)||!f.call(p,e)&&(d.test(e)?h[e]=!0:(p[e]=!0,!1))}(n)&&(null===t?e.removeAttribute(n):e.setAttribute(n,""+t)):l.mustUseProperty?e[l.propertyName]=null===t?3!==l.type&&"":t:(n=l.attributeName,r=l.attributeNamespace,null===t?e.removeAttribute(n):(t=3===(l=l.type)||4===l&&!0===t?"":""+t,r?e.setAttributeNS(r,n,t):e.setAttribute(n,t))))}"accent-height alignment-baseline arabic-form baseline-shift cap-height clip-path clip-rule color-interpolation color-interpolation-filters color-profile color-rendering dominant-baseline enable-background fill-opacity fill-rule flood-color flood-opacity font-family font-size font-size-adjust font-stretch font-style font-variant font-weight glyph-name glyph-orientation-horizontal glyph-orientation-vertical horiz-adv-x horiz-origin-x image-rendering letter-spacing lighting-color marker-end marker-mid marker-start overline-position overline-thickness paint-order panose-1 pointer-events rendering-intent shape-rendering stop-color stop-opacity strikethrough-position strikethrough-thickness stroke-dasharray stroke-dashoffset stroke-linecap stroke-linejoin stroke-miterlimit stroke-opacity stroke-width text-anchor text-decoration text-rendering underline-position underline-thickness unicode-bidi unicode-range units-per-em v-alphabetic v-hanging v-ideographic v-mathematical vector-effect vert-adv-y vert-origin-x vert-origin-y word-spacing writing-mode xmlns:xlink x-height".split(" ").forEach((function(e){var n=e.replace(g,y);v[n]=new m(n,1,!1,e,null,!1,!1)})),"xlink:actuate xlink:arcrole xlink:role xlink:show xlink:title xlink:type".split(" ").forEach((function(e){var n=e.replace(g,y);v[n]=new m(n,1,!1,e,"http://www.w3.org/1999/xlink",!1,!1)})),["xml:base","xml:lang","xml:space"].forEach((function(e){var n=e.replace(g,y);v[n]=new m(n,1,!1,e,"http://www.w3.org/XML/1998/namespace",!1,!1)})),["tabIndex","crossOrigin"].forEach((function(e){v[e]=new m(e,1,!1,e.toLowerCase(),null,!1,!1)})),v.xlinkHref=new m("xlinkHref",1,!1,"xlink:href","http://www.w3.org/1999/xlink",!0,!1),["src","href","action","formAction"].forEach((function(e){v[e]=new m(e,1,!1,e.toLowerCase(),null,!0,!0)}));var w=r.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED,k=Symbol.for("react.element"),S=Symbol.for("react.portal"),E=Symbol.for("react.fragment"),x=Symbol.for("react.strict_mode"),_=Symbol.for("react.profiler"),C=Symbol.for("react.provider"),P=Symbol.for("react.context"),N=Symbol.for("react.forward_ref"),z=Symbol.for("react.suspense"),T=Symbol.for("react.suspense_list"),L=Symbol.for("react.memo"),O=Symbol.for("react.lazy");Symbol.for("react.scope"),Symbol.for("react.debug_trace_mode");var D=Symbol.for("react.offscreen");Symbol.for("react.legacy_hidden"),Symbol.for("react.cache"),Symbol.for("react.tracing_marker");var R=Symbol.iterator;function I(e){return null===e||"object"!=typeof e?null:"function"==typeof(e=R&&e[R]||e["@@iterator"])?e:null}var M,F=Object.assign;function U(e){if(void 0===M)try{throw Error()}catch(e){var n=e.stack.trim().match(/\n( *(at )?)/);M=n&&n[1]||""}return"\n"+M+e}var j=!1;function A(e,n){if(!e||j)return"";j=!0;var t=Error.prepareStackTrace;Error.prepareStackTrace=void 0;try{if(n)if(n=function(){throw Error()},Object.defineProperty(n.prototype,"props",{set:function(){throw Error()}}),"object"==typeof Reflect&&Reflect.construct){try{Reflect.construct(n,[])}catch(e){var r=e}Reflect.construct(e,[],n)}else{try{n.call()}catch(e){r=e}e.call(n.prototype)}else{try{throw Error()}catch(e){r=e}e()}}catch(n){if(n&&r&&"string"==typeof n.stack){for(var l=n.stack.split("\n"),a=r.stack.split("\n"),o=l.length-1,u=a.length-1;1<=o&&0<=u&&l[o]!==a[u];)u--;for(;1<=o&&0<=u;o--,u--)if(l[o]!==a[u]){if(1!==o||1!==u)do{if(o--,0>--u||l[o]!==a[u]){var i="\n"+l[o].replace(" at new "," at ");return e.displayName&&i.includes("<anonymous>")&&(i=i.replace("<anonymous>",e.displayName)),i}}while(1<=o&&0<=u);break}}}finally{j=!1,Error.prepareStackTrace=t}return(e=e?e.displayName||e.name:"")?U(e):""}function H(e){switch(e.tag){case 5:return U(e.type);case 16:return U("Lazy");case 13:return U("Suspense");case 19:return U("SuspenseList");case 0:case 2:case 15:return A(e.type,!1);case 11:return A(e.type.render,!1);case 1:return A(e.type,!0);default:return""}}function V(e){if(null==e)return null;if("function"==typeof e)return e.displayName||e.name||null;if("string"==typeof e)return e;switch(e){case E:return"Fragment";case S:return"Portal";case _:return"Profiler";case x:return"StrictMode";case z:return"Suspense";case T:return"SuspenseList"}if("object"==typeof e)switch(e.$$typeof){case P:return(e.displayName||"Context")+".Consumer";case C:return(e._context.displayName||"Context")+".Provider";case N:var n=e.render;return(e=e.displayName)||(e=""!==(e=n.displayName||n.name||"")?"ForwardRef("+e+")":"ForwardRef"),e;case L:return null!==(n=e.displayName||null)?n:V(e.type)||"Memo";case O:n=e._payload,e=e._init;try{return V(e(n))}catch(e){}}return null}function $(e){var n=e.type;switch(e.tag){case 24:return"Cache";case 9:return(n.displayName||"Context")+".Consumer";case 10:return(n._context.displayName||"Context")+".Provider";case 18:return"DehydratedFragment";case 11:return e=(e=n.render).displayName||e.name||"",n.displayName||(""!==e?"ForwardRef("+e+")":"ForwardRef");case 7:return"Fragment";case 5:return n;case 4:return"Portal";case 3:return"Root";case 6:return"Text";case 16:return V(n);case 8:return n===x?"StrictMode":"Mode";case 22:return"Offscreen";case 12:return"Profiler";case 21:return"Scope";case 13:return"Suspense";case 19:return"SuspenseList";case 25:return"TracingMarker";case 1:case 0:case 17:case 2:case 14:case 15:if("function"==typeof n)return n.displayName||n.name||null;if("string"==typeof n)return n}return null}function B(e){switch(typeof e){case"boolean":case"number":case"string":case"undefined":case"object":return e;default:return""}}function W(e){var n=e.type;return(e=e.nodeName)&&"input"===e.toLowerCase()&&("checkbox"===n||"radio"===n)}function Q(e){e._valueTracker||(e._valueTracker=function(e){var n=W(e)?"checked":"value",t=Object.getOwnPropertyDescriptor(e.constructor.prototype,n),r=""+e[n];if(!e.hasOwnProperty(n)&&void 0!==t&&"function"==typeof t.get&&"function"==typeof t.set){var l=t.get,a=t.set;return Object.defineProperty(e,n,{configurable:!0,get:function(){return l.call(this)},set:function(e){r=""+e,a.call(this,e)}}),Object.defineProperty(e,n,{enumerable:t.enumerable}),{getValue:function(){return r},setValue:function(e){r=""+e},stopTracking:function(){e._valueTracker=null,delete e[n]}}}}(e))}function q(e){if(!e)return!1;var n=e._valueTracker;if(!n)return!0;var t=n.getValue(),r="";return e&&(r=W(e)?e.checked?"true":"false":e.value),(e=r)!==t&&(n.setValue(e),!0)}function K(e){if(void 0===(e=e||("undefined"!=typeof document?document:void 0)))return null;try{return e.activeElement||e.body}catch(n){return e.body}}function Y(e,n){var t=n.checked;return F({},n,{defaultChecked:void 0,defaultValue:void 0,value:void 0,checked:null!=t?t:e._wrapperState.initialChecked})}function X(e,n){var t=null==n.defaultValue?"":n.defaultValue,r=null!=n.checked?n.checked:n.defaultChecked;t=B(null!=n.value?n.value:t),e._wrapperState={initialChecked:r,initialValue:t,controlled:"checkbox"===n.type||"radio"===n.type?null!=n.checked:null!=n.value}}function G(e,n){null!=(n=n.checked)&&b(e,"checked",n,!1)}function Z(e,n){G(e,n);var t=B(n.value),r=n.type;if(null!=t)"number"===r?(0===t&&""===e.value||e.value!=t)&&(e.value=""+t):e.value!==""+t&&(e.value=""+t);else if("submit"===r||"reset"===r)return void e.removeAttribute("value");n.hasOwnProperty("value")?ee(e,n.type,t):n.hasOwnProperty("defaultValue")&&ee(e,n.type,B(n.defaultValue)),null==n.checked&&null!=n.defaultChecked&&(e.defaultChecked=!!n.defaultChecked)}function J(e,n,t){if(n.hasOwnProperty("value")||n.hasOwnProperty("defaultValue")){var r=n.type;if(!("submit"!==r&&"reset"!==r||void 0!==n.value&&null!==n.value))return;n=""+e._wrapperState.initialValue,t||n===e.value||(e.value=n),e.defaultValue=n}""!==(t=e.name)&&(e.name=""),e.defaultChecked=!!e._wrapperState.initialChecked,""!==t&&(e.name=t)}function ee(e,n,t){"number"===n&&K(e.ownerDocument)===e||(null==t?e.defaultValue=""+e._wrapperState.initialValue:e.defaultValue!==""+t&&(e.defaultValue=""+t))}var ne=Array.isArray;function te(e,n,t,r){if(e=e.options,n){n={};for(var l=0;l<t.length;l++)n["$"+t[l]]=!0;for(t=0;t<e.length;t++)l=n.hasOwnProperty("$"+e[t].value),e[t].selected!==l&&(e[t].selected=l),l&&r&&(e[t].defaultSelected=!0)}else{for(t=""+B(t),n=null,l=0;l<e.length;l++){if(e[l].value===t)return e[l].selected=!0,void(r&&(e[l].defaultSelected=!0));null!==n||e[l].disabled||(n=e[l])}null!==n&&(n.selected=!0)}}function re(e,n){if(null!=n.dangerouslySetInnerHTML)throw Error(a(91));return F({},n,{value:void 0,defaultValue:void 0,children:""+e._wrapperState.initialValue})}function le(e,n){var t=n.value;if(null==t){if(t=n.children,n=n.defaultValue,null!=t){if(null!=n)throw Error(a(92));if(ne(t)){if(1<t.length)throw Error(a(93));t=t[0]}n=t}null==n&&(n=""),t=n}e._wrapperState={initialValue:B(t)}}function ae(e,n){var t=B(n.value),r=B(n.defaultValue);null!=t&&((t=""+t)!==e.value&&(e.value=t),null==n.defaultValue&&e.defaultValue!==t&&(e.defaultValue=t)),null!=r&&(e.defaultValue=""+r)}function oe(e){var n=e.textContent;n===e._wrapperState.initialValue&&""!==n&&null!==n&&(e.value=n)}function ue(e){switch(e){case"svg":return"http://www.w3.org/2000/svg";case"math":return"http://www.w3.org/1998/Math/MathML";default:return"http://www.w3.org/1999/xhtml"}}function ie(e,n){return null==e||"http://www.w3.org/1999/xhtml"===e?ue(n):"http://www.w3.org/2000/svg"===e&&"foreignObject"===n?"http://www.w3.org/1999/xhtml":e}var se,ce,fe=(ce=function(e,n){if("http://www.w3.org/2000/svg"!==e.namespaceURI||"innerHTML"in e)e.innerHTML=n;else{for((se=se||document.createElement("div")).innerHTML="<svg>"+n.valueOf().toString()+"</svg>",n=se.firstChild;e.firstChild;)e.removeChild(e.firstChild);for(;n.firstChild;)e.appendChild(n.firstChild)}},"undefined"!=typeof MSApp&&MSApp.execUnsafeLocalFunction?function(e,n,t,r){MSApp.execUnsafeLocalFunction((function(){return ce(e,n)}))}:ce);function de(e,n){if(n){var t=e.firstChild;if(t&&t===e.lastChild&&3===t.nodeType)return void(t.nodeValue=n)}e.textContent=n}var pe={animationIterationCount:!0,aspectRatio:!0,borderImageOutset:!0,borderImageSlice:!0,borderImageWidth:!0,boxFlex:!0,boxFlexGroup:!0,boxOrdinalGroup:!0,columnCount:!0,columns:!0,flex:!0,flexGrow:!0,flexPositive:!0,flexShrink:!0,flexNegative:!0,flexOrder:!0,gridArea:!0,gridRow:!0,gridRowEnd:!0,gridRowSpan:!0,gridRowStart:!0,gridColumn:!0,gridColumnEnd:!0,gridColumnSpan:!0,gridColumnStart:!0,fontWeight:!0,lineClamp:!0,lineHeight:!0,opacity:!0,order:!0,orphans:!0,tabSize:!0,widows:!0,zIndex:!0,zoom:!0,fillOpacity:!0,floodOpacity:!0,stopOpacity:!0,strokeDasharray:!0,strokeDashoffset:!0,strokeMiterlimit:!0,strokeOpacity:!0,strokeWidth:!0},he=["Webkit","ms","Moz","O"];function me(e,n,t){return null==n||"boolean"==typeof n||""===n?"":t||"number"!=typeof n||0===n||pe.hasOwnProperty(e)&&pe[e]?(""+n).trim():n+"px"}function ve(e,n){for(var t in e=e.style,n)if(n.hasOwnProperty(t)){var r=0===t.indexOf("--"),l=me(t,n[t],r);"float"===t&&(t="cssFloat"),r?e.setProperty(t,l):e[t]=l}}Object.keys(pe).forEach((function(e){he.forEach((function(n){n=n+e.charAt(0).toUpperCase()+e.substring(1),pe[n]=pe[e]}))}));var ge=F({menuitem:!0},{area:!0,base:!0,br:!0,col:!0,embed:!0,hr:!0,img:!0,input:!0,keygen:!0,link:!0,meta:!0,param:!0,source:!0,track:!0,wbr:!0});function ye(e,n){if(n){if(ge[e]&&(null!=n.children||null!=n.dangerouslySetInnerHTML))throw Error(a(137,e));if(null!=n.dangerouslySetInnerHTML){if(null!=n.children)throw Error(a(60));if("object"!=typeof n.dangerouslySetInnerHTML||!("__html"in n.dangerouslySetInnerHTML))throw Error(a(61))}if(null!=n.style&&"object"!=typeof n.style)throw Error(a(62))}}function be(e,n){if(-1===e.indexOf("-"))return"string"==typeof n.is;switch(e){case"annotation-xml":case"color-profile":case"font-face":case"font-face-src":case"font-face-uri":case"font-face-format":case"font-face-name":case"missing-glyph":return!1;default:return!0}}var we=null;function ke(e){return(e=e.target||e.srcElement||window).correspondingUseElement&&(e=e.correspondingUseElement),3===e.nodeType?e.parentNode:e}var Se=null,Ee=null,xe=null;function _e(e){if(e=bl(e)){if("function"!=typeof Se)throw Error(a(280));var n=e.stateNode;n&&(n=kl(n),Se(e.stateNode,e.type,n))}}function Ce(e){Ee?xe?xe.push(e):xe=[e]:Ee=e}function Pe(){if(Ee){var e=Ee,n=xe;if(xe=Ee=null,_e(e),n)for(e=0;e<n.length;e++)_e(n[e])}}function Ne(e,n){return e(n)}function ze(){}var Te=!1;function Le(e,n,t){if(Te)return e(n,t);Te=!0;try{return Ne(e,n,t)}finally{Te=!1,(null!==Ee||null!==xe)&&(ze(),Pe())}}function Oe(e,n){var t=e.stateNode;if(null===t)return null;var r=kl(t);if(null===r)return null;t=r[n];e:switch(n){case"onClick":case"onClickCapture":case"onDoubleClick":case"onDoubleClickCapture":case"onMouseDown":case"onMouseDownCapture":case"onMouseMove":case"onMouseMoveCapture":case"onMouseUp":case"onMouseUpCapture":case"onMouseEnter":(r=!r.disabled)||(r=!("button"===(e=e.type)||"input"===e||"select"===e||"textarea"===e)),e=!r;break e;default:e=!1}if(e)return null;if(t&&"function"!=typeof t)throw Error(a(231,n,typeof t));return t}var De=!1;if(c)try{var Re={};Object.defineProperty(Re,"passive",{get:function(){De=!0}}),window.addEventListener("test",Re,Re),window.removeEventListener("test",Re,Re)}catch(ce){De=!1}function Ie(e,n,t,r,l,a,o,u,i){var s=Array.prototype.slice.call(arguments,3);try{n.apply(t,s)}catch(e){this.onError(e)}}var Me=!1,Fe=null,Ue=!1,je=null,Ae={onError:function(e){Me=!0,Fe=e}};function He(e,n,t,r,l,a,o,u,i){Me=!1,Fe=null,Ie.apply(Ae,arguments)}function Ve(e){var n=e,t=e;if(e.alternate)for(;n.return;)n=n.return;else{e=n;do{0!=(4098&(n=e).flags)&&(t=n.return),e=n.return}while(e)}return 3===n.tag?t:null}function $e(e){if(13===e.tag){var n=e.memoizedState;if(null===n&&null!==(e=e.alternate)&&(n=e.memoizedState),null!==n)return n.dehydrated}return null}function Be(e){if(Ve(e)!==e)throw Error(a(188))}function We(e){return null!==(e=function(e){var n=e.alternate;if(!n){if(null===(n=Ve(e)))throw Error(a(188));return n!==e?null:e}for(var t=e,r=n;;){var l=t.return;if(null===l)break;var o=l.alternate;if(null===o){if(null!==(r=l.return)){t=r;continue}break}if(l.child===o.child){for(o=l.child;o;){if(o===t)return Be(l),e;if(o===r)return Be(l),n;o=o.sibling}throw Error(a(188))}if(t.return!==r.return)t=l,r=o;else{for(var u=!1,i=l.child;i;){if(i===t){u=!0,t=l,r=o;break}if(i===r){u=!0,r=l,t=o;break}i=i.sibling}if(!u){for(i=o.child;i;){if(i===t){u=!0,t=o,r=l;break}if(i===r){u=!0,r=o,t=l;break}i=i.sibling}if(!u)throw Error(a(189))}}if(t.alternate!==r)throw Error(a(190))}if(3!==t.tag)throw Error(a(188));return t.stateNode.current===t?e:n}(e))?Qe(e):null}function Qe(e){if(5===e.tag||6===e.tag)return e;for(e=e.child;null!==e;){var n=Qe(e);if(null!==n)return n;e=e.sibling}return null}var qe=l.unstable_scheduleCallback,Ke=l.unstable_cancelCallback,Ye=l.unstable_shouldYield,Xe=l.unstable_requestPaint,Ge=l.unstable_now,Ze=l.unstable_getCurrentPriorityLevel,Je=l.unstable_ImmediatePriority,en=l.unstable_UserBlockingPriority,nn=l.unstable_NormalPriority,tn=l.unstable_LowPriority,rn=l.unstable_IdlePriority,ln=null,an=null,on=Math.clz32?Math.clz32:function(e){return 0==(e>>>=0)?32:31-(un(e)/sn|0)|0},un=Math.log,sn=Math.LN2,cn=64,fn=4194304;function dn(e){switch(e&-e){case 1:return 1;case 2:return 2;case 4:return 4;case 8:return 8;case 16:return 16;case 32:return 32;case 64:case 128:case 256:case 512:case 1024:case 2048:case 4096:case 8192:case 16384:case 32768:case 65536:case 131072:case 262144:case 524288:case 1048576:case 2097152:return 4194240&e;case 4194304:case 8388608:case 16777216:case 33554432:case 67108864:return 130023424&e;case 134217728:return 134217728;case 268435456:return 268435456;case 536870912:return 536870912;case 1073741824:return 1073741824;default:return e}}function pn(e,n){var t=e.pendingLanes;if(0===t)return 0;var r=0,l=e.suspendedLanes,a=e.pingedLanes,o=268435455&t;if(0!==o){var u=o&~l;0!==u?r=dn(u):0!=(a&=o)&&(r=dn(a))}else 0!=(o=t&~l)?r=dn(o):0!==a&&(r=dn(a));if(0===r)return 0;if(0!==n&&n!==r&&0==(n&l)&&((l=r&-r)>=(a=n&-n)||16===l&&0!=(4194240&a)))return n;if(0!=(4&r)&&(r|=16&t),0!==(n=e.entangledLanes))for(e=e.entanglements,n&=r;0<n;)l=1<<(t=31-on(n)),r|=e[t],n&=~l;return r}function hn(e,n){switch(e){case 1:case 2:case 4:return n+250;case 8:case 16:case 32:case 64:case 128:case 256:case 512:case 1024:case 2048:case 4096:case 8192:case 16384:case 32768:case 65536:case 131072:case 262144:case 524288:case 1048576:case 2097152:return n+5e3;default:return-1}}function mn(e){return 0!=(e=-1073741825&e.pendingLanes)?e:1073741824&e?1073741824:0}function vn(){var e=cn;return 0==(4194240&(cn<<=1))&&(cn=64),e}function gn(e){for(var n=[],t=0;31>t;t++)n.push(e);return n}function yn(e,n,t){e.pendingLanes|=n,536870912!==n&&(e.suspendedLanes=0,e.pingedLanes=0),(e=e.eventTimes)[n=31-on(n)]=t}function bn(e,n){var t=e.entangledLanes|=n;for(e=e.entanglements;t;){var r=31-on(t),l=1<<r;l&n|e[r]&n&&(e[r]|=n),t&=~l}}var wn=0;function kn(e){return 1<(e&=-e)?4<e?0!=(268435455&e)?16:536870912:4:1}var Sn,En,xn,_n,Cn,Pn=!1,Nn=[],zn=null,Tn=null,Ln=null,On=new Map,Dn=new Map,Rn=[],In="mousedown mouseup touchcancel touchend touchstart auxclick dblclick pointercancel pointerdown pointerup dragend dragstart drop compositionend compositionstart keydown keypress keyup input textInput copy cut paste click change contextmenu reset submit".split(" ");function Mn(e,n){switch(e){case"focusin":case"focusout":zn=null;break;case"dragenter":case"dragleave":Tn=null;break;case"mouseover":case"mouseout":Ln=null;break;case"pointerover":case"pointerout":On.delete(n.pointerId);break;case"gotpointercapture":case"lostpointercapture":Dn.delete(n.pointerId)}}function Fn(e,n,t,r,l,a){return null===e||e.nativeEvent!==a?(e={blockedOn:n,domEventName:t,eventSystemFlags:r,nativeEvent:a,targetContainers:[l]},null!==n&&null!==(n=bl(n))&&En(n),e):(e.eventSystemFlags|=r,n=e.targetContainers,null!==l&&-1===n.indexOf(l)&&n.push(l),e)}function Un(e){var n=yl(e.target);if(null!==n){var t=Ve(n);if(null!==t)if(13===(n=t.tag)){if(null!==(n=$e(t)))return e.blockedOn=n,void Cn(e.priority,(function(){xn(t)}))}else if(3===n&&t.stateNode.current.memoizedState.isDehydrated)return void(e.blockedOn=3===t.tag?t.stateNode.containerInfo:null)}e.blockedOn=null}function jn(e){if(null!==e.blockedOn)return!1;for(var n=e.targetContainers;0<n.length;){var t=Xn(e.domEventName,e.eventSystemFlags,n[0],e.nativeEvent);if(null!==t)return null!==(n=bl(t))&&En(n),e.blockedOn=t,!1;var r=new(t=e.nativeEvent).constructor(t.type,t);we=r,t.target.dispatchEvent(r),we=null,n.shift()}return!0}function An(e,n,t){jn(e)&&t.delete(n)}function Hn(){Pn=!1,null!==zn&&jn(zn)&&(zn=null),null!==Tn&&jn(Tn)&&(Tn=null),null!==Ln&&jn(Ln)&&(Ln=null),On.forEach(An),Dn.forEach(An)}function Vn(e,n){e.blockedOn===n&&(e.blockedOn=null,Pn||(Pn=!0,l.unstable_scheduleCallback(l.unstable_NormalPriority,Hn)))}function $n(e){function n(n){return Vn(n,e)}if(0<Nn.length){Vn(Nn[0],e);for(var t=1;t<Nn.length;t++){var r=Nn[t];r.blockedOn===e&&(r.blockedOn=null)}}for(null!==zn&&Vn(zn,e),null!==Tn&&Vn(Tn,e),null!==Ln&&Vn(Ln,e),On.forEach(n),Dn.forEach(n),t=0;t<Rn.length;t++)(r=Rn[t]).blockedOn===e&&(r.blockedOn=null);for(;0<Rn.length&&null===(t=Rn[0]).blockedOn;)Un(t),null===t.blockedOn&&Rn.shift()}var Bn=w.ReactCurrentBatchConfig,Wn=!0;function Qn(e,n,t,r){var l=wn,a=Bn.transition;Bn.transition=null;try{wn=1,Kn(e,n,t,r)}finally{wn=l,Bn.transition=a}}function qn(e,n,t,r){var l=wn,a=Bn.transition;Bn.transition=null;try{wn=4,Kn(e,n,t,r)}finally{wn=l,Bn.transition=a}}function Kn(e,n,t,r){if(Wn){var l=Xn(e,n,t,r);if(null===l)Br(e,n,r,Yn,t),Mn(e,r);else if(function(e,n,t,r,l){switch(n){case"focusin":return zn=Fn(zn,e,n,t,r,l),!0;case"dragenter":return Tn=Fn(Tn,e,n,t,r,l),!0;case"mouseover":return Ln=Fn(Ln,e,n,t,r,l),!0;case"pointerover":var a=l.pointerId;return On.set(a,Fn(On.get(a)||null,e,n,t,r,l)),!0;case"gotpointercapture":return a=l.pointerId,Dn.set(a,Fn(Dn.get(a)||null,e,n,t,r,l)),!0}return!1}(l,e,n,t,r))r.stopPropagation();else if(Mn(e,r),4&n&&-1<In.indexOf(e)){for(;null!==l;){var a=bl(l);if(null!==a&&Sn(a),null===(a=Xn(e,n,t,r))&&Br(e,n,r,Yn,t),a===l)break;l=a}null!==l&&r.stopPropagation()}else Br(e,n,r,null,t)}}var Yn=null;function Xn(e,n,t,r){if(Yn=null,null!==(e=yl(e=ke(r))))if(null===(n=Ve(e)))e=null;else if(13===(t=n.tag)){if(null!==(e=$e(n)))return e;e=null}else if(3===t){if(n.stateNode.current.memoizedState.isDehydrated)return 3===n.tag?n.stateNode.containerInfo:null;e=null}else n!==e&&(e=null);return Yn=e,null}function Gn(e){switch(e){case"cancel":case"click":case"close":case"contextmenu":case"copy":case"cut":case"auxclick":case"dblclick":case"dragend":case"dragstart":case"drop":case"focusin":case"focusout":case"input":case"invalid":case"keydown":case"keypress":case"keyup":case"mousedown":case"mouseup":case"paste":case"pause":case"play":case"pointercancel":case"pointerdown":case"pointerup":case"ratechange":case"reset":case"resize":case"seeked":case"submit":case"touchcancel":case"touchend":case"touchstart":case"volumechange":case"change":case"selectionchange":case"textInput":case"compositionstart":case"compositionend":case"compositionupdate":case"beforeblur":case"afterblur":case"beforeinput":case"blur":case"fullscreenchange":case"focus":case"hashchange":case"popstate":case"select":case"selectstart":return 1;case"drag":case"dragenter":case"dragexit":case"dragleave":case"dragover":case"mousemove":case"mouseout":case"mouseover":case"pointermove":case"pointerout":case"pointerover":case"scroll":case"toggle":case"touchmove":case"wheel":case"mouseenter":case"mouseleave":case"pointerenter":case"pointerleave":return 4;case"message":switch(Ze()){case Je:return 1;case en:return 4;case nn:case tn:return 16;case rn:return 536870912;default:return 16}default:return 16}}var Zn=null,Jn=null,et=null;function nt(){if(et)return et;var e,n,t=Jn,r=t.length,l="value"in Zn?Zn.value:Zn.textContent,a=l.length;for(e=0;e<r&&t[e]===l[e];e++);var o=r-e;for(n=1;n<=o&&t[r-n]===l[a-n];n++);return et=l.slice(e,1<n?1-n:void 0)}function tt(e){var n=e.keyCode;return"charCode"in e?0===(e=e.charCode)&&13===n&&(e=13):e=n,10===e&&(e=13),32<=e||13===e?e:0}function rt(){return!0}function lt(){return!1}function at(e){function n(n,t,r,l,a){for(var o in this._reactName=n,this._targetInst=r,this.type=t,this.nativeEvent=l,this.target=a,this.currentTarget=null,e)e.hasOwnProperty(o)&&(n=e[o],this[o]=n?n(l):l[o]);return this.isDefaultPrevented=(null!=l.defaultPrevented?l.defaultPrevented:!1===l.returnValue)?rt:lt,this.isPropagationStopped=lt,this}return F(n.prototype,{preventDefault:function(){this.defaultPrevented=!0;var e=this.nativeEvent;e&&(e.preventDefault?e.preventDefault():"unknown"!=typeof e.returnValue&&(e.returnValue=!1),this.isDefaultPrevented=rt)},stopPropagation:function(){var e=this.nativeEvent;e&&(e.stopPropagation?e.stopPropagation():"unknown"!=typeof e.cancelBubble&&(e.cancelBubble=!0),this.isPropagationStopped=rt)},persist:function(){},isPersistent:rt}),n}var ot,ut,it,st={eventPhase:0,bubbles:0,cancelable:0,timeStamp:function(e){return e.timeStamp||Date.now()},defaultPrevented:0,isTrusted:0},ct=at(st),ft=F({},st,{view:0,detail:0}),dt=at(ft),pt=F({},ft,{screenX:0,screenY:0,clientX:0,clientY:0,pageX:0,pageY:0,ctrlKey:0,shiftKey:0,altKey:0,metaKey:0,getModifierState:_t,button:0,buttons:0,relatedTarget:function(e){return void 0===e.relatedTarget?e.fromElement===e.srcElement?e.toElement:e.fromElement:e.relatedTarget},movementX:function(e){return"movementX"in e?e.movementX:(e!==it&&(it&&"mousemove"===e.type?(ot=e.screenX-it.screenX,ut=e.screenY-it.screenY):ut=ot=0,it=e),ot)},movementY:function(e){return"movementY"in e?e.movementY:ut}}),ht=at(pt),mt=at(F({},pt,{dataTransfer:0})),vt=at(F({},ft,{relatedTarget:0})),gt=at(F({},st,{animationName:0,elapsedTime:0,pseudoElement:0})),yt=F({},st,{clipboardData:function(e){return"clipboardData"in e?e.clipboardData:window.clipboardData}}),bt=at(yt),wt=at(F({},st,{data:0})),kt={Esc:"Escape",Spacebar:" ",Left:"ArrowLeft",Up:"ArrowUp",Right:"ArrowRight",Down:"ArrowDown",Del:"Delete",Win:"OS",Menu:"ContextMenu",Apps:"ContextMenu",Scroll:"ScrollLock",MozPrintableKey:"Unidentified"},St={8:"Backspace",9:"Tab",12:"Clear",13:"Enter",16:"Shift",17:"Control",18:"Alt",19:"Pause",20:"CapsLock",27:"Escape",32:" ",33:"PageUp",34:"PageDown",35:"End",36:"Home",37:"ArrowLeft",38:"ArrowUp",39:"ArrowRight",40:"ArrowDown",45:"Insert",46:"Delete",112:"F1",113:"F2",114:"F3",115:"F4",116:"F5",117:"F6",118:"F7",119:"F8",120:"F9",121:"F10",122:"F11",123:"F12",144:"NumLock",145:"ScrollLock",224:"Meta"},Et={Alt:"altKey",Control:"ctrlKey",Meta:"metaKey",Shift:"shiftKey"};function xt(e){var n=this.nativeEvent;return n.getModifierState?n.getModifierState(e):!!(e=Et[e])&&!!n[e]}function _t(){return xt}var Ct=F({},ft,{key:function(e){if(e.key){var n=kt[e.key]||e.key;if("Unidentified"!==n)return n}return"keypress"===e.type?13===(e=tt(e))?"Enter":String.fromCharCode(e):"keydown"===e.type||"keyup"===e.type?St[e.keyCode]||"Unidentified":""},code:0,location:0,ctrlKey:0,shiftKey:0,altKey:0,metaKey:0,repeat:0,locale:0,getModifierState:_t,charCode:function(e){return"keypress"===e.type?tt(e):0},keyCode:function(e){return"keydown"===e.type||"keyup"===e.type?e.keyCode:0},which:function(e){return"keypress"===e.type?tt(e):"keydown"===e.type||"keyup"===e.type?e.keyCode:0}}),Pt=at(Ct),Nt=at(F({},pt,{pointerId:0,width:0,height:0,pressure:0,tangentialPressure:0,tiltX:0,tiltY:0,twist:0,pointerType:0,isPrimary:0})),zt=at(F({},ft,{touches:0,targetTouches:0,changedTouches:0,altKey:0,metaKey:0,ctrlKey:0,shiftKey:0,getModifierState:_t})),Tt=at(F({},st,{propertyName:0,elapsedTime:0,pseudoElement:0})),Lt=F({},pt,{deltaX:function(e){return"deltaX"in e?e.deltaX:"wheelDeltaX"in e?-e.wheelDeltaX:0},deltaY:function(e){return"deltaY"in e?e.deltaY:"wheelDeltaY"in e?-e.wheelDeltaY:"wheelDelta"in e?-e.wheelDelta:0},deltaZ:0,deltaMode:0}),Ot=at(Lt),Dt=[9,13,27,32],Rt=c&&"CompositionEvent"in window,It=null;c&&"documentMode"in document&&(It=document.documentMode);var Mt=c&&"TextEvent"in window&&!It,Ft=c&&(!Rt||It&&8<It&&11>=It),Ut=String.fromCharCode(32),jt=!1;function At(e,n){switch(e){case"keyup":return-1!==Dt.indexOf(n.keyCode);case"keydown":return 229!==n.keyCode;case"keypress":case"mousedown":case"focusout":return!0;default:return!1}}function Ht(e){return"object"==typeof(e=e.detail)&&"data"in e?e.data:null}var Vt=!1,$t={color:!0,date:!0,datetime:!0,"datetime-local":!0,email:!0,month:!0,number:!0,password:!0,range:!0,search:!0,tel:!0,text:!0,time:!0,url:!0,week:!0};function Bt(e){var n=e&&e.nodeName&&e.nodeName.toLowerCase();return"input"===n?!!$t[e.type]:"textarea"===n}function Wt(e,n,t,r){Ce(r),0<(n=Qr(n,"onChange")).length&&(t=new ct("onChange","change",null,t,r),e.push({event:t,listeners:n}))}var Qt=null,qt=null;function Kt(e){Ur(e,0)}function Yt(e){if(q(wl(e)))return e}function Xt(e,n){if("change"===e)return n}var Gt=!1;if(c){var Zt;if(c){var Jt="oninput"in document;if(!Jt){var er=document.createElement("div");er.setAttribute("oninput","return;"),Jt="function"==typeof er.oninput}Zt=Jt}else Zt=!1;Gt=Zt&&(!document.documentMode||9<document.documentMode)}function nr(){Qt&&(Qt.detachEvent("onpropertychange",tr),qt=Qt=null)}function tr(e){if("value"===e.propertyName&&Yt(qt)){var n=[];Wt(n,qt,e,ke(e)),Le(Kt,n)}}function rr(e,n,t){"focusin"===e?(nr(),qt=t,(Qt=n).attachEvent("onpropertychange",tr)):"focusout"===e&&nr()}function lr(e){if("selectionchange"===e||"keyup"===e||"keydown"===e)return Yt(qt)}function ar(e,n){if("click"===e)return Yt(n)}function or(e,n){if("input"===e||"change"===e)return Yt(n)}var ur="function"==typeof Object.is?Object.is:function(e,n){return e===n&&(0!==e||1/e==1/n)||e!=e&&n!=n};function ir(e,n){if(ur(e,n))return!0;if("object"!=typeof e||null===e||"object"!=typeof n||null===n)return!1;var t=Object.keys(e),r=Object.keys(n);if(t.length!==r.length)return!1;for(r=0;r<t.length;r++){var l=t[r];if(!f.call(n,l)||!ur(e[l],n[l]))return!1}return!0}function sr(e){for(;e&&e.firstChild;)e=e.firstChild;return e}function cr(e,n){var t,r=sr(e);for(e=0;r;){if(3===r.nodeType){if(t=e+r.textContent.length,e<=n&&t>=n)return{node:r,offset:n-e};e=t}e:{for(;r;){if(r.nextSibling){r=r.nextSibling;break e}r=r.parentNode}r=void 0}r=sr(r)}}function fr(e,n){return!(!e||!n)&&(e===n||(!e||3!==e.nodeType)&&(n&&3===n.nodeType?fr(e,n.parentNode):"contains"in e?e.contains(n):!!e.compareDocumentPosition&&!!(16&e.compareDocumentPosition(n))))}function dr(){for(var e=window,n=K();n instanceof e.HTMLIFrameElement;){try{var t="string"==typeof n.contentWindow.location.href}catch(e){t=!1}if(!t)break;n=K((e=n.contentWindow).document)}return n}function pr(e){var n=e&&e.nodeName&&e.nodeName.toLowerCase();return n&&("input"===n&&("text"===e.type||"search"===e.type||"tel"===e.type||"url"===e.type||"password"===e.type)||"textarea"===n||"true"===e.contentEditable)}function hr(e){var n=dr(),t=e.focusedElem,r=e.selectionRange;if(n!==t&&t&&t.ownerDocument&&fr(t.ownerDocument.documentElement,t)){if(null!==r&&pr(t))if(n=r.start,void 0===(e=r.end)&&(e=n),"selectionStart"in t)t.selectionStart=n,t.selectionEnd=Math.min(e,t.value.length);else if((e=(n=t.ownerDocument||document)&&n.defaultView||window).getSelection){e=e.getSelection();var l=t.textContent.length,a=Math.min(r.start,l);r=void 0===r.end?a:Math.min(r.end,l),!e.extend&&a>r&&(l=r,r=a,a=l),l=cr(t,a);var o=cr(t,r);l&&o&&(1!==e.rangeCount||e.anchorNode!==l.node||e.anchorOffset!==l.offset||e.focusNode!==o.node||e.focusOffset!==o.offset)&&((n=n.createRange()).setStart(l.node,l.offset),e.removeAllRanges(),a>r?(e.addRange(n),e.extend(o.node,o.offset)):(n.setEnd(o.node,o.offset),e.addRange(n)))}for(n=[],e=t;e=e.parentNode;)1===e.nodeType&&n.push({element:e,left:e.scrollLeft,top:e.scrollTop});for("function"==typeof t.focus&&t.focus(),t=0;t<n.length;t++)(e=n[t]).element.scrollLeft=e.left,e.element.scrollTop=e.top}}var mr=c&&"documentMode"in document&&11>=document.documentMode,vr=null,gr=null,yr=null,br=!1;function wr(e,n,t){var r=t.window===t?t.document:9===t.nodeType?t:t.ownerDocument;br||null==vr||vr!==K(r)||(r="selectionStart"in(r=vr)&&pr(r)?{start:r.selectionStart,end:r.selectionEnd}:{anchorNode:(r=(r.ownerDocument&&r.ownerDocument.defaultView||window).getSelection()).anchorNode,anchorOffset:r.anchorOffset,focusNode:r.focusNode,focusOffset:r.focusOffset},yr&&ir(yr,r)||(yr=r,0<(r=Qr(gr,"onSelect")).length&&(n=new ct("onSelect","select",null,n,t),e.push({event:n,listeners:r}),n.target=vr)))}function kr(e,n){var t={};return t[e.toLowerCase()]=n.toLowerCase(),t["Webkit"+e]="webkit"+n,t["Moz"+e]="moz"+n,t}var Sr={animationend:kr("Animation","AnimationEnd"),animationiteration:kr("Animation","AnimationIteration"),animationstart:kr("Animation","AnimationStart"),transitionend:kr("Transition","TransitionEnd")},Er={},xr={};function _r(e){if(Er[e])return Er[e];if(!Sr[e])return e;var n,t=Sr[e];for(n in t)if(t.hasOwnProperty(n)&&n in xr)return Er[e]=t[n];return e}c&&(xr=document.createElement("div").style,"AnimationEvent"in window||(delete Sr.animationend.animation,delete Sr.animationiteration.animation,delete Sr.animationstart.animation),"TransitionEvent"in window||delete Sr.transitionend.transition);var Cr=_r("animationend"),Pr=_r("animationiteration"),Nr=_r("animationstart"),zr=_r("transitionend"),Tr=new Map,Lr="abort auxClick cancel canPlay canPlayThrough click close contextMenu copy cut drag dragEnd dragEnter dragExit dragLeave dragOver dragStart drop durationChange emptied encrypted ended error gotPointerCapture input invalid keyDown keyPress keyUp load loadedData loadedMetadata loadStart lostPointerCapture mouseDown mouseMove mouseOut mouseOver mouseUp paste pause play playing pointerCancel pointerDown pointerMove pointerOut pointerOver pointerUp progress rateChange reset resize seeked seeking stalled submit suspend timeUpdate touchCancel touchEnd touchStart volumeChange scroll toggle touchMove waiting wheel".split(" ");function Or(e,n){Tr.set(e,n),i(n,[e])}for(var Dr=0;Dr<Lr.length;Dr++){var Rr=Lr[Dr];Or(Rr.toLowerCase(),"on"+(Rr[0].toUpperCase()+Rr.slice(1)))}Or(Cr,"onAnimationEnd"),Or(Pr,"onAnimationIteration"),Or(Nr,"onAnimationStart"),Or("dblclick","onDoubleClick"),Or("focusin","onFocus"),Or("focusout","onBlur"),Or(zr,"onTransitionEnd"),s("onMouseEnter",["mouseout","mouseover"]),s("onMouseLeave",["mouseout","mouseover"]),s("onPointerEnter",["pointerout","pointerover"]),s("onPointerLeave",["pointerout","pointerover"]),i("onChange","change click focusin focusout input keydown keyup selectionchange".split(" ")),i("onSelect","focusout contextmenu dragend focusin keydown keyup mousedown mouseup selectionchange".split(" ")),i("onBeforeInput",["compositionend","keypress","textInput","paste"]),i("onCompositionEnd","compositionend focusout keydown keypress keyup mousedown".split(" ")),i("onCompositionStart","compositionstart focusout keydown keypress keyup mousedown".split(" ")),i("onCompositionUpdate","compositionupdate focusout keydown keypress keyup mousedown".split(" "));var Ir="abort canplay canplaythrough durationchange emptied encrypted ended error loadeddata loadedmetadata loadstart pause play playing progress ratechange resize seeked seeking stalled suspend timeupdate volumechange waiting".split(" "),Mr=new Set("cancel close invalid load scroll toggle".split(" ").concat(Ir));function Fr(e,n,t){var r=e.type||"unknown-event";e.currentTarget=t,function(e,n,t,r,l,o,u,i,s){if(He.apply(this,arguments),Me){if(!Me)throw Error(a(198));var c=Fe;Me=!1,Fe=null,Ue||(Ue=!0,je=c)}}(r,n,void 0,e),e.currentTarget=null}function Ur(e,n){n=0!=(4&n);for(var t=0;t<e.length;t++){var r=e[t],l=r.event;r=r.listeners;e:{var a=void 0;if(n)for(var o=r.length-1;0<=o;o--){var u=r[o],i=u.instance,s=u.currentTarget;if(u=u.listener,i!==a&&l.isPropagationStopped())break e;Fr(l,u,s),a=i}else for(o=0;o<r.length;o++){if(i=(u=r[o]).instance,s=u.currentTarget,u=u.listener,i!==a&&l.isPropagationStopped())break e;Fr(l,u,s),a=i}}}if(Ue)throw e=je,Ue=!1,je=null,e}function jr(e,n){var t=n[ml];void 0===t&&(t=n[ml]=new Set);var r=e+"__bubble";t.has(r)||($r(n,e,2,!1),t.add(r))}function Ar(e,n,t){var r=0;n&&(r|=4),$r(t,e,r,n)}var Hr="_reactListening"+Math.random().toString(36).slice(2);function Vr(e){if(!e[Hr]){e[Hr]=!0,o.forEach((function(n){"selectionchange"!==n&&(Mr.has(n)||Ar(n,!1,e),Ar(n,!0,e))}));var n=9===e.nodeType?e:e.ownerDocument;null===n||n[Hr]||(n[Hr]=!0,Ar("selectionchange",!1,n))}}function $r(e,n,t,r){switch(Gn(n)){case 1:var l=Qn;break;case 4:l=qn;break;default:l=Kn}t=l.bind(null,n,t,e),l=void 0,!De||"touchstart"!==n&&"touchmove"!==n&&"wheel"!==n||(l=!0),r?void 0!==l?e.addEventListener(n,t,{capture:!0,passive:l}):e.addEventListener(n,t,!0):void 0!==l?e.addEventListener(n,t,{passive:l}):e.addEventListener(n,t,!1)}function Br(e,n,t,r,l){var a=r;if(0==(1&n)&&0==(2&n)&&null!==r)e:for(;;){if(null===r)return;var o=r.tag;if(3===o||4===o){var u=r.stateNode.containerInfo;if(u===l||8===u.nodeType&&u.parentNode===l)break;if(4===o)for(o=r.return;null!==o;){var i=o.tag;if((3===i||4===i)&&((i=o.stateNode.containerInfo)===l||8===i.nodeType&&i.parentNode===l))return;o=o.return}for(;null!==u;){if(null===(o=yl(u)))return;if(5===(i=o.tag)||6===i){r=a=o;continue e}u=u.parentNode}}r=r.return}Le((function(){var r=a,l=ke(t),o=[];e:{var u=Tr.get(e);if(void 0!==u){var i=ct,s=e;switch(e){case"keypress":if(0===tt(t))break e;case"keydown":case"keyup":i=Pt;break;case"focusin":s="focus",i=vt;break;case"focusout":s="blur",i=vt;break;case"beforeblur":case"afterblur":i=vt;break;case"click":if(2===t.button)break e;case"auxclick":case"dblclick":case"mousedown":case"mousemove":case"mouseup":case"mouseout":case"mouseover":case"contextmenu":i=ht;break;case"drag":case"dragend":case"dragenter":case"dragexit":case"dragleave":case"dragover":case"dragstart":case"drop":i=mt;break;case"touchcancel":case"touchend":case"touchmove":case"touchstart":i=zt;break;case Cr:case Pr:case Nr:i=gt;break;case zr:i=Tt;break;case"scroll":i=dt;break;case"wheel":i=Ot;break;case"copy":case"cut":case"paste":i=bt;break;case"gotpointercapture":case"lostpointercapture":case"pointercancel":case"pointerdown":case"pointermove":case"pointerout":case"pointerover":case"pointerup":i=Nt}var c=0!=(4&n),f=!c&&"scroll"===e,d=c?null!==u?u+"Capture":null:u;c=[];for(var p,h=r;null!==h;){var m=(p=h).stateNode;if(5===p.tag&&null!==m&&(p=m,null!==d&&null!=(m=Oe(h,d))&&c.push(Wr(h,m,p))),f)break;h=h.return}0<c.length&&(u=new i(u,s,null,t,l),o.push({event:u,listeners:c}))}}if(0==(7&n)){if(i="mouseout"===e||"pointerout"===e,(!(u="mouseover"===e||"pointerover"===e)||t===we||!(s=t.relatedTarget||t.fromElement)||!yl(s)&&!s[hl])&&(i||u)&&(u=l.window===l?l:(u=l.ownerDocument)?u.defaultView||u.parentWindow:window,i?(i=r,null!==(s=(s=t.relatedTarget||t.toElement)?yl(s):null)&&(s!==(f=Ve(s))||5!==s.tag&&6!==s.tag)&&(s=null)):(i=null,s=r),i!==s)){if(c=ht,m="onMouseLeave",d="onMouseEnter",h="mouse","pointerout"!==e&&"pointerover"!==e||(c=Nt,m="onPointerLeave",d="onPointerEnter",h="pointer"),f=null==i?u:wl(i),p=null==s?u:wl(s),(u=new c(m,h+"leave",i,t,l)).target=f,u.relatedTarget=p,m=null,yl(l)===r&&((c=new c(d,h+"enter",s,t,l)).target=p,c.relatedTarget=f,m=c),f=m,i&&s)e:{for(d=s,h=0,p=c=i;p;p=qr(p))h++;for(p=0,m=d;m;m=qr(m))p++;for(;0<h-p;)c=qr(c),h--;for(;0<p-h;)d=qr(d),p--;for(;h--;){if(c===d||null!==d&&c===d.alternate)break e;c=qr(c),d=qr(d)}c=null}else c=null;null!==i&&Kr(o,u,i,c,!1),null!==s&&null!==f&&Kr(o,f,s,c,!0)}if("select"===(i=(u=r?wl(r):window).nodeName&&u.nodeName.toLowerCase())||"input"===i&&"file"===u.type)var v=Xt;else if(Bt(u))if(Gt)v=or;else{v=lr;var g=rr}else(i=u.nodeName)&&"input"===i.toLowerCase()&&("checkbox"===u.type||"radio"===u.type)&&(v=ar);switch(v&&(v=v(e,r))?Wt(o,v,t,l):(g&&g(e,u,r),"focusout"===e&&(g=u._wrapperState)&&g.controlled&&"number"===u.type&&ee(u,"number",u.value)),g=r?wl(r):window,e){case"focusin":(Bt(g)||"true"===g.contentEditable)&&(vr=g,gr=r,yr=null);break;case"focusout":yr=gr=vr=null;break;case"mousedown":br=!0;break;case"contextmenu":case"mouseup":case"dragend":br=!1,wr(o,t,l);break;case"selectionchange":if(mr)break;case"keydown":case"keyup":wr(o,t,l)}var y;if(Rt)e:{switch(e){case"compositionstart":var b="onCompositionStart";break e;case"compositionend":b="onCompositionEnd";break e;case"compositionupdate":b="onCompositionUpdate";break e}b=void 0}else Vt?At(e,t)&&(b="onCompositionEnd"):"keydown"===e&&229===t.keyCode&&(b="onCompositionStart");b&&(Ft&&"ko"!==t.locale&&(Vt||"onCompositionStart"!==b?"onCompositionEnd"===b&&Vt&&(y=nt()):(Jn="value"in(Zn=l)?Zn.value:Zn.textContent,Vt=!0)),0<(g=Qr(r,b)).length&&(b=new wt(b,e,null,t,l),o.push({event:b,listeners:g}),(y||null!==(y=Ht(t)))&&(b.data=y))),(y=Mt?function(e,n){switch(e){case"compositionend":return Ht(n);case"keypress":return 32!==n.which?null:(jt=!0,Ut);case"textInput":return(e=n.data)===Ut&&jt?null:e;default:return null}}(e,t):function(e,n){if(Vt)return"compositionend"===e||!Rt&&At(e,n)?(e=nt(),et=Jn=Zn=null,Vt=!1,e):null;switch(e){case"paste":default:return null;case"keypress":if(!(n.ctrlKey||n.altKey||n.metaKey)||n.ctrlKey&&n.altKey){if(n.char&&1<n.char.length)return n.char;if(n.which)return String.fromCharCode(n.which)}return null;case"compositionend":return Ft&&"ko"!==n.locale?null:n.data}}(e,t))&&0<(r=Qr(r,"onBeforeInput")).length&&(l=new wt("onBeforeInput","beforeinput",null,t,l),o.push({event:l,listeners:r}),l.data=y)}Ur(o,n)}))}function Wr(e,n,t){return{instance:e,listener:n,currentTarget:t}}function Qr(e,n){for(var t=n+"Capture",r=[];null!==e;){var l=e,a=l.stateNode;5===l.tag&&null!==a&&(l=a,null!=(a=Oe(e,t))&&r.unshift(Wr(e,a,l)),null!=(a=Oe(e,n))&&r.push(Wr(e,a,l))),e=e.return}return r}function qr(e){if(null===e)return null;do{e=e.return}while(e&&5!==e.tag);return e||null}function Kr(e,n,t,r,l){for(var a=n._reactName,o=[];null!==t&&t!==r;){var u=t,i=u.alternate,s=u.stateNode;if(null!==i&&i===r)break;5===u.tag&&null!==s&&(u=s,l?null!=(i=Oe(t,a))&&o.unshift(Wr(t,i,u)):l||null!=(i=Oe(t,a))&&o.push(Wr(t,i,u))),t=t.return}0!==o.length&&e.push({event:n,listeners:o})}var Yr=/\r\n?/g,Xr=/\u0000|\uFFFD/g;function Gr(e){return("string"==typeof e?e:""+e).replace(Yr,"\n").replace(Xr,"")}function Zr(e,n,t){if(n=Gr(n),Gr(e)!==n&&t)throw Error(a(425))}function Jr(){}var el=null,nl=null;function tl(e,n){return"textarea"===e||"noscript"===e||"string"==typeof n.children||"number"==typeof n.children||"object"==typeof n.dangerouslySetInnerHTML&&null!==n.dangerouslySetInnerHTML&&null!=n.dangerouslySetInnerHTML.__html}var rl="function"==typeof setTimeout?setTimeout:void 0,ll="function"==typeof clearTimeout?clearTimeout:void 0,al="function"==typeof Promise?Promise:void 0,ol="function"==typeof queueMicrotask?queueMicrotask:void 0!==al?function(e){return al.resolve(null).then(e).catch(ul)}:rl;function ul(e){setTimeout((function(){throw e}))}function il(e,n){var t=n,r=0;do{var l=t.nextSibling;if(e.removeChild(t),l&&8===l.nodeType)if("/$"===(t=l.data)){if(0===r)return e.removeChild(l),void $n(n);r--}else"$"!==t&&"$?"!==t&&"$!"!==t||r++;t=l}while(t);$n(n)}function sl(e){for(;null!=e;e=e.nextSibling){var n=e.nodeType;if(1===n||3===n)break;if(8===n){if("$"===(n=e.data)||"$!"===n||"$?"===n)break;if("/$"===n)return null}}return e}function cl(e){e=e.previousSibling;for(var n=0;e;){if(8===e.nodeType){var t=e.data;if("$"===t||"$!"===t||"$?"===t){if(0===n)return e;n--}else"/$"===t&&n++}e=e.previousSibling}return null}var fl=Math.random().toString(36).slice(2),dl="__reactFiber$"+fl,pl="__reactProps$"+fl,hl="__reactContainer$"+fl,ml="__reactEvents$"+fl,vl="__reactListeners$"+fl,gl="__reactHandles$"+fl;function yl(e){var n=e[dl];if(n)return n;for(var t=e.parentNode;t;){if(n=t[hl]||t[dl]){if(t=n.alternate,null!==n.child||null!==t&&null!==t.child)for(e=cl(e);null!==e;){if(t=e[dl])return t;e=cl(e)}return n}t=(e=t).parentNode}return null}function bl(e){return!(e=e[dl]||e[hl])||5!==e.tag&&6!==e.tag&&13!==e.tag&&3!==e.tag?null:e}function wl(e){if(5===e.tag||6===e.tag)return e.stateNode;throw Error(a(33))}function kl(e){return e[pl]||null}var Sl=[],El=-1;function xl(e){return{current:e}}function _l(e){0>El||(e.current=Sl[El],Sl[El]=null,El--)}function Cl(e,n){El++,Sl[El]=e.current,e.current=n}var Pl={},Nl=xl(Pl),zl=xl(!1),Tl=Pl;function Ll(e,n){var t=e.type.contextTypes;if(!t)return Pl;var r=e.stateNode;if(r&&r.__reactInternalMemoizedUnmaskedChildContext===n)return r.__reactInternalMemoizedMaskedChildContext;var l,a={};for(l in t)a[l]=n[l];return r&&((e=e.stateNode).__reactInternalMemoizedUnmaskedChildContext=n,e.__reactInternalMemoizedMaskedChildContext=a),a}function Ol(e){return null!=e.childContextTypes}function Dl(){_l(zl),_l(Nl)}function Rl(e,n,t){if(Nl.current!==Pl)throw Error(a(168));Cl(Nl,n),Cl(zl,t)}function Il(e,n,t){var r=e.stateNode;if(n=n.childContextTypes,"function"!=typeof r.getChildContext)return t;for(var l in r=r.getChildContext())if(!(l in n))throw Error(a(108,$(e)||"Unknown",l));return F({},t,r)}function Ml(e){return e=(e=e.stateNode)&&e.__reactInternalMemoizedMergedChildContext||Pl,Tl=Nl.current,Cl(Nl,e),Cl(zl,zl.current),!0}function Fl(e,n,t){var r=e.stateNode;if(!r)throw Error(a(169));t?(e=Il(e,n,Tl),r.__reactInternalMemoizedMergedChildContext=e,_l(zl),_l(Nl),Cl(Nl,e)):_l(zl),Cl(zl,t)}var Ul=null,jl=!1,Al=!1;function Hl(e){null===Ul?Ul=[e]:Ul.push(e)}function Vl(){if(!Al&&null!==Ul){Al=!0;var e=0,n=wn;try{var t=Ul;for(wn=1;e<t.length;e++){var r=t[e];do{r=r(!0)}while(null!==r)}Ul=null,jl=!1}catch(n){throw null!==Ul&&(Ul=Ul.slice(e+1)),qe(Je,Vl),n}finally{wn=n,Al=!1}}return null}var $l=[],Bl=0,Wl=null,Ql=0,ql=[],Kl=0,Yl=null,Xl=1,Gl="";function Zl(e,n){$l[Bl++]=Ql,$l[Bl++]=Wl,Wl=e,Ql=n}function Jl(e,n,t){ql[Kl++]=Xl,ql[Kl++]=Gl,ql[Kl++]=Yl,Yl=e;var r=Xl;e=Gl;var l=32-on(r)-1;r&=~(1<<l),t+=1;var a=32-on(n)+l;if(30<a){var o=l-l%5;a=(r&(1<<o)-1).toString(32),r>>=o,l-=o,Xl=1<<32-on(n)+l|t<<l|r,Gl=a+e}else Xl=1<<a|t<<l|r,Gl=e}function ea(e){null!==e.return&&(Zl(e,1),Jl(e,1,0))}function na(e){for(;e===Wl;)Wl=$l[--Bl],$l[Bl]=null,Ql=$l[--Bl],$l[Bl]=null;for(;e===Yl;)Yl=ql[--Kl],ql[Kl]=null,Gl=ql[--Kl],ql[Kl]=null,Xl=ql[--Kl],ql[Kl]=null}var ta=null,ra=null,la=!1,aa=null;function oa(e,n){var t=Ls(5,null,null,0);t.elementType="DELETED",t.stateNode=n,t.return=e,null===(n=e.deletions)?(e.deletions=[t],e.flags|=16):n.push(t)}function ua(e,n){switch(e.tag){case 5:var t=e.type;return null!==(n=1!==n.nodeType||t.toLowerCase()!==n.nodeName.toLowerCase()?null:n)&&(e.stateNode=n,ta=e,ra=sl(n.firstChild),!0);case 6:return null!==(n=""===e.pendingProps||3!==n.nodeType?null:n)&&(e.stateNode=n,ta=e,ra=null,!0);case 13:return null!==(n=8!==n.nodeType?null:n)&&(t=null!==Yl?{id:Xl,overflow:Gl}:null,e.memoizedState={dehydrated:n,treeContext:t,retryLane:1073741824},(t=Ls(18,null,null,0)).stateNode=n,t.return=e,e.child=t,ta=e,ra=null,!0);default:return!1}}function ia(e){return 0!=(1&e.mode)&&0==(128&e.flags)}function sa(e){if(la){var n=ra;if(n){var t=n;if(!ua(e,n)){if(ia(e))throw Error(a(418));n=sl(t.nextSibling);var r=ta;n&&ua(e,n)?oa(r,t):(e.flags=-4097&e.flags|2,la=!1,ta=e)}}else{if(ia(e))throw Error(a(418));e.flags=-4097&e.flags|2,la=!1,ta=e}}}function ca(e){for(e=e.return;null!==e&&5!==e.tag&&3!==e.tag&&13!==e.tag;)e=e.return;ta=e}function fa(e){if(e!==ta)return!1;if(!la)return ca(e),la=!0,!1;var n;if((n=3!==e.tag)&&!(n=5!==e.tag)&&(n="head"!==(n=e.type)&&"body"!==n&&!tl(e.type,e.memoizedProps)),n&&(n=ra)){if(ia(e))throw da(),Error(a(418));for(;n;)oa(e,n),n=sl(n.nextSibling)}if(ca(e),13===e.tag){if(!(e=null!==(e=e.memoizedState)?e.dehydrated:null))throw Error(a(317));e:{for(e=e.nextSibling,n=0;e;){if(8===e.nodeType){var t=e.data;if("/$"===t){if(0===n){ra=sl(e.nextSibling);break e}n--}else"$"!==t&&"$!"!==t&&"$?"!==t||n++}e=e.nextSibling}ra=null}}else ra=ta?sl(e.stateNode.nextSibling):null;return!0}function da(){for(var e=ra;e;)e=sl(e.nextSibling)}function pa(){ra=ta=null,la=!1}function ha(e){null===aa?aa=[e]:aa.push(e)}var ma=w.ReactCurrentBatchConfig;function va(e,n){if(e&&e.defaultProps){for(var t in n=F({},n),e=e.defaultProps)void 0===n[t]&&(n[t]=e[t]);return n}return n}var ga=xl(null),ya=null,ba=null,wa=null;function ka(){wa=ba=ya=null}function Sa(e){var n=ga.current;_l(ga),e._currentValue=n}function Ea(e,n,t){for(;null!==e;){var r=e.alternate;if((e.childLanes&n)!==n?(e.childLanes|=n,null!==r&&(r.childLanes|=n)):null!==r&&(r.childLanes&n)!==n&&(r.childLanes|=n),e===t)break;e=e.return}}function xa(e,n){ya=e,wa=ba=null,null!==(e=e.dependencies)&&null!==e.firstContext&&(0!=(e.lanes&n)&&(wu=!0),e.firstContext=null)}function _a(e){var n=e._currentValue;if(wa!==e)if(e={context:e,memoizedValue:n,next:null},null===ba){if(null===ya)throw Error(a(308));ba=e,ya.dependencies={lanes:0,firstContext:e}}else ba=ba.next=e;return n}var Ca=null;function Pa(e){null===Ca?Ca=[e]:Ca.push(e)}function Na(e,n,t,r){var l=n.interleaved;return null===l?(t.next=t,Pa(n)):(t.next=l.next,l.next=t),n.interleaved=t,za(e,r)}function za(e,n){e.lanes|=n;var t=e.alternate;for(null!==t&&(t.lanes|=n),t=e,e=e.return;null!==e;)e.childLanes|=n,null!==(t=e.alternate)&&(t.childLanes|=n),t=e,e=e.return;return 3===t.tag?t.stateNode:null}var Ta=!1;function La(e){e.updateQueue={baseState:e.memoizedState,firstBaseUpdate:null,lastBaseUpdate:null,shared:{pending:null,interleaved:null,lanes:0},effects:null}}function Oa(e,n){e=e.updateQueue,n.updateQueue===e&&(n.updateQueue={baseState:e.baseState,firstBaseUpdate:e.firstBaseUpdate,lastBaseUpdate:e.lastBaseUpdate,shared:e.shared,effects:e.effects})}function Da(e,n){return{eventTime:e,lane:n,tag:0,payload:null,callback:null,next:null}}function Ra(e,n,t){var r=e.updateQueue;if(null===r)return null;if(r=r.shared,0!=(2&Ni)){var l=r.pending;return null===l?n.next=n:(n.next=l.next,l.next=n),r.pending=n,za(e,t)}return null===(l=r.interleaved)?(n.next=n,Pa(r)):(n.next=l.next,l.next=n),r.interleaved=n,za(e,t)}function Ia(e,n,t){if(null!==(n=n.updateQueue)&&(n=n.shared,0!=(4194240&t))){var r=n.lanes;t|=r&=e.pendingLanes,n.lanes=t,bn(e,t)}}function Ma(e,n){var t=e.updateQueue,r=e.alternate;if(null!==r&&t===(r=r.updateQueue)){var l=null,a=null;if(null!==(t=t.firstBaseUpdate)){do{var o={eventTime:t.eventTime,lane:t.lane,tag:t.tag,payload:t.payload,callback:t.callback,next:null};null===a?l=a=o:a=a.next=o,t=t.next}while(null!==t);null===a?l=a=n:a=a.next=n}else l=a=n;return t={baseState:r.baseState,firstBaseUpdate:l,lastBaseUpdate:a,shared:r.shared,effects:r.effects},void(e.updateQueue=t)}null===(e=t.lastBaseUpdate)?t.firstBaseUpdate=n:e.next=n,t.lastBaseUpdate=n}function Fa(e,n,t,r){var l=e.updateQueue;Ta=!1;var a=l.firstBaseUpdate,o=l.lastBaseUpdate,u=l.shared.pending;if(null!==u){l.shared.pending=null;var i=u,s=i.next;i.next=null,null===o?a=s:o.next=s,o=i;var c=e.alternate;null!==c&&(u=(c=c.updateQueue).lastBaseUpdate)!==o&&(null===u?c.firstBaseUpdate=s:u.next=s,c.lastBaseUpdate=i)}if(null!==a){var f=l.baseState;for(o=0,c=s=i=null,u=a;;){var d=u.lane,p=u.eventTime;if((r&d)===d){null!==c&&(c=c.next={eventTime:p,lane:0,tag:u.tag,payload:u.payload,callback:u.callback,next:null});e:{var h=e,m=u;switch(d=n,p=t,m.tag){case 1:if("function"==typeof(h=m.payload)){f=h.call(p,f,d);break e}f=h;break e;case 3:h.flags=-65537&h.flags|128;case 0:if(null==(d="function"==typeof(h=m.payload)?h.call(p,f,d):h))break e;f=F({},f,d);break e;case 2:Ta=!0}}null!==u.callback&&0!==u.lane&&(e.flags|=64,null===(d=l.effects)?l.effects=[u]:d.push(u))}else p={eventTime:p,lane:d,tag:u.tag,payload:u.payload,callback:u.callback,next:null},null===c?(s=c=p,i=f):c=c.next=p,o|=d;if(null===(u=u.next)){if(null===(u=l.shared.pending))break;u=(d=u).next,d.next=null,l.lastBaseUpdate=d,l.shared.pending=null}}if(null===c&&(i=f),l.baseState=i,l.firstBaseUpdate=s,l.lastBaseUpdate=c,null!==(n=l.shared.interleaved)){l=n;do{o|=l.lane,l=l.next}while(l!==n)}else null===a&&(l.shared.lanes=0);Mi|=o,e.lanes=o,e.memoizedState=f}}function Ua(e,n,t){if(e=n.effects,n.effects=null,null!==e)for(n=0;n<e.length;n++){var r=e[n],l=r.callback;if(null!==l){if(r.callback=null,r=t,"function"!=typeof l)throw Error(a(191,l));l.call(r)}}}var ja=(new r.Component).refs;function Aa(e,n,t,r){t=null==(t=t(r,n=e.memoizedState))?n:F({},n,t),e.memoizedState=t,0===e.lanes&&(e.updateQueue.baseState=t)}var Ha={isMounted:function(e){return!!(e=e._reactInternals)&&Ve(e)===e},enqueueSetState:function(e,n,t){e=e._reactInternals;var r=es(),l=ns(e),a=Da(r,l);a.payload=n,null!=t&&(a.callback=t),null!==(n=Ra(e,a,l))&&(ts(n,e,l,r),Ia(n,e,l))},enqueueReplaceState:function(e,n,t){e=e._reactInternals;var r=es(),l=ns(e),a=Da(r,l);a.tag=1,a.payload=n,null!=t&&(a.callback=t),null!==(n=Ra(e,a,l))&&(ts(n,e,l,r),Ia(n,e,l))},enqueueForceUpdate:function(e,n){e=e._reactInternals;var t=es(),r=ns(e),l=Da(t,r);l.tag=2,null!=n&&(l.callback=n),null!==(n=Ra(e,l,r))&&(ts(n,e,r,t),Ia(n,e,r))}};function Va(e,n,t,r,l,a,o){return"function"==typeof(e=e.stateNode).shouldComponentUpdate?e.shouldComponentUpdate(r,a,o):!(n.prototype&&n.prototype.isPureReactComponent&&ir(t,r)&&ir(l,a))}function $a(e,n,t){var r=!1,l=Pl,a=n.contextType;return"object"==typeof a&&null!==a?a=_a(a):(l=Ol(n)?Tl:Nl.current,a=(r=null!=(r=n.contextTypes))?Ll(e,l):Pl),n=new n(t,a),e.memoizedState=null!==n.state&&void 0!==n.state?n.state:null,n.updater=Ha,e.stateNode=n,n._reactInternals=e,r&&((e=e.stateNode).__reactInternalMemoizedUnmaskedChildContext=l,e.__reactInternalMemoizedMaskedChildContext=a),n}function Ba(e,n,t,r){e=n.state,"function"==typeof n.componentWillReceiveProps&&n.componentWillReceiveProps(t,r),"function"==typeof n.UNSAFE_componentWillReceiveProps&&n.UNSAFE_componentWillReceiveProps(t,r),n.state!==e&&Ha.enqueueReplaceState(n,n.state,null)}function Wa(e,n,t,r){var l=e.stateNode;l.props=t,l.state=e.memoizedState,l.refs=ja,La(e);var a=n.contextType;"object"==typeof a&&null!==a?l.context=_a(a):(a=Ol(n)?Tl:Nl.current,l.context=Ll(e,a)),l.state=e.memoizedState,"function"==typeof(a=n.getDerivedStateFromProps)&&(Aa(e,n,a,t),l.state=e.memoizedState),"function"==typeof n.getDerivedStateFromProps||"function"==typeof l.getSnapshotBeforeUpdate||"function"!=typeof l.UNSAFE_componentWillMount&&"function"!=typeof l.componentWillMount||(n=l.state,"function"==typeof l.componentWillMount&&l.componentWillMount(),"function"==typeof l.UNSAFE_componentWillMount&&l.UNSAFE_componentWillMount(),n!==l.state&&Ha.enqueueReplaceState(l,l.state,null),Fa(e,t,l,r),l.state=e.memoizedState),"function"==typeof l.componentDidMount&&(e.flags|=4194308)}function Qa(e,n,t){if(null!==(e=t.ref)&&"function"!=typeof e&&"object"!=typeof e){if(t._owner){if(t=t._owner){if(1!==t.tag)throw Error(a(309));var r=t.stateNode}if(!r)throw Error(a(147,e));var l=r,o=""+e;return null!==n&&null!==n.ref&&"function"==typeof n.ref&&n.ref._stringRef===o?n.ref:(n=function(e){var n=l.refs;n===ja&&(n=l.refs={}),null===e?delete n[o]:n[o]=e},n._stringRef=o,n)}if("string"!=typeof e)throw Error(a(284));if(!t._owner)throw Error(a(290,e))}return e}function qa(e,n){throw e=Object.prototype.toString.call(n),Error(a(31,"[object Object]"===e?"object with keys {"+Object.keys(n).join(", ")+"}":e))}function Ka(e){return(0,e._init)(e._payload)}function Ya(e){function n(n,t){if(e){var r=n.deletions;null===r?(n.deletions=[t],n.flags|=16):r.push(t)}}function t(t,r){if(!e)return null;for(;null!==r;)n(t,r),r=r.sibling;return null}function r(e,n){for(e=new Map;null!==n;)null!==n.key?e.set(n.key,n):e.set(n.index,n),n=n.sibling;return e}function l(e,n){return(e=Ds(e,n)).index=0,e.sibling=null,e}function o(n,t,r){return n.index=r,e?null!==(r=n.alternate)?(r=r.index)<t?(n.flags|=2,t):r:(n.flags|=2,t):(n.flags|=1048576,t)}function u(n){return e&&null===n.alternate&&(n.flags|=2),n}function i(e,n,t,r){return null===n||6!==n.tag?((n=Fs(t,e.mode,r)).return=e,n):((n=l(n,t)).return=e,n)}function s(e,n,t,r){var a=t.type;return a===E?f(e,n,t.props.children,r,t.key):null!==n&&(n.elementType===a||"object"==typeof a&&null!==a&&a.$$typeof===O&&Ka(a)===n.type)?((r=l(n,t.props)).ref=Qa(e,n,t),r.return=e,r):((r=Rs(t.type,t.key,t.props,null,e.mode,r)).ref=Qa(e,n,t),r.return=e,r)}function c(e,n,t,r){return null===n||4!==n.tag||n.stateNode.containerInfo!==t.containerInfo||n.stateNode.implementation!==t.implementation?((n=Us(t,e.mode,r)).return=e,n):((n=l(n,t.children||[])).return=e,n)}function f(e,n,t,r,a){return null===n||7!==n.tag?((n=Is(t,e.mode,r,a)).return=e,n):((n=l(n,t)).return=e,n)}function d(e,n,t){if("string"==typeof n&&""!==n||"number"==typeof n)return(n=Fs(""+n,e.mode,t)).return=e,n;if("object"==typeof n&&null!==n){switch(n.$$typeof){case k:return(t=Rs(n.type,n.key,n.props,null,e.mode,t)).ref=Qa(e,null,n),t.return=e,t;case S:return(n=Us(n,e.mode,t)).return=e,n;case O:return d(e,(0,n._init)(n._payload),t)}if(ne(n)||I(n))return(n=Is(n,e.mode,t,null)).return=e,n;qa(e,n)}return null}function p(e,n,t,r){var l=null!==n?n.key:null;if("string"==typeof t&&""!==t||"number"==typeof t)return null!==l?null:i(e,n,""+t,r);if("object"==typeof t&&null!==t){switch(t.$$typeof){case k:return t.key===l?s(e,n,t,r):null;case S:return t.key===l?c(e,n,t,r):null;case O:return p(e,n,(l=t._init)(t._payload),r)}if(ne(t)||I(t))return null!==l?null:f(e,n,t,r,null);qa(e,t)}return null}function h(e,n,t,r,l){if("string"==typeof r&&""!==r||"number"==typeof r)return i(n,e=e.get(t)||null,""+r,l);if("object"==typeof r&&null!==r){switch(r.$$typeof){case k:return s(n,e=e.get(null===r.key?t:r.key)||null,r,l);case S:return c(n,e=e.get(null===r.key?t:r.key)||null,r,l);case O:return h(e,n,t,(0,r._init)(r._payload),l)}if(ne(r)||I(r))return f(n,e=e.get(t)||null,r,l,null);qa(n,r)}return null}function m(l,a,u,i){for(var s=null,c=null,f=a,m=a=0,v=null;null!==f&&m<u.length;m++){f.index>m?(v=f,f=null):v=f.sibling;var g=p(l,f,u[m],i);if(null===g){null===f&&(f=v);break}e&&f&&null===g.alternate&&n(l,f),a=o(g,a,m),null===c?s=g:c.sibling=g,c=g,f=v}if(m===u.length)return t(l,f),la&&Zl(l,m),s;if(null===f){for(;m<u.length;m++)null!==(f=d(l,u[m],i))&&(a=o(f,a,m),null===c?s=f:c.sibling=f,c=f);return la&&Zl(l,m),s}for(f=r(l,f);m<u.length;m++)null!==(v=h(f,l,m,u[m],i))&&(e&&null!==v.alternate&&f.delete(null===v.key?m:v.key),a=o(v,a,m),null===c?s=v:c.sibling=v,c=v);return e&&f.forEach((function(e){return n(l,e)})),la&&Zl(l,m),s}function v(l,u,i,s){var c=I(i);if("function"!=typeof c)throw Error(a(150));if(null==(i=c.call(i)))throw Error(a(151));for(var f=c=null,m=u,v=u=0,g=null,y=i.next();null!==m&&!y.done;v++,y=i.next()){m.index>v?(g=m,m=null):g=m.sibling;var b=p(l,m,y.value,s);if(null===b){null===m&&(m=g);break}e&&m&&null===b.alternate&&n(l,m),u=o(b,u,v),null===f?c=b:f.sibling=b,f=b,m=g}if(y.done)return t(l,m),la&&Zl(l,v),c;if(null===m){for(;!y.done;v++,y=i.next())null!==(y=d(l,y.value,s))&&(u=o(y,u,v),null===f?c=y:f.sibling=y,f=y);return la&&Zl(l,v),c}for(m=r(l,m);!y.done;v++,y=i.next())null!==(y=h(m,l,v,y.value,s))&&(e&&null!==y.alternate&&m.delete(null===y.key?v:y.key),u=o(y,u,v),null===f?c=y:f.sibling=y,f=y);return e&&m.forEach((function(e){return n(l,e)})),la&&Zl(l,v),c}return function e(r,a,o,i){if("object"==typeof o&&null!==o&&o.type===E&&null===o.key&&(o=o.props.children),"object"==typeof o&&null!==o){switch(o.$$typeof){case k:e:{for(var s=o.key,c=a;null!==c;){if(c.key===s){if((s=o.type)===E){if(7===c.tag){t(r,c.sibling),(a=l(c,o.props.children)).return=r,r=a;break e}}else if(c.elementType===s||"object"==typeof s&&null!==s&&s.$$typeof===O&&Ka(s)===c.type){t(r,c.sibling),(a=l(c,o.props)).ref=Qa(r,c,o),a.return=r,r=a;break e}t(r,c);break}n(r,c),c=c.sibling}o.type===E?((a=Is(o.props.children,r.mode,i,o.key)).return=r,r=a):((i=Rs(o.type,o.key,o.props,null,r.mode,i)).ref=Qa(r,a,o),i.return=r,r=i)}return u(r);case S:e:{for(c=o.key;null!==a;){if(a.key===c){if(4===a.tag&&a.stateNode.containerInfo===o.containerInfo&&a.stateNode.implementation===o.implementation){t(r,a.sibling),(a=l(a,o.children||[])).return=r,r=a;break e}t(r,a);break}n(r,a),a=a.sibling}(a=Us(o,r.mode,i)).return=r,r=a}return u(r);case O:return e(r,a,(c=o._init)(o._payload),i)}if(ne(o))return m(r,a,o,i);if(I(o))return v(r,a,o,i);qa(r,o)}return"string"==typeof o&&""!==o||"number"==typeof o?(o=""+o,null!==a&&6===a.tag?(t(r,a.sibling),(a=l(a,o)).return=r,r=a):(t(r,a),(a=Fs(o,r.mode,i)).return=r,r=a),u(r)):t(r,a)}}var Xa=Ya(!0),Ga=Ya(!1),Za={},Ja=xl(Za),eo=xl(Za),no=xl(Za);function to(e){if(e===Za)throw Error(a(174));return e}function ro(e,n){switch(Cl(no,n),Cl(eo,e),Cl(Ja,Za),e=n.nodeType){case 9:case 11:n=(n=n.documentElement)?n.namespaceURI:ie(null,"");break;default:n=ie(n=(e=8===e?n.parentNode:n).namespaceURI||null,e=e.tagName)}_l(Ja),Cl(Ja,n)}function lo(){_l(Ja),_l(eo),_l(no)}function ao(e){to(no.current);var n=to(Ja.current),t=ie(n,e.type);n!==t&&(Cl(eo,e),Cl(Ja,t))}function oo(e){eo.current===e&&(_l(Ja),_l(eo))}var uo=xl(0);function io(e){for(var n=e;null!==n;){if(13===n.tag){var t=n.memoizedState;if(null!==t&&(null===(t=t.dehydrated)||"$?"===t.data||"$!"===t.data))return n}else if(19===n.tag&&void 0!==n.memoizedProps.revealOrder){if(0!=(128&n.flags))return n}else if(null!==n.child){n.child.return=n,n=n.child;continue}if(n===e)break;for(;null===n.sibling;){if(null===n.return||n.return===e)return null;n=n.return}n.sibling.return=n.return,n=n.sibling}return null}var so=[];function co(){for(var e=0;e<so.length;e++)so[e]._workInProgressVersionPrimary=null;so.length=0}var fo=w.ReactCurrentDispatcher,po=w.ReactCurrentBatchConfig,ho=0,mo=null,vo=null,go=null,yo=!1,bo=!1,wo=0,ko=0;function So(){throw Error(a(321))}function Eo(e,n){if(null===n)return!1;for(var t=0;t<n.length&&t<e.length;t++)if(!ur(e[t],n[t]))return!1;return!0}function xo(e,n,t,r,l,o){if(ho=o,mo=n,n.memoizedState=null,n.updateQueue=null,n.lanes=0,fo.current=null===e||null===e.memoizedState?uu:iu,e=t(r,l),bo){o=0;do{if(bo=!1,wo=0,25<=o)throw Error(a(301));o+=1,go=vo=null,n.updateQueue=null,fo.current=su,e=t(r,l)}while(bo)}if(fo.current=ou,n=null!==vo&&null!==vo.next,ho=0,go=vo=mo=null,yo=!1,n)throw Error(a(300));return e}function _o(){var e=0!==wo;return wo=0,e}function Co(){var e={memoizedState:null,baseState:null,baseQueue:null,queue:null,next:null};return null===go?mo.memoizedState=go=e:go=go.next=e,go}function Po(){if(null===vo){var e=mo.alternate;e=null!==e?e.memoizedState:null}else e=vo.next;var n=null===go?mo.memoizedState:go.next;if(null!==n)go=n,vo=e;else{if(null===e)throw Error(a(310));e={memoizedState:(vo=e).memoizedState,baseState:vo.baseState,baseQueue:vo.baseQueue,queue:vo.queue,next:null},null===go?mo.memoizedState=go=e:go=go.next=e}return go}function No(e,n){return"function"==typeof n?n(e):n}function zo(e){var n=Po(),t=n.queue;if(null===t)throw Error(a(311));t.lastRenderedReducer=e;var r=vo,l=r.baseQueue,o=t.pending;if(null!==o){if(null!==l){var u=l.next;l.next=o.next,o.next=u}r.baseQueue=l=o,t.pending=null}if(null!==l){o=l.next,r=r.baseState;var i=u=null,s=null,c=o;do{var f=c.lane;if((ho&f)===f)null!==s&&(s=s.next={lane:0,action:c.action,hasEagerState:c.hasEagerState,eagerState:c.eagerState,next:null}),r=c.hasEagerState?c.eagerState:e(r,c.action);else{var d={lane:f,action:c.action,hasEagerState:c.hasEagerState,eagerState:c.eagerState,next:null};null===s?(i=s=d,u=r):s=s.next=d,mo.lanes|=f,Mi|=f}c=c.next}while(null!==c&&c!==o);null===s?u=r:s.next=i,ur(r,n.memoizedState)||(wu=!0),n.memoizedState=r,n.baseState=u,n.baseQueue=s,t.lastRenderedState=r}if(null!==(e=t.interleaved)){l=e;do{o=l.lane,mo.lanes|=o,Mi|=o,l=l.next}while(l!==e)}else null===l&&(t.lanes=0);return[n.memoizedState,t.dispatch]}function To(e){var n=Po(),t=n.queue;if(null===t)throw Error(a(311));t.lastRenderedReducer=e;var r=t.dispatch,l=t.pending,o=n.memoizedState;if(null!==l){t.pending=null;var u=l=l.next;do{o=e(o,u.action),u=u.next}while(u!==l);ur(o,n.memoizedState)||(wu=!0),n.memoizedState=o,null===n.baseQueue&&(n.baseState=o),t.lastRenderedState=o}return[o,r]}function Lo(){}function Oo(e,n){var t=mo,r=Po(),l=n(),o=!ur(r.memoizedState,l);if(o&&(r.memoizedState=l,wu=!0),r=r.queue,Bo(Io.bind(null,t,r,e),[e]),r.getSnapshot!==n||o||null!==go&&1&go.memoizedState.tag){if(t.flags|=2048,jo(9,Ro.bind(null,t,r,l,n),void 0,null),null===zi)throw Error(a(349));0!=(30&ho)||Do(t,n,l)}return l}function Do(e,n,t){e.flags|=16384,e={getSnapshot:n,value:t},null===(n=mo.updateQueue)?(n={lastEffect:null,stores:null},mo.updateQueue=n,n.stores=[e]):null===(t=n.stores)?n.stores=[e]:t.push(e)}function Ro(e,n,t,r){n.value=t,n.getSnapshot=r,Mo(n)&&Fo(e)}function Io(e,n,t){return t((function(){Mo(n)&&Fo(e)}))}function Mo(e){var n=e.getSnapshot;e=e.value;try{var t=n();return!ur(e,t)}catch(e){return!0}}function Fo(e){var n=za(e,1);null!==n&&ts(n,e,1,-1)}function Uo(e){var n=Co();return"function"==typeof e&&(e=e()),n.memoizedState=n.baseState=e,e={pending:null,interleaved:null,lanes:0,dispatch:null,lastRenderedReducer:No,lastRenderedState:e},n.queue=e,e=e.dispatch=tu.bind(null,mo,e),[n.memoizedState,e]}function jo(e,n,t,r){return e={tag:e,create:n,destroy:t,deps:r,next:null},null===(n=mo.updateQueue)?(n={lastEffect:null,stores:null},mo.updateQueue=n,n.lastEffect=e.next=e):null===(t=n.lastEffect)?n.lastEffect=e.next=e:(r=t.next,t.next=e,e.next=r,n.lastEffect=e),e}function Ao(){return Po().memoizedState}function Ho(e,n,t,r){var l=Co();mo.flags|=e,l.memoizedState=jo(1|n,t,void 0,void 0===r?null:r)}function Vo(e,n,t,r){var l=Po();r=void 0===r?null:r;var a=void 0;if(null!==vo){var o=vo.memoizedState;if(a=o.destroy,null!==r&&Eo(r,o.deps))return void(l.memoizedState=jo(n,t,a,r))}mo.flags|=e,l.memoizedState=jo(1|n,t,a,r)}function $o(e,n){return Ho(8390656,8,e,n)}function Bo(e,n){return Vo(2048,8,e,n)}function Wo(e,n){return Vo(4,2,e,n)}function Qo(e,n){return Vo(4,4,e,n)}function qo(e,n){return"function"==typeof n?(e=e(),n(e),function(){n(null)}):null!=n?(e=e(),n.current=e,function(){n.current=null}):void 0}function Ko(e,n,t){return t=null!=t?t.concat([e]):null,Vo(4,4,qo.bind(null,n,e),t)}function Yo(){}function Xo(e,n){var t=Po();n=void 0===n?null:n;var r=t.memoizedState;return null!==r&&null!==n&&Eo(n,r[1])?r[0]:(t.memoizedState=[e,n],e)}function Go(e,n){var t=Po();n=void 0===n?null:n;var r=t.memoizedState;return null!==r&&null!==n&&Eo(n,r[1])?r[0]:(e=e(),t.memoizedState=[e,n],e)}function Zo(e,n,t){return 0==(21&ho)?(e.baseState&&(e.baseState=!1,wu=!0),e.memoizedState=t):(ur(t,n)||(t=vn(),mo.lanes|=t,Mi|=t,e.baseState=!0),n)}function Jo(e,n){var t=wn;wn=0!==t&&4>t?t:4,e(!0);var r=po.transition;po.transition={};try{e(!1),n()}finally{wn=t,po.transition=r}}function eu(){return Po().memoizedState}function nu(e,n,t){var r=ns(e);t={lane:r,action:t,hasEagerState:!1,eagerState:null,next:null},ru(e)?lu(n,t):null!==(t=Na(e,n,t,r))&&(ts(t,e,r,es()),au(t,n,r))}function tu(e,n,t){var r=ns(e),l={lane:r,action:t,hasEagerState:!1,eagerState:null,next:null};if(ru(e))lu(n,l);else{var a=e.alternate;if(0===e.lanes&&(null===a||0===a.lanes)&&null!==(a=n.lastRenderedReducer))try{var o=n.lastRenderedState,u=a(o,t);if(l.hasEagerState=!0,l.eagerState=u,ur(u,o)){var i=n.interleaved;return null===i?(l.next=l,Pa(n)):(l.next=i.next,i.next=l),void(n.interleaved=l)}}catch(e){}null!==(t=Na(e,n,l,r))&&(ts(t,e,r,l=es()),au(t,n,r))}}function ru(e){var n=e.alternate;return e===mo||null!==n&&n===mo}function lu(e,n){bo=yo=!0;var t=e.pending;null===t?n.next=n:(n.next=t.next,t.next=n),e.pending=n}function au(e,n,t){if(0!=(4194240&t)){var r=n.lanes;t|=r&=e.pendingLanes,n.lanes=t,bn(e,t)}}var ou={readContext:_a,useCallback:So,useContext:So,useEffect:So,useImperativeHandle:So,useInsertionEffect:So,useLayoutEffect:So,useMemo:So,useReducer:So,useRef:So,useState:So,useDebugValue:So,useDeferredValue:So,useTransition:So,useMutableSource:So,useSyncExternalStore:So,useId:So,unstable_isNewReconciler:!1},uu={readContext:_a,useCallback:function(e,n){return Co().memoizedState=[e,void 0===n?null:n],e},useContext:_a,useEffect:$o,useImperativeHandle:function(e,n,t){return t=null!=t?t.concat([e]):null,Ho(4194308,4,qo.bind(null,n,e),t)},useLayoutEffect:function(e,n){return Ho(4194308,4,e,n)},useInsertionEffect:function(e,n){return Ho(4,2,e,n)},useMemo:function(e,n){var t=Co();return n=void 0===n?null:n,e=e(),t.memoizedState=[e,n],e},useReducer:function(e,n,t){var r=Co();return n=void 0!==t?t(n):n,r.memoizedState=r.baseState=n,e={pending:null,interleaved:null,lanes:0,dispatch:null,lastRenderedReducer:e,lastRenderedState:n},r.queue=e,e=e.dispatch=nu.bind(null,mo,e),[r.memoizedState,e]},useRef:function(e){return e={current:e},Co().memoizedState=e},useState:Uo,useDebugValue:Yo,useDeferredValue:function(e){return Co().memoizedState=e},useTransition:function(){var e=Uo(!1),n=e[0];return e=Jo.bind(null,e[1]),Co().memoizedState=e,[n,e]},useMutableSource:function(){},useSyncExternalStore:function(e,n,t){var r=mo,l=Co();if(la){if(void 0===t)throw Error(a(407));t=t()}else{if(t=n(),null===zi)throw Error(a(349));0!=(30&ho)||Do(r,n,t)}l.memoizedState=t;var o={value:t,getSnapshot:n};return l.queue=o,$o(Io.bind(null,r,o,e),[e]),r.flags|=2048,jo(9,Ro.bind(null,r,o,t,n),void 0,null),t},useId:function(){var e=Co(),n=zi.identifierPrefix;if(la){var t=Gl;n=":"+n+"R"+(t=(Xl&~(1<<32-on(Xl)-1)).toString(32)+t),0<(t=wo++)&&(n+="H"+t.toString(32)),n+=":"}else n=":"+n+"r"+(t=ko++).toString(32)+":";return e.memoizedState=n},unstable_isNewReconciler:!1},iu={readContext:_a,useCallback:Xo,useContext:_a,useEffect:Bo,useImperativeHandle:Ko,useInsertionEffect:Wo,useLayoutEffect:Qo,useMemo:Go,useReducer:zo,useRef:Ao,useState:function(){return zo(No)},useDebugValue:Yo,useDeferredValue:function(e){return Zo(Po(),vo.memoizedState,e)},useTransition:function(){return[zo(No)[0],Po().memoizedState]},useMutableSource:Lo,useSyncExternalStore:Oo,useId:eu,unstable_isNewReconciler:!1},su={readContext:_a,useCallback:Xo,useContext:_a,useEffect:Bo,useImperativeHandle:Ko,useInsertionEffect:Wo,useLayoutEffect:Qo,useMemo:Go,useReducer:To,useRef:Ao,useState:function(){return To(No)},useDebugValue:Yo,useDeferredValue:function(e){var n=Po();return null===vo?n.memoizedState=e:Zo(n,vo.memoizedState,e)},useTransition:function(){return[To(No)[0],Po().memoizedState]},useMutableSource:Lo,useSyncExternalStore:Oo,useId:eu,unstable_isNewReconciler:!1};function cu(e,n){try{var t="",r=n;do{t+=H(r),r=r.return}while(r);var l=t}catch(e){l="\nError generating stack: "+e.message+"\n"+e.stack}return{value:e,source:n,stack:l,digest:null}}function fu(e,n,t){return{value:e,source:null,stack:null!=t?t:null,digest:null!=n?n:null}}function du(e,n){try{console.error(n.value)}catch(e){setTimeout((function(){throw e}))}}var pu="function"==typeof WeakMap?WeakMap:Map;function hu(e,n,t){(t=Da(-1,t)).tag=3,t.payload={element:null};var r=n.value;return t.callback=function(){Bi||(Bi=!0,Wi=r),du(0,n)},t}function mu(e,n,t){(t=Da(-1,t)).tag=3;var r=e.type.getDerivedStateFromError;if("function"==typeof r){var l=n.value;t.payload=function(){return r(l)},t.callback=function(){du(0,n)}}var a=e.stateNode;return null!==a&&"function"==typeof a.componentDidCatch&&(t.callback=function(){du(0,n),"function"!=typeof r&&(null===Qi?Qi=new Set([this]):Qi.add(this));var e=n.stack;this.componentDidCatch(n.value,{componentStack:null!==e?e:""})}),t}function vu(e,n,t){var r=e.pingCache;if(null===r){r=e.pingCache=new pu;var l=new Set;r.set(n,l)}else void 0===(l=r.get(n))&&(l=new Set,r.set(n,l));l.has(t)||(l.add(t),e=_s.bind(null,e,n,t),n.then(e,e))}function gu(e){do{var n;if((n=13===e.tag)&&(n=null===(n=e.memoizedState)||null!==n.dehydrated),n)return e;e=e.return}while(null!==e);return null}function yu(e,n,t,r,l){return 0==(1&e.mode)?(e===n?e.flags|=65536:(e.flags|=128,t.flags|=131072,t.flags&=-52805,1===t.tag&&(null===t.alternate?t.tag=17:((n=Da(-1,1)).tag=2,Ra(t,n,1))),t.lanes|=1),e):(e.flags|=65536,e.lanes=l,e)}var bu=w.ReactCurrentOwner,wu=!1;function ku(e,n,t,r){n.child=null===e?Ga(n,null,t,r):Xa(n,e.child,t,r)}function Su(e,n,t,r,l){t=t.render;var a=n.ref;return xa(n,l),r=xo(e,n,t,r,a,l),t=_o(),null===e||wu?(la&&t&&ea(n),n.flags|=1,ku(e,n,r,l),n.child):(n.updateQueue=e.updateQueue,n.flags&=-2053,e.lanes&=~l,Bu(e,n,l))}function Eu(e,n,t,r,l){if(null===e){var a=t.type;return"function"!=typeof a||Os(a)||void 0!==a.defaultProps||null!==t.compare||void 0!==t.defaultProps?((e=Rs(t.type,null,r,n,n.mode,l)).ref=n.ref,e.return=n,n.child=e):(n.tag=15,n.type=a,xu(e,n,a,r,l))}if(a=e.child,0==(e.lanes&l)){var o=a.memoizedProps;if((t=null!==(t=t.compare)?t:ir)(o,r)&&e.ref===n.ref)return Bu(e,n,l)}return n.flags|=1,(e=Ds(a,r)).ref=n.ref,e.return=n,n.child=e}function xu(e,n,t,r,l){if(null!==e){var a=e.memoizedProps;if(ir(a,r)&&e.ref===n.ref){if(wu=!1,n.pendingProps=r=a,0==(e.lanes&l))return n.lanes=e.lanes,Bu(e,n,l);0!=(131072&e.flags)&&(wu=!0)}}return Pu(e,n,t,r,l)}function _u(e,n,t){var r=n.pendingProps,l=r.children,a=null!==e?e.memoizedState:null;if("hidden"===r.mode)if(0==(1&n.mode))n.memoizedState={baseLanes:0,cachePool:null,transitions:null},Cl(Di,Oi),Oi|=t;else{if(0==(1073741824&t))return e=null!==a?a.baseLanes|t:t,n.lanes=n.childLanes=1073741824,n.memoizedState={baseLanes:e,cachePool:null,transitions:null},n.updateQueue=null,Cl(Di,Oi),Oi|=e,null;n.memoizedState={baseLanes:0,cachePool:null,transitions:null},r=null!==a?a.baseLanes:t,Cl(Di,Oi),Oi|=r}else null!==a?(r=a.baseLanes|t,n.memoizedState=null):r=t,Cl(Di,Oi),Oi|=r;return ku(e,n,l,t),n.child}function Cu(e,n){var t=n.ref;(null===e&&null!==t||null!==e&&e.ref!==t)&&(n.flags|=512,n.flags|=2097152)}function Pu(e,n,t,r,l){var a=Ol(t)?Tl:Nl.current;return a=Ll(n,a),xa(n,l),t=xo(e,n,t,r,a,l),r=_o(),null===e||wu?(la&&r&&ea(n),n.flags|=1,ku(e,n,t,l),n.child):(n.updateQueue=e.updateQueue,n.flags&=-2053,e.lanes&=~l,Bu(e,n,l))}function Nu(e,n,t,r,l){if(Ol(t)){var a=!0;Ml(n)}else a=!1;if(xa(n,l),null===n.stateNode)$u(e,n),$a(n,t,r),Wa(n,t,r,l),r=!0;else if(null===e){var o=n.stateNode,u=n.memoizedProps;o.props=u;var i=o.context,s=t.contextType;s="object"==typeof s&&null!==s?_a(s):Ll(n,s=Ol(t)?Tl:Nl.current);var c=t.getDerivedStateFromProps,f="function"==typeof c||"function"==typeof o.getSnapshotBeforeUpdate;f||"function"!=typeof o.UNSAFE_componentWillReceiveProps&&"function"!=typeof o.componentWillReceiveProps||(u!==r||i!==s)&&Ba(n,o,r,s),Ta=!1;var d=n.memoizedState;o.state=d,Fa(n,r,o,l),i=n.memoizedState,u!==r||d!==i||zl.current||Ta?("function"==typeof c&&(Aa(n,t,c,r),i=n.memoizedState),(u=Ta||Va(n,t,u,r,d,i,s))?(f||"function"!=typeof o.UNSAFE_componentWillMount&&"function"!=typeof o.componentWillMount||("function"==typeof o.componentWillMount&&o.componentWillMount(),"function"==typeof o.UNSAFE_componentWillMount&&o.UNSAFE_componentWillMount()),"function"==typeof o.componentDidMount&&(n.flags|=4194308)):("function"==typeof o.componentDidMount&&(n.flags|=4194308),n.memoizedProps=r,n.memoizedState=i),o.props=r,o.state=i,o.context=s,r=u):("function"==typeof o.componentDidMount&&(n.flags|=4194308),r=!1)}else{o=n.stateNode,Oa(e,n),u=n.memoizedProps,s=n.type===n.elementType?u:va(n.type,u),o.props=s,f=n.pendingProps,d=o.context,i="object"==typeof(i=t.contextType)&&null!==i?_a(i):Ll(n,i=Ol(t)?Tl:Nl.current);var p=t.getDerivedStateFromProps;(c="function"==typeof p||"function"==typeof o.getSnapshotBeforeUpdate)||"function"!=typeof o.UNSAFE_componentWillReceiveProps&&"function"!=typeof o.componentWillReceiveProps||(u!==f||d!==i)&&Ba(n,o,r,i),Ta=!1,d=n.memoizedState,o.state=d,Fa(n,r,o,l);var h=n.memoizedState;u!==f||d!==h||zl.current||Ta?("function"==typeof p&&(Aa(n,t,p,r),h=n.memoizedState),(s=Ta||Va(n,t,s,r,d,h,i)||!1)?(c||"function"!=typeof o.UNSAFE_componentWillUpdate&&"function"!=typeof o.componentWillUpdate||("function"==typeof o.componentWillUpdate&&o.componentWillUpdate(r,h,i),"function"==typeof o.UNSAFE_componentWillUpdate&&o.UNSAFE_componentWillUpdate(r,h,i)),"function"==typeof o.componentDidUpdate&&(n.flags|=4),"function"==typeof o.getSnapshotBeforeUpdate&&(n.flags|=1024)):("function"!=typeof o.componentDidUpdate||u===e.memoizedProps&&d===e.memoizedState||(n.flags|=4),"function"!=typeof o.getSnapshotBeforeUpdate||u===e.memoizedProps&&d===e.memoizedState||(n.flags|=1024),n.memoizedProps=r,n.memoizedState=h),o.props=r,o.state=h,o.context=i,r=s):("function"!=typeof o.componentDidUpdate||u===e.memoizedProps&&d===e.memoizedState||(n.flags|=4),"function"!=typeof o.getSnapshotBeforeUpdate||u===e.memoizedProps&&d===e.memoizedState||(n.flags|=1024),r=!1)}return zu(e,n,t,r,a,l)}function zu(e,n,t,r,l,a){Cu(e,n);var o=0!=(128&n.flags);if(!r&&!o)return l&&Fl(n,t,!1),Bu(e,n,a);r=n.stateNode,bu.current=n;var u=o&&"function"!=typeof t.getDerivedStateFromError?null:r.render();return n.flags|=1,null!==e&&o?(n.child=Xa(n,e.child,null,a),n.child=Xa(n,null,u,a)):ku(e,n,u,a),n.memoizedState=r.state,l&&Fl(n,t,!0),n.child}function Tu(e){var n=e.stateNode;n.pendingContext?Rl(0,n.pendingContext,n.pendingContext!==n.context):n.context&&Rl(0,n.context,!1),ro(e,n.containerInfo)}function Lu(e,n,t,r,l){return pa(),ha(l),n.flags|=256,ku(e,n,t,r),n.child}var Ou,Du,Ru,Iu={dehydrated:null,treeContext:null,retryLane:0};function Mu(e){return{baseLanes:e,cachePool:null,transitions:null}}function Fu(e,n,t){var r,l=n.pendingProps,o=uo.current,u=!1,i=0!=(128&n.flags);if((r=i)||(r=(null===e||null!==e.memoizedState)&&0!=(2&o)),r?(u=!0,n.flags&=-129):null!==e&&null===e.memoizedState||(o|=1),Cl(uo,1&o),null===e)return sa(n),null!==(e=n.memoizedState)&&null!==(e=e.dehydrated)?(0==(1&n.mode)?n.lanes=1:"$!"===e.data?n.lanes=8:n.lanes=1073741824,null):(i=l.children,e=l.fallback,u?(l=n.mode,u=n.child,i={mode:"hidden",children:i},0==(1&l)&&null!==u?(u.childLanes=0,u.pendingProps=i):u=Ms(i,l,0,null),e=Is(e,l,t,null),u.return=n,e.return=n,u.sibling=e,n.child=u,n.child.memoizedState=Mu(t),n.memoizedState=Iu,e):Uu(n,i));if(null!==(o=e.memoizedState)&&null!==(r=o.dehydrated))return function(e,n,t,r,l,o,u){if(t)return 256&n.flags?(n.flags&=-257,ju(e,n,u,r=fu(Error(a(422))))):null!==n.memoizedState?(n.child=e.child,n.flags|=128,null):(o=r.fallback,l=n.mode,r=Ms({mode:"visible",children:r.children},l,0,null),(o=Is(o,l,u,null)).flags|=2,r.return=n,o.return=n,r.sibling=o,n.child=r,0!=(1&n.mode)&&Xa(n,e.child,null,u),n.child.memoizedState=Mu(u),n.memoizedState=Iu,o);if(0==(1&n.mode))return ju(e,n,u,null);if("$!"===l.data){if(r=l.nextSibling&&l.nextSibling.dataset)var i=r.dgst;return r=i,ju(e,n,u,r=fu(o=Error(a(419)),r,void 0))}if(i=0!=(u&e.childLanes),wu||i){if(null!==(r=zi)){switch(u&-u){case 4:l=2;break;case 16:l=8;break;case 64:case 128:case 256:case 512:case 1024:case 2048:case 4096:case 8192:case 16384:case 32768:case 65536:case 131072:case 262144:case 524288:case 1048576:case 2097152:case 4194304:case 8388608:case 16777216:case 33554432:case 67108864:l=32;break;case 536870912:l=268435456;break;default:l=0}0!==(l=0!=(l&(r.suspendedLanes|u))?0:l)&&l!==o.retryLane&&(o.retryLane=l,za(e,l),ts(r,e,l,-1))}return ms(),ju(e,n,u,r=fu(Error(a(421))))}return"$?"===l.data?(n.flags|=128,n.child=e.child,n=Ps.bind(null,e),l._reactRetry=n,null):(e=o.treeContext,ra=sl(l.nextSibling),ta=n,la=!0,aa=null,null!==e&&(ql[Kl++]=Xl,ql[Kl++]=Gl,ql[Kl++]=Yl,Xl=e.id,Gl=e.overflow,Yl=n),(n=Uu(n,r.children)).flags|=4096,n)}(e,n,i,l,r,o,t);if(u){u=l.fallback,i=n.mode,r=(o=e.child).sibling;var s={mode:"hidden",children:l.children};return 0==(1&i)&&n.child!==o?((l=n.child).childLanes=0,l.pendingProps=s,n.deletions=null):(l=Ds(o,s)).subtreeFlags=14680064&o.subtreeFlags,null!==r?u=Ds(r,u):(u=Is(u,i,t,null)).flags|=2,u.return=n,l.return=n,l.sibling=u,n.child=l,l=u,u=n.child,i=null===(i=e.child.memoizedState)?Mu(t):{baseLanes:i.baseLanes|t,cachePool:null,transitions:i.transitions},u.memoizedState=i,u.childLanes=e.childLanes&~t,n.memoizedState=Iu,l}return e=(u=e.child).sibling,l=Ds(u,{mode:"visible",children:l.children}),0==(1&n.mode)&&(l.lanes=t),l.return=n,l.sibling=null,null!==e&&(null===(t=n.deletions)?(n.deletions=[e],n.flags|=16):t.push(e)),n.child=l,n.memoizedState=null,l}function Uu(e,n){return(n=Ms({mode:"visible",children:n},e.mode,0,null)).return=e,e.child=n}function ju(e,n,t,r){return null!==r&&ha(r),Xa(n,e.child,null,t),(e=Uu(n,n.pendingProps.children)).flags|=2,n.memoizedState=null,e}function Au(e,n,t){e.lanes|=n;var r=e.alternate;null!==r&&(r.lanes|=n),Ea(e.return,n,t)}function Hu(e,n,t,r,l){var a=e.memoizedState;null===a?e.memoizedState={isBackwards:n,rendering:null,renderingStartTime:0,last:r,tail:t,tailMode:l}:(a.isBackwards=n,a.rendering=null,a.renderingStartTime=0,a.last=r,a.tail=t,a.tailMode=l)}function Vu(e,n,t){var r=n.pendingProps,l=r.revealOrder,a=r.tail;if(ku(e,n,r.children,t),0!=(2&(r=uo.current)))r=1&r|2,n.flags|=128;else{if(null!==e&&0!=(128&e.flags))e:for(e=n.child;null!==e;){if(13===e.tag)null!==e.memoizedState&&Au(e,t,n);else if(19===e.tag)Au(e,t,n);else if(null!==e.child){e.child.return=e,e=e.child;continue}if(e===n)break e;for(;null===e.sibling;){if(null===e.return||e.return===n)break e;e=e.return}e.sibling.return=e.return,e=e.sibling}r&=1}if(Cl(uo,r),0==(1&n.mode))n.memoizedState=null;else switch(l){case"forwards":for(t=n.child,l=null;null!==t;)null!==(e=t.alternate)&&null===io(e)&&(l=t),t=t.sibling;null===(t=l)?(l=n.child,n.child=null):(l=t.sibling,t.sibling=null),Hu(n,!1,l,t,a);break;case"backwards":for(t=null,l=n.child,n.child=null;null!==l;){if(null!==(e=l.alternate)&&null===io(e)){n.child=l;break}e=l.sibling,l.sibling=t,t=l,l=e}Hu(n,!0,t,null,a);break;case"together":Hu(n,!1,null,null,void 0);break;default:n.memoizedState=null}return n.child}function $u(e,n){0==(1&n.mode)&&null!==e&&(e.alternate=null,n.alternate=null,n.flags|=2)}function Bu(e,n,t){if(null!==e&&(n.dependencies=e.dependencies),Mi|=n.lanes,0==(t&n.childLanes))return null;if(null!==e&&n.child!==e.child)throw Error(a(153));if(null!==n.child){for(t=Ds(e=n.child,e.pendingProps),n.child=t,t.return=n;null!==e.sibling;)e=e.sibling,(t=t.sibling=Ds(e,e.pendingProps)).return=n;t.sibling=null}return n.child}function Wu(e,n){if(!la)switch(e.tailMode){case"hidden":n=e.tail;for(var t=null;null!==n;)null!==n.alternate&&(t=n),n=n.sibling;null===t?e.tail=null:t.sibling=null;break;case"collapsed":t=e.tail;for(var r=null;null!==t;)null!==t.alternate&&(r=t),t=t.sibling;null===r?n||null===e.tail?e.tail=null:e.tail.sibling=null:r.sibling=null}}function Qu(e){var n=null!==e.alternate&&e.alternate.child===e.child,t=0,r=0;if(n)for(var l=e.child;null!==l;)t|=l.lanes|l.childLanes,r|=14680064&l.subtreeFlags,r|=14680064&l.flags,l.return=e,l=l.sibling;else for(l=e.child;null!==l;)t|=l.lanes|l.childLanes,r|=l.subtreeFlags,r|=l.flags,l.return=e,l=l.sibling;return e.subtreeFlags|=r,e.childLanes=t,n}function qu(e,n,t){var r=n.pendingProps;switch(na(n),n.tag){case 2:case 16:case 15:case 0:case 11:case 7:case 8:case 12:case 9:case 14:return Qu(n),null;case 1:case 17:return Ol(n.type)&&Dl(),Qu(n),null;case 3:return r=n.stateNode,lo(),_l(zl),_l(Nl),co(),r.pendingContext&&(r.context=r.pendingContext,r.pendingContext=null),null!==e&&null!==e.child||(fa(n)?n.flags|=4:null===e||e.memoizedState.isDehydrated&&0==(256&n.flags)||(n.flags|=1024,null!==aa&&(os(aa),aa=null))),Qu(n),null;case 5:oo(n);var l=to(no.current);if(t=n.type,null!==e&&null!=n.stateNode)Du(e,n,t,r),e.ref!==n.ref&&(n.flags|=512,n.flags|=2097152);else{if(!r){if(null===n.stateNode)throw Error(a(166));return Qu(n),null}if(e=to(Ja.current),fa(n)){r=n.stateNode,t=n.type;var o=n.memoizedProps;switch(r[dl]=n,r[pl]=o,e=0!=(1&n.mode),t){case"dialog":jr("cancel",r),jr("close",r);break;case"iframe":case"object":case"embed":jr("load",r);break;case"video":case"audio":for(l=0;l<Ir.length;l++)jr(Ir[l],r);break;case"source":jr("error",r);break;case"img":case"image":case"link":jr("error",r),jr("load",r);break;case"details":jr("toggle",r);break;case"input":X(r,o),jr("invalid",r);break;case"select":r._wrapperState={wasMultiple:!!o.multiple},jr("invalid",r);break;case"textarea":le(r,o),jr("invalid",r)}for(var i in ye(t,o),l=null,o)if(o.hasOwnProperty(i)){var s=o[i];"children"===i?"string"==typeof s?r.textContent!==s&&(!0!==o.suppressHydrationWarning&&Zr(r.textContent,s,e),l=["children",s]):"number"==typeof s&&r.textContent!==""+s&&(!0!==o.suppressHydrationWarning&&Zr(r.textContent,s,e),l=["children",""+s]):u.hasOwnProperty(i)&&null!=s&&"onScroll"===i&&jr("scroll",r)}switch(t){case"input":Q(r),J(r,o,!0);break;case"textarea":Q(r),oe(r);break;case"select":case"option":break;default:"function"==typeof o.onClick&&(r.onclick=Jr)}r=l,n.updateQueue=r,null!==r&&(n.flags|=4)}else{i=9===l.nodeType?l:l.ownerDocument,"http://www.w3.org/1999/xhtml"===e&&(e=ue(t)),"http://www.w3.org/1999/xhtml"===e?"script"===t?((e=i.createElement("div")).innerHTML="<script><\/script>",e=e.removeChild(e.firstChild)):"string"==typeof r.is?e=i.createElement(t,{is:r.is}):(e=i.createElement(t),"select"===t&&(i=e,r.multiple?i.multiple=!0:r.size&&(i.size=r.size))):e=i.createElementNS(e,t),e[dl]=n,e[pl]=r,Ou(e,n),n.stateNode=e;e:{switch(i=be(t,r),t){case"dialog":jr("cancel",e),jr("close",e),l=r;break;case"iframe":case"object":case"embed":jr("load",e),l=r;break;case"video":case"audio":for(l=0;l<Ir.length;l++)jr(Ir[l],e);l=r;break;case"source":jr("error",e),l=r;break;case"img":case"image":case"link":jr("error",e),jr("load",e),l=r;break;case"details":jr("toggle",e),l=r;break;case"input":X(e,r),l=Y(e,r),jr("invalid",e);break;case"option":default:l=r;break;case"select":e._wrapperState={wasMultiple:!!r.multiple},l=F({},r,{value:void 0}),jr("invalid",e);break;case"textarea":le(e,r),l=re(e,r),jr("invalid",e)}for(o in ye(t,l),s=l)if(s.hasOwnProperty(o)){var c=s[o];"style"===o?ve(e,c):"dangerouslySetInnerHTML"===o?null!=(c=c?c.__html:void 0)&&fe(e,c):"children"===o?"string"==typeof c?("textarea"!==t||""!==c)&&de(e,c):"number"==typeof c&&de(e,""+c):"suppressContentEditableWarning"!==o&&"suppressHydrationWarning"!==o&&"autoFocus"!==o&&(u.hasOwnProperty(o)?null!=c&&"onScroll"===o&&jr("scroll",e):null!=c&&b(e,o,c,i))}switch(t){case"input":Q(e),J(e,r,!1);break;case"textarea":Q(e),oe(e);break;case"option":null!=r.value&&e.setAttribute("value",""+B(r.value));break;case"select":e.multiple=!!r.multiple,null!=(o=r.value)?te(e,!!r.multiple,o,!1):null!=r.defaultValue&&te(e,!!r.multiple,r.defaultValue,!0);break;default:"function"==typeof l.onClick&&(e.onclick=Jr)}switch(t){case"button":case"input":case"select":case"textarea":r=!!r.autoFocus;break e;case"img":r=!0;break e;default:r=!1}}r&&(n.flags|=4)}null!==n.ref&&(n.flags|=512,n.flags|=2097152)}return Qu(n),null;case 6:if(e&&null!=n.stateNode)Ru(0,n,e.memoizedProps,r);else{if("string"!=typeof r&&null===n.stateNode)throw Error(a(166));if(t=to(no.current),to(Ja.current),fa(n)){if(r=n.stateNode,t=n.memoizedProps,r[dl]=n,(o=r.nodeValue!==t)&&null!==(e=ta))switch(e.tag){case 3:Zr(r.nodeValue,t,0!=(1&e.mode));break;case 5:!0!==e.memoizedProps.suppressHydrationWarning&&Zr(r.nodeValue,t,0!=(1&e.mode))}o&&(n.flags|=4)}else(r=(9===t.nodeType?t:t.ownerDocument).createTextNode(r))[dl]=n,n.stateNode=r}return Qu(n),null;case 13:if(_l(uo),r=n.memoizedState,null===e||null!==e.memoizedState&&null!==e.memoizedState.dehydrated){if(la&&null!==ra&&0!=(1&n.mode)&&0==(128&n.flags))da(),pa(),n.flags|=98560,o=!1;else if(o=fa(n),null!==r&&null!==r.dehydrated){if(null===e){if(!o)throw Error(a(318));if(!(o=null!==(o=n.memoizedState)?o.dehydrated:null))throw Error(a(317));o[dl]=n}else pa(),0==(128&n.flags)&&(n.memoizedState=null),n.flags|=4;Qu(n),o=!1}else null!==aa&&(os(aa),aa=null),o=!0;if(!o)return 65536&n.flags?n:null}return 0!=(128&n.flags)?(n.lanes=t,n):((r=null!==r)!=(null!==e&&null!==e.memoizedState)&&r&&(n.child.flags|=8192,0!=(1&n.mode)&&(null===e||0!=(1&uo.current)?0===Ri&&(Ri=3):ms())),null!==n.updateQueue&&(n.flags|=4),Qu(n),null);case 4:return lo(),null===e&&Vr(n.stateNode.containerInfo),Qu(n),null;case 10:return Sa(n.type._context),Qu(n),null;case 19:if(_l(uo),null===(o=n.memoizedState))return Qu(n),null;if(r=0!=(128&n.flags),null===(i=o.rendering))if(r)Wu(o,!1);else{if(0!==Ri||null!==e&&0!=(128&e.flags))for(e=n.child;null!==e;){if(null!==(i=io(e))){for(n.flags|=128,Wu(o,!1),null!==(r=i.updateQueue)&&(n.updateQueue=r,n.flags|=4),n.subtreeFlags=0,r=t,t=n.child;null!==t;)e=r,(o=t).flags&=14680066,null===(i=o.alternate)?(o.childLanes=0,o.lanes=e,o.child=null,o.subtreeFlags=0,o.memoizedProps=null,o.memoizedState=null,o.updateQueue=null,o.dependencies=null,o.stateNode=null):(o.childLanes=i.childLanes,o.lanes=i.lanes,o.child=i.child,o.subtreeFlags=0,o.deletions=null,o.memoizedProps=i.memoizedProps,o.memoizedState=i.memoizedState,o.updateQueue=i.updateQueue,o.type=i.type,e=i.dependencies,o.dependencies=null===e?null:{lanes:e.lanes,firstContext:e.firstContext}),t=t.sibling;return Cl(uo,1&uo.current|2),n.child}e=e.sibling}null!==o.tail&&Ge()>Vi&&(n.flags|=128,r=!0,Wu(o,!1),n.lanes=4194304)}else{if(!r)if(null!==(e=io(i))){if(n.flags|=128,r=!0,null!==(t=e.updateQueue)&&(n.updateQueue=t,n.flags|=4),Wu(o,!0),null===o.tail&&"hidden"===o.tailMode&&!i.alternate&&!la)return Qu(n),null}else 2*Ge()-o.renderingStartTime>Vi&&1073741824!==t&&(n.flags|=128,r=!0,Wu(o,!1),n.lanes=4194304);o.isBackwards?(i.sibling=n.child,n.child=i):(null!==(t=o.last)?t.sibling=i:n.child=i,o.last=i)}return null!==o.tail?(n=o.tail,o.rendering=n,o.tail=n.sibling,o.renderingStartTime=Ge(),n.sibling=null,t=uo.current,Cl(uo,r?1&t|2:1&t),n):(Qu(n),null);case 22:case 23:return fs(),r=null!==n.memoizedState,null!==e&&null!==e.memoizedState!==r&&(n.flags|=8192),r&&0!=(1&n.mode)?0!=(1073741824&Oi)&&(Qu(n),6&n.subtreeFlags&&(n.flags|=8192)):Qu(n),null;case 24:case 25:return null}throw Error(a(156,n.tag))}function Ku(e,n){switch(na(n),n.tag){case 1:return Ol(n.type)&&Dl(),65536&(e=n.flags)?(n.flags=-65537&e|128,n):null;case 3:return lo(),_l(zl),_l(Nl),co(),0!=(65536&(e=n.flags))&&0==(128&e)?(n.flags=-65537&e|128,n):null;case 5:return oo(n),null;case 13:if(_l(uo),null!==(e=n.memoizedState)&&null!==e.dehydrated){if(null===n.alternate)throw Error(a(340));pa()}return 65536&(e=n.flags)?(n.flags=-65537&e|128,n):null;case 19:return _l(uo),null;case 4:return lo(),null;case 10:return Sa(n.type._context),null;case 22:case 23:return fs(),null;default:return null}}Ou=function(e,n){for(var t=n.child;null!==t;){if(5===t.tag||6===t.tag)e.appendChild(t.stateNode);else if(4!==t.tag&&null!==t.child){t.child.return=t,t=t.child;continue}if(t===n)break;for(;null===t.sibling;){if(null===t.return||t.return===n)return;t=t.return}t.sibling.return=t.return,t=t.sibling}},Du=function(e,n,t,r){var l=e.memoizedProps;if(l!==r){e=n.stateNode,to(Ja.current);var a,o=null;switch(t){case"input":l=Y(e,l),r=Y(e,r),o=[];break;case"select":l=F({},l,{value:void 0}),r=F({},r,{value:void 0}),o=[];break;case"textarea":l=re(e,l),r=re(e,r),o=[];break;default:"function"!=typeof l.onClick&&"function"==typeof r.onClick&&(e.onclick=Jr)}for(c in ye(t,r),t=null,l)if(!r.hasOwnProperty(c)&&l.hasOwnProperty(c)&&null!=l[c])if("style"===c){var i=l[c];for(a in i)i.hasOwnProperty(a)&&(t||(t={}),t[a]="")}else"dangerouslySetInnerHTML"!==c&&"children"!==c&&"suppressContentEditableWarning"!==c&&"suppressHydrationWarning"!==c&&"autoFocus"!==c&&(u.hasOwnProperty(c)?o||(o=[]):(o=o||[]).push(c,null));for(c in r){var s=r[c];if(i=null!=l?l[c]:void 0,r.hasOwnProperty(c)&&s!==i&&(null!=s||null!=i))if("style"===c)if(i){for(a in i)!i.hasOwnProperty(a)||s&&s.hasOwnProperty(a)||(t||(t={}),t[a]="");for(a in s)s.hasOwnProperty(a)&&i[a]!==s[a]&&(t||(t={}),t[a]=s[a])}else t||(o||(o=[]),o.push(c,t)),t=s;else"dangerouslySetInnerHTML"===c?(s=s?s.__html:void 0,i=i?i.__html:void 0,null!=s&&i!==s&&(o=o||[]).push(c,s)):"children"===c?"string"!=typeof s&&"number"!=typeof s||(o=o||[]).push(c,""+s):"suppressContentEditableWarning"!==c&&"suppressHydrationWarning"!==c&&(u.hasOwnProperty(c)?(null!=s&&"onScroll"===c&&jr("scroll",e),o||i===s||(o=[])):(o=o||[]).push(c,s))}t&&(o=o||[]).push("style",t);var c=o;(n.updateQueue=c)&&(n.flags|=4)}},Ru=function(e,n,t,r){t!==r&&(n.flags|=4)};var Yu=!1,Xu=!1,Gu="function"==typeof WeakSet?WeakSet:Set,Zu=null;function Ju(e,n){var t=e.ref;if(null!==t)if("function"==typeof t)try{t(null)}catch(t){xs(e,n,t)}else t.current=null}function ei(e,n,t){try{t()}catch(t){xs(e,n,t)}}var ni=!1;function ti(e,n,t){var r=n.updateQueue;if(null!==(r=null!==r?r.lastEffect:null)){var l=r=r.next;do{if((l.tag&e)===e){var a=l.destroy;l.destroy=void 0,void 0!==a&&ei(n,t,a)}l=l.next}while(l!==r)}}function ri(e,n){if(null!==(n=null!==(n=n.updateQueue)?n.lastEffect:null)){var t=n=n.next;do{if((t.tag&e)===e){var r=t.create;t.destroy=r()}t=t.next}while(t!==n)}}function li(e){var n=e.ref;if(null!==n){var t=e.stateNode;e.tag,e=t,"function"==typeof n?n(e):n.current=e}}function ai(e){var n=e.alternate;null!==n&&(e.alternate=null,ai(n)),e.child=null,e.deletions=null,e.sibling=null,5===e.tag&&null!==(n=e.stateNode)&&(delete n[dl],delete n[pl],delete n[ml],delete n[vl],delete n[gl]),e.stateNode=null,e.return=null,e.dependencies=null,e.memoizedProps=null,e.memoizedState=null,e.pendingProps=null,e.stateNode=null,e.updateQueue=null}function oi(e){return 5===e.tag||3===e.tag||4===e.tag}function ui(e){e:for(;;){for(;null===e.sibling;){if(null===e.return||oi(e.return))return null;e=e.return}for(e.sibling.return=e.return,e=e.sibling;5!==e.tag&&6!==e.tag&&18!==e.tag;){if(2&e.flags)continue e;if(null===e.child||4===e.tag)continue e;e.child.return=e,e=e.child}if(!(2&e.flags))return e.stateNode}}function ii(e,n,t){var r=e.tag;if(5===r||6===r)e=e.stateNode,n?8===t.nodeType?t.parentNode.insertBefore(e,n):t.insertBefore(e,n):(8===t.nodeType?(n=t.parentNode).insertBefore(e,t):(n=t).appendChild(e),null!=(t=t._reactRootContainer)||null!==n.onclick||(n.onclick=Jr));else if(4!==r&&null!==(e=e.child))for(ii(e,n,t),e=e.sibling;null!==e;)ii(e,n,t),e=e.sibling}function si(e,n,t){var r=e.tag;if(5===r||6===r)e=e.stateNode,n?t.insertBefore(e,n):t.appendChild(e);else if(4!==r&&null!==(e=e.child))for(si(e,n,t),e=e.sibling;null!==e;)si(e,n,t),e=e.sibling}var ci=null,fi=!1;function di(e,n,t){for(t=t.child;null!==t;)pi(e,n,t),t=t.sibling}function pi(e,n,t){if(an&&"function"==typeof an.onCommitFiberUnmount)try{an.onCommitFiberUnmount(ln,t)}catch(e){}switch(t.tag){case 5:Xu||Ju(t,n);case 6:var r=ci,l=fi;ci=null,di(e,n,t),fi=l,null!==(ci=r)&&(fi?(e=ci,t=t.stateNode,8===e.nodeType?e.parentNode.removeChild(t):e.removeChild(t)):ci.removeChild(t.stateNode));break;case 18:null!==ci&&(fi?(e=ci,t=t.stateNode,8===e.nodeType?il(e.parentNode,t):1===e.nodeType&&il(e,t),$n(e)):il(ci,t.stateNode));break;case 4:r=ci,l=fi,ci=t.stateNode.containerInfo,fi=!0,di(e,n,t),ci=r,fi=l;break;case 0:case 11:case 14:case 15:if(!Xu&&null!==(r=t.updateQueue)&&null!==(r=r.lastEffect)){l=r=r.next;do{var a=l,o=a.destroy;a=a.tag,void 0!==o&&(0!=(2&a)||0!=(4&a))&&ei(t,n,o),l=l.next}while(l!==r)}di(e,n,t);break;case 1:if(!Xu&&(Ju(t,n),"function"==typeof(r=t.stateNode).componentWillUnmount))try{r.props=t.memoizedProps,r.state=t.memoizedState,r.componentWillUnmount()}catch(e){xs(t,n,e)}di(e,n,t);break;case 21:di(e,n,t);break;case 22:1&t.mode?(Xu=(r=Xu)||null!==t.memoizedState,di(e,n,t),Xu=r):di(e,n,t);break;default:di(e,n,t)}}function hi(e){var n=e.updateQueue;if(null!==n){e.updateQueue=null;var t=e.stateNode;null===t&&(t=e.stateNode=new Gu),n.forEach((function(n){var r=Ns.bind(null,e,n);t.has(n)||(t.add(n),n.then(r,r))}))}}function mi(e,n){var t=n.deletions;if(null!==t)for(var r=0;r<t.length;r++){var l=t[r];try{var o=e,u=n,i=u;e:for(;null!==i;){switch(i.tag){case 5:ci=i.stateNode,fi=!1;break e;case 3:case 4:ci=i.stateNode.containerInfo,fi=!0;break e}i=i.return}if(null===ci)throw Error(a(160));pi(o,u,l),ci=null,fi=!1;var s=l.alternate;null!==s&&(s.return=null),l.return=null}catch(e){xs(l,n,e)}}if(12854&n.subtreeFlags)for(n=n.child;null!==n;)vi(n,e),n=n.sibling}function vi(e,n){var t=e.alternate,r=e.flags;switch(e.tag){case 0:case 11:case 14:case 15:if(mi(n,e),gi(e),4&r){try{ti(3,e,e.return),ri(3,e)}catch(n){xs(e,e.return,n)}try{ti(5,e,e.return)}catch(n){xs(e,e.return,n)}}break;case 1:mi(n,e),gi(e),512&r&&null!==t&&Ju(t,t.return);break;case 5:if(mi(n,e),gi(e),512&r&&null!==t&&Ju(t,t.return),32&e.flags){var l=e.stateNode;try{de(l,"")}catch(n){xs(e,e.return,n)}}if(4&r&&null!=(l=e.stateNode)){var o=e.memoizedProps,u=null!==t?t.memoizedProps:o,i=e.type,s=e.updateQueue;if(e.updateQueue=null,null!==s)try{"input"===i&&"radio"===o.type&&null!=o.name&&G(l,o),be(i,u);var c=be(i,o);for(u=0;u<s.length;u+=2){var f=s[u],d=s[u+1];"style"===f?ve(l,d):"dangerouslySetInnerHTML"===f?fe(l,d):"children"===f?de(l,d):b(l,f,d,c)}switch(i){case"input":Z(l,o);break;case"textarea":ae(l,o);break;case"select":var p=l._wrapperState.wasMultiple;l._wrapperState.wasMultiple=!!o.multiple;var h=o.value;null!=h?te(l,!!o.multiple,h,!1):p!==!!o.multiple&&(null!=o.defaultValue?te(l,!!o.multiple,o.defaultValue,!0):te(l,!!o.multiple,o.multiple?[]:"",!1))}l[pl]=o}catch(n){xs(e,e.return,n)}}break;case 6:if(mi(n,e),gi(e),4&r){if(null===e.stateNode)throw Error(a(162));l=e.stateNode,o=e.memoizedProps;try{l.nodeValue=o}catch(n){xs(e,e.return,n)}}break;case 3:if(mi(n,e),gi(e),4&r&&null!==t&&t.memoizedState.isDehydrated)try{$n(n.containerInfo)}catch(n){xs(e,e.return,n)}break;case 4:default:mi(n,e),gi(e);break;case 13:mi(n,e),gi(e),8192&(l=e.child).flags&&(o=null!==l.memoizedState,l.stateNode.isHidden=o,!o||null!==l.alternate&&null!==l.alternate.memoizedState||(Hi=Ge())),4&r&&hi(e);break;case 22:if(f=null!==t&&null!==t.memoizedState,1&e.mode?(Xu=(c=Xu)||f,mi(n,e),Xu=c):mi(n,e),gi(e),8192&r){if(c=null!==e.memoizedState,(e.stateNode.isHidden=c)&&!f&&0!=(1&e.mode))for(Zu=e,f=e.child;null!==f;){for(d=Zu=f;null!==Zu;){switch(h=(p=Zu).child,p.tag){case 0:case 11:case 14:case 15:ti(4,p,p.return);break;case 1:Ju(p,p.return);var m=p.stateNode;if("function"==typeof m.componentWillUnmount){r=p,t=p.return;try{n=r,m.props=n.memoizedProps,m.state=n.memoizedState,m.componentWillUnmount()}catch(e){xs(r,t,e)}}break;case 5:Ju(p,p.return);break;case 22:if(null!==p.memoizedState){ki(d);continue}}null!==h?(h.return=p,Zu=h):ki(d)}f=f.sibling}e:for(f=null,d=e;;){if(5===d.tag){if(null===f){f=d;try{l=d.stateNode,c?"function"==typeof(o=l.style).setProperty?o.setProperty("display","none","important"):o.display="none":(i=d.stateNode,u=null!=(s=d.memoizedProps.style)&&s.hasOwnProperty("display")?s.display:null,i.style.display=me("display",u))}catch(n){xs(e,e.return,n)}}}else if(6===d.tag){if(null===f)try{d.stateNode.nodeValue=c?"":d.memoizedProps}catch(n){xs(e,e.return,n)}}else if((22!==d.tag&&23!==d.tag||null===d.memoizedState||d===e)&&null!==d.child){d.child.return=d,d=d.child;continue}if(d===e)break e;for(;null===d.sibling;){if(null===d.return||d.return===e)break e;f===d&&(f=null),d=d.return}f===d&&(f=null),d.sibling.return=d.return,d=d.sibling}}break;case 19:mi(n,e),gi(e),4&r&&hi(e);case 21:}}function gi(e){var n=e.flags;if(2&n){try{e:{for(var t=e.return;null!==t;){if(oi(t)){var r=t;break e}t=t.return}throw Error(a(160))}switch(r.tag){case 5:var l=r.stateNode;32&r.flags&&(de(l,""),r.flags&=-33),si(e,ui(e),l);break;case 3:case 4:var o=r.stateNode.containerInfo;ii(e,ui(e),o);break;default:throw Error(a(161))}}catch(n){xs(e,e.return,n)}e.flags&=-3}4096&n&&(e.flags&=-4097)}function yi(e,n,t){Zu=e,bi(e,n,t)}function bi(e,n,t){for(var r=0!=(1&e.mode);null!==Zu;){var l=Zu,a=l.child;if(22===l.tag&&r){var o=null!==l.memoizedState||Yu;if(!o){var u=l.alternate,i=null!==u&&null!==u.memoizedState||Xu;u=Yu;var s=Xu;if(Yu=o,(Xu=i)&&!s)for(Zu=l;null!==Zu;)i=(o=Zu).child,22===o.tag&&null!==o.memoizedState?Si(l):null!==i?(i.return=o,Zu=i):Si(l);for(;null!==a;)Zu=a,bi(a,n,t),a=a.sibling;Zu=l,Yu=u,Xu=s}wi(e)}else 0!=(8772&l.subtreeFlags)&&null!==a?(a.return=l,Zu=a):wi(e)}}function wi(e){for(;null!==Zu;){var n=Zu;if(0!=(8772&n.flags)){var t=n.alternate;try{if(0!=(8772&n.flags))switch(n.tag){case 0:case 11:case 15:Xu||ri(5,n);break;case 1:var r=n.stateNode;if(4&n.flags&&!Xu)if(null===t)r.componentDidMount();else{var l=n.elementType===n.type?t.memoizedProps:va(n.type,t.memoizedProps);r.componentDidUpdate(l,t.memoizedState,r.__reactInternalSnapshotBeforeUpdate)}var o=n.updateQueue;null!==o&&Ua(n,o,r);break;case 3:var u=n.updateQueue;if(null!==u){if(t=null,null!==n.child)switch(n.child.tag){case 5:case 1:t=n.child.stateNode}Ua(n,u,t)}break;case 5:var i=n.stateNode;if(null===t&&4&n.flags){t=i;var s=n.memoizedProps;switch(n.type){case"button":case"input":case"select":case"textarea":s.autoFocus&&t.focus();break;case"img":s.src&&(t.src=s.src)}}break;case 6:case 4:case 12:case 19:case 17:case 21:case 22:case 23:case 25:break;case 13:if(null===n.memoizedState){var c=n.alternate;if(null!==c){var f=c.memoizedState;if(null!==f){var d=f.dehydrated;null!==d&&$n(d)}}}break;default:throw Error(a(163))}Xu||512&n.flags&&li(n)}catch(e){xs(n,n.return,e)}}if(n===e){Zu=null;break}if(null!==(t=n.sibling)){t.return=n.return,Zu=t;break}Zu=n.return}}function ki(e){for(;null!==Zu;){var n=Zu;if(n===e){Zu=null;break}var t=n.sibling;if(null!==t){t.return=n.return,Zu=t;break}Zu=n.return}}function Si(e){for(;null!==Zu;){var n=Zu;try{switch(n.tag){case 0:case 11:case 15:var t=n.return;try{ri(4,n)}catch(e){xs(n,t,e)}break;case 1:var r=n.stateNode;if("function"==typeof r.componentDidMount){var l=n.return;try{r.componentDidMount()}catch(e){xs(n,l,e)}}var a=n.return;try{li(n)}catch(e){xs(n,a,e)}break;case 5:var o=n.return;try{li(n)}catch(e){xs(n,o,e)}}}catch(e){xs(n,n.return,e)}if(n===e){Zu=null;break}var u=n.sibling;if(null!==u){u.return=n.return,Zu=u;break}Zu=n.return}}var Ei,xi=Math.ceil,_i=w.ReactCurrentDispatcher,Ci=w.ReactCurrentOwner,Pi=w.ReactCurrentBatchConfig,Ni=0,zi=null,Ti=null,Li=0,Oi=0,Di=xl(0),Ri=0,Ii=null,Mi=0,Fi=0,Ui=0,ji=null,Ai=null,Hi=0,Vi=1/0,$i=null,Bi=!1,Wi=null,Qi=null,qi=!1,Ki=null,Yi=0,Xi=0,Gi=null,Zi=-1,Ji=0;function es(){return 0!=(6&Ni)?Ge():-1!==Zi?Zi:Zi=Ge()}function ns(e){return 0==(1&e.mode)?1:0!=(2&Ni)&&0!==Li?Li&-Li:null!==ma.transition?(0===Ji&&(Ji=vn()),Ji):0!==(e=wn)?e:e=void 0===(e=window.event)?16:Gn(e.type)}function ts(e,n,t,r){if(50<Xi)throw Xi=0,Gi=null,Error(a(185));yn(e,t,r),0!=(2&Ni)&&e===zi||(e===zi&&(0==(2&Ni)&&(Fi|=t),4===Ri&&us(e,Li)),rs(e,r),1===t&&0===Ni&&0==(1&n.mode)&&(Vi=Ge()+500,jl&&Vl()))}function rs(e,n){var t=e.callbackNode;!function(e,n){for(var t=e.suspendedLanes,r=e.pingedLanes,l=e.expirationTimes,a=e.pendingLanes;0<a;){var o=31-on(a),u=1<<o,i=l[o];-1===i?0!=(u&t)&&0==(u&r)||(l[o]=hn(u,n)):i<=n&&(e.expiredLanes|=u),a&=~u}}(e,n);var r=pn(e,e===zi?Li:0);if(0===r)null!==t&&Ke(t),e.callbackNode=null,e.callbackPriority=0;else if(n=r&-r,e.callbackPriority!==n){if(null!=t&&Ke(t),1===n)0===e.tag?function(e){jl=!0,Hl(e)}(is.bind(null,e)):Hl(is.bind(null,e)),ol((function(){0==(6&Ni)&&Vl()})),t=null;else{switch(kn(r)){case 1:t=Je;break;case 4:t=en;break;case 16:default:t=nn;break;case 536870912:t=rn}t=zs(t,ls.bind(null,e))}e.callbackPriority=n,e.callbackNode=t}}function ls(e,n){if(Zi=-1,Ji=0,0!=(6&Ni))throw Error(a(327));var t=e.callbackNode;if(Ss()&&e.callbackNode!==t)return null;var r=pn(e,e===zi?Li:0);if(0===r)return null;if(0!=(30&r)||0!=(r&e.expiredLanes)||n)n=vs(e,r);else{n=r;var l=Ni;Ni|=2;var o=hs();for(zi===e&&Li===n||($i=null,Vi=Ge()+500,ds(e,n));;)try{ys();break}catch(n){ps(e,n)}ka(),_i.current=o,Ni=l,null!==Ti?n=0:(zi=null,Li=0,n=Ri)}if(0!==n){if(2===n&&0!==(l=mn(e))&&(r=l,n=as(e,l)),1===n)throw t=Ii,ds(e,0),us(e,r),rs(e,Ge()),t;if(6===n)us(e,r);else{if(l=e.current.alternate,0==(30&r)&&!function(e){for(var n=e;;){if(16384&n.flags){var t=n.updateQueue;if(null!==t&&null!==(t=t.stores))for(var r=0;r<t.length;r++){var l=t[r],a=l.getSnapshot;l=l.value;try{if(!ur(a(),l))return!1}catch(e){return!1}}}if(t=n.child,16384&n.subtreeFlags&&null!==t)t.return=n,n=t;else{if(n===e)break;for(;null===n.sibling;){if(null===n.return||n.return===e)return!0;n=n.return}n.sibling.return=n.return,n=n.sibling}}return!0}(l)&&(2===(n=vs(e,r))&&0!==(o=mn(e))&&(r=o,n=as(e,o)),1===n))throw t=Ii,ds(e,0),us(e,r),rs(e,Ge()),t;switch(e.finishedWork=l,e.finishedLanes=r,n){case 0:case 1:throw Error(a(345));case 2:case 5:ks(e,Ai,$i);break;case 3:if(us(e,r),(130023424&r)===r&&10<(n=Hi+500-Ge())){if(0!==pn(e,0))break;if(((l=e.suspendedLanes)&r)!==r){es(),e.pingedLanes|=e.suspendedLanes&l;break}e.timeoutHandle=rl(ks.bind(null,e,Ai,$i),n);break}ks(e,Ai,$i);break;case 4:if(us(e,r),(4194240&r)===r)break;for(n=e.eventTimes,l=-1;0<r;){var u=31-on(r);o=1<<u,(u=n[u])>l&&(l=u),r&=~o}if(r=l,10<(r=(120>(r=Ge()-r)?120:480>r?480:1080>r?1080:1920>r?1920:3e3>r?3e3:4320>r?4320:1960*xi(r/1960))-r)){e.timeoutHandle=rl(ks.bind(null,e,Ai,$i),r);break}ks(e,Ai,$i);break;default:throw Error(a(329))}}}return rs(e,Ge()),e.callbackNode===t?ls.bind(null,e):null}function as(e,n){var t=ji;return e.current.memoizedState.isDehydrated&&(ds(e,n).flags|=256),2!==(e=vs(e,n))&&(n=Ai,Ai=t,null!==n&&os(n)),e}function os(e){null===Ai?Ai=e:Ai.push.apply(Ai,e)}function us(e,n){for(n&=~Ui,n&=~Fi,e.suspendedLanes|=n,e.pingedLanes&=~n,e=e.expirationTimes;0<n;){var t=31-on(n),r=1<<t;e[t]=-1,n&=~r}}function is(e){if(0!=(6&Ni))throw Error(a(327));Ss();var n=pn(e,0);if(0==(1&n))return rs(e,Ge()),null;var t=vs(e,n);if(0!==e.tag&&2===t){var r=mn(e);0!==r&&(n=r,t=as(e,r))}if(1===t)throw t=Ii,ds(e,0),us(e,n),rs(e,Ge()),t;if(6===t)throw Error(a(345));return e.finishedWork=e.current.alternate,e.finishedLanes=n,ks(e,Ai,$i),rs(e,Ge()),null}function ss(e,n){var t=Ni;Ni|=1;try{return e(n)}finally{0===(Ni=t)&&(Vi=Ge()+500,jl&&Vl())}}function cs(e){null!==Ki&&0===Ki.tag&&0==(6&Ni)&&Ss();var n=Ni;Ni|=1;var t=Pi.transition,r=wn;try{if(Pi.transition=null,wn=1,e)return e()}finally{wn=r,Pi.transition=t,0==(6&(Ni=n))&&Vl()}}function fs(){Oi=Di.current,_l(Di)}function ds(e,n){e.finishedWork=null,e.finishedLanes=0;var t=e.timeoutHandle;if(-1!==t&&(e.timeoutHandle=-1,ll(t)),null!==Ti)for(t=Ti.return;null!==t;){var r=t;switch(na(r),r.tag){case 1:null!=(r=r.type.childContextTypes)&&Dl();break;case 3:lo(),_l(zl),_l(Nl),co();break;case 5:oo(r);break;case 4:lo();break;case 13:case 19:_l(uo);break;case 10:Sa(r.type._context);break;case 22:case 23:fs()}t=t.return}if(zi=e,Ti=e=Ds(e.current,null),Li=Oi=n,Ri=0,Ii=null,Ui=Fi=Mi=0,Ai=ji=null,null!==Ca){for(n=0;n<Ca.length;n++)if(null!==(r=(t=Ca[n]).interleaved)){t.interleaved=null;var l=r.next,a=t.pending;if(null!==a){var o=a.next;a.next=l,r.next=o}t.pending=r}Ca=null}return e}function ps(e,n){for(;;){var t=Ti;try{if(ka(),fo.current=ou,yo){for(var r=mo.memoizedState;null!==r;){var l=r.queue;null!==l&&(l.pending=null),r=r.next}yo=!1}if(ho=0,go=vo=mo=null,bo=!1,wo=0,Ci.current=null,null===t||null===t.return){Ri=1,Ii=n,Ti=null;break}e:{var o=e,u=t.return,i=t,s=n;if(n=Li,i.flags|=32768,null!==s&&"object"==typeof s&&"function"==typeof s.then){var c=s,f=i,d=f.tag;if(0==(1&f.mode)&&(0===d||11===d||15===d)){var p=f.alternate;p?(f.updateQueue=p.updateQueue,f.memoizedState=p.memoizedState,f.lanes=p.lanes):(f.updateQueue=null,f.memoizedState=null)}var h=gu(u);if(null!==h){h.flags&=-257,yu(h,u,i,0,n),1&h.mode&&vu(o,c,n),s=c;var m=(n=h).updateQueue;if(null===m){var v=new Set;v.add(s),n.updateQueue=v}else m.add(s);break e}if(0==(1&n)){vu(o,c,n),ms();break e}s=Error(a(426))}else if(la&&1&i.mode){var g=gu(u);if(null!==g){0==(65536&g.flags)&&(g.flags|=256),yu(g,u,i,0,n),ha(cu(s,i));break e}}o=s=cu(s,i),4!==Ri&&(Ri=2),null===ji?ji=[o]:ji.push(o),o=u;do{switch(o.tag){case 3:o.flags|=65536,n&=-n,o.lanes|=n,Ma(o,hu(0,s,n));break e;case 1:i=s;var y=o.type,b=o.stateNode;if(0==(128&o.flags)&&("function"==typeof y.getDerivedStateFromError||null!==b&&"function"==typeof b.componentDidCatch&&(null===Qi||!Qi.has(b)))){o.flags|=65536,n&=-n,o.lanes|=n,Ma(o,mu(o,i,n));break e}}o=o.return}while(null!==o)}ws(t)}catch(e){n=e,Ti===t&&null!==t&&(Ti=t=t.return);continue}break}}function hs(){var e=_i.current;return _i.current=ou,null===e?ou:e}function ms(){0!==Ri&&3!==Ri&&2!==Ri||(Ri=4),null===zi||0==(268435455&Mi)&&0==(268435455&Fi)||us(zi,Li)}function vs(e,n){var t=Ni;Ni|=2;var r=hs();for(zi===e&&Li===n||($i=null,ds(e,n));;)try{gs();break}catch(n){ps(e,n)}if(ka(),Ni=t,_i.current=r,null!==Ti)throw Error(a(261));return zi=null,Li=0,Ri}function gs(){for(;null!==Ti;)bs(Ti)}function ys(){for(;null!==Ti&&!Ye();)bs(Ti)}function bs(e){var n=Ei(e.alternate,e,Oi);e.memoizedProps=e.pendingProps,null===n?ws(e):Ti=n,Ci.current=null}function ws(e){var n=e;do{var t=n.alternate;if(e=n.return,0==(32768&n.flags)){if(null!==(t=qu(t,n,Oi)))return void(Ti=t)}else{if(null!==(t=Ku(t,n)))return t.flags&=32767,void(Ti=t);if(null===e)return Ri=6,void(Ti=null);e.flags|=32768,e.subtreeFlags=0,e.deletions=null}if(null!==(n=n.sibling))return void(Ti=n);Ti=n=e}while(null!==n);0===Ri&&(Ri=5)}function ks(e,n,t){var r=wn,l=Pi.transition;try{Pi.transition=null,wn=1,function(e,n,t,r){do{Ss()}while(null!==Ki);if(0!=(6&Ni))throw Error(a(327));t=e.finishedWork;var l=e.finishedLanes;if(null===t)return null;if(e.finishedWork=null,e.finishedLanes=0,t===e.current)throw Error(a(177));e.callbackNode=null,e.callbackPriority=0;var o=t.lanes|t.childLanes;if(function(e,n){var t=e.pendingLanes&~n;e.pendingLanes=n,e.suspendedLanes=0,e.pingedLanes=0,e.expiredLanes&=n,e.mutableReadLanes&=n,e.entangledLanes&=n,n=e.entanglements;var r=e.eventTimes;for(e=e.expirationTimes;0<t;){var l=31-on(t),a=1<<l;n[l]=0,r[l]=-1,e[l]=-1,t&=~a}}(e,o),e===zi&&(Ti=zi=null,Li=0),0==(2064&t.subtreeFlags)&&0==(2064&t.flags)||qi||(qi=!0,zs(nn,(function(){return Ss(),null}))),o=0!=(15990&t.flags),0!=(15990&t.subtreeFlags)||o){o=Pi.transition,Pi.transition=null;var u=wn;wn=1;var i=Ni;Ni|=4,Ci.current=null,function(e,n){if(el=Wn,pr(e=dr())){if("selectionStart"in e)var t={start:e.selectionStart,end:e.selectionEnd};else e:{var r=(t=(t=e.ownerDocument)&&t.defaultView||window).getSelection&&t.getSelection();if(r&&0!==r.rangeCount){t=r.anchorNode;var l=r.anchorOffset,o=r.focusNode;r=r.focusOffset;try{t.nodeType,o.nodeType}catch(e){t=null;break e}var u=0,i=-1,s=-1,c=0,f=0,d=e,p=null;n:for(;;){for(var h;d!==t||0!==l&&3!==d.nodeType||(i=u+l),d!==o||0!==r&&3!==d.nodeType||(s=u+r),3===d.nodeType&&(u+=d.nodeValue.length),null!==(h=d.firstChild);)p=d,d=h;for(;;){if(d===e)break n;if(p===t&&++c===l&&(i=u),p===o&&++f===r&&(s=u),null!==(h=d.nextSibling))break;p=(d=p).parentNode}d=h}t=-1===i||-1===s?null:{start:i,end:s}}else t=null}t=t||{start:0,end:0}}else t=null;for(nl={focusedElem:e,selectionRange:t},Wn=!1,Zu=n;null!==Zu;)if(e=(n=Zu).child,0!=(1028&n.subtreeFlags)&&null!==e)e.return=n,Zu=e;else for(;null!==Zu;){n=Zu;try{var m=n.alternate;if(0!=(1024&n.flags))switch(n.tag){case 0:case 11:case 15:case 5:case 6:case 4:case 17:break;case 1:if(null!==m){var v=m.memoizedProps,g=m.memoizedState,y=n.stateNode,b=y.getSnapshotBeforeUpdate(n.elementType===n.type?v:va(n.type,v),g);y.__reactInternalSnapshotBeforeUpdate=b}break;case 3:var w=n.stateNode.containerInfo;1===w.nodeType?w.textContent="":9===w.nodeType&&w.documentElement&&w.removeChild(w.documentElement);break;default:throw Error(a(163))}}catch(e){xs(n,n.return,e)}if(null!==(e=n.sibling)){e.return=n.return,Zu=e;break}Zu=n.return}m=ni,ni=!1}(e,t),vi(t,e),hr(nl),Wn=!!el,nl=el=null,e.current=t,yi(t,e,l),Xe(),Ni=i,wn=u,Pi.transition=o}else e.current=t;if(qi&&(qi=!1,Ki=e,Yi=l),0===(o=e.pendingLanes)&&(Qi=null),function(e){if(an&&"function"==typeof an.onCommitFiberRoot)try{an.onCommitFiberRoot(ln,e,void 0,128==(128&e.current.flags))}catch(e){}}(t.stateNode),rs(e,Ge()),null!==n)for(r=e.onRecoverableError,t=0;t<n.length;t++)r((l=n[t]).value,{componentStack:l.stack,digest:l.digest});if(Bi)throw Bi=!1,e=Wi,Wi=null,e;0!=(1&Yi)&&0!==e.tag&&Ss(),0!=(1&(o=e.pendingLanes))?e===Gi?Xi++:(Xi=0,Gi=e):Xi=0,Vl()}(e,n,t,r)}finally{Pi.transition=l,wn=r}return null}function Ss(){if(null!==Ki){var e=kn(Yi),n=Pi.transition,t=wn;try{if(Pi.transition=null,wn=16>e?16:e,null===Ki)var r=!1;else{if(e=Ki,Ki=null,Yi=0,0!=(6&Ni))throw Error(a(331));var l=Ni;for(Ni|=4,Zu=e.current;null!==Zu;){var o=Zu,u=o.child;if(0!=(16&Zu.flags)){var i=o.deletions;if(null!==i){for(var s=0;s<i.length;s++){var c=i[s];for(Zu=c;null!==Zu;){var f=Zu;switch(f.tag){case 0:case 11:case 15:ti(8,f,o)}var d=f.child;if(null!==d)d.return=f,Zu=d;else for(;null!==Zu;){var p=(f=Zu).sibling,h=f.return;if(ai(f),f===c){Zu=null;break}if(null!==p){p.return=h,Zu=p;break}Zu=h}}}var m=o.alternate;if(null!==m){var v=m.child;if(null!==v){m.child=null;do{var g=v.sibling;v.sibling=null,v=g}while(null!==v)}}Zu=o}}if(0!=(2064&o.subtreeFlags)&&null!==u)u.return=o,Zu=u;else e:for(;null!==Zu;){if(0!=(2048&(o=Zu).flags))switch(o.tag){case 0:case 11:case 15:ti(9,o,o.return)}var y=o.sibling;if(null!==y){y.return=o.return,Zu=y;break e}Zu=o.return}}var b=e.current;for(Zu=b;null!==Zu;){var w=(u=Zu).child;if(0!=(2064&u.subtreeFlags)&&null!==w)w.return=u,Zu=w;else e:for(u=b;null!==Zu;){if(0!=(2048&(i=Zu).flags))try{switch(i.tag){case 0:case 11:case 15:ri(9,i)}}catch(e){xs(i,i.return,e)}if(i===u){Zu=null;break e}var k=i.sibling;if(null!==k){k.return=i.return,Zu=k;break e}Zu=i.return}}if(Ni=l,Vl(),an&&"function"==typeof an.onPostCommitFiberRoot)try{an.onPostCommitFiberRoot(ln,e)}catch(e){}r=!0}return r}finally{wn=t,Pi.transition=n}}return!1}function Es(e,n,t){e=Ra(e,n=hu(0,n=cu(t,n),1),1),n=es(),null!==e&&(yn(e,1,n),rs(e,n))}function xs(e,n,t){if(3===e.tag)Es(e,e,t);else for(;null!==n;){if(3===n.tag){Es(n,e,t);break}if(1===n.tag){var r=n.stateNode;if("function"==typeof n.type.getDerivedStateFromError||"function"==typeof r.componentDidCatch&&(null===Qi||!Qi.has(r))){n=Ra(n,e=mu(n,e=cu(t,e),1),1),e=es(),null!==n&&(yn(n,1,e),rs(n,e));break}}n=n.return}}function _s(e,n,t){var r=e.pingCache;null!==r&&r.delete(n),n=es(),e.pingedLanes|=e.suspendedLanes&t,zi===e&&(Li&t)===t&&(4===Ri||3===Ri&&(130023424&Li)===Li&&500>Ge()-Hi?ds(e,0):Ui|=t),rs(e,n)}function Cs(e,n){0===n&&(0==(1&e.mode)?n=1:(n=fn,0==(130023424&(fn<<=1))&&(fn=4194304)));var t=es();null!==(e=za(e,n))&&(yn(e,n,t),rs(e,t))}function Ps(e){var n=e.memoizedState,t=0;null!==n&&(t=n.retryLane),Cs(e,t)}function Ns(e,n){var t=0;switch(e.tag){case 13:var r=e.stateNode,l=e.memoizedState;null!==l&&(t=l.retryLane);break;case 19:r=e.stateNode;break;default:throw Error(a(314))}null!==r&&r.delete(n),Cs(e,t)}function zs(e,n){return qe(e,n)}function Ts(e,n,t,r){this.tag=e,this.key=t,this.sibling=this.child=this.return=this.stateNode=this.type=this.elementType=null,this.index=0,this.ref=null,this.pendingProps=n,this.dependencies=this.memoizedState=this.updateQueue=this.memoizedProps=null,this.mode=r,this.subtreeFlags=this.flags=0,this.deletions=null,this.childLanes=this.lanes=0,this.alternate=null}function Ls(e,n,t,r){return new Ts(e,n,t,r)}function Os(e){return!(!(e=e.prototype)||!e.isReactComponent)}function Ds(e,n){var t=e.alternate;return null===t?((t=Ls(e.tag,n,e.key,e.mode)).elementType=e.elementType,t.type=e.type,t.stateNode=e.stateNode,t.alternate=e,e.alternate=t):(t.pendingProps=n,t.type=e.type,t.flags=0,t.subtreeFlags=0,t.deletions=null),t.flags=14680064&e.flags,t.childLanes=e.childLanes,t.lanes=e.lanes,t.child=e.child,t.memoizedProps=e.memoizedProps,t.memoizedState=e.memoizedState,t.updateQueue=e.updateQueue,n=e.dependencies,t.dependencies=null===n?null:{lanes:n.lanes,firstContext:n.firstContext},t.sibling=e.sibling,t.index=e.index,t.ref=e.ref,t}function Rs(e,n,t,r,l,o){var u=2;if(r=e,"function"==typeof e)Os(e)&&(u=1);else if("string"==typeof e)u=5;else e:switch(e){case E:return Is(t.children,l,o,n);case x:u=8,l|=8;break;case _:return(e=Ls(12,t,n,2|l)).elementType=_,e.lanes=o,e;case z:return(e=Ls(13,t,n,l)).elementType=z,e.lanes=o,e;case T:return(e=Ls(19,t,n,l)).elementType=T,e.lanes=o,e;case D:return Ms(t,l,o,n);default:if("object"==typeof e&&null!==e)switch(e.$$typeof){case C:u=10;break e;case P:u=9;break e;case N:u=11;break e;case L:u=14;break e;case O:u=16,r=null;break e}throw Error(a(130,null==e?e:typeof e,""))}return(n=Ls(u,t,n,l)).elementType=e,n.type=r,n.lanes=o,n}function Is(e,n,t,r){return(e=Ls(7,e,r,n)).lanes=t,e}function Ms(e,n,t,r){return(e=Ls(22,e,r,n)).elementType=D,e.lanes=t,e.stateNode={isHidden:!1},e}function Fs(e,n,t){return(e=Ls(6,e,null,n)).lanes=t,e}function Us(e,n,t){return(n=Ls(4,null!==e.children?e.children:[],e.key,n)).lanes=t,n.stateNode={containerInfo:e.containerInfo,pendingChildren:null,implementation:e.implementation},n}function js(e,n,t,r,l){this.tag=n,this.containerInfo=e,this.finishedWork=this.pingCache=this.current=this.pendingChildren=null,this.timeoutHandle=-1,this.callbackNode=this.pendingContext=this.context=null,this.callbackPriority=0,this.eventTimes=gn(0),this.expirationTimes=gn(-1),this.entangledLanes=this.finishedLanes=this.mutableReadLanes=this.expiredLanes=this.pingedLanes=this.suspendedLanes=this.pendingLanes=0,this.entanglements=gn(0),this.identifierPrefix=r,this.onRecoverableError=l,this.mutableSourceEagerHydrationData=null}function As(e,n,t,r,l,a,o,u,i){return e=new js(e,n,t,u,i),1===n?(n=1,!0===a&&(n|=8)):n=0,a=Ls(3,null,null,n),e.current=a,a.stateNode=e,a.memoizedState={element:r,isDehydrated:t,cache:null,transitions:null,pendingSuspenseBoundaries:null},La(a),e}function Hs(e,n,t){var r=3<arguments.length&&void 0!==arguments[3]?arguments[3]:null;return{$$typeof:S,key:null==r?null:""+r,children:e,containerInfo:n,implementation:t}}function Vs(e){if(!e)return Pl;e:{if(Ve(e=e._reactInternals)!==e||1!==e.tag)throw Error(a(170));var n=e;do{switch(n.tag){case 3:n=n.stateNode.context;break e;case 1:if(Ol(n.type)){n=n.stateNode.__reactInternalMemoizedMergedChildContext;break e}}n=n.return}while(null!==n);throw Error(a(171))}if(1===e.tag){var t=e.type;if(Ol(t))return Il(e,t,n)}return n}function $s(e,n,t,r,l,a,o,u,i){return(e=As(t,r,!0,e,0,a,0,u,i)).context=Vs(null),t=e.current,(a=Da(r=es(),l=ns(t))).callback=null!=n?n:null,Ra(t,a,l),e.current.lanes=l,yn(e,l,r),rs(e,r),e}function Bs(e,n,t,r){var l=n.current,a=es(),o=ns(l);return t=Vs(t),null===n.context?n.context=t:n.pendingContext=t,(n=Da(a,o)).payload={element:e},null!==(r=void 0===r?null:r)&&(n.callback=r),null!==(e=Ra(l,n,o))&&(ts(e,l,o,a),Ia(e,l,o)),o}function Ws(e){return(e=e.current).child?(e.child.tag,e.child.stateNode):null}function Qs(e,n){if(null!==(e=e.memoizedState)&&null!==e.dehydrated){var t=e.retryLane;e.retryLane=0!==t&&t<n?t:n}}function qs(e,n){Qs(e,n),(e=e.alternate)&&Qs(e,n)}Ei=function(e,n,t){if(null!==e)if(e.memoizedProps!==n.pendingProps||zl.current)wu=!0;else{if(0==(e.lanes&t)&&0==(128&n.flags))return wu=!1,function(e,n,t){switch(n.tag){case 3:Tu(n),pa();break;case 5:ao(n);break;case 1:Ol(n.type)&&Ml(n);break;case 4:ro(n,n.stateNode.containerInfo);break;case 10:var r=n.type._context,l=n.memoizedProps.value;Cl(ga,r._currentValue),r._currentValue=l;break;case 13:if(null!==(r=n.memoizedState))return null!==r.dehydrated?(Cl(uo,1&uo.current),n.flags|=128,null):0!=(t&n.child.childLanes)?Fu(e,n,t):(Cl(uo,1&uo.current),null!==(e=Bu(e,n,t))?e.sibling:null);Cl(uo,1&uo.current);break;case 19:if(r=0!=(t&n.childLanes),0!=(128&e.flags)){if(r)return Vu(e,n,t);n.flags|=128}if(null!==(l=n.memoizedState)&&(l.rendering=null,l.tail=null,l.lastEffect=null),Cl(uo,uo.current),r)break;return null;case 22:case 23:return n.lanes=0,_u(e,n,t)}return Bu(e,n,t)}(e,n,t);wu=0!=(131072&e.flags)}else wu=!1,la&&0!=(1048576&n.flags)&&Jl(n,Ql,n.index);switch(n.lanes=0,n.tag){case 2:var r=n.type;$u(e,n),e=n.pendingProps;var l=Ll(n,Nl.current);xa(n,t),l=xo(null,n,r,e,l,t);var o=_o();return n.flags|=1,"object"==typeof l&&null!==l&&"function"==typeof l.render&&void 0===l.$$typeof?(n.tag=1,n.memoizedState=null,n.updateQueue=null,Ol(r)?(o=!0,Ml(n)):o=!1,n.memoizedState=null!==l.state&&void 0!==l.state?l.state:null,La(n),l.updater=Ha,n.stateNode=l,l._reactInternals=n,Wa(n,r,e,t),n=zu(null,n,r,!0,o,t)):(n.tag=0,la&&o&&ea(n),ku(null,n,l,t),n=n.child),n;case 16:r=n.elementType;e:{switch($u(e,n),e=n.pendingProps,r=(l=r._init)(r._payload),n.type=r,l=n.tag=function(e){if("function"==typeof e)return Os(e)?1:0;if(null!=e){if((e=e.$$typeof)===N)return 11;if(e===L)return 14}return 2}(r),e=va(r,e),l){case 0:n=Pu(null,n,r,e,t);break e;case 1:n=Nu(null,n,r,e,t);break e;case 11:n=Su(null,n,r,e,t);break e;case 14:n=Eu(null,n,r,va(r.type,e),t);break e}throw Error(a(306,r,""))}return n;case 0:return r=n.type,l=n.pendingProps,Pu(e,n,r,l=n.elementType===r?l:va(r,l),t);case 1:return r=n.type,l=n.pendingProps,Nu(e,n,r,l=n.elementType===r?l:va(r,l),t);case 3:e:{if(Tu(n),null===e)throw Error(a(387));r=n.pendingProps,l=(o=n.memoizedState).element,Oa(e,n),Fa(n,r,null,t);var u=n.memoizedState;if(r=u.element,o.isDehydrated){if(o={element:r,isDehydrated:!1,cache:u.cache,pendingSuspenseBoundaries:u.pendingSuspenseBoundaries,transitions:u.transitions},n.updateQueue.baseState=o,n.memoizedState=o,256&n.flags){n=Lu(e,n,r,t,l=cu(Error(a(423)),n));break e}if(r!==l){n=Lu(e,n,r,t,l=cu(Error(a(424)),n));break e}for(ra=sl(n.stateNode.containerInfo.firstChild),ta=n,la=!0,aa=null,t=Ga(n,null,r,t),n.child=t;t;)t.flags=-3&t.flags|4096,t=t.sibling}else{if(pa(),r===l){n=Bu(e,n,t);break e}ku(e,n,r,t)}n=n.child}return n;case 5:return ao(n),null===e&&sa(n),r=n.type,l=n.pendingProps,o=null!==e?e.memoizedProps:null,u=l.children,tl(r,l)?u=null:null!==o&&tl(r,o)&&(n.flags|=32),Cu(e,n),ku(e,n,u,t),n.child;case 6:return null===e&&sa(n),null;case 13:return Fu(e,n,t);case 4:return ro(n,n.stateNode.containerInfo),r=n.pendingProps,null===e?n.child=Xa(n,null,r,t):ku(e,n,r,t),n.child;case 11:return r=n.type,l=n.pendingProps,Su(e,n,r,l=n.elementType===r?l:va(r,l),t);case 7:return ku(e,n,n.pendingProps,t),n.child;case 8:case 12:return ku(e,n,n.pendingProps.children,t),n.child;case 10:e:{if(r=n.type._context,l=n.pendingProps,o=n.memoizedProps,u=l.value,Cl(ga,r._currentValue),r._currentValue=u,null!==o)if(ur(o.value,u)){if(o.children===l.children&&!zl.current){n=Bu(e,n,t);break e}}else for(null!==(o=n.child)&&(o.return=n);null!==o;){var i=o.dependencies;if(null!==i){u=o.child;for(var s=i.firstContext;null!==s;){if(s.context===r){if(1===o.tag){(s=Da(-1,t&-t)).tag=2;var c=o.updateQueue;if(null!==c){var f=(c=c.shared).pending;null===f?s.next=s:(s.next=f.next,f.next=s),c.pending=s}}o.lanes|=t,null!==(s=o.alternate)&&(s.lanes|=t),Ea(o.return,t,n),i.lanes|=t;break}s=s.next}}else if(10===o.tag)u=o.type===n.type?null:o.child;else if(18===o.tag){if(null===(u=o.return))throw Error(a(341));u.lanes|=t,null!==(i=u.alternate)&&(i.lanes|=t),Ea(u,t,n),u=o.sibling}else u=o.child;if(null!==u)u.return=o;else for(u=o;null!==u;){if(u===n){u=null;break}if(null!==(o=u.sibling)){o.return=u.return,u=o;break}u=u.return}o=u}ku(e,n,l.children,t),n=n.child}return n;case 9:return l=n.type,r=n.pendingProps.children,xa(n,t),r=r(l=_a(l)),n.flags|=1,ku(e,n,r,t),n.child;case 14:return l=va(r=n.type,n.pendingProps),Eu(e,n,r,l=va(r.type,l),t);case 15:return xu(e,n,n.type,n.pendingProps,t);case 17:return r=n.type,l=n.pendingProps,l=n.elementType===r?l:va(r,l),$u(e,n),n.tag=1,Ol(r)?(e=!0,Ml(n)):e=!1,xa(n,t),$a(n,r,l),Wa(n,r,l,t),zu(null,n,r,!0,e,t);case 19:return Vu(e,n,t);case 22:return _u(e,n,t)}throw Error(a(156,n.tag))};var Ks="function"==typeof reportError?reportError:function(e){console.error(e)};function Ys(e){this._internalRoot=e}function Xs(e){this._internalRoot=e}function Gs(e){return!(!e||1!==e.nodeType&&9!==e.nodeType&&11!==e.nodeType)}function Zs(e){return!(!e||1!==e.nodeType&&9!==e.nodeType&&11!==e.nodeType&&(8!==e.nodeType||" react-mount-point-unstable "!==e.nodeValue))}function Js(){}function ec(e,n,t,r,l){var a=t._reactRootContainer;if(a){var o=a;if("function"==typeof l){var u=l;l=function(){var e=Ws(o);u.call(e)}}Bs(n,o,e,l)}else o=function(e,n,t,r,l){if(l){if("function"==typeof r){var a=r;r=function(){var e=Ws(o);a.call(e)}}var o=$s(n,r,e,0,null,!1,0,"",Js);return e._reactRootContainer=o,e[hl]=o.current,Vr(8===e.nodeType?e.parentNode:e),cs(),o}for(;l=e.lastChild;)e.removeChild(l);if("function"==typeof r){var u=r;r=function(){var e=Ws(i);u.call(e)}}var i=As(e,0,!1,null,0,!1,0,"",Js);return e._reactRootContainer=i,e[hl]=i.current,Vr(8===e.nodeType?e.parentNode:e),cs((function(){Bs(n,i,t,r)})),i}(t,n,e,l,r);return Ws(o)}Xs.prototype.render=Ys.prototype.render=function(e){var n=this._internalRoot;if(null===n)throw Error(a(409));Bs(e,n,null,null)},Xs.prototype.unmount=Ys.prototype.unmount=function(){var e=this._internalRoot;if(null!==e){this._internalRoot=null;var n=e.containerInfo;cs((function(){Bs(null,e,null,null)})),n[hl]=null}},Xs.prototype.unstable_scheduleHydration=function(e){if(e){var n=_n();e={blockedOn:null,target:e,priority:n};for(var t=0;t<Rn.length&&0!==n&&n<Rn[t].priority;t++);Rn.splice(t,0,e),0===t&&Un(e)}},Sn=function(e){switch(e.tag){case 3:var n=e.stateNode;if(n.current.memoizedState.isDehydrated){var t=dn(n.pendingLanes);0!==t&&(bn(n,1|t),rs(n,Ge()),0==(6&Ni)&&(Vi=Ge()+500,Vl()))}break;case 13:cs((function(){var n=za(e,1);if(null!==n){var t=es();ts(n,e,1,t)}})),qs(e,1)}},En=function(e){if(13===e.tag){var n=za(e,134217728);null!==n&&ts(n,e,134217728,es()),qs(e,134217728)}},xn=function(e){if(13===e.tag){var n=ns(e),t=za(e,n);null!==t&&ts(t,e,n,es()),qs(e,n)}},_n=function(){return wn},Cn=function(e,n){var t=wn;try{return wn=e,n()}finally{wn=t}},Se=function(e,n,t){switch(n){case"input":if(Z(e,t),n=t.name,"radio"===t.type&&null!=n){for(t=e;t.parentNode;)t=t.parentNode;for(t=t.querySelectorAll("input[name="+JSON.stringify(""+n)+'][type="radio"]'),n=0;n<t.length;n++){var r=t[n];if(r!==e&&r.form===e.form){var l=kl(r);if(!l)throw Error(a(90));q(r),Z(r,l)}}}break;case"textarea":ae(e,t);break;case"select":null!=(n=t.value)&&te(e,!!t.multiple,n,!1)}},Ne=ss,ze=cs;var nc={usingClientEntryPoint:!1,Events:[bl,wl,kl,Ce,Pe,ss]},tc={findFiberByHostInstance:yl,bundleType:0,version:"18.2.0",rendererPackageName:"react-dom"},rc={bundleType:tc.bundleType,version:tc.version,rendererPackageName:tc.rendererPackageName,rendererConfig:tc.rendererConfig,overrideHookState:null,overrideHookStateDeletePath:null,overrideHookStateRenamePath:null,overrideProps:null,overridePropsDeletePath:null,overridePropsRenamePath:null,setErrorHandler:null,setSuspenseHandler:null,scheduleUpdate:null,currentDispatcherRef:w.ReactCurrentDispatcher,findHostInstanceByFiber:function(e){return null===(e=We(e))?null:e.stateNode},findFiberByHostInstance:tc.findFiberByHostInstance||function(){return null},findHostInstancesForRefresh:null,scheduleRefresh:null,scheduleRoot:null,setRefreshHandler:null,getCurrentFiber:null,reconcilerVersion:"18.2.0-next-9e3b772b8-20220608"};if("undefined"!=typeof __REACT_DEVTOOLS_GLOBAL_HOOK__){var lc=__REACT_DEVTOOLS_GLOBAL_HOOK__;if(!lc.isDisabled&&lc.supportsFiber)try{ln=lc.inject(rc),an=lc}catch(ce){}}n.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED=nc,n.createPortal=function(e,n){var t=2<arguments.length&&void 0!==arguments[2]?arguments[2]:null;if(!Gs(n))throw Error(a(200));return Hs(e,n,null,t)},n.createRoot=function(e,n){if(!Gs(e))throw Error(a(299));var t=!1,r="",l=Ks;return null!=n&&(!0===n.unstable_strictMode&&(t=!0),void 0!==n.identifierPrefix&&(r=n.identifierPrefix),void 0!==n.onRecoverableError&&(l=n.onRecoverableError)),n=As(e,1,!1,null,0,t,0,r,l),e[hl]=n.current,Vr(8===e.nodeType?e.parentNode:e),new Ys(n)},n.findDOMNode=function(e){if(null==e)return null;if(1===e.nodeType)return e;var n=e._reactInternals;if(void 0===n){if("function"==typeof e.render)throw Error(a(188));throw e=Object.keys(e).join(","),Error(a(268,e))}return null===(e=We(n))?null:e.stateNode},n.flushSync=function(e){return cs(e)},n.hydrate=function(e,n,t){if(!Zs(n))throw Error(a(200));return ec(null,e,n,!0,t)},n.hydrateRoot=function(e,n,t){if(!Gs(e))throw Error(a(405));var r=null!=t&&t.hydratedSources||null,l=!1,o="",u=Ks;if(null!=t&&(!0===t.unstable_strictMode&&(l=!0),void 0!==t.identifierPrefix&&(o=t.identifierPrefix),void 0!==t.onRecoverableError&&(u=t.onRecoverableError)),n=$s(n,null,e,1,null!=t?t:null,l,0,o,u),e[hl]=n.current,Vr(e),r)for(e=0;e<r.length;e++)l=(l=(t=r[e])._getVersion)(t._source),null==n.mutableSourceEagerHydrationData?n.mutableSourceEagerHydrationData=[t,l]:n.mutableSourceEagerHydrationData.push(t,l);return new Xs(n)},n.render=function(e,n,t){if(!Zs(n))throw Error(a(200));return ec(null,e,n,!1,t)},n.unmountComponentAtNode=function(e){if(!Zs(e))throw Error(a(40));return!!e._reactRootContainer&&(cs((function(){ec(null,null,e,!1,(function(){e._reactRootContainer=null,e[hl]=null}))})),!0)},n.unstable_batchedUpdates=ss,n.unstable_renderSubtreeIntoContainer=function(e,n,t,r){if(!Zs(t))throw Error(a(200));if(null==e||void 0===e._reactInternals)throw Error(a(38));return ec(e,n,t,!1,r)},n.version="18.2.0-next-9e3b772b8-20220608"},745:(e,n,t)=>{var r=t(935);n.createRoot=r.createRoot,n.hydrateRoot=r.hydrateRoot},935:(e,n,t)=>{!function e(){if("undefined"!=typeof __REACT_DEVTOOLS_GLOBAL_HOOK__&&"function"==typeof __REACT_DEVTOOLS_GLOBAL_HOOK__.checkDCE)try{__REACT_DEVTOOLS_GLOBAL_HOOK__.checkDCE(e)}catch(e){console.error(e)}}(),e.exports=t(448)},408:(e,n)=>{var t=Symbol.for("react.element"),r=Symbol.for("react.portal"),l=Symbol.for("react.fragment"),a=Symbol.for("react.strict_mode"),o=Symbol.for("react.profiler"),u=Symbol.for("react.provider"),i=Symbol.for("react.context"),s=Symbol.for("react.forward_ref"),c=Symbol.for("react.suspense"),f=Symbol.for("react.memo"),d=Symbol.for("react.lazy"),p=Symbol.iterator,h={isMounted:function(){return!1},enqueueForceUpdate:function(){},enqueueReplaceState:function(){},enqueueSetState:function(){}},m=Object.assign,v={};function g(e,n,t){this.props=e,this.context=n,this.refs=v,this.updater=t||h}function y(){}function b(e,n,t){this.props=e,this.context=n,this.refs=v,this.updater=t||h}g.prototype.isReactComponent={},g.prototype.setState=function(e,n){if("object"!=typeof e&&"function"!=typeof e&&null!=e)throw Error("setState(...): takes an object of state variables to update or a function which returns an object of state variables.");this.updater.enqueueSetState(this,e,n,"setState")},g.prototype.forceUpdate=function(e){this.updater.enqueueForceUpdate(this,e,"forceUpdate")},y.prototype=g.prototype;var w=b.prototype=new y;w.constructor=b,m(w,g.prototype),w.isPureReactComponent=!0;var k=Array.isArray,S=Object.prototype.hasOwnProperty,E={current:null},x={key:!0,ref:!0,__self:!0,__source:!0};function _(e,n,r){var l,a={},o=null,u=null;if(null!=n)for(l in void 0!==n.ref&&(u=n.ref),void 0!==n.key&&(o=""+n.key),n)S.call(n,l)&&!x.hasOwnProperty(l)&&(a[l]=n[l]);var i=arguments.length-2;if(1===i)a.children=r;else if(1<i){for(var s=Array(i),c=0;c<i;c++)s[c]=arguments[c+2];a.children=s}if(e&&e.defaultProps)for(l in i=e.defaultProps)void 0===a[l]&&(a[l]=i[l]);return{$$typeof:t,type:e,key:o,ref:u,props:a,_owner:E.current}}function C(e){return"object"==typeof e&&null!==e&&e.$$typeof===t}var P=/\/+/g;function N(e,n){return"object"==typeof e&&null!==e&&null!=e.key?function(e){var n={"=":"=0",":":"=2"};return"$"+e.replace(/[=:]/g,(function(e){return n[e]}))}(""+e.key):n.toString(36)}function z(e,n,l,a,o){var u=typeof e;"undefined"!==u&&"boolean"!==u||(e=null);var i=!1;if(null===e)i=!0;else switch(u){case"string":case"number":i=!0;break;case"object":switch(e.$$typeof){case t:case r:i=!0}}if(i)return o=o(i=e),e=""===a?"."+N(i,0):a,k(o)?(l="",null!=e&&(l=e.replace(P,"$&/")+"/"),z(o,n,l,"",(function(e){return e}))):null!=o&&(C(o)&&(o=function(e,n){return{$$typeof:t,type:e.type,key:n,ref:e.ref,props:e.props,_owner:e._owner}}(o,l+(!o.key||i&&i.key===o.key?"":(""+o.key).replace(P,"$&/")+"/")+e)),n.push(o)),1;if(i=0,a=""===a?".":a+":",k(e))for(var s=0;s<e.length;s++){var c=a+N(u=e[s],s);i+=z(u,n,l,c,o)}else if(c=function(e){return null===e||"object"!=typeof e?null:"function"==typeof(e=p&&e[p]||e["@@iterator"])?e:null}(e),"function"==typeof c)for(e=c.call(e),s=0;!(u=e.next()).done;)i+=z(u=u.value,n,l,c=a+N(u,s++),o);else if("object"===u)throw n=String(e),Error("Objects are not valid as a React child (found: "+("[object Object]"===n?"object with keys {"+Object.keys(e).join(", ")+"}":n)+"). If you meant to render a collection of children, use an array instead.");return i}function T(e,n,t){if(null==e)return e;var r=[],l=0;return z(e,r,"","",(function(e){return n.call(t,e,l++)})),r}function L(e){if(-1===e._status){var n=e._result;(n=n()).then((function(n){0!==e._status&&-1!==e._status||(e._status=1,e._result=n)}),(function(n){0!==e._status&&-1!==e._status||(e._status=2,e._result=n)})),-1===e._status&&(e._status=0,e._result=n)}if(1===e._status)return e._result.default;throw e._result}var O={current:null},D={transition:null},R={ReactCurrentDispatcher:O,ReactCurrentBatchConfig:D,ReactCurrentOwner:E};n.Children={map:T,forEach:function(e,n,t){T(e,(function(){n.apply(this,arguments)}),t)},count:function(e){var n=0;return T(e,(function(){n++})),n},toArray:function(e){return T(e,(function(e){return e}))||[]},only:function(e){if(!C(e))throw Error("React.Children.only expected to receive a single React element child.");return e}},n.Component=g,n.Fragment=l,n.Profiler=o,n.PureComponent=b,n.StrictMode=a,n.Suspense=c,n.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED=R,n.cloneElement=function(e,n,r){if(null==e)throw Error("React.cloneElement(...): The argument must be a React element, but you passed "+e+".");var l=m({},e.props),a=e.key,o=e.ref,u=e._owner;if(null!=n){if(void 0!==n.ref&&(o=n.ref,u=E.current),void 0!==n.key&&(a=""+n.key),e.type&&e.type.defaultProps)var i=e.type.defaultProps;for(s in n)S.call(n,s)&&!x.hasOwnProperty(s)&&(l[s]=void 0===n[s]&&void 0!==i?i[s]:n[s])}var s=arguments.length-2;if(1===s)l.children=r;else if(1<s){i=Array(s);for(var c=0;c<s;c++)i[c]=arguments[c+2];l.children=i}return{$$typeof:t,type:e.type,key:a,ref:o,props:l,_owner:u}},n.createContext=function(e){return(e={$$typeof:i,_currentValue:e,_currentValue2:e,_threadCount:0,Provider:null,Consumer:null,_defaultValue:null,_globalName:null}).Provider={$$typeof:u,_context:e},e.Consumer=e},n.createElement=_,n.createFactory=function(e){var n=_.bind(null,e);return n.type=e,n},n.createRef=function(){return{current:null}},n.forwardRef=function(e){return{$$typeof:s,render:e}},n.isValidElement=C,n.lazy=function(e){return{$$typeof:d,_payload:{_status:-1,_result:e},_init:L}},n.memo=function(e,n){return{$$typeof:f,type:e,compare:void 0===n?null:n}},n.startTransition=function(e){var n=D.transition;D.transition={};try{e()}finally{D.transition=n}},n.unstable_act=function(){throw Error("act(...) is not supported in production builds of React.")},n.useCallback=function(e,n){return O.current.useCallback(e,n)},n.useContext=function(e){return O.current.useContext(e)},n.useDebugValue=function(){},n.useDeferredValue=function(e){return O.current.useDeferredValue(e)},n.useEffect=function(e,n){return O.current.useEffect(e,n)},n.useId=function(){return O.current.useId()},n.useImperativeHandle=function(e,n,t){return O.current.useImperativeHandle(e,n,t)},n.useInsertionEffect=function(e,n){return O.current.useInsertionEffect(e,n)},n.useLayoutEffect=function(e,n){return O.current.useLayoutEffect(e,n)},n.useMemo=function(e,n){return O.current.useMemo(e,n)},n.useReducer=function(e,n,t){return O.current.useReducer(e,n,t)},n.useRef=function(e){return O.current.useRef(e)},n.useState=function(e){return O.current.useState(e)},n.useSyncExternalStore=function(e,n,t){return O.current.useSyncExternalStore(e,n,t)},n.useTransition=function(){return O.current.useTransition()},n.version="18.2.0"},294:(e,n,t)=>{e.exports=t(408)},53:(e,n)=>{function t(e,n){var t=e.length;e.push(n);e:for(;0<t;){var r=t-1>>>1,l=e[r];if(!(0<a(l,n)))break e;e[r]=n,e[t]=l,t=r}}function r(e){return 0===e.length?null:e[0]}function l(e){if(0===e.length)return null;var n=e[0],t=e.pop();if(t!==n){e[0]=t;e:for(var r=0,l=e.length,o=l>>>1;r<o;){var u=2*(r+1)-1,i=e[u],s=u+1,c=e[s];if(0>a(i,t))s<l&&0>a(c,i)?(e[r]=c,e[s]=t,r=s):(e[r]=i,e[u]=t,r=u);else{if(!(s<l&&0>a(c,t)))break e;e[r]=c,e[s]=t,r=s}}}return n}function a(e,n){var t=e.sortIndex-n.sortIndex;return 0!==t?t:e.id-n.id}if("object"==typeof performance&&"function"==typeof performance.now){var o=performance;n.unstable_now=function(){return o.now()}}else{var u=Date,i=u.now();n.unstable_now=function(){return u.now()-i}}var s=[],c=[],f=1,d=null,p=3,h=!1,m=!1,v=!1,g="function"==typeof setTimeout?setTimeout:null,y="function"==typeof clearTimeout?clearTimeout:null,b="undefined"!=typeof setImmediate?setImmediate:null;function w(e){for(var n=r(c);null!==n;){if(null===n.callback)l(c);else{if(!(n.startTime<=e))break;l(c),n.sortIndex=n.expirationTime,t(s,n)}n=r(c)}}function k(e){if(v=!1,w(e),!m)if(null!==r(s))m=!0,D(S);else{var n=r(c);null!==n&&R(k,n.startTime-e)}}function S(e,t){m=!1,v&&(v=!1,y(C),C=-1),h=!0;var a=p;try{for(w(t),d=r(s);null!==d&&(!(d.expirationTime>t)||e&&!z());){var o=d.callback;if("function"==typeof o){d.callback=null,p=d.priorityLevel;var u=o(d.expirationTime<=t);t=n.unstable_now(),"function"==typeof u?d.callback=u:d===r(s)&&l(s),w(t)}else l(s);d=r(s)}if(null!==d)var i=!0;else{var f=r(c);null!==f&&R(k,f.startTime-t),i=!1}return i}finally{d=null,p=a,h=!1}}"undefined"!=typeof navigator&&void 0!==navigator.scheduling&&void 0!==navigator.scheduling.isInputPending&&navigator.scheduling.isInputPending.bind(navigator.scheduling);var E,x=!1,_=null,C=-1,P=5,N=-1;function z(){return!(n.unstable_now()-N<P)}function T(){if(null!==_){var e=n.unstable_now();N=e;var t=!0;try{t=_(!0,e)}finally{t?E():(x=!1,_=null)}}else x=!1}if("function"==typeof b)E=function(){b(T)};else if("undefined"!=typeof MessageChannel){var L=new MessageChannel,O=L.port2;L.port1.onmessage=T,E=function(){O.postMessage(null)}}else E=function(){g(T,0)};function D(e){_=e,x||(x=!0,E())}function R(e,t){C=g((function(){e(n.unstable_now())}),t)}n.unstable_IdlePriority=5,n.unstable_ImmediatePriority=1,n.unstable_LowPriority=4,n.unstable_NormalPriority=3,n.unstable_Profiling=null,n.unstable_UserBlockingPriority=2,n.unstable_cancelCallback=function(e){e.callback=null},n.unstable_continueExecution=function(){m||h||(m=!0,D(S))},n.unstable_forceFrameRate=function(e){0>e||125<e?console.error("forceFrameRate takes a positive int between 0 and 125, forcing frame rates higher than 125 fps is not supported"):P=0<e?Math.floor(1e3/e):5},n.unstable_getCurrentPriorityLevel=function(){return p},n.unstable_getFirstCallbackNode=function(){return r(s)},n.unstable_next=function(e){switch(p){case 1:case 2:case 3:var n=3;break;default:n=p}var t=p;p=n;try{return e()}finally{p=t}},n.unstable_pauseExecution=function(){},n.unstable_requestPaint=function(){},n.unstable_runWithPriority=function(e,n){switch(e){case 1:case 2:case 3:case 4:case 5:break;default:e=3}var t=p;p=e;try{return n()}finally{p=t}},n.unstable_scheduleCallback=function(e,l,a){var o=n.unstable_now();switch(a="object"==typeof a&&null!==a&&"number"==typeof(a=a.delay)&&0<a?o+a:o,e){case 1:var u=-1;break;case 2:u=250;break;case 5:u=1073741823;break;case 4:u=1e4;break;default:u=5e3}return e={id:f++,callback:l,priorityLevel:e,startTime:a,expirationTime:u=a+u,sortIndex:-1},a>o?(e.sortIndex=a,t(c,e),null===r(s)&&e===r(c)&&(v?(y(C),C=-1):v=!0,R(k,a-o))):(e.sortIndex=u,t(s,e),m||h||(m=!0,D(S))),e},n.unstable_shouldYield=z,n.unstable_wrapCallback=function(e){var n=p;return function(){var t=p;p=n;try{return e.apply(this,arguments)}finally{p=t}}}},840:(e,n,t)=>{e.exports=t(53)}},c={};function f(e){var n=c[e];if(void 0!==n){if(void 0!==n.error)throw n.error;return n.exports}var t=c[e]={exports:{}};try{var r={id:e,module:t,factory:s[e],require:f};f.i.forEach((function(e){e(r)})),t=r.module,r.factory.call(t.exports,t,t.exports,r.require)}catch(e){throw t.error=e,e}return t.exports}f.m=s,f.c=c,f.i=[],n=Object.getPrototypeOf?e=>Object.getPrototypeOf(e):e=>e.__proto__,f.t=function(t,r){if(1&r&&(t=this(t)),8&r)return t;if("object"==typeof t&&t){if(4&r&&t.__esModule)return t;if(16&r&&"function"==typeof t.then)return t}var l=Object.create(null);f.r(l);var a={};e=e||[null,n({}),n([]),n(n)];for(var o=2&r&&t;"object"==typeof o&&!~e.indexOf(o);o=n(o))Object.getOwnPropertyNames(o).forEach((e=>a[e]=()=>t[e]));return a.default=()=>t,f.d(l,a),l},f.d=(e,n)=>{for(var t in n)f.o(n,t)&&!f.o(e,t)&&Object.defineProperty(e,t,{enumerable:!0,get:n[t]})},f.hu=e=>e+"."+f.h()+".hot-update.js",f.miniCssF=e=>{},f.hmrF=()=>"main."+f.h()+".hot-update.json",f.h=()=>"cc541cbc657e58b76558",f.g=function(){if("object"==typeof globalThis)return globalThis;try{return this||new Function("return this")()}catch(e){if("object"==typeof window)return window}}(),f.o=(e,n)=>Object.prototype.hasOwnProperty.call(e,n),t={},r="test:",f.l=(e,n,l,a)=>{if(t[e])t[e].push(n);else{var o,u;if(void 0!==l)for(var i=document.getElementsByTagName("script"),s=0;s<i.length;s++){var c=i[s];if(c.getAttribute("src")==e||c.getAttribute("data-webpack")==r+l){o=c;break}}o||(u=!0,(o=document.createElement("script")).charset="utf-8",o.timeout=120,f.nc&&o.setAttribute("nonce",f.nc),o.setAttribute("data-webpack",r+l),o.src=e),t[e]=[n];var d=(n,r)=>{o.onerror=o.onload=null,clearTimeout(p);var l=t[e];if(delete t[e],o.parentNode&&o.parentNode.removeChild(o),l&&l.forEach((e=>e(r))),n)return n(r)},p=setTimeout(d.bind(null,void 0,{type:"timeout",target:o}),12e4);o.onerror=d.bind(null,o.onerror),o.onload=d.bind(null,o.onload),u&&document.head.appendChild(o)}},f.r=e=>{"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(e,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(e,"__esModule",{value:!0})},(()=>{var e,n,t,r={},l=f.c,a=[],o=[],u="idle",i=0,s=[];function c(e){u=e;for(var n=[],t=0;t<o.length;t++)n[t]=o[t].call(null,e);return Promise.all(n)}function d(){0==--i&&c("ready").then((function(){if(0===i){var e=s;s=[];for(var n=0;n<e.length;n++)e[n]()}}))}function p(e){if("idle"!==u)throw new Error("check() is only allowed in idle status");return c("check").then(f.hmrM).then((function(t){return t?c("prepare").then((function(){var r=[];return n=[],Promise.all(Object.keys(f.hmrC).reduce((function(e,l){return f.hmrC[l](t.c,t.r,t.m,e,n,r),e}),[])).then((function(){return n=function(){return e?m(e):c("ready").then((function(){return r}))},0===i?n():new Promise((function(e){s.push((function(){e(n())}))}));var n}))})):c(v()?"ready":"idle").then((function(){return null}))}))}function h(e){return"ready"!==u?Promise.resolve().then((function(){throw new Error("apply() is only allowed in ready status (state: "+u+")")})):m(e)}function m(e){e=e||{},v();var r=n.map((function(n){return n(e)}));n=void 0;var l=r.map((function(e){return e.error})).filter(Boolean);if(l.length>0)return c("abort").then((function(){throw l[0]}));var a=c("dispose");r.forEach((function(e){e.dispose&&e.dispose()}));var o,u=c("apply"),i=function(e){o||(o=e)},s=[];return r.forEach((function(e){if(e.apply){var n=e.apply(i);if(n)for(var t=0;t<n.length;t++)s.push(n[t])}})),Promise.all([a,u]).then((function(){return o?c("fail").then((function(){throw o})):t?m(e).then((function(e){return s.forEach((function(n){e.indexOf(n)<0&&e.push(n)})),e})):c("idle").then((function(){return s}))}))}function v(){if(t)return n||(n=[]),Object.keys(f.hmrI).forEach((function(e){t.forEach((function(t){f.hmrI[e](t,n)}))})),t=void 0,!0}f.hmrD=r,f.i.push((function(s){var m,v,g,y,b=s.module,w=function(n,t){var r=l[t];if(!r)return n;var o=function(o){if(r.hot.active){if(l[o]){var u=l[o].parents;-1===u.indexOf(t)&&u.push(t)}else a=[t],e=o;-1===r.children.indexOf(o)&&r.children.push(o)}else console.warn("[HMR] unexpected require("+o+") from disposed module "+t),a=[];return n(o)},s=function(e){return{configurable:!0,enumerable:!0,get:function(){return n[e]},set:function(t){n[e]=t}}};for(var f in n)Object.prototype.hasOwnProperty.call(n,f)&&"e"!==f&&Object.defineProperty(o,f,s(f));return o.e=function(e){return function(e){switch(u){case"ready":c("prepare");case"prepare":return i++,e.then(d,d),e;default:return e}}(n.e(e))},o}(s.require,s.id);b.hot=(m=s.id,v=b,y={_acceptedDependencies:{},_acceptedErrorHandlers:{},_declinedDependencies:{},_selfAccepted:!1,_selfDeclined:!1,_selfInvalidated:!1,_disposeHandlers:[],_main:g=e!==m,_requireSelf:function(){a=v.parents.slice(),e=g?void 0:m,f(m)},active:!0,accept:function(e,n,t){if(void 0===e)y._selfAccepted=!0;else if("function"==typeof e)y._selfAccepted=e;else if("object"==typeof e&&null!==e)for(var r=0;r<e.length;r++)y._acceptedDependencies[e[r]]=n||function(){},y._acceptedErrorHandlers[e[r]]=t;else y._acceptedDependencies[e]=n||function(){},y._acceptedErrorHandlers[e]=t},decline:function(e){if(void 0===e)y._selfDeclined=!0;else if("object"==typeof e&&null!==e)for(var n=0;n<e.length;n++)y._declinedDependencies[e[n]]=!0;else y._declinedDependencies[e]=!0},dispose:function(e){y._disposeHandlers.push(e)},addDisposeHandler:function(e){y._disposeHandlers.push(e)},removeDisposeHandler:function(e){var n=y._disposeHandlers.indexOf(e);n>=0&&y._disposeHandlers.splice(n,1)},invalidate:function(){switch(this._selfInvalidated=!0,u){case"idle":n=[],Object.keys(f.hmrI).forEach((function(e){f.hmrI[e](m,n)})),c("ready");break;case"ready":Object.keys(f.hmrI).forEach((function(e){f.hmrI[e](m,n)}));break;case"prepare":case"check":case"dispose":case"apply":(t=t||[]).push(m)}},check:p,apply:h,status:function(e){if(!e)return u;o.push(e)},addStatusHandler:function(e){o.push(e)},removeStatusHandler:function(e){var n=o.indexOf(e);n>=0&&o.splice(n,1)},data:r[m]},e=void 0,y),b.parents=a,b.children=[],a=[],s.require=w})),f.hmrC={},f.hmrI={}})(),(()=>{var e;f.g.importScripts&&(e=f.g.location+"");var n=f.g.document;if(!e&&n&&(n.currentScript&&(e=n.currentScript.src),!e)){var t=n.getElementsByTagName("script");t.length&&(e=t[t.length-1].src)}if(!e)throw new Error("Automatic publicPath is not supported in this browser");e=e.replace(/#.*$/,"").replace(/\?.*$/,"").replace(/\/[^\/]+$/,"/"),f.p=e})(),l=(e,n,t,r)=>{var l=document.createElement("link");return l.rel="stylesheet",l.type="text/css",l.onerror=l.onload=a=>{if(l.onerror=l.onload=null,"load"===a.type)t();else{var o=a&&("load"===a.type?"missing":a.type),u=a&&a.target&&a.target.href||n,i=new Error("Loading CSS chunk "+e+" failed.\n("+u+")");i.code="CSS_CHUNK_LOAD_FAILED",i.type=o,i.request=u,l.parentNode.removeChild(l),r(i)}},l.href=n,document.head.appendChild(l),l},a=(e,n)=>{for(var t=document.getElementsByTagName("link"),r=0;r<t.length;r++){var l=(o=t[r]).getAttribute("data-href")||o.getAttribute("href");if("stylesheet"===o.rel&&(l===e||l===n))return o}var a=document.getElementsByTagName("style");for(r=0;r<a.length;r++){var o;if((l=(o=a[r]).getAttribute("data-href"))===e||l===n)return o}},o=[],u=[],i=e=>({dispose:()=>{for(var e=0;e<o.length;e++){var n=o[e];n.parentNode&&n.parentNode.removeChild(n)}o.length=0},apply:()=>{for(var e=0;e<u.length;e++)u[e].rel="stylesheet";u.length=0}}),f.hmrC.miniCss=(e,n,t,r,s,c)=>{s.push(i),e.forEach((e=>{var n=f.miniCssF(e),t=f.p+n,i=a(n,t);i&&r.push(new Promise(((n,r)=>{var a=l(e,t,(()=>{a.as="style",a.rel="preload",n()}),r);o.push(i),u.push(a)})))}))},(()=>{var e,n,t,r,l,a=f.hmrS_jsonp=f.hmrS_jsonp||{179:0},o={};function u(n,t){return e=t,new Promise(((e,t)=>{o[n]=e;var r=f.p+f.hu(n),l=new Error;f.l(r,(e=>{if(o[n]){o[n]=void 0;var r=e&&("load"===e.type?"missing":e.type),a=e&&e.target&&e.target.src;l.message="Loading hot update chunk "+n+" failed.\n("+r+": "+a+")",l.name="ChunkLoadError",l.type=r,l.request=a,t(l)}}))}))}function i(e){function o(e){for(var n=[e],t={},r=n.map((function(e){return{chain:[e],id:e}}));r.length>0;){var l=r.pop(),a=l.id,o=l.chain,i=f.c[a];if(i&&(!i.hot._selfAccepted||i.hot._selfInvalidated)){if(i.hot._selfDeclined)return{type:"self-declined",chain:o,moduleId:a};if(i.hot._main)return{type:"unaccepted",chain:o,moduleId:a};for(var s=0;s<i.parents.length;s++){var c=i.parents[s],d=f.c[c];if(d){if(d.hot._declinedDependencies[a])return{type:"declined",chain:o.concat([c]),moduleId:a,parentId:c};-1===n.indexOf(c)&&(d.hot._acceptedDependencies[a]?(t[c]||(t[c]=[]),u(t[c],[a])):(delete t[c],n.push(c),r.push({chain:o.concat([c]),id:c})))}}}}return{type:"accepted",moduleId:e,outdatedModules:n,outdatedDependencies:t}}function u(e,n){for(var t=0;t<n.length;t++){var r=n[t];-1===e.indexOf(r)&&e.push(r)}}f.f&&delete f.f.jsonpHmr,n=void 0;var i={},s=[],c={},d=function(e){console.warn("[HMR] unexpected require("+e.id+") to disposed module")};for(var p in t)if(f.o(t,p)){var h,m=t[p],v=!1,g=!1,y=!1,b="";switch((h=m?o(p):{type:"disposed",moduleId:p}).chain&&(b="\nUpdate propagation: "+h.chain.join(" -> ")),h.type){case"self-declined":e.onDeclined&&e.onDeclined(h),e.ignoreDeclined||(v=new Error("Aborted because of self decline: "+h.moduleId+b));break;case"declined":e.onDeclined&&e.onDeclined(h),e.ignoreDeclined||(v=new Error("Aborted because of declined dependency: "+h.moduleId+" in "+h.parentId+b));break;case"unaccepted":e.onUnaccepted&&e.onUnaccepted(h),e.ignoreUnaccepted||(v=new Error("Aborted because "+p+" is not accepted"+b));break;case"accepted":e.onAccepted&&e.onAccepted(h),g=!0;break;case"disposed":e.onDisposed&&e.onDisposed(h),y=!0;break;default:throw new Error("Unexception type "+h.type)}if(v)return{error:v};if(g)for(p in c[p]=m,u(s,h.outdatedModules),h.outdatedDependencies)f.o(h.outdatedDependencies,p)&&(i[p]||(i[p]=[]),u(i[p],h.outdatedDependencies[p]));y&&(u(s,[h.moduleId]),c[p]=d)}t=void 0;for(var w,k=[],S=0;S<s.length;S++){var E=s[S],x=f.c[E];x&&(x.hot._selfAccepted||x.hot._main)&&c[E]!==d&&!x.hot._selfInvalidated&&k.push({module:E,require:x.hot._requireSelf,errorHandler:x.hot._selfAccepted})}return{dispose:function(){var e;r.forEach((function(e){delete a[e]})),r=void 0;for(var n,t=s.slice();t.length>0;){var l=t.pop(),o=f.c[l];if(o){var u={},c=o.hot._disposeHandlers;for(S=0;S<c.length;S++)c[S].call(null,u);for(f.hmrD[l]=u,o.hot.active=!1,delete f.c[l],delete i[l],S=0;S<o.children.length;S++){var d=f.c[o.children[S]];d&&(e=d.parents.indexOf(l))>=0&&d.parents.splice(e,1)}}}for(var p in i)if(f.o(i,p)&&(o=f.c[p]))for(w=i[p],S=0;S<w.length;S++)n=w[S],(e=o.children.indexOf(n))>=0&&o.children.splice(e,1)},apply:function(n){for(var t in c)f.o(c,t)&&(f.m[t]=c[t]);for(var r=0;r<l.length;r++)l[r](f);for(var a in i)if(f.o(i,a)){var o=f.c[a];if(o){w=i[a];for(var u=[],d=[],p=[],h=0;h<w.length;h++){var m=w[h],v=o.hot._acceptedDependencies[m],g=o.hot._acceptedErrorHandlers[m];if(v){if(-1!==u.indexOf(v))continue;u.push(v),d.push(g),p.push(m)}}for(var y=0;y<u.length;y++)try{u[y].call(null,w)}catch(t){if("function"==typeof d[y])try{d[y](t,{moduleId:a,dependencyId:p[y]})}catch(r){e.onErrored&&e.onErrored({type:"accept-error-handler-errored",moduleId:a,dependencyId:p[y],error:r,originalError:t}),e.ignoreErrored||(n(r),n(t))}else e.onErrored&&e.onErrored({type:"accept-errored",moduleId:a,dependencyId:p[y],error:t}),e.ignoreErrored||n(t)}}}for(var b=0;b<k.length;b++){var S=k[b],E=S.module;try{S.require(E)}catch(t){if("function"==typeof S.errorHandler)try{S.errorHandler(t,{moduleId:E,module:f.c[E]})}catch(r){e.onErrored&&e.onErrored({type:"self-accept-error-handler-errored",moduleId:E,error:r,originalError:t}),e.ignoreErrored||(n(r),n(t))}else e.onErrored&&e.onErrored({type:"self-accept-errored",moduleId:E,error:t}),e.ignoreErrored||n(t)}}return s}}}self.webpackHotUpdatetest=(n,r,a)=>{for(var u in r)f.o(r,u)&&(t[u]=r[u],e&&e.push(u));a&&l.push(a),o[n]&&(o[n](),o[n]=void 0)},f.hmrI.jsonp=function(e,n){t||(t={},l=[],r=[],n.push(i)),f.o(t,e)||(t[e]=f.m[e])},f.hmrC.jsonp=function(e,o,s,c,d,p){d.push(i),n={},r=o,t=s.reduce((function(e,n){return e[n]=!1,e}),{}),l=[],e.forEach((function(e){f.o(a,e)&&void 0!==a[e]?(c.push(u(e,p)),n[e]=!0):n[e]=!1})),f.f&&(f.f.jsonpHmr=function(e,t){n&&f.o(n,e)&&!n[e]&&(t.push(u(e)),n[e]=!0)})},f.hmrM=()=>{if("undefined"==typeof fetch)throw new Error("No browser support: need fetch API");return fetch(f.p+f.hmrF()).then((e=>{if(404!==e.status){if(!e.ok)throw new Error("Failed to fetch update manifest "+e.statusText);return e.json()}}))}})(),f(791)})();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,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QUFVL0gsRUFBUzhDLEdBRWxEK0QsR0FDQS9ILEVBQW9CZ0IsRUFBRStHLEVBQXFCN0csS0FDMUM2RyxFQUFvQjdHLEtBRXJCOEMsRUFBUzNqQyxLQUFLaW9DLEVBQWdCcEgsSUFDOUI2RyxFQUFvQjdHLElBQVcsRUFFakMsRUFFRixFQUVBbEIsRUFBb0IyRCxLQUFPLEtBQzFCLEdBQXFCLG9CQUFWdUgsTUFBdUIsTUFBTSxJQUFJMy9DLE1BQU0sc0NBQ2xELE9BQU8yL0MsTUFBTWxMLEVBQW9CNXVDLEVBQUk0dUMsRUFBb0JvQixRQUFRNXdDLE1BQU0yNkMsSUFDdEUsR0FBdUIsTUFBcEJBLEVBQVN2N0MsT0FBWixDQUNBLElBQUl1N0MsRUFBU3hYLEdBQUksTUFBTSxJQUFJcG9DLE1BQU0sbUNBQXFDNC9DLEVBQVNDLFlBQy9FLE9BQU9ELEVBQVNFLE1BRmtCLENBRVosR0FDckIsTUN0ZnVCckwsRUFBb0IiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly90ZXN0L3dlYnBhY2svcnVudGltZS9jcmVhdGUgZmFrZSBuYW1lc3BhY2Ugb2JqZWN0Iiwid2VicGFjazovL3Rlc3Qvd2VicGFjay9ydW50aW1lL2xvYWQgc2NyaXB0Iiwid2VicGFjazovL3Rlc3Qvd2VicGFjay9ydW50aW1lL2NzcyBsb2FkaW5nIiwid2VicGFjazovL3Rlc3QvLi9ub2RlX21vZHVsZXMvQHJlbWl4LXJ1bi9yb3V0ZXIvZGlzdC9yb3V0ZXIuanMiLCJ3ZWJwYWNrOi8vdGVzdC8uL3NyYy9yb3V0ZXIvaW5kZXgudHMiLCJ3ZWJwYWNrOi8vdGVzdC8uL3NyYy9hcHAudHN4Iiwid2VicGFjazovL3Rlc3QvLi9zcmMvcGFnZXMvSG9tZS9pbmRleC50c3giLCJ3ZWJwYWNrOi8vdGVzdC8uL3NyYy9wYWdlcy9BYm91dC9pbmRleC50c3giLCJ3ZWJwYWNrOi8vdGVzdC8uL25vZGVfbW9kdWxlcy9yZWFjdC1yb3V0ZXIvZGlzdC9pbmRleC5qcyIsIndlYnBhY2s6Ly90ZXN0Ly4vc3JjL2luZGV4LnRzeCIsIndlYnBhY2s6Ly90ZXN0Ly4vbm9kZV9tb2R1bGVzL3JlYWN0LWRvbS9janMvcmVhY3QtZG9tLnByb2R1Y3Rpb24ubWluLmpzIiwid2VicGFjazovL3Rlc3QvLi9ub2RlX21vZHVsZXMvcmVhY3QtZG9tL2NsaWVudC5qcyIsIndlYnBhY2s6Ly90ZXN0Ly4vbm9kZV9tb2R1bGVzL3JlYWN0LWRvbS9pbmRleC5qcyIsIndlYnBhY2s6Ly90ZXN0Ly4vbm9kZV9tb2R1bGVzL3JlYWN0L2Nqcy9yZWFjdC5wcm9kdWN0aW9uLm1pbi5qcyIsIndlYnBhY2s6Ly90ZXN0Ly4vbm9kZV9tb2R1bGVzL3JlYWN0L2luZGV4LmpzIiwid2VicGFjazovL3Rlc3QvLi9ub2RlX21vZHVsZXMvc2NoZWR1bGVyL2Nqcy9zY2hlZHVsZXIucHJvZHVjdGlvbi5taW4uanMiLCJ3ZWJwYWNrOi8vdGVzdC8uL25vZGVfbW9kdWxlcy9zY2hlZHVsZXIvaW5kZXguanMiLCJ3ZWJwYWNrOi8vdGVzdC93ZWJwYWNrL2Jvb3RzdHJhcCIsIndlYnBhY2s6Ly90ZXN0L3dlYnBhY2svcnVudGltZS9kZWZpbmUgcHJvcGVydHkgZ2V0dGVycyIsIndlYnBhY2s6Ly90ZXN0L3dlYnBhY2svcnVudGltZS9nZXQgamF2YXNjcmlwdCB1cGRhdGUgY2h1bmsgZmlsZW5hbWUiLCJ3ZWJwYWNrOi8vdGVzdC93ZWJwYWNrL3J1bnRpbWUvZ2V0IG1pbmktY3NzIGNodW5rIGZpbGVuYW1lIiwid2VicGFjazovL3Rlc3Qvd2VicGFjay9ydW50aW1lL2dldCB1cGRhdGUgbWFuaWZlc3QgZmlsZW5hbWUiLCJ3ZWJwYWNrOi8vdGVzdC93ZWJwYWNrL3J1bnRpbWUvZ2V0RnVsbEhhc2giLCJ3ZWJwYWNrOi8vdGVzdC93ZWJwYWNrL3J1bnRpbWUvZ2xvYmFsIiwid2VicGFjazovL3Rlc3Qvd2VicGFjay9ydW50aW1lL2hhc093blByb3BlcnR5IHNob3J0aGFuZCIsIndlYnBhY2s6Ly90ZXN0L3dlYnBhY2svcnVudGltZS9tYWtlIG5hbWVzcGFjZSBvYmplY3QiLCJ3ZWJwYWNrOi8vdGVzdC93ZWJwYWNrL3J1bnRpbWUvaG90IG1vZHVsZSByZXBsYWNlbWVudCIsIndlYnBhY2s6Ly90ZXN0L3dlYnBhY2svcnVudGltZS9wdWJsaWNQYXRoIiwid2VicGFjazovL3Rlc3Qvd2VicGFjay9ydW50aW1lL2pzb25wIGNodW5rIGxvYWRpbmciLCJ3ZWJwYWNrOi8vdGVzdC93ZWJwYWNrL3N0YXJ0dXAiXSwic291cmNlc0NvbnRlbnQiOlsidmFyIGdldFByb3RvID0gT2JqZWN0LmdldFByb3RvdHlwZU9mID8gKG9iaikgPT4gKE9iamVjdC5nZXRQcm90b3R5cGVPZihvYmopKSA6IChvYmopID0+IChvYmouX19wcm90b19fKTtcbnZhciBsZWFmUHJvdG90eXBlcztcbi8vIGNyZWF0ZSBhIGZha2UgbmFtZXNwYWNlIG9iamVjdFxuLy8gbW9kZSAmIDE6IHZhbHVlIGlzIGEgbW9kdWxlIGlkLCByZXF1aXJlIGl0XG4vLyBtb2RlICYgMjogbWVyZ2UgYWxsIHByb3BlcnRpZXMgb2YgdmFsdWUgaW50byB0aGUgbnNcbi8vIG1vZGUgJiA0OiByZXR1cm4gdmFsdWUgd2hlbiBhbHJlYWR5IG5zIG9iamVjdFxuLy8gbW9kZSAmIDE2OiByZXR1cm4gdmFsdWUgd2hlbiBpdCdzIFByb21pc2UtbGlrZVxuLy8gbW9kZSAmIDh8MTogYmVoYXZlIGxpa2UgcmVxdWlyZVxuX193ZWJwYWNrX3JlcXVpcmVfXy50ID0gZnVuY3Rpb24odmFsdWUsIG1vZGUpIHtcblx0aWYobW9kZSAmIDEpIHZhbHVlID0gdGhpcyh2YWx1ZSk7XG5cdGlmKG1vZGUgJiA4KSByZXR1cm4gdmFsdWU7XG5cdGlmKHR5cGVvZiB2YWx1ZSA9PT0gJ29iamVjdCcgJiYgdmFsdWUpIHtcblx0XHRpZigobW9kZSAmIDQpICYmIHZhbHVlLl9fZXNNb2R1bGUpIHJldHVybiB2YWx1ZTtcblx0XHRpZigobW9kZSAmIDE2KSAmJiB0eXBlb2YgdmFsdWUudGhlbiA9PT0gJ2Z1bmN0aW9uJykgcmV0dXJuIHZhbHVlO1xuXHR9XG5cdHZhciBucyA9IE9iamVjdC5jcmVhdGUobnVsbCk7XG5cdF9fd2VicGFja19yZXF1aXJlX18ucihucyk7XG5cdHZhciBkZWYgPSB7fTtcblx0bGVhZlByb3RvdHlwZXMgPSBsZWFmUHJvdG90eXBlcyB8fCBbbnVsbCwgZ2V0UHJvdG8oe30pLCBnZXRQcm90byhbXSksIGdldFByb3RvKGdldFByb3RvKV07XG5cdGZvcih2YXIgY3VycmVudCA9IG1vZGUgJiAyICYmIHZhbHVlOyB0eXBlb2YgY3VycmVudCA9PSAnb2JqZWN0JyAmJiAhfmxlYWZQcm90b3R5cGVzLmluZGV4T2YoY3VycmVudCk7IGN1cnJlbnQgPSBnZXRQcm90byhjdXJyZW50KSkge1xuXHRcdE9iamVjdC5nZXRPd25Qcm9wZXJ0eU5hbWVzKGN1cnJlbnQpLmZvckVhY2goKGtleSkgPT4gKGRlZltrZXldID0gKCkgPT4gKHZhbHVlW2tleV0pKSk7XG5cdH1cblx0ZGVmWydkZWZhdWx0J10gPSAoKSA9PiAodmFsdWUpO1xuXHRfX3dlYnBhY2tfcmVxdWlyZV9fLmQobnMsIGRlZik7XG5cdHJldHVybiBucztcbn07IiwidmFyIGluUHJvZ3Jlc3MgPSB7fTtcbnZhciBkYXRhV2VicGFja1ByZWZpeCA9IFwidGVzdDpcIjtcbi8vIGxvYWRTY3JpcHQgZnVuY3Rpb24gdG8gbG9hZCBhIHNjcmlwdCB2aWEgc2NyaXB0IHRhZ1xuX193ZWJwYWNrX3JlcXVpcmVfXy5sID0gKHVybCwgZG9uZSwga2V5LCBjaHVua0lkKSA9PiB7XG5cdGlmKGluUHJvZ3Jlc3NbdXJsXSkgeyBpblByb2dyZXNzW3VybF0ucHVzaChkb25lKTsgcmV0dXJuOyB9XG5cdHZhciBzY3JpcHQsIG5lZWRBdHRhY2g7XG5cdGlmKGtleSAhPT0gdW5kZWZpbmVkKSB7XG5cdFx0dmFyIHNjcmlwdHMgPSBkb2N1bWVudC5nZXRFbGVtZW50c0J5VGFnTmFtZShcInNjcmlwdFwiKTtcblx0XHRmb3IodmFyIGkgPSAwOyBpIDwgc2NyaXB0cy5sZW5ndGg7IGkrKykge1xuXHRcdFx0dmFyIHMgPSBzY3JpcHRzW2ldO1xuXHRcdFx0aWYocy5nZXRBdHRyaWJ1dGUoXCJzcmNcIikgPT0gdXJsIHx8IHMuZ2V0QXR0cmlidXRlKFwiZGF0YS13ZWJwYWNrXCIpID09IGRhdGFXZWJwYWNrUHJlZml4ICsga2V5KSB7IHNjcmlwdCA9IHM7IGJyZWFrOyB9XG5cdFx0fVxuXHR9XG5cdGlmKCFzY3JpcHQpIHtcblx0XHRuZWVkQXR0YWNoID0gdHJ1ZTtcblx0XHRzY3JpcHQgPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KCdzY3JpcHQnKTtcblxuXHRcdHNjcmlwdC5jaGFyc2V0ID0gJ3V0Zi04Jztcblx0XHRzY3JpcHQudGltZW91dCA9IDEyMDtcblx0XHRpZiAoX193ZWJwYWNrX3JlcXVpcmVfXy5uYykge1xuXHRcdFx0c2NyaXB0LnNldEF0dHJpYnV0ZShcIm5vbmNlXCIsIF9fd2VicGFja19yZXF1aXJlX18ubmMpO1xuXHRcdH1cblx0XHRzY3JpcHQuc2V0QXR0cmlidXRlKFwiZGF0YS13ZWJwYWNrXCIsIGRhdGFXZWJwYWNrUHJlZml4ICsga2V5KTtcblx0XHRzY3JpcHQuc3JjID0gdXJsO1xuXHR9XG5cdGluUHJvZ3Jlc3NbdXJsXSA9IFtkb25lXTtcblx0dmFyIG9uU2NyaXB0Q29tcGxldGUgPSAocHJldiwgZXZlbnQpID0+IHtcblx0XHQvLyBhdm9pZCBtZW0gbGVha3MgaW4gSUUuXG5cdFx0c2NyaXB0Lm9uZXJyb3IgPSBzY3JpcHQub25sb2FkID0gbnVsbDtcblx0XHRjbGVhclRpbWVvdXQodGltZW91dCk7XG5cdFx0dmFyIGRvbmVGbnMgPSBpblByb2dyZXNzW3VybF07XG5cdFx0ZGVsZXRlIGluUHJvZ3Jlc3NbdXJsXTtcblx0XHRzY3JpcHQucGFyZW50Tm9kZSAmJiBzY3JpcHQucGFyZW50Tm9kZS5yZW1vdmVDaGlsZChzY3JpcHQpO1xuXHRcdGRvbmVGbnMgJiYgZG9uZUZucy5mb3JFYWNoKChmbikgPT4gKGZuKGV2ZW50KSkpO1xuXHRcdGlmKHByZXYpIHJldHVybiBwcmV2KGV2ZW50KTtcblx0fVxuXHQ7XG5cdHZhciB0aW1lb3V0ID0gc2V0VGltZW91dChvblNjcmlwdENvbXBsZXRlLmJpbmQobnVsbCwgdW5kZWZpbmVkLCB7IHR5cGU6ICd0aW1lb3V0JywgdGFyZ2V0OiBzY3JpcHQgfSksIDEyMDAwMCk7XG5cdHNjcmlwdC5vbmVycm9yID0gb25TY3JpcHRDb21wbGV0ZS5iaW5kKG51bGwsIHNjcmlwdC5vbmVycm9yKTtcblx0c2NyaXB0Lm9ubG9hZCA9IG9uU2NyaXB0Q29tcGxldGUuYmluZChudWxsLCBzY3JpcHQub25sb2FkKTtcblx0bmVlZEF0dGFjaCAmJiBkb2N1bWVudC5oZWFkLmFwcGVuZENoaWxkKHNjcmlwdCk7XG59OyIsInZhciBjcmVhdGVTdHlsZXNoZWV0ID0gKGNodW5rSWQsIGZ1bGxocmVmLCByZXNvbHZlLCByZWplY3QpID0+IHtcblx0dmFyIGxpbmtUYWcgPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KFwibGlua1wiKTtcblxuXHRsaW5rVGFnLnJlbCA9IFwic3R5bGVzaGVldFwiO1xuXHRsaW5rVGFnLnR5cGUgPSBcInRleHQvY3NzXCI7XG5cdHZhciBvbkxpbmtDb21wbGV0ZSA9IChldmVudCkgPT4ge1xuXHRcdC8vIGF2b2lkIG1lbSBsZWFrcy5cblx0XHRsaW5rVGFnLm9uZXJyb3IgPSBsaW5rVGFnLm9ubG9hZCA9IG51bGw7XG5cdFx0aWYgKGV2ZW50LnR5cGUgPT09ICdsb2FkJykge1xuXHRcdFx0cmVzb2x2ZSgpO1xuXHRcdH0gZWxzZSB7XG5cdFx0XHR2YXIgZXJyb3JUeXBlID0gZXZlbnQgJiYgKGV2ZW50LnR5cGUgPT09ICdsb2FkJyA/ICdtaXNzaW5nJyA6IGV2ZW50LnR5cGUpO1xuXHRcdFx0dmFyIHJlYWxIcmVmID0gZXZlbnQgJiYgZXZlbnQudGFyZ2V0ICYmIGV2ZW50LnRhcmdldC5ocmVmIHx8IGZ1bGxocmVmO1xuXHRcdFx0dmFyIGVyciA9IG5ldyBFcnJvcihcIkxvYWRpbmcgQ1NTIGNodW5rIFwiICsgY2h1bmtJZCArIFwiIGZhaWxlZC5cXG4oXCIgKyByZWFsSHJlZiArIFwiKVwiKTtcblx0XHRcdGVyci5jb2RlID0gXCJDU1NfQ0hVTktfTE9BRF9GQUlMRURcIjtcblx0XHRcdGVyci50eXBlID0gZXJyb3JUeXBlO1xuXHRcdFx0ZXJyLnJlcXVlc3QgPSByZWFsSHJlZjtcblx0XHRcdGxpbmtUYWcucGFyZW50Tm9kZS5yZW1vdmVDaGlsZChsaW5rVGFnKVxuXHRcdFx0cmVqZWN0KGVycik7XG5cdFx0fVxuXHR9XG5cdGxpbmtUYWcub25lcnJvciA9IGxpbmtUYWcub25sb2FkID0gb25MaW5rQ29tcGxldGU7XG5cdGxpbmtUYWcuaHJlZiA9IGZ1bGxocmVmO1xuXG5cdGRvY3VtZW50LmhlYWQuYXBwZW5kQ2hpbGQobGlua1RhZyk7XG5cdHJldHVybiBsaW5rVGFnO1xufTtcbnZhciBmaW5kU3R5bGVzaGVldCA9IChocmVmLCBmdWxsaHJlZikgPT4ge1xuXHR2YXIgZXhpc3RpbmdMaW5rVGFncyA9IGRvY3VtZW50LmdldEVsZW1lbnRzQnlUYWdOYW1lKFwibGlua1wiKTtcblx0Zm9yKHZhciBpID0gMDsgaSA8IGV4aXN0aW5nTGlua1RhZ3MubGVuZ3RoOyBpKyspIHtcblx0XHR2YXIgdGFnID0gZXhpc3RpbmdMaW5rVGFnc1tpXTtcblx0XHR2YXIgZGF0YUhyZWYgPSB0YWcuZ2V0QXR0cmlidXRlKFwiZGF0YS1ocmVmXCIpIHx8IHRhZy5nZXRBdHRyaWJ1dGUoXCJocmVmXCIpO1xuXHRcdGlmKHRhZy5yZWwgPT09IFwic3R5bGVzaGVldFwiICYmIChkYXRhSHJlZiA9PT0gaHJlZiB8fCBkYXRhSHJlZiA9PT0gZnVsbGhyZWYpKSByZXR1cm4gdGFnO1xuXHR9XG5cdHZhciBleGlzdGluZ1N0eWxlVGFncyA9IGRvY3VtZW50LmdldEVsZW1lbnRzQnlUYWdOYW1lKFwic3R5bGVcIik7XG5cdGZvcih2YXIgaSA9IDA7IGkgPCBleGlzdGluZ1N0eWxlVGFncy5sZW5ndGg7IGkrKykge1xuXHRcdHZhciB0YWcgPSBleGlzdGluZ1N0eWxlVGFnc1tpXTtcblx0XHR2YXIgZGF0YUhyZWYgPSB0YWcuZ2V0QXR0cmlidXRlKFwiZGF0YS1ocmVmXCIpO1xuXHRcdGlmKGRhdGFIcmVmID09PSBocmVmIHx8IGRhdGFIcmVmID09PSBmdWxsaHJlZikgcmV0dXJuIHRhZztcblx0fVxufTtcbnZhciBsb2FkU3R5bGVzaGVldCA9IChjaHVua0lkKSA9PiB7XG5cdHJldHVybiBuZXcgUHJvbWlzZSgocmVzb2x2ZSwgcmVqZWN0KSA9PiB7XG5cdFx0dmFyIGhyZWYgPSBfX3dlYnBhY2tfcmVxdWlyZV9fLm1pbmlDc3NGKGNodW5rSWQpO1xuXHRcdHZhciBmdWxsaHJlZiA9IF9fd2VicGFja19yZXF1aXJlX18ucCArIGhyZWY7XG5cdFx0aWYoZmluZFN0eWxlc2hlZXQoaHJlZiwgZnVsbGhyZWYpKSByZXR1cm4gcmVzb2x2ZSgpO1xuXHRcdGNyZWF0ZVN0eWxlc2hlZXQoY2h1bmtJZCwgZnVsbGhyZWYsIHJlc29sdmUsIHJlamVjdCk7XG5cdH0pO1xufVxuLy8gbm8gY2h1bmsgbG9hZGluZ1xuXG52YXIgb2xkVGFncyA9IFtdO1xudmFyIG5ld1RhZ3MgPSBbXTtcbnZhciBhcHBseUhhbmRsZXIgPSAob3B0aW9ucykgPT4ge1xuXHRyZXR1cm4geyBkaXNwb3NlOiAoKSA9PiB7XG5cdFx0Zm9yKHZhciBpID0gMDsgaSA8IG9sZFRhZ3MubGVuZ3RoOyBpKyspIHtcblx0XHRcdHZhciBvbGRUYWcgPSBvbGRUYWdzW2ldO1xuXHRcdFx0aWYob2xkVGFnLnBhcmVudE5vZGUpIG9sZFRhZy5wYXJlbnROb2RlLnJlbW92ZUNoaWxkKG9sZFRhZyk7XG5cdFx0fVxuXHRcdG9sZFRhZ3MubGVuZ3RoID0gMDtcblx0fSwgYXBwbHk6ICgpID0+IHtcblx0XHRmb3IodmFyIGkgPSAwOyBpIDwgbmV3VGFncy5sZW5ndGg7IGkrKykgbmV3VGFnc1tpXS5yZWwgPSBcInN0eWxlc2hlZXRcIjtcblx0XHRuZXdUYWdzLmxlbmd0aCA9IDA7XG5cdH0gfTtcbn1cbl9fd2VicGFja19yZXF1aXJlX18uaG1yQy5taW5pQ3NzID0gKGNodW5rSWRzLCByZW1vdmVkQ2h1bmtzLCByZW1vdmVkTW9kdWxlcywgcHJvbWlzZXMsIGFwcGx5SGFuZGxlcnMsIHVwZGF0ZWRNb2R1bGVzTGlzdCkgPT4ge1xuXHRhcHBseUhhbmRsZXJzLnB1c2goYXBwbHlIYW5kbGVyKTtcblx0Y2h1bmtJZHMuZm9yRWFjaCgoY2h1bmtJZCkgPT4ge1xuXHRcdHZhciBocmVmID0gX193ZWJwYWNrX3JlcXVpcmVfXy5taW5pQ3NzRihjaHVua0lkKTtcblx0XHR2YXIgZnVsbGhyZWYgPSBfX3dlYnBhY2tfcmVxdWlyZV9fLnAgKyBocmVmO1xuXHRcdHZhciBvbGRUYWcgPSBmaW5kU3R5bGVzaGVldChocmVmLCBmdWxsaHJlZik7XG5cdFx0aWYoIW9sZFRhZykgcmV0dXJuO1xuXHRcdHByb21pc2VzLnB1c2gobmV3IFByb21pc2UoKHJlc29sdmUsIHJlamVjdCkgPT4ge1xuXHRcdFx0dmFyIHRhZyA9IGNyZWF0ZVN0eWxlc2hlZXQoY2h1bmtJZCwgZnVsbGhyZWYsICgpID0+IHtcblx0XHRcdFx0dGFnLmFzID0gXCJzdHlsZVwiO1xuXHRcdFx0XHR0YWcucmVsID0gXCJwcmVsb2FkXCI7XG5cdFx0XHRcdHJlc29sdmUoKTtcblx0XHRcdH0sIHJlamVjdCk7XG5cdFx0XHRvbGRUYWdzLnB1c2gob2xkVGFnKTtcblx0XHRcdG5ld1RhZ3MucHVzaCh0YWcpO1xuXHRcdH0pKTtcblx0fSk7XG59IiwiLyoqXG4gKiBAcmVtaXgtcnVuL3JvdXRlciB2MS4wLjJcbiAqXG4gKiBDb3B5cmlnaHQgKGMpIFJlbWl4IFNvZnR3YXJlIEluYy5cbiAqXG4gKiBUaGlzIHNvdXJjZSBjb2RlIGlzIGxpY2Vuc2VkIHVuZGVyIHRoZSBNSVQgbGljZW5zZSBmb3VuZCBpbiB0aGVcbiAqIExJQ0VOU0UubWQgZmlsZSBpbiB0aGUgcm9vdCBkaXJlY3Rvcnkgb2YgdGhpcyBzb3VyY2UgdHJlZS5cbiAqXG4gKiBAbGljZW5zZSBNSVRcbiAqL1xuZnVuY3Rpb24gX2V4dGVuZHMoKSB7XG4gIF9leHRlbmRzID0gT2JqZWN0LmFzc2lnbiA/IE9iamVjdC5hc3NpZ24uYmluZCgpIDogZnVuY3Rpb24gKHRhcmdldCkge1xuICAgIGZvciAodmFyIGkgPSAxOyBpIDwgYXJndW1lbnRzLmxlbmd0aDsgaSsrKSB7XG4gICAgICB2YXIgc291cmNlID0gYXJndW1lbnRzW2ldO1xuXG4gICAgICBmb3IgKHZhciBrZXkgaW4gc291cmNlKSB7XG4gICAgICAgIGlmIChPYmplY3QucHJvdG90eXBlLmhhc093blByb3BlcnR5LmNhbGwoc291cmNlLCBrZXkpKSB7XG4gICAgICAgICAgdGFyZ2V0W2tleV0gPSBzb3VyY2Vba2V5XTtcbiAgICAgICAgfVxuICAgICAgfVxuICAgIH1cblxuICAgIHJldHVybiB0YXJnZXQ7XG4gIH07XG4gIHJldHVybiBfZXh0ZW5kcy5hcHBseSh0aGlzLCBhcmd1bWVudHMpO1xufVxuXG4vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vL1xuLy8jcmVnaW9uIFR5cGVzIGFuZCBDb25zdGFudHNcbi8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vXG5cbi8qKlxuICogQWN0aW9ucyByZXByZXNlbnQgdGhlIHR5cGUgb2YgY2hhbmdlIHRvIGEgbG9jYXRpb24gdmFsdWUuXG4gKi9cbnZhciBBY3Rpb247XG5cbihmdW5jdGlvbiAoQWN0aW9uKSB7XG4gIC8qKlxuICAgKiBBIFBPUCBpbmRpY2F0ZXMgYSBjaGFuZ2UgdG8gYW4gYXJiaXRyYXJ5IGluZGV4IGluIHRoZSBoaXN0b3J5IHN0YWNrLCBzdWNoXG4gICAqIGFzIGEgYmFjayBvciBmb3J3YXJkIG5hdmlnYXRpb24uIEl0IGRvZXMgbm90IGRlc2NyaWJlIHRoZSBkaXJlY3Rpb24gb2YgdGhlXG4gICAqIG5hdmlnYXRpb24sIG9ubHkgdGhhdCB0aGUgY3VycmVudCBpbmRleCBjaGFuZ2VkLlxuICAgKlxuICAgKiBOb3RlOiBUaGlzIGlzIHRoZSBkZWZhdWx0IGFjdGlvbiBmb3IgbmV3bHkgY3JlYXRlZCBoaXN0b3J5IG9iamVjdHMuXG4gICAqL1xuICBBY3Rpb25bXCJQb3BcIl0gPSBcIlBPUFwiO1xuICAvKipcbiAgICogQSBQVVNIIGluZGljYXRlcyBhIG5ldyBlbnRyeSBiZWluZyBhZGRlZCB0byB0aGUgaGlzdG9yeSBzdGFjaywgc3VjaCBhcyB3aGVuXG4gICAqIGEgbGluayBpcyBjbGlja2VkIGFuZCBhIG5ldyBwYWdlIGxvYWRzLiBXaGVuIHRoaXMgaGFwcGVucywgYWxsIHN1YnNlcXVlbnRcbiAgICogZW50cmllcyBpbiB0aGUgc3RhY2sgYXJlIGxvc3QuXG4gICAqL1xuXG4gIEFjdGlvbltcIlB1c2hcIl0gPSBcIlBVU0hcIjtcbiAgLyoqXG4gICAqIEEgUkVQTEFDRSBpbmRpY2F0ZXMgdGhlIGVudHJ5IGF0IHRoZSBjdXJyZW50IGluZGV4IGluIHRoZSBoaXN0b3J5IHN0YWNrXG4gICAqIGJlaW5nIHJlcGxhY2VkIGJ5IGEgbmV3IG9uZS5cbiAgICovXG5cbiAgQWN0aW9uW1wiUmVwbGFjZVwiXSA9IFwiUkVQTEFDRVwiO1xufSkoQWN0aW9uIHx8IChBY3Rpb24gPSB7fSkpO1xuXG5jb25zdCBQb3BTdGF0ZUV2ZW50VHlwZSA9IFwicG9wc3RhdGVcIjtcbi8qKlxuICogTWVtb3J5IGhpc3Rvcnkgc3RvcmVzIHRoZSBjdXJyZW50IGxvY2F0aW9uIGluIG1lbW9yeS4gSXQgaXMgZGVzaWduZWQgZm9yIHVzZVxuICogaW4gc3RhdGVmdWwgbm9uLWJyb3dzZXIgZW52aXJvbm1lbnRzIGxpa2UgdGVzdHMgYW5kIFJlYWN0IE5hdGl2ZS5cbiAqL1xuXG5mdW5jdGlvbiBjcmVhdGVNZW1vcnlIaXN0b3J5KG9wdGlvbnMpIHtcbiAgaWYgKG9wdGlvbnMgPT09IHZvaWQgMCkge1xuICAgIG9wdGlvbnMgPSB7fTtcbiAgfVxuXG4gIGxldCB7XG4gICAgaW5pdGlhbEVudHJpZXMgPSBbXCIvXCJdLFxuICAgIGluaXRpYWxJbmRleCxcbiAgICB2NUNvbXBhdCA9IGZhbHNlXG4gIH0gPSBvcHRpb25zO1xuICBsZXQgZW50cmllczsgLy8gRGVjbGFyZSBzbyB3ZSBjYW4gYWNjZXNzIGZyb20gY3JlYXRlTWVtb3J5TG9jYXRpb25cblxuICBlbnRyaWVzID0gaW5pdGlhbEVudHJpZXMubWFwKChlbnRyeSwgaW5kZXgpID0+IGNyZWF0ZU1lbW9yeUxvY2F0aW9uKGVudHJ5LCB0eXBlb2YgZW50cnkgPT09IFwic3RyaW5nXCIgPyBudWxsIDogZW50cnkuc3RhdGUsIGluZGV4ID09PSAwID8gXCJkZWZhdWx0XCIgOiB1bmRlZmluZWQpKTtcbiAgbGV0IGluZGV4ID0gY2xhbXBJbmRleChpbml0aWFsSW5kZXggPT0gbnVsbCA/IGVudHJpZXMubGVuZ3RoIC0gMSA6IGluaXRpYWxJbmRleCk7XG4gIGxldCBhY3Rpb24gPSBBY3Rpb24uUG9wO1xuICBsZXQgbGlzdGVuZXIgPSBudWxsO1xuXG4gIGZ1bmN0aW9uIGNsYW1wSW5kZXgobikge1xuICAgIHJldHVybiBNYXRoLm1pbihNYXRoLm1heChuLCAwKSwgZW50cmllcy5sZW5ndGggLSAxKTtcbiAgfVxuXG4gIGZ1bmN0aW9uIGdldEN1cnJlbnRMb2NhdGlvbigpIHtcbiAgICByZXR1cm4gZW50cmllc1tpbmRleF07XG4gIH1cblxuICBmdW5jdGlvbiBjcmVhdGVNZW1vcnlMb2NhdGlvbih0bywgc3RhdGUsIGtleSkge1xuICAgIGlmIChzdGF0ZSA9PT0gdm9pZCAwKSB7XG4gICAgICBzdGF0ZSA9IG51bGw7XG4gICAgfVxuXG4gICAgbGV0IGxvY2F0aW9uID0gY3JlYXRlTG9jYXRpb24oZW50cmllcyA/IGdldEN1cnJlbnRMb2NhdGlvbigpLnBhdGhuYW1lIDogXCIvXCIsIHRvLCBzdGF0ZSwga2V5KTtcbiAgICB3YXJuaW5nJDEobG9jYXRpb24ucGF0aG5hbWUuY2hhckF0KDApID09PSBcIi9cIiwgXCJyZWxhdGl2ZSBwYXRobmFtZXMgYXJlIG5vdCBzdXBwb3J0ZWQgaW4gbWVtb3J5IGhpc3Rvcnk6IFwiICsgSlNPTi5zdHJpbmdpZnkodG8pKTtcbiAgICByZXR1cm4gbG9jYXRpb247XG4gIH1cblxuICBsZXQgaGlzdG9yeSA9IHtcbiAgICBnZXQgaW5kZXgoKSB7XG4gICAgICByZXR1cm4gaW5kZXg7XG4gICAgfSxcblxuICAgIGdldCBhY3Rpb24oKSB7XG4gICAgICByZXR1cm4gYWN0aW9uO1xuICAgIH0sXG5cbiAgICBnZXQgbG9jYXRpb24oKSB7XG4gICAgICByZXR1cm4gZ2V0Q3VycmVudExvY2F0aW9uKCk7XG4gICAgfSxcblxuICAgIGNyZWF0ZUhyZWYodG8pIHtcbiAgICAgIHJldHVybiB0eXBlb2YgdG8gPT09IFwic3RyaW5nXCIgPyB0byA6IGNyZWF0ZVBhdGgodG8pO1xuICAgIH0sXG5cbiAgICBwdXNoKHRvLCBzdGF0ZSkge1xuICAgICAgYWN0aW9uID0gQWN0aW9uLlB1c2g7XG4gICAgICBsZXQgbmV4dExvY2F0aW9uID0gY3JlYXRlTWVtb3J5TG9jYXRpb24odG8sIHN0YXRlKTtcbiAgICAgIGluZGV4ICs9IDE7XG4gICAgICBlbnRyaWVzLnNwbGljZShpbmRleCwgZW50cmllcy5sZW5ndGgsIG5leHRMb2NhdGlvbik7XG5cbiAgICAgIGlmICh2NUNvbXBhdCAmJiBsaXN0ZW5lcikge1xuICAgICAgICBsaXN0ZW5lcih7XG4gICAgICAgICAgYWN0aW9uLFxuICAgICAgICAgIGxvY2F0aW9uOiBuZXh0TG9jYXRpb25cbiAgICAgICAgfSk7XG4gICAgICB9XG4gICAgfSxcblxuICAgIHJlcGxhY2UodG8sIHN0YXRlKSB7XG4gICAgICBhY3Rpb24gPSBBY3Rpb24uUmVwbGFjZTtcbiAgICAgIGxldCBuZXh0TG9jYXRpb24gPSBjcmVhdGVNZW1vcnlMb2NhdGlvbih0bywgc3RhdGUpO1xuICAgICAgZW50cmllc1tpbmRleF0gPSBuZXh0TG9jYXRpb247XG5cbiAgICAgIGlmICh2NUNvbXBhdCAmJiBsaXN0ZW5lcikge1xuICAgICAgICBsaXN0ZW5lcih7XG4gICAgICAgICAgYWN0aW9uLFxuICAgICAgICAgIGxvY2F0aW9uOiBuZXh0TG9jYXRpb25cbiAgICAgICAgfSk7XG4gICAgICB9XG4gICAgfSxcblxuICAgIGdvKGRlbHRhKSB7XG4gICAgICBhY3Rpb24gPSBBY3Rpb24uUG9wO1xuICAgICAgaW5kZXggPSBjbGFtcEluZGV4KGluZGV4ICsgZGVsdGEpO1xuXG4gICAgICBpZiAobGlzdGVuZXIpIHtcbiAgICAgICAgbGlzdGVuZXIoe1xuICAgICAgICAgIGFjdGlvbixcbiAgICAgICAgICBsb2NhdGlvbjogZ2V0Q3VycmVudExvY2F0aW9uKClcbiAgICAgICAgfSk7XG4gICAgICB9XG4gICAgfSxcblxuICAgIGxpc3Rlbihmbikge1xuICAgICAgbGlzdGVuZXIgPSBmbjtcbiAgICAgIHJldHVybiAoKSA9PiB7XG4gICAgICAgIGxpc3RlbmVyID0gbnVsbDtcbiAgICAgIH07XG4gICAgfVxuXG4gIH07XG4gIHJldHVybiBoaXN0b3J5O1xufVxuLyoqXG4gKiBCcm93c2VyIGhpc3Rvcnkgc3RvcmVzIHRoZSBsb2NhdGlvbiBpbiByZWd1bGFyIFVSTHMuIFRoaXMgaXMgdGhlIHN0YW5kYXJkIGZvclxuICogbW9zdCB3ZWIgYXBwcywgYnV0IGl0IHJlcXVpcmVzIHNvbWUgY29uZmlndXJhdGlvbiBvbiB0aGUgc2VydmVyIHRvIGVuc3VyZSB5b3VcbiAqIHNlcnZlIHRoZSBzYW1lIGFwcCBhdCBtdWx0aXBsZSBVUkxzLlxuICpcbiAqIEBzZWUgaHR0cHM6Ly9naXRodWIuY29tL3JlbWl4LXJ1bi9oaXN0b3J5L3RyZWUvbWFpbi9kb2NzL2FwaS1yZWZlcmVuY2UubWQjY3JlYXRlYnJvd3Nlcmhpc3RvcnlcbiAqL1xuXG5mdW5jdGlvbiBjcmVhdGVCcm93c2VySGlzdG9yeShvcHRpb25zKSB7XG4gIGlmIChvcHRpb25zID09PSB2b2lkIDApIHtcbiAgICBvcHRpb25zID0ge307XG4gIH1cblxuICBmdW5jdGlvbiBjcmVhdGVCcm93c2VyTG9jYXRpb24od2luZG93LCBnbG9iYWxIaXN0b3J5KSB7XG4gICAgbGV0IHtcbiAgICAgIHBhdGhuYW1lLFxuICAgICAgc2VhcmNoLFxuICAgICAgaGFzaFxuICAgIH0gPSB3aW5kb3cubG9jYXRpb247XG4gICAgcmV0dXJuIGNyZWF0ZUxvY2F0aW9uKFwiXCIsIHtcbiAgICAgIHBhdGhuYW1lLFxuICAgICAgc2VhcmNoLFxuICAgICAgaGFzaFxuICAgIH0sIC8vIHN0YXRlIGRlZmF1bHRzIHRvIGBudWxsYCBiZWNhdXNlIGB3aW5kb3cuaGlzdG9yeS5zdGF0ZWAgZG9lc1xuICAgIGdsb2JhbEhpc3Rvcnkuc3RhdGUgJiYgZ2xvYmFsSGlzdG9yeS5zdGF0ZS51c3IgfHwgbnVsbCwgZ2xvYmFsSGlzdG9yeS5zdGF0ZSAmJiBnbG9iYWxIaXN0b3J5LnN0YXRlLmtleSB8fCBcImRlZmF1bHRcIik7XG4gIH1cblxuICBmdW5jdGlvbiBjcmVhdGVCcm93c2VySHJlZih3aW5kb3csIHRvKSB7XG4gICAgcmV0dXJuIHR5cGVvZiB0byA9PT0gXCJzdHJpbmdcIiA/IHRvIDogY3JlYXRlUGF0aCh0byk7XG4gIH1cblxuICByZXR1cm4gZ2V0VXJsQmFzZWRIaXN0b3J5KGNyZWF0ZUJyb3dzZXJMb2NhdGlvbiwgY3JlYXRlQnJvd3NlckhyZWYsIG51bGwsIG9wdGlvbnMpO1xufVxuLyoqXG4gKiBIYXNoIGhpc3Rvcnkgc3RvcmVzIHRoZSBsb2NhdGlvbiBpbiB3aW5kb3cubG9jYXRpb24uaGFzaC4gVGhpcyBtYWtlcyBpdCBpZGVhbFxuICogZm9yIHNpdHVhdGlvbnMgd2hlcmUgeW91IGRvbid0IHdhbnQgdG8gc2VuZCB0aGUgbG9jYXRpb24gdG8gdGhlIHNlcnZlciBmb3JcbiAqIHNvbWUgcmVhc29uLCBlaXRoZXIgYmVjYXVzZSB5b3UgZG8gY2Fubm90IGNvbmZpZ3VyZSBpdCBvciB0aGUgVVJMIHNwYWNlIGlzXG4gKiByZXNlcnZlZCBmb3Igc29tZXRoaW5nIGVsc2UuXG4gKlxuICogQHNlZSBodHRwczovL2dpdGh1Yi5jb20vcmVtaXgtcnVuL2hpc3RvcnkvdHJlZS9tYWluL2RvY3MvYXBpLXJlZmVyZW5jZS5tZCNjcmVhdGVoYXNoaGlzdG9yeVxuICovXG5cbmZ1bmN0aW9uIGNyZWF0ZUhhc2hIaXN0b3J5KG9wdGlvbnMpIHtcbiAgaWYgKG9wdGlvbnMgPT09IHZvaWQgMCkge1xuICAgIG9wdGlvbnMgPSB7fTtcbiAgfVxuXG4gIGZ1bmN0aW9uIGNyZWF0ZUhhc2hMb2NhdGlvbih3aW5kb3csIGdsb2JhbEhpc3RvcnkpIHtcbiAgICBsZXQge1xuICAgICAgcGF0aG5hbWUgPSBcIi9cIixcbiAgICAgIHNlYXJjaCA9IFwiXCIsXG4gICAgICBoYXNoID0gXCJcIlxuICAgIH0gPSBwYXJzZVBhdGgod2luZG93LmxvY2F0aW9uLmhhc2guc3Vic3RyKDEpKTtcbiAgICByZXR1cm4gY3JlYXRlTG9jYXRpb24oXCJcIiwge1xuICAgICAgcGF0aG5hbWUsXG4gICAgICBzZWFyY2gsXG4gICAgICBoYXNoXG4gICAgfSwgLy8gc3RhdGUgZGVmYXVsdHMgdG8gYG51bGxgIGJlY2F1c2UgYHdpbmRvdy5oaXN0b3J5LnN0YXRlYCBkb2VzXG4gICAgZ2xvYmFsSGlzdG9yeS5zdGF0ZSAmJiBnbG9iYWxIaXN0b3J5LnN0YXRlLnVzciB8fCBudWxsLCBnbG9iYWxIaXN0b3J5LnN0YXRlICYmIGdsb2JhbEhpc3Rvcnkuc3RhdGUua2V5IHx8IFwiZGVmYXVsdFwiKTtcbiAgfVxuXG4gIGZ1bmN0aW9uIGNyZWF0ZUhhc2hIcmVmKHdpbmRvdywgdG8pIHtcbiAgICBsZXQgYmFzZSA9IHdpbmRvdy5kb2N1bWVudC5xdWVyeVNlbGVjdG9yKFwiYmFzZVwiKTtcbiAgICBsZXQgaHJlZiA9IFwiXCI7XG5cbiAgICBpZiAoYmFzZSAmJiBiYXNlLmdldEF0dHJpYnV0ZShcImhyZWZcIikpIHtcbiAgICAgIGxldCB1cmwgPSB3aW5kb3cubG9jYXRpb24uaHJlZjtcbiAgICAgIGxldCBoYXNoSW5kZXggPSB1cmwuaW5kZXhPZihcIiNcIik7XG4gICAgICBocmVmID0gaGFzaEluZGV4ID09PSAtMSA/IHVybCA6IHVybC5zbGljZSgwLCBoYXNoSW5kZXgpO1xuICAgIH1cblxuICAgIHJldHVybiBocmVmICsgXCIjXCIgKyAodHlwZW9mIHRvID09PSBcInN0cmluZ1wiID8gdG8gOiBjcmVhdGVQYXRoKHRvKSk7XG4gIH1cblxuICBmdW5jdGlvbiB2YWxpZGF0ZUhhc2hMb2NhdGlvbihsb2NhdGlvbiwgdG8pIHtcbiAgICB3YXJuaW5nJDEobG9jYXRpb24ucGF0aG5hbWUuY2hhckF0KDApID09PSBcIi9cIiwgXCJyZWxhdGl2ZSBwYXRobmFtZXMgYXJlIG5vdCBzdXBwb3J0ZWQgaW4gaGFzaCBoaXN0b3J5LnB1c2goXCIgKyBKU09OLnN0cmluZ2lmeSh0bykgKyBcIilcIik7XG4gIH1cblxuICByZXR1cm4gZ2V0VXJsQmFzZWRIaXN0b3J5KGNyZWF0ZUhhc2hMb2NhdGlvbiwgY3JlYXRlSGFzaEhyZWYsIHZhbGlkYXRlSGFzaExvY2F0aW9uLCBvcHRpb25zKTtcbn0gLy8jZW5kcmVnaW9uXG4vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vL1xuLy8jcmVnaW9uIFVUSUxTXG4vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vL1xuXG5mdW5jdGlvbiB3YXJuaW5nJDEoY29uZCwgbWVzc2FnZSkge1xuICBpZiAoIWNvbmQpIHtcbiAgICAvLyBlc2xpbnQtZGlzYWJsZS1uZXh0LWxpbmUgbm8tY29uc29sZVxuICAgIGlmICh0eXBlb2YgY29uc29sZSAhPT0gXCJ1bmRlZmluZWRcIikgY29uc29sZS53YXJuKG1lc3NhZ2UpO1xuXG4gICAgdHJ5IHtcbiAgICAgIC8vIFdlbGNvbWUgdG8gZGVidWdnaW5nIGhpc3RvcnkhXG4gICAgICAvL1xuICAgICAgLy8gVGhpcyBlcnJvciBpcyB0aHJvd24gYXMgYSBjb252ZW5pZW5jZSBzbyB5b3UgY2FuIG1vcmUgZWFzaWx5XG4gICAgICAvLyBmaW5kIHRoZSBzb3VyY2UgZm9yIGEgd2FybmluZyB0aGF0IGFwcGVhcnMgaW4gdGhlIGNvbnNvbGUgYnlcbiAgICAgIC8vIGVuYWJsaW5nIFwicGF1c2Ugb24gZXhjZXB0aW9uc1wiIGluIHlvdXIgSmF2YVNjcmlwdCBkZWJ1Z2dlci5cbiAgICAgIHRocm93IG5ldyBFcnJvcihtZXNzYWdlKTsgLy8gZXNsaW50LWRpc2FibGUtbmV4dC1saW5lIG5vLWVtcHR5XG4gICAgfSBjYXRjaCAoZSkge31cbiAgfVxufVxuXG5mdW5jdGlvbiBjcmVhdGVLZXkoKSB7XG4gIHJldHVybiBNYXRoLnJhbmRvbSgpLnRvU3RyaW5nKDM2KS5zdWJzdHIoMiwgOCk7XG59XG4vKipcbiAqIEZvciBicm93c2VyLWJhc2VkIGhpc3Rvcmllcywgd2UgY29tYmluZSB0aGUgc3RhdGUgYW5kIGtleSBpbnRvIGFuIG9iamVjdFxuICovXG5cblxuZnVuY3Rpb24gZ2V0SGlzdG9yeVN0YXRlKGxvY2F0aW9uKSB7XG4gIHJldHVybiB7XG4gICAgdXNyOiBsb2NhdGlvbi5zdGF0ZSxcbiAgICBrZXk6IGxvY2F0aW9uLmtleVxuICB9O1xufVxuLyoqXG4gKiBDcmVhdGVzIGEgTG9jYXRpb24gb2JqZWN0IHdpdGggYSB1bmlxdWUga2V5IGZyb20gdGhlIGdpdmVuIFBhdGhcbiAqL1xuXG5cbmZ1bmN0aW9uIGNyZWF0ZUxvY2F0aW9uKGN1cnJlbnQsIHRvLCBzdGF0ZSwga2V5KSB7XG4gIGlmIChzdGF0ZSA9PT0gdm9pZCAwKSB7XG4gICAgc3RhdGUgPSBudWxsO1xuICB9XG5cbiAgbGV0IGxvY2F0aW9uID0gX2V4dGVuZHMoe1xuICAgIHBhdGhuYW1lOiB0eXBlb2YgY3VycmVudCA9PT0gXCJzdHJpbmdcIiA/IGN1cnJlbnQgOiBjdXJyZW50LnBhdGhuYW1lLFxuICAgIHNlYXJjaDogXCJcIixcbiAgICBoYXNoOiBcIlwiXG4gIH0sIHR5cGVvZiB0byA9PT0gXCJzdHJpbmdcIiA/IHBhcnNlUGF0aCh0bykgOiB0bywge1xuICAgIHN0YXRlLFxuICAgIC8vIFRPRE86IFRoaXMgY291bGQgYmUgY2xlYW5lZCB1cC4gIHB1c2gvcmVwbGFjZSBzaG91bGQgcHJvYmFibHkganVzdCB0YWtlXG4gICAgLy8gZnVsbCBMb2NhdGlvbnMgbm93IGFuZCBhdm9pZCB0aGUgbmVlZCB0byBydW4gdGhyb3VnaCB0aGlzIGZsb3cgYXQgYWxsXG4gICAgLy8gQnV0IHRoYXQncyBhIHByZXR0eSBiaWcgcmVmYWN0b3IgdG8gdGhlIGN1cnJlbnQgdGVzdCBzdWl0ZSBzbyBnb2luZyB0b1xuICAgIC8vIGtlZXAgYXMgaXMgZm9yIHRoZSB0aW1lIGJlaW5nIGFuZCBqdXN0IGxldCBhbnkgaW5jb21pbmcga2V5cyB0YWtlIHByZWNlZGVuY2VcbiAgICBrZXk6IHRvICYmIHRvLmtleSB8fCBrZXkgfHwgY3JlYXRlS2V5KClcbiAgfSk7XG5cbiAgcmV0dXJuIGxvY2F0aW9uO1xufVxuLyoqXG4gKiBDcmVhdGVzIGEgc3RyaW5nIFVSTCBwYXRoIGZyb20gdGhlIGdpdmVuIHBhdGhuYW1lLCBzZWFyY2gsIGFuZCBoYXNoIGNvbXBvbmVudHMuXG4gKi9cblxuZnVuY3Rpb24gY3JlYXRlUGF0aChfcmVmKSB7XG4gIGxldCB7XG4gICAgcGF0aG5hbWUgPSBcIi9cIixcbiAgICBzZWFyY2ggPSBcIlwiLFxuICAgIGhhc2ggPSBcIlwiXG4gIH0gPSBfcmVmO1xuICBpZiAoc2VhcmNoICYmIHNlYXJjaCAhPT0gXCI/XCIpIHBhdGhuYW1lICs9IHNlYXJjaC5jaGFyQXQoMCkgPT09IFwiP1wiID8gc2VhcmNoIDogXCI/XCIgKyBzZWFyY2g7XG4gIGlmIChoYXNoICYmIGhhc2ggIT09IFwiI1wiKSBwYXRobmFtZSArPSBoYXNoLmNoYXJBdCgwKSA9PT0gXCIjXCIgPyBoYXNoIDogXCIjXCIgKyBoYXNoO1xuICByZXR1cm4gcGF0aG5hbWU7XG59XG4vKipcbiAqIFBhcnNlcyBhIHN0cmluZyBVUkwgcGF0aCBpbnRvIGl0cyBzZXBhcmF0ZSBwYXRobmFtZSwgc2VhcmNoLCBhbmQgaGFzaCBjb21wb25lbnRzLlxuICovXG5cbmZ1bmN0aW9uIHBhcnNlUGF0aChwYXRoKSB7XG4gIGxldCBwYXJzZWRQYXRoID0ge307XG5cbiAgaWYgKHBhdGgpIHtcbiAgICBsZXQgaGFzaEluZGV4ID0gcGF0aC5pbmRleE9mKFwiI1wiKTtcblxuICAgIGlmIChoYXNoSW5kZXggPj0gMCkge1xuICAgICAgcGFyc2VkUGF0aC5oYXNoID0gcGF0aC5zdWJzdHIoaGFzaEluZGV4KTtcbiAgICAgIHBhdGggPSBwYXRoLnN1YnN0cigwLCBoYXNoSW5kZXgpO1xuICAgIH1cblxuICAgIGxldCBzZWFyY2hJbmRleCA9IHBhdGguaW5kZXhPZihcIj9cIik7XG5cbiAgICBpZiAoc2VhcmNoSW5kZXggPj0gMCkge1xuICAgICAgcGFyc2VkUGF0aC5zZWFyY2ggPSBwYXRoLnN1YnN0cihzZWFyY2hJbmRleCk7XG4gICAgICBwYXRoID0gcGF0aC5zdWJzdHIoMCwgc2VhcmNoSW5kZXgpO1xuICAgIH1cblxuICAgIGlmIChwYXRoKSB7XG4gICAgICBwYXJzZWRQYXRoLnBhdGhuYW1lID0gcGF0aDtcbiAgICB9XG4gIH1cblxuICByZXR1cm4gcGFyc2VkUGF0aDtcbn1cblxuZnVuY3Rpb24gZ2V0VXJsQmFzZWRIaXN0b3J5KGdldExvY2F0aW9uLCBjcmVhdGVIcmVmLCB2YWxpZGF0ZUxvY2F0aW9uLCBvcHRpb25zKSB7XG4gIGlmIChvcHRpb25zID09PSB2b2lkIDApIHtcbiAgICBvcHRpb25zID0ge307XG4gIH1cblxuICBsZXQge1xuICAgIHdpbmRvdyA9IGRvY3VtZW50LmRlZmF1bHRWaWV3LFxuICAgIHY1Q29tcGF0ID0gZmFsc2VcbiAgfSA9IG9wdGlvbnM7XG4gIGxldCBnbG9iYWxIaXN0b3J5ID0gd2luZG93Lmhpc3Rvcnk7XG4gIGxldCBhY3Rpb24gPSBBY3Rpb24uUG9wO1xuICBsZXQgbGlzdGVuZXIgPSBudWxsO1xuXG4gIGZ1bmN0aW9uIGhhbmRsZVBvcCgpIHtcbiAgICBhY3Rpb24gPSBBY3Rpb24uUG9wO1xuXG4gICAgaWYgKGxpc3RlbmVyKSB7XG4gICAgICBsaXN0ZW5lcih7XG4gICAgICAgIGFjdGlvbixcbiAgICAgICAgbG9jYXRpb246IGhpc3RvcnkubG9jYXRpb25cbiAgICAgIH0pO1xuICAgIH1cbiAgfVxuXG4gIGZ1bmN0aW9uIHB1c2godG8sIHN0YXRlKSB7XG4gICAgYWN0aW9uID0gQWN0aW9uLlB1c2g7XG4gICAgbGV0IGxvY2F0aW9uID0gY3JlYXRlTG9jYXRpb24oaGlzdG9yeS5sb2NhdGlvbiwgdG8sIHN0YXRlKTtcbiAgICBpZiAodmFsaWRhdGVMb2NhdGlvbikgdmFsaWRhdGVMb2NhdGlvbihsb2NhdGlvbiwgdG8pO1xuICAgIGxldCBoaXN0b3J5U3RhdGUgPSBnZXRIaXN0b3J5U3RhdGUobG9jYXRpb24pO1xuICAgIGxldCB1cmwgPSBoaXN0b3J5LmNyZWF0ZUhyZWYobG9jYXRpb24pOyAvLyB0cnkuLi5jYXRjaCBiZWNhdXNlIGlPUyBsaW1pdHMgdXMgdG8gMTAwIHB1c2hTdGF0ZSBjYWxscyA6L1xuXG4gICAgdHJ5IHtcbiAgICAgIGdsb2JhbEhpc3RvcnkucHVzaFN0YXRlKGhpc3RvcnlTdGF0ZSwgXCJcIiwgdXJsKTtcbiAgICB9IGNhdGNoIChlcnJvcikge1xuICAgICAgLy8gVGhleSBhcmUgZ29pbmcgdG8gbG9zZSBzdGF0ZSBoZXJlLCBidXQgdGhlcmUgaXMgbm8gcmVhbFxuICAgICAgLy8gd2F5IHRvIHdhcm4gdGhlbSBhYm91dCBpdCBzaW5jZSB0aGUgcGFnZSB3aWxsIHJlZnJlc2guLi5cbiAgICAgIHdpbmRvdy5sb2NhdGlvbi5hc3NpZ24odXJsKTtcbiAgICB9XG5cbiAgICBpZiAodjVDb21wYXQgJiYgbGlzdGVuZXIpIHtcbiAgICAgIGxpc3RlbmVyKHtcbiAgICAgICAgYWN0aW9uLFxuICAgICAgICBsb2NhdGlvblxuICAgICAgfSk7XG4gICAgfVxuICB9XG5cbiAgZnVuY3Rpb24gcmVwbGFjZSh0bywgc3RhdGUpIHtcbiAgICBhY3Rpb24gPSBBY3Rpb24uUmVwbGFjZTtcbiAgICBsZXQgbG9jYXRpb24gPSBjcmVhdGVMb2NhdGlvbihoaXN0b3J5LmxvY2F0aW9uLCB0bywgc3RhdGUpO1xuICAgIGlmICh2YWxpZGF0ZUxvY2F0aW9uKSB2YWxpZGF0ZUxvY2F0aW9uKGxvY2F0aW9uLCB0byk7XG4gICAgbGV0IGhpc3RvcnlTdGF0ZSA9IGdldEhpc3RvcnlTdGF0ZShsb2NhdGlvbik7XG4gICAgbGV0IHVybCA9IGhpc3RvcnkuY3JlYXRlSHJlZihsb2NhdGlvbik7XG4gICAgZ2xvYmFsSGlzdG9yeS5yZXBsYWNlU3RhdGUoaGlzdG9yeVN0YXRlLCBcIlwiLCB1cmwpO1xuXG4gICAgaWYgKHY1Q29tcGF0ICYmIGxpc3RlbmVyKSB7XG4gICAgICBsaXN0ZW5lcih7XG4gICAgICAgIGFjdGlvbixcbiAgICAgICAgbG9jYXRpb246IGxvY2F0aW9uXG4gICAgICB9KTtcbiAgICB9XG4gIH1cblxuICBsZXQgaGlzdG9yeSA9IHtcbiAgICBnZXQgYWN0aW9uKCkge1xuICAgICAgcmV0dXJuIGFjdGlvbjtcbiAgICB9LFxuXG4gICAgZ2V0IGxvY2F0aW9uKCkge1xuICAgICAgcmV0dXJuIGdldExvY2F0aW9uKHdpbmRvdywgZ2xvYmFsSGlzdG9yeSk7XG4gICAgfSxcblxuICAgIGxpc3Rlbihmbikge1xuICAgICAgaWYgKGxpc3RlbmVyKSB7XG4gICAgICAgIHRocm93IG5ldyBFcnJvcihcIkEgaGlzdG9yeSBvbmx5IGFjY2VwdHMgb25lIGFjdGl2ZSBsaXN0ZW5lclwiKTtcbiAgICAgIH1cblxuICAgICAgd2luZG93LmFkZEV2ZW50TGlzdGVuZXIoUG9wU3RhdGVFdmVudFR5cGUsIGhhbmRsZVBvcCk7XG4gICAgICBsaXN0ZW5lciA9IGZuO1xuICAgICAgcmV0dXJuICgpID0+IHtcbiAgICAgICAgd2luZG93LnJlbW92ZUV2ZW50TGlzdGVuZXIoUG9wU3RhdGVFdmVudFR5cGUsIGhhbmRsZVBvcCk7XG4gICAgICAgIGxpc3RlbmVyID0gbnVsbDtcbiAgICAgIH07XG4gICAgfSxcblxuICAgIGNyZWF0ZUhyZWYodG8pIHtcbiAgICAgIHJldHVybiBjcmVhdGVIcmVmKHdpbmRvdywgdG8pO1xuICAgIH0sXG5cbiAgICBwdXNoLFxuICAgIHJlcGxhY2UsXG5cbiAgICBnbyhuKSB7XG4gICAgICByZXR1cm4gZ2xvYmFsSGlzdG9yeS5nbyhuKTtcbiAgICB9XG5cbiAgfTtcbiAgcmV0dXJuIGhpc3Rvcnk7XG59IC8vI2VuZHJlZ2lvblxuXG52YXIgUmVzdWx0VHlwZTtcblxuKGZ1bmN0aW9uIChSZXN1bHRUeXBlKSB7XG4gIFJlc3VsdFR5cGVbXCJkYXRhXCJdID0gXCJkYXRhXCI7XG4gIFJlc3VsdFR5cGVbXCJkZWZlcnJlZFwiXSA9IFwiZGVmZXJyZWRcIjtcbiAgUmVzdWx0VHlwZVtcInJlZGlyZWN0XCJdID0gXCJyZWRpcmVjdFwiO1xuICBSZXN1bHRUeXBlW1wiZXJyb3JcIl0gPSBcImVycm9yXCI7XG59KShSZXN1bHRUeXBlIHx8IChSZXN1bHRUeXBlID0ge30pKTtcblxuZnVuY3Rpb24gaXNJbmRleFJvdXRlKHJvdXRlKSB7XG4gIHJldHVybiByb3V0ZS5pbmRleCA9PT0gdHJ1ZTtcbn0gLy8gV2FsayB0aGUgcm91dGUgdHJlZSBnZW5lcmF0aW5nIHVuaXF1ZSBJRHMgd2hlcmUgbmVjZXNzYXJ5IHNvIHdlIGFyZSB3b3JraW5nXG4vLyBzb2xlbHkgd2l0aCBBZ25vc3RpY0RhdGFSb3V0ZU9iamVjdCdzIHdpdGhpbiB0aGUgUm91dGVyXG5cblxuZnVuY3Rpb24gY29udmVydFJvdXRlc1RvRGF0YVJvdXRlcyhyb3V0ZXMsIHBhcmVudFBhdGgsIGFsbElkcykge1xuICBpZiAocGFyZW50UGF0aCA9PT0gdm9pZCAwKSB7XG4gICAgcGFyZW50UGF0aCA9IFtdO1xuICB9XG5cbiAgaWYgKGFsbElkcyA9PT0gdm9pZCAwKSB7XG4gICAgYWxsSWRzID0gbmV3IFNldCgpO1xuICB9XG5cbiAgcmV0dXJuIHJvdXRlcy5tYXAoKHJvdXRlLCBpbmRleCkgPT4ge1xuICAgIGxldCB0cmVlUGF0aCA9IFsuLi5wYXJlbnRQYXRoLCBpbmRleF07XG4gICAgbGV0IGlkID0gdHlwZW9mIHJvdXRlLmlkID09PSBcInN0cmluZ1wiID8gcm91dGUuaWQgOiB0cmVlUGF0aC5qb2luKFwiLVwiKTtcbiAgICBpbnZhcmlhbnQocm91dGUuaW5kZXggIT09IHRydWUgfHwgIXJvdXRlLmNoaWxkcmVuLCBcIkNhbm5vdCBzcGVjaWZ5IGNoaWxkcmVuIG9uIGFuIGluZGV4IHJvdXRlXCIpO1xuICAgIGludmFyaWFudCghYWxsSWRzLmhhcyhpZCksIFwiRm91bmQgYSByb3V0ZSBpZCBjb2xsaXNpb24gb24gaWQgXFxcIlwiICsgaWQgKyBcIlxcXCIuICBSb3V0ZSBcIiArIFwiaWQncyBtdXN0IGJlIGdsb2JhbGx5IHVuaXF1ZSB3aXRoaW4gRGF0YSBSb3V0ZXIgdXNhZ2VzXCIpO1xuICAgIGFsbElkcy5hZGQoaWQpO1xuXG4gICAgaWYgKGlzSW5kZXhSb3V0ZShyb3V0ZSkpIHtcbiAgICAgIGxldCBpbmRleFJvdXRlID0gX2V4dGVuZHMoe30sIHJvdXRlLCB7XG4gICAgICAgIGlkXG4gICAgICB9KTtcblxuICAgICAgcmV0dXJuIGluZGV4Um91dGU7XG4gICAgfSBlbHNlIHtcbiAgICAgIGxldCBwYXRoT3JMYXlvdXRSb3V0ZSA9IF9leHRlbmRzKHt9LCByb3V0ZSwge1xuICAgICAgICBpZCxcbiAgICAgICAgY2hpbGRyZW46IHJvdXRlLmNoaWxkcmVuID8gY29udmVydFJvdXRlc1RvRGF0YVJvdXRlcyhyb3V0ZS5jaGlsZHJlbiwgdHJlZVBhdGgsIGFsbElkcykgOiB1bmRlZmluZWRcbiAgICAgIH0pO1xuXG4gICAgICByZXR1cm4gcGF0aE9yTGF5b3V0Um91dGU7XG4gICAgfVxuICB9KTtcbn1cbi8qKlxuICogTWF0Y2hlcyB0aGUgZ2l2ZW4gcm91dGVzIHRvIGEgbG9jYXRpb24gYW5kIHJldHVybnMgdGhlIG1hdGNoIGRhdGEuXG4gKlxuICogQHNlZSBodHRwczovL3JlYWN0cm91dGVyLmNvbS9kb2NzL2VuL3Y2L3V0aWxzL21hdGNoLXJvdXRlc1xuICovXG5cbmZ1bmN0aW9uIG1hdGNoUm91dGVzKHJvdXRlcywgbG9jYXRpb25BcmcsIGJhc2VuYW1lKSB7XG4gIGlmIChiYXNlbmFtZSA9PT0gdm9pZCAwKSB7XG4gICAgYmFzZW5hbWUgPSBcIi9cIjtcbiAgfVxuXG4gIGxldCBsb2NhdGlvbiA9IHR5cGVvZiBsb2NhdGlvbkFyZyA9PT0gXCJzdHJpbmdcIiA/IHBhcnNlUGF0aChsb2NhdGlvbkFyZykgOiBsb2NhdGlvbkFyZztcbiAgbGV0IHBhdGhuYW1lID0gc3RyaXBCYXNlbmFtZShsb2NhdGlvbi5wYXRobmFtZSB8fCBcIi9cIiwgYmFzZW5hbWUpO1xuXG4gIGlmIChwYXRobmFtZSA9PSBudWxsKSB7XG4gICAgcmV0dXJuIG51bGw7XG4gIH1cblxuICBsZXQgYnJhbmNoZXMgPSBmbGF0dGVuUm91dGVzKHJvdXRlcyk7XG4gIHJhbmtSb3V0ZUJyYW5jaGVzKGJyYW5jaGVzKTtcbiAgbGV0IG1hdGNoZXMgPSBudWxsO1xuXG4gIGZvciAobGV0IGkgPSAwOyBtYXRjaGVzID09IG51bGwgJiYgaSA8IGJyYW5jaGVzLmxlbmd0aDsgKytpKSB7XG4gICAgbWF0Y2hlcyA9IG1hdGNoUm91dGVCcmFuY2goYnJhbmNoZXNbaV0sIHBhdGhuYW1lKTtcbiAgfVxuXG4gIHJldHVybiBtYXRjaGVzO1xufVxuXG5mdW5jdGlvbiBmbGF0dGVuUm91dGVzKHJvdXRlcywgYnJhbmNoZXMsIHBhcmVudHNNZXRhLCBwYXJlbnRQYXRoKSB7XG4gIGlmIChicmFuY2hlcyA9PT0gdm9pZCAwKSB7XG4gICAgYnJhbmNoZXMgPSBbXTtcbiAgfVxuXG4gIGlmIChwYXJlbnRzTWV0YSA9PT0gdm9pZCAwKSB7XG4gICAgcGFyZW50c01ldGEgPSBbXTtcbiAgfVxuXG4gIGlmIChwYXJlbnRQYXRoID09PSB2b2lkIDApIHtcbiAgICBwYXJlbnRQYXRoID0gXCJcIjtcbiAgfVxuXG4gIHJvdXRlcy5mb3JFYWNoKChyb3V0ZSwgaW5kZXgpID0+IHtcbiAgICBsZXQgbWV0YSA9IHtcbiAgICAgIHJlbGF0aXZlUGF0aDogcm91dGUucGF0aCB8fCBcIlwiLFxuICAgICAgY2FzZVNlbnNpdGl2ZTogcm91dGUuY2FzZVNlbnNpdGl2ZSA9PT0gdHJ1ZSxcbiAgICAgIGNoaWxkcmVuSW5kZXg6IGluZGV4LFxuICAgICAgcm91dGVcbiAgICB9O1xuXG4gICAgaWYgKG1ldGEucmVsYXRpdmVQYXRoLnN0YXJ0c1dpdGgoXCIvXCIpKSB7XG4gICAgICBpbnZhcmlhbnQobWV0YS5yZWxhdGl2ZVBhdGguc3RhcnRzV2l0aChwYXJlbnRQYXRoKSwgXCJBYnNvbHV0ZSByb3V0ZSBwYXRoIFxcXCJcIiArIG1ldGEucmVsYXRpdmVQYXRoICsgXCJcXFwiIG5lc3RlZCB1bmRlciBwYXRoIFwiICsgKFwiXFxcIlwiICsgcGFyZW50UGF0aCArIFwiXFxcIiBpcyBub3QgdmFsaWQuIEFuIGFic29sdXRlIGNoaWxkIHJvdXRlIHBhdGggXCIpICsgXCJtdXN0IHN0YXJ0IHdpdGggdGhlIGNvbWJpbmVkIHBhdGggb2YgYWxsIGl0cyBwYXJlbnQgcm91dGVzLlwiKTtcbiAgICAgIG1ldGEucmVsYXRpdmVQYXRoID0gbWV0YS5yZWxhdGl2ZVBhdGguc2xpY2UocGFyZW50UGF0aC5sZW5ndGgpO1xuICAgIH1cblxuICAgIGxldCBwYXRoID0gam9pblBhdGhzKFtwYXJlbnRQYXRoLCBtZXRhLnJlbGF0aXZlUGF0aF0pO1xuICAgIGxldCByb3V0ZXNNZXRhID0gcGFyZW50c01ldGEuY29uY2F0KG1ldGEpOyAvLyBBZGQgdGhlIGNoaWxkcmVuIGJlZm9yZSBhZGRpbmcgdGhpcyByb3V0ZSB0byB0aGUgYXJyYXkgc28gd2UgdHJhdmVyc2UgdGhlXG4gICAgLy8gcm91dGUgdHJlZSBkZXB0aC1maXJzdCBhbmQgY2hpbGQgcm91dGVzIGFwcGVhciBiZWZvcmUgdGhlaXIgcGFyZW50cyBpblxuICAgIC8vIHRoZSBcImZsYXR0ZW5lZFwiIHZlcnNpb24uXG5cbiAgICBpZiAocm91dGUuY2hpbGRyZW4gJiYgcm91dGUuY2hpbGRyZW4ubGVuZ3RoID4gMCkge1xuICAgICAgaW52YXJpYW50KCAvLyBPdXIgdHlwZXMga25vdyBiZXR0ZXIsIGJ1dCBydW50aW1lIEpTIG1heSBub3QhXG4gICAgICAvLyBAdHMtZXhwZWN0LWVycm9yXG4gICAgICByb3V0ZS5pbmRleCAhPT0gdHJ1ZSwgXCJJbmRleCByb3V0ZXMgbXVzdCBub3QgaGF2ZSBjaGlsZCByb3V0ZXMuIFBsZWFzZSByZW1vdmUgXCIgKyAoXCJhbGwgY2hpbGQgcm91dGVzIGZyb20gcm91dGUgcGF0aCBcXFwiXCIgKyBwYXRoICsgXCJcXFwiLlwiKSk7XG4gICAgICBmbGF0dGVuUm91dGVzKHJvdXRlLmNoaWxkcmVuLCBicmFuY2hlcywgcm91dGVzTWV0YSwgcGF0aCk7XG4gICAgfSAvLyBSb3V0ZXMgd2l0aG91dCBhIHBhdGggc2hvdWxkbid0IGV2ZXIgbWF0Y2ggYnkgdGhlbXNlbHZlcyB1bmxlc3MgdGhleSBhcmVcbiAgICAvLyBpbmRleCByb3V0ZXMsIHNvIGRvbid0IGFkZCB0aGVtIHRvIHRoZSBsaXN0IG9mIHBvc3NpYmxlIGJyYW5jaGVzLlxuXG5cbiAgICBpZiAocm91dGUucGF0aCA9PSBudWxsICYmICFyb3V0ZS5pbmRleCkge1xuICAgICAgcmV0dXJuO1xuICAgIH1cblxuICAgIGJyYW5jaGVzLnB1c2goe1xuICAgICAgcGF0aCxcbiAgICAgIHNjb3JlOiBjb21wdXRlU2NvcmUocGF0aCwgcm91dGUuaW5kZXgpLFxuICAgICAgcm91dGVzTWV0YVxuICAgIH0pO1xuICB9KTtcbiAgcmV0dXJuIGJyYW5jaGVzO1xufVxuXG5mdW5jdGlvbiByYW5rUm91dGVCcmFuY2hlcyhicmFuY2hlcykge1xuICBicmFuY2hlcy5zb3J0KChhLCBiKSA9PiBhLnNjb3JlICE9PSBiLnNjb3JlID8gYi5zY29yZSAtIGEuc2NvcmUgLy8gSGlnaGVyIHNjb3JlIGZpcnN0XG4gIDogY29tcGFyZUluZGV4ZXMoYS5yb3V0ZXNNZXRhLm1hcChtZXRhID0+IG1ldGEuY2hpbGRyZW5JbmRleCksIGIucm91dGVzTWV0YS5tYXAobWV0YSA9PiBtZXRhLmNoaWxkcmVuSW5kZXgpKSk7XG59XG5cbmNvbnN0IHBhcmFtUmUgPSAvXjpcXHcrJC87XG5jb25zdCBkeW5hbWljU2VnbWVudFZhbHVlID0gMztcbmNvbnN0IGluZGV4Um91dGVWYWx1ZSA9IDI7XG5jb25zdCBlbXB0eVNlZ21lbnRWYWx1ZSA9IDE7XG5jb25zdCBzdGF0aWNTZWdtZW50VmFsdWUgPSAxMDtcbmNvbnN0IHNwbGF0UGVuYWx0eSA9IC0yO1xuXG5jb25zdCBpc1NwbGF0ID0gcyA9PiBzID09PSBcIipcIjtcblxuZnVuY3Rpb24gY29tcHV0ZVNjb3JlKHBhdGgsIGluZGV4KSB7XG4gIGxldCBzZWdtZW50cyA9IHBhdGguc3BsaXQoXCIvXCIpO1xuICBsZXQgaW5pdGlhbFNjb3JlID0gc2VnbWVudHMubGVuZ3RoO1xuXG4gIGlmIChzZWdtZW50cy5zb21lKGlzU3BsYXQpKSB7XG4gICAgaW5pdGlhbFNjb3JlICs9IHNwbGF0UGVuYWx0eTtcbiAgfVxuXG4gIGlmIChpbmRleCkge1xuICAgIGluaXRpYWxTY29yZSArPSBpbmRleFJvdXRlVmFsdWU7XG4gIH1cblxuICByZXR1cm4gc2VnbWVudHMuZmlsdGVyKHMgPT4gIWlzU3BsYXQocykpLnJlZHVjZSgoc2NvcmUsIHNlZ21lbnQpID0+IHNjb3JlICsgKHBhcmFtUmUudGVzdChzZWdtZW50KSA/IGR5bmFtaWNTZWdtZW50VmFsdWUgOiBzZWdtZW50ID09PSBcIlwiID8gZW1wdHlTZWdtZW50VmFsdWUgOiBzdGF0aWNTZWdtZW50VmFsdWUpLCBpbml0aWFsU2NvcmUpO1xufVxuXG5mdW5jdGlvbiBjb21wYXJlSW5kZXhlcyhhLCBiKSB7XG4gIGxldCBzaWJsaW5ncyA9IGEubGVuZ3RoID09PSBiLmxlbmd0aCAmJiBhLnNsaWNlKDAsIC0xKS5ldmVyeSgobiwgaSkgPT4gbiA9PT0gYltpXSk7XG4gIHJldHVybiBzaWJsaW5ncyA/IC8vIElmIHR3byByb3V0ZXMgYXJlIHNpYmxpbmdzLCB3ZSBzaG91bGQgdHJ5IHRvIG1hdGNoIHRoZSBlYXJsaWVyIHNpYmxpbmdcbiAgLy8gZmlyc3QuIFRoaXMgYWxsb3dzIHBlb3BsZSB0byBoYXZlIGZpbmUtZ3JhaW5lZCBjb250cm9sIG92ZXIgdGhlIG1hdGNoaW5nXG4gIC8vIGJlaGF2aW9yIGJ5IHNpbXBseSBwdXR0aW5nIHJvdXRlcyB3aXRoIGlkZW50aWNhbCBwYXRocyBpbiB0aGUgb3JkZXIgdGhleVxuICAvLyB3YW50IHRoZW0gdHJpZWQuXG4gIGFbYS5sZW5ndGggLSAxXSAtIGJbYi5sZW5ndGggLSAxXSA6IC8vIE90aGVyd2lzZSwgaXQgZG9lc24ndCByZWFsbHkgbWFrZSBzZW5zZSB0byByYW5rIG5vbi1zaWJsaW5ncyBieSBpbmRleCxcbiAgLy8gc28gdGhleSBzb3J0IGVxdWFsbHkuXG4gIDA7XG59XG5cbmZ1bmN0aW9uIG1hdGNoUm91dGVCcmFuY2goYnJhbmNoLCBwYXRobmFtZSkge1xuICBsZXQge1xuICAgIHJvdXRlc01ldGFcbiAgfSA9IGJyYW5jaDtcbiAgbGV0IG1hdGNoZWRQYXJhbXMgPSB7fTtcbiAgbGV0IG1hdGNoZWRQYXRobmFtZSA9IFwiL1wiO1xuICBsZXQgbWF0Y2hlcyA9IFtdO1xuXG4gIGZvciAobGV0IGkgPSAwOyBpIDwgcm91dGVzTWV0YS5sZW5ndGg7ICsraSkge1xuICAgIGxldCBtZXRhID0gcm91dGVzTWV0YVtpXTtcbiAgICBsZXQgZW5kID0gaSA9PT0gcm91dGVzTWV0YS5sZW5ndGggLSAxO1xuICAgIGxldCByZW1haW5pbmdQYXRobmFtZSA9IG1hdGNoZWRQYXRobmFtZSA9PT0gXCIvXCIgPyBwYXRobmFtZSA6IHBhdGhuYW1lLnNsaWNlKG1hdGNoZWRQYXRobmFtZS5sZW5ndGgpIHx8IFwiL1wiO1xuICAgIGxldCBtYXRjaCA9IG1hdGNoUGF0aCh7XG4gICAgICBwYXRoOiBtZXRhLnJlbGF0aXZlUGF0aCxcbiAgICAgIGNhc2VTZW5zaXRpdmU6IG1ldGEuY2FzZVNlbnNpdGl2ZSxcbiAgICAgIGVuZFxuICAgIH0sIHJlbWFpbmluZ1BhdGhuYW1lKTtcbiAgICBpZiAoIW1hdGNoKSByZXR1cm4gbnVsbDtcbiAgICBPYmplY3QuYXNzaWduKG1hdGNoZWRQYXJhbXMsIG1hdGNoLnBhcmFtcyk7XG4gICAgbGV0IHJvdXRlID0gbWV0YS5yb3V0ZTtcbiAgICBtYXRjaGVzLnB1c2goe1xuICAgICAgLy8gVE9ETzogQ2FuIHRoaXMgYXMgYmUgYXZvaWRlZD9cbiAgICAgIHBhcmFtczogbWF0Y2hlZFBhcmFtcyxcbiAgICAgIHBhdGhuYW1lOiBqb2luUGF0aHMoW21hdGNoZWRQYXRobmFtZSwgbWF0Y2gucGF0aG5hbWVdKSxcbiAgICAgIHBhdGhuYW1lQmFzZTogbm9ybWFsaXplUGF0aG5hbWUoam9pblBhdGhzKFttYXRjaGVkUGF0aG5hbWUsIG1hdGNoLnBhdGhuYW1lQmFzZV0pKSxcbiAgICAgIHJvdXRlXG4gICAgfSk7XG5cbiAgICBpZiAobWF0Y2gucGF0aG5hbWVCYXNlICE9PSBcIi9cIikge1xuICAgICAgbWF0Y2hlZFBhdGhuYW1lID0gam9pblBhdGhzKFttYXRjaGVkUGF0aG5hbWUsIG1hdGNoLnBhdGhuYW1lQmFzZV0pO1xuICAgIH1cbiAgfVxuXG4gIHJldHVybiBtYXRjaGVzO1xufVxuLyoqXG4gKiBSZXR1cm5zIGEgcGF0aCB3aXRoIHBhcmFtcyBpbnRlcnBvbGF0ZWQuXG4gKlxuICogQHNlZSBodHRwczovL3JlYWN0cm91dGVyLmNvbS9kb2NzL2VuL3Y2L3V0aWxzL2dlbmVyYXRlLXBhdGhcbiAqL1xuXG5cbmZ1bmN0aW9uIGdlbmVyYXRlUGF0aChwYXRoLCBwYXJhbXMpIHtcbiAgaWYgKHBhcmFtcyA9PT0gdm9pZCAwKSB7XG4gICAgcGFyYW1zID0ge307XG4gIH1cblxuICByZXR1cm4gcGF0aC5yZXBsYWNlKC86KFxcdyspL2csIChfLCBrZXkpID0+IHtcbiAgICBpbnZhcmlhbnQocGFyYW1zW2tleV0gIT0gbnVsbCwgXCJNaXNzaW5nIFxcXCI6XCIgKyBrZXkgKyBcIlxcXCIgcGFyYW1cIik7XG4gICAgcmV0dXJuIHBhcmFtc1trZXldO1xuICB9KS5yZXBsYWNlKC8oXFwvPylcXCovLCAoXywgcHJlZml4LCBfXywgc3RyKSA9PiB7XG4gICAgY29uc3Qgc3RhciA9IFwiKlwiO1xuXG4gICAgaWYgKHBhcmFtc1tzdGFyXSA9PSBudWxsKSB7XG4gICAgICAvLyBJZiBubyBzcGxhdCB3YXMgcHJvdmlkZWQsIHRyaW0gdGhlIHRyYWlsaW5nIHNsYXNoIF91bmxlc3NfIGl0J3NcbiAgICAgIC8vIHRoZSBlbnRpcmUgcGF0aFxuICAgICAgcmV0dXJuIHN0ciA9PT0gXCIvKlwiID8gXCIvXCIgOiBcIlwiO1xuICAgIH0gLy8gQXBwbHkgdGhlIHNwbGF0XG5cblxuICAgIHJldHVybiBcIlwiICsgcHJlZml4ICsgcGFyYW1zW3N0YXJdO1xuICB9KTtcbn1cbi8qKlxuICogUGVyZm9ybXMgcGF0dGVybiBtYXRjaGluZyBvbiBhIFVSTCBwYXRobmFtZSBhbmQgcmV0dXJucyBpbmZvcm1hdGlvbiBhYm91dFxuICogdGhlIG1hdGNoLlxuICpcbiAqIEBzZWUgaHR0cHM6Ly9yZWFjdHJvdXRlci5jb20vZG9jcy9lbi92Ni91dGlscy9tYXRjaC1wYXRoXG4gKi9cblxuZnVuY3Rpb24gbWF0Y2hQYXRoKHBhdHRlcm4sIHBhdGhuYW1lKSB7XG4gIGlmICh0eXBlb2YgcGF0dGVybiA9PT0gXCJzdHJpbmdcIikge1xuICAgIHBhdHRlcm4gPSB7XG4gICAgICBwYXRoOiBwYXR0ZXJuLFxuICAgICAgY2FzZVNlbnNpdGl2ZTogZmFsc2UsXG4gICAgICBlbmQ6IHRydWVcbiAgICB9O1xuICB9XG5cbiAgbGV0IFttYXRjaGVyLCBwYXJhbU5hbWVzXSA9IGNvbXBpbGVQYXRoKHBhdHRlcm4ucGF0aCwgcGF0dGVybi5jYXNlU2Vuc2l0aXZlLCBwYXR0ZXJuLmVuZCk7XG4gIGxldCBtYXRjaCA9IHBhdGhuYW1lLm1hdGNoKG1hdGNoZXIpO1xuICBpZiAoIW1hdGNoKSByZXR1cm4gbnVsbDtcbiAgbGV0IG1hdGNoZWRQYXRobmFtZSA9IG1hdGNoWzBdO1xuICBsZXQgcGF0aG5hbWVCYXNlID0gbWF0Y2hlZFBhdGhuYW1lLnJlcGxhY2UoLyguKVxcLyskLywgXCIkMVwiKTtcbiAgbGV0IGNhcHR1cmVHcm91cHMgPSBtYXRjaC5zbGljZSgxKTtcbiAgbGV0IHBhcmFtcyA9IHBhcmFtTmFtZXMucmVkdWNlKChtZW1vLCBwYXJhbU5hbWUsIGluZGV4KSA9PiB7XG4gICAgLy8gV2UgbmVlZCB0byBjb21wdXRlIHRoZSBwYXRobmFtZUJhc2UgaGVyZSB1c2luZyB0aGUgcmF3IHNwbGF0IHZhbHVlXG4gICAgLy8gaW5zdGVhZCBvZiB1c2luZyBwYXJhbXNbXCIqXCJdIGxhdGVyIGJlY2F1c2UgaXQgd2lsbCBiZSBkZWNvZGVkIHRoZW5cbiAgICBpZiAocGFyYW1OYW1lID09PSBcIipcIikge1xuICAgICAgbGV0IHNwbGF0VmFsdWUgPSBjYXB0dXJlR3JvdXBzW2luZGV4XSB8fCBcIlwiO1xuICAgICAgcGF0aG5hbWVCYXNlID0gbWF0Y2hlZFBhdGhuYW1lLnNsaWNlKDAsIG1hdGNoZWRQYXRobmFtZS5sZW5ndGggLSBzcGxhdFZhbHVlLmxlbmd0aCkucmVwbGFjZSgvKC4pXFwvKyQvLCBcIiQxXCIpO1xuICAgIH1cblxuICAgIG1lbW9bcGFyYW1OYW1lXSA9IHNhZmVseURlY29kZVVSSUNvbXBvbmVudChjYXB0dXJlR3JvdXBzW2luZGV4XSB8fCBcIlwiLCBwYXJhbU5hbWUpO1xuICAgIHJldHVybiBtZW1vO1xuICB9LCB7fSk7XG4gIHJldHVybiB7XG4gICAgcGFyYW1zLFxuICAgIHBhdGhuYW1lOiBtYXRjaGVkUGF0aG5hbWUsXG4gICAgcGF0aG5hbWVCYXNlLFxuICAgIHBhdHRlcm5cbiAgfTtcbn1cblxuZnVuY3Rpb24gY29tcGlsZVBhdGgocGF0aCwgY2FzZVNlbnNpdGl2ZSwgZW5kKSB7XG4gIGlmIChjYXNlU2Vuc2l0aXZlID09PSB2b2lkIDApIHtcbiAgICBjYXNlU2Vuc2l0aXZlID0gZmFsc2U7XG4gIH1cblxuICBpZiAoZW5kID09PSB2b2lkIDApIHtcbiAgICBlbmQgPSB0cnVlO1xuICB9XG5cbiAgd2FybmluZyhwYXRoID09PSBcIipcIiB8fCAhcGF0aC5lbmRzV2l0aChcIipcIikgfHwgcGF0aC5lbmRzV2l0aChcIi8qXCIpLCBcIlJvdXRlIHBhdGggXFxcIlwiICsgcGF0aCArIFwiXFxcIiB3aWxsIGJlIHRyZWF0ZWQgYXMgaWYgaXQgd2VyZSBcIiArIChcIlxcXCJcIiArIHBhdGgucmVwbGFjZSgvXFwqJC8sIFwiLypcIikgKyBcIlxcXCIgYmVjYXVzZSB0aGUgYCpgIGNoYXJhY3RlciBtdXN0IFwiKSArIFwiYWx3YXlzIGZvbGxvdyBhIGAvYCBpbiB0aGUgcGF0dGVybi4gVG8gZ2V0IHJpZCBvZiB0aGlzIHdhcm5pbmcsIFwiICsgKFwicGxlYXNlIGNoYW5nZSB0aGUgcm91dGUgcGF0aCB0byBcXFwiXCIgKyBwYXRoLnJlcGxhY2UoL1xcKiQvLCBcIi8qXCIpICsgXCJcXFwiLlwiKSk7XG4gIGxldCBwYXJhbU5hbWVzID0gW107XG4gIGxldCByZWdleHBTb3VyY2UgPSBcIl5cIiArIHBhdGgucmVwbGFjZSgvXFwvKlxcKj8kLywgXCJcIikgLy8gSWdub3JlIHRyYWlsaW5nIC8gYW5kIC8qLCB3ZSdsbCBoYW5kbGUgaXQgYmVsb3dcbiAgLnJlcGxhY2UoL15cXC8qLywgXCIvXCIpIC8vIE1ha2Ugc3VyZSBpdCBoYXMgYSBsZWFkaW5nIC9cbiAgLnJlcGxhY2UoL1tcXFxcLiorXiQ/e318KClbXFxdXS9nLCBcIlxcXFwkJlwiKSAvLyBFc2NhcGUgc3BlY2lhbCByZWdleCBjaGFyc1xuICAucmVwbGFjZSgvOihcXHcrKS9nLCAoXywgcGFyYW1OYW1lKSA9PiB7XG4gICAgcGFyYW1OYW1lcy5wdXNoKHBhcmFtTmFtZSk7XG4gICAgcmV0dXJuIFwiKFteXFxcXC9dKylcIjtcbiAgfSk7XG5cbiAgaWYgKHBhdGguZW5kc1dpdGgoXCIqXCIpKSB7XG4gICAgcGFyYW1OYW1lcy5wdXNoKFwiKlwiKTtcbiAgICByZWdleHBTb3VyY2UgKz0gcGF0aCA9PT0gXCIqXCIgfHwgcGF0aCA9PT0gXCIvKlwiID8gXCIoLiopJFwiIC8vIEFscmVhZHkgbWF0Y2hlZCB0aGUgaW5pdGlhbCAvLCBqdXN0IG1hdGNoIHRoZSByZXN0XG4gICAgOiBcIig/OlxcXFwvKC4rKXxcXFxcLyopJFwiOyAvLyBEb24ndCBpbmNsdWRlIHRoZSAvIGluIHBhcmFtc1tcIipcIl1cbiAgfSBlbHNlIGlmIChlbmQpIHtcbiAgICAvLyBXaGVuIG1hdGNoaW5nIHRvIHRoZSBlbmQsIGlnbm9yZSB0cmFpbGluZyBzbGFzaGVzXG4gICAgcmVnZXhwU291cmNlICs9IFwiXFxcXC8qJFwiO1xuICB9IGVsc2UgaWYgKHBhdGggIT09IFwiXCIgJiYgcGF0aCAhPT0gXCIvXCIpIHtcbiAgICAvLyBJZiBvdXIgcGF0aCBpcyBub24tZW1wdHkgYW5kIGNvbnRhaW5zIGFueXRoaW5nIGJleW9uZCBhbiBpbml0aWFsIHNsYXNoLFxuICAgIC8vIHRoZW4gd2UgaGF2ZSBfc29tZV8gZm9ybSBvZiBwYXRoIGluIG91ciByZWdleCBzbyB3ZSBzaG91bGQgZXhwZWN0IHRvXG4gICAgLy8gbWF0Y2ggb25seSBpZiB3ZSBmaW5kIHRoZSBlbmQgb2YgdGhpcyBwYXRoIHNlZ21lbnQuICBMb29rIGZvciBhbiBvcHRpb25hbFxuICAgIC8vIG5vbi1jYXB0dXJlZCB0cmFpbGluZyBzbGFzaCAodG8gbWF0Y2ggYSBwb3J0aW9uIG9mIHRoZSBVUkwpIG9yIHRoZSBlbmRcbiAgICAvLyBvZiB0aGUgcGF0aCAoaWYgd2UndmUgbWF0Y2hlZCB0byB0aGUgZW5kKS4gIFdlIHVzZWQgdG8gZG8gdGhpcyB3aXRoIGFcbiAgICAvLyB3b3JkIGJvdW5kYXJ5IGJ1dCB0aGF0IGdpdmVzIGZhbHNlIHBvc2l0aXZlcyBvbiByb3V0ZXMgbGlrZVxuICAgIC8vIC91c2VyLXByZWZlcmVuY2VzIHNpbmNlIGAtYCBjb3VudHMgYXMgYSB3b3JkIGJvdW5kYXJ5LlxuICAgIHJlZ2V4cFNvdXJjZSArPSBcIig/Oig/PVxcXFwvfCQpKVwiO1xuICB9IGVsc2UgO1xuXG4gIGxldCBtYXRjaGVyID0gbmV3IFJlZ0V4cChyZWdleHBTb3VyY2UsIGNhc2VTZW5zaXRpdmUgPyB1bmRlZmluZWQgOiBcImlcIik7XG4gIHJldHVybiBbbWF0Y2hlciwgcGFyYW1OYW1lc107XG59XG5cbmZ1bmN0aW9uIHNhZmVseURlY29kZVVSSUNvbXBvbmVudCh2YWx1ZSwgcGFyYW1OYW1lKSB7XG4gIHRyeSB7XG4gICAgcmV0dXJuIGRlY29kZVVSSUNvbXBvbmVudCh2YWx1ZSk7XG4gIH0gY2F0Y2ggKGVycm9yKSB7XG4gICAgd2FybmluZyhmYWxzZSwgXCJUaGUgdmFsdWUgZm9yIHRoZSBVUkwgcGFyYW0gXFxcIlwiICsgcGFyYW1OYW1lICsgXCJcXFwiIHdpbGwgbm90IGJlIGRlY29kZWQgYmVjYXVzZVwiICsgKFwiIHRoZSBzdHJpbmcgXFxcIlwiICsgdmFsdWUgKyBcIlxcXCIgaXMgYSBtYWxmb3JtZWQgVVJMIHNlZ21lbnQuIFRoaXMgaXMgcHJvYmFibHlcIikgKyAoXCIgZHVlIHRvIGEgYmFkIHBlcmNlbnQgZW5jb2RpbmcgKFwiICsgZXJyb3IgKyBcIikuXCIpKTtcbiAgICByZXR1cm4gdmFsdWU7XG4gIH1cbn1cbi8qKlxuICogQHByaXZhdGVcbiAqL1xuXG5cbmZ1bmN0aW9uIHN0cmlwQmFzZW5hbWUocGF0aG5hbWUsIGJhc2VuYW1lKSB7XG4gIGlmIChiYXNlbmFtZSA9PT0gXCIvXCIpIHJldHVybiBwYXRobmFtZTtcblxuICBpZiAoIXBhdGhuYW1lLnRvTG93ZXJDYXNlKCkuc3RhcnRzV2l0aChiYXNlbmFtZS50b0xvd2VyQ2FzZSgpKSkge1xuICAgIHJldHVybiBudWxsO1xuICB9IC8vIFdlIHdhbnQgdG8gbGVhdmUgdHJhaWxpbmcgc2xhc2ggYmVoYXZpb3IgaW4gdGhlIHVzZXIncyBjb250cm9sLCBzbyBpZiB0aGV5XG4gIC8vIHNwZWNpZnkgYSBiYXNlbmFtZSB3aXRoIGEgdHJhaWxpbmcgc2xhc2gsIHdlIHNob3VsZCBzdXBwb3J0IGl0XG5cblxuICBsZXQgc3RhcnRJbmRleCA9IGJhc2VuYW1lLmVuZHNXaXRoKFwiL1wiKSA/IGJhc2VuYW1lLmxlbmd0aCAtIDEgOiBiYXNlbmFtZS5sZW5ndGg7XG4gIGxldCBuZXh0Q2hhciA9IHBhdGhuYW1lLmNoYXJBdChzdGFydEluZGV4KTtcblxuICBpZiAobmV4dENoYXIgJiYgbmV4dENoYXIgIT09IFwiL1wiKSB7XG4gICAgLy8gcGF0aG5hbWUgZG9lcyBub3Qgc3RhcnQgd2l0aCBiYXNlbmFtZS9cbiAgICByZXR1cm4gbnVsbDtcbiAgfVxuXG4gIHJldHVybiBwYXRobmFtZS5zbGljZShzdGFydEluZGV4KSB8fCBcIi9cIjtcbn1cbmZ1bmN0aW9uIGludmFyaWFudCh2YWx1ZSwgbWVzc2FnZSkge1xuICBpZiAodmFsdWUgPT09IGZhbHNlIHx8IHZhbHVlID09PSBudWxsIHx8IHR5cGVvZiB2YWx1ZSA9PT0gXCJ1bmRlZmluZWRcIikge1xuICAgIHRocm93IG5ldyBFcnJvcihtZXNzYWdlKTtcbiAgfVxufVxuLyoqXG4gKiBAcHJpdmF0ZVxuICovXG5cbmZ1bmN0aW9uIHdhcm5pbmcoY29uZCwgbWVzc2FnZSkge1xuICBpZiAoIWNvbmQpIHtcbiAgICAvLyBlc2xpbnQtZGlzYWJsZS1uZXh0LWxpbmUgbm8tY29uc29sZVxuICAgIGlmICh0eXBlb2YgY29uc29sZSAhPT0gXCJ1bmRlZmluZWRcIikgY29uc29sZS53YXJuKG1lc3NhZ2UpO1xuXG4gICAgdHJ5IHtcbiAgICAgIC8vIFdlbGNvbWUgdG8gZGVidWdnaW5nIFJlYWN0IFJvdXRlciFcbiAgICAgIC8vXG4gICAgICAvLyBUaGlzIGVycm9yIGlzIHRocm93biBhcyBhIGNvbnZlbmllbmNlIHNvIHlvdSBjYW4gbW9yZSBlYXNpbHlcbiAgICAgIC8vIGZpbmQgdGhlIHNvdXJjZSBmb3IgYSB3YXJuaW5nIHRoYXQgYXBwZWFycyBpbiB0aGUgY29uc29sZSBieVxuICAgICAgLy8gZW5hYmxpbmcgXCJwYXVzZSBvbiBleGNlcHRpb25zXCIgaW4geW91ciBKYXZhU2NyaXB0IGRlYnVnZ2VyLlxuICAgICAgdGhyb3cgbmV3IEVycm9yKG1lc3NhZ2UpOyAvLyBlc2xpbnQtZGlzYWJsZS1uZXh0LWxpbmUgbm8tZW1wdHlcbiAgICB9IGNhdGNoIChlKSB7fVxuICB9XG59XG4vKipcbiAqIFJldHVybnMgYSByZXNvbHZlZCBwYXRoIG9iamVjdCByZWxhdGl2ZSB0byB0aGUgZ2l2ZW4gcGF0aG5hbWUuXG4gKlxuICogQHNlZSBodHRwczovL3JlYWN0cm91dGVyLmNvbS9kb2NzL2VuL3Y2L3V0aWxzL3Jlc29sdmUtcGF0aFxuICovXG5cbmZ1bmN0aW9uIHJlc29sdmVQYXRoKHRvLCBmcm9tUGF0aG5hbWUpIHtcbiAgaWYgKGZyb21QYXRobmFtZSA9PT0gdm9pZCAwKSB7XG4gICAgZnJvbVBhdGhuYW1lID0gXCIvXCI7XG4gIH1cblxuICBsZXQge1xuICAgIHBhdGhuYW1lOiB0b1BhdGhuYW1lLFxuICAgIHNlYXJjaCA9IFwiXCIsXG4gICAgaGFzaCA9IFwiXCJcbiAgfSA9IHR5cGVvZiB0byA9PT0gXCJzdHJpbmdcIiA/IHBhcnNlUGF0aCh0bykgOiB0bztcbiAgbGV0IHBhdGhuYW1lID0gdG9QYXRobmFtZSA/IHRvUGF0aG5hbWUuc3RhcnRzV2l0aChcIi9cIikgPyB0b1BhdGhuYW1lIDogcmVzb2x2ZVBhdGhuYW1lKHRvUGF0aG5hbWUsIGZyb21QYXRobmFtZSkgOiBmcm9tUGF0aG5hbWU7XG4gIHJldHVybiB7XG4gICAgcGF0aG5hbWUsXG4gICAgc2VhcmNoOiBub3JtYWxpemVTZWFyY2goc2VhcmNoKSxcbiAgICBoYXNoOiBub3JtYWxpemVIYXNoKGhhc2gpXG4gIH07XG59XG5cbmZ1bmN0aW9uIHJlc29sdmVQYXRobmFtZShyZWxhdGl2ZVBhdGgsIGZyb21QYXRobmFtZSkge1xuICBsZXQgc2VnbWVudHMgPSBmcm9tUGF0aG5hbWUucmVwbGFjZSgvXFwvKyQvLCBcIlwiKS5zcGxpdChcIi9cIik7XG4gIGxldCByZWxhdGl2ZVNlZ21lbnRzID0gcmVsYXRpdmVQYXRoLnNwbGl0KFwiL1wiKTtcbiAgcmVsYXRpdmVTZWdtZW50cy5mb3JFYWNoKHNlZ21lbnQgPT4ge1xuICAgIGlmIChzZWdtZW50ID09PSBcIi4uXCIpIHtcbiAgICAgIC8vIEtlZXAgdGhlIHJvb3QgXCJcIiBzZWdtZW50IHNvIHRoZSBwYXRobmFtZSBzdGFydHMgYXQgL1xuICAgICAgaWYgKHNlZ21lbnRzLmxlbmd0aCA+IDEpIHNlZ21lbnRzLnBvcCgpO1xuICAgIH0gZWxzZSBpZiAoc2VnbWVudCAhPT0gXCIuXCIpIHtcbiAgICAgIHNlZ21lbnRzLnB1c2goc2VnbWVudCk7XG4gICAgfVxuICB9KTtcbiAgcmV0dXJuIHNlZ21lbnRzLmxlbmd0aCA+IDEgPyBzZWdtZW50cy5qb2luKFwiL1wiKSA6IFwiL1wiO1xufVxuXG5mdW5jdGlvbiBnZXRJbnZhbGlkUGF0aEVycm9yKGNoYXIsIGZpZWxkLCBkZXN0LCBwYXRoKSB7XG4gIHJldHVybiBcIkNhbm5vdCBpbmNsdWRlIGEgJ1wiICsgY2hhciArIFwiJyBjaGFyYWN0ZXIgaW4gYSBtYW51YWxseSBzcGVjaWZpZWQgXCIgKyAoXCJgdG8uXCIgKyBmaWVsZCArIFwiYCBmaWVsZCBbXCIgKyBKU09OLnN0cmluZ2lmeShwYXRoKSArIFwiXS4gIFBsZWFzZSBzZXBhcmF0ZSBpdCBvdXQgdG8gdGhlIFwiKSArIChcImB0by5cIiArIGRlc3QgKyBcImAgZmllbGQuIEFsdGVybmF0aXZlbHkgeW91IG1heSBwcm92aWRlIHRoZSBmdWxsIHBhdGggYXMgXCIpICsgXCJhIHN0cmluZyBpbiA8TGluayB0bz1cXFwiLi4uXFxcIj4gYW5kIHRoZSByb3V0ZXIgd2lsbCBwYXJzZSBpdCBmb3IgeW91LlwiO1xufVxuLyoqXG4gKiBAcHJpdmF0ZVxuICovXG5cblxuZnVuY3Rpb24gcmVzb2x2ZVRvKHRvQXJnLCByb3V0ZVBhdGhuYW1lcywgbG9jYXRpb25QYXRobmFtZSwgaXNQYXRoUmVsYXRpdmUpIHtcbiAgaWYgKGlzUGF0aFJlbGF0aXZlID09PSB2b2lkIDApIHtcbiAgICBpc1BhdGhSZWxhdGl2ZSA9IGZhbHNlO1xuICB9XG5cbiAgbGV0IHRvO1xuXG4gIGlmICh0eXBlb2YgdG9BcmcgPT09IFwic3RyaW5nXCIpIHtcbiAgICB0byA9IHBhcnNlUGF0aCh0b0FyZyk7XG4gIH0gZWxzZSB7XG4gICAgdG8gPSBfZXh0ZW5kcyh7fSwgdG9BcmcpO1xuICAgIGludmFyaWFudCghdG8ucGF0aG5hbWUgfHwgIXRvLnBhdGhuYW1lLmluY2x1ZGVzKFwiP1wiKSwgZ2V0SW52YWxpZFBhdGhFcnJvcihcIj9cIiwgXCJwYXRobmFtZVwiLCBcInNlYXJjaFwiLCB0bykpO1xuICAgIGludmFyaWFudCghdG8ucGF0aG5hbWUgfHwgIXRvLnBhdGhuYW1lLmluY2x1ZGVzKFwiI1wiKSwgZ2V0SW52YWxpZFBhdGhFcnJvcihcIiNcIiwgXCJwYXRobmFtZVwiLCBcImhhc2hcIiwgdG8pKTtcbiAgICBpbnZhcmlhbnQoIXRvLnNlYXJjaCB8fCAhdG8uc2VhcmNoLmluY2x1ZGVzKFwiI1wiKSwgZ2V0SW52YWxpZFBhdGhFcnJvcihcIiNcIiwgXCJzZWFyY2hcIiwgXCJoYXNoXCIsIHRvKSk7XG4gIH1cblxuICBsZXQgaXNFbXB0eVBhdGggPSB0b0FyZyA9PT0gXCJcIiB8fCB0by5wYXRobmFtZSA9PT0gXCJcIjtcbiAgbGV0IHRvUGF0aG5hbWUgPSBpc0VtcHR5UGF0aCA/IFwiL1wiIDogdG8ucGF0aG5hbWU7XG4gIGxldCBmcm9tOyAvLyBSb3V0aW5nIGlzIHJlbGF0aXZlIHRvIHRoZSBjdXJyZW50IHBhdGhuYW1lIGlmIGV4cGxpY2l0bHkgcmVxdWVzdGVkLlxuICAvL1xuICAvLyBJZiBhIHBhdGhuYW1lIGlzIGV4cGxpY2l0bHkgcHJvdmlkZWQgaW4gYHRvYCwgaXQgc2hvdWxkIGJlIHJlbGF0aXZlIHRvIHRoZVxuICAvLyByb3V0ZSBjb250ZXh0LiBUaGlzIGlzIGV4cGxhaW5lZCBpbiBgTm90ZSBvbiBgPExpbmsgdG8+YCB2YWx1ZXNgIGluIG91clxuICAvLyBtaWdyYXRpb24gZ3VpZGUgZnJvbSB2NSBhcyBhIG1lYW5zIG9mIGRpc2FtYmlndWF0aW9uIGJldHdlZW4gYHRvYCB2YWx1ZXNcbiAgLy8gdGhhdCBiZWdpbiB3aXRoIGAvYCBhbmQgdGhvc2UgdGhhdCBkbyBub3QuIEhvd2V2ZXIsIHRoaXMgaXMgcHJvYmxlbWF0aWMgZm9yXG4gIC8vIGB0b2AgdmFsdWVzIHRoYXQgZG8gbm90IHByb3ZpZGUgYSBwYXRobmFtZS4gYHRvYCBjYW4gc2ltcGx5IGJlIGEgc2VhcmNoIG9yXG4gIC8vIGhhc2ggc3RyaW5nLCBpbiB3aGljaCBjYXNlIHdlIHNob3VsZCBhc3N1bWUgdGhhdCB0aGUgbmF2aWdhdGlvbiBpcyByZWxhdGl2ZVxuICAvLyB0byB0aGUgY3VycmVudCBsb2NhdGlvbidzIHBhdGhuYW1lIGFuZCAqbm90KiB0aGUgcm91dGUgcGF0aG5hbWUuXG5cbiAgaWYgKGlzUGF0aFJlbGF0aXZlIHx8IHRvUGF0aG5hbWUgPT0gbnVsbCkge1xuICAgIGZyb20gPSBsb2NhdGlvblBhdGhuYW1lO1xuICB9IGVsc2Uge1xuICAgIGxldCByb3V0ZVBhdGhuYW1lSW5kZXggPSByb3V0ZVBhdGhuYW1lcy5sZW5ndGggLSAxO1xuXG4gICAgaWYgKHRvUGF0aG5hbWUuc3RhcnRzV2l0aChcIi4uXCIpKSB7XG4gICAgICBsZXQgdG9TZWdtZW50cyA9IHRvUGF0aG5hbWUuc3BsaXQoXCIvXCIpOyAvLyBFYWNoIGxlYWRpbmcgLi4gc2VnbWVudCBtZWFucyBcImdvIHVwIG9uZSByb3V0ZVwiIGluc3RlYWQgb2YgXCJnbyB1cCBvbmVcbiAgICAgIC8vIFVSTCBzZWdtZW50XCIuICBUaGlzIGlzIGEga2V5IGRpZmZlcmVuY2UgZnJvbSBob3cgPGEgaHJlZj4gd29ya3MgYW5kIGFcbiAgICAgIC8vIG1ham9yIHJlYXNvbiB3ZSBjYWxsIHRoaXMgYSBcInRvXCIgdmFsdWUgaW5zdGVhZCBvZiBhIFwiaHJlZlwiLlxuXG4gICAgICB3aGlsZSAodG9TZWdtZW50c1swXSA9PT0gXCIuLlwiKSB7XG4gICAgICAgIHRvU2VnbWVudHMuc2hpZnQoKTtcbiAgICAgICAgcm91dGVQYXRobmFtZUluZGV4IC09IDE7XG4gICAgICB9XG5cbiAgICAgIHRvLnBhdGhuYW1lID0gdG9TZWdtZW50cy5qb2luKFwiL1wiKTtcbiAgICB9IC8vIElmIHRoZXJlIGFyZSBtb3JlIFwiLi5cIiBzZWdtZW50cyB0aGFuIHBhcmVudCByb3V0ZXMsIHJlc29sdmUgcmVsYXRpdmUgdG9cbiAgICAvLyB0aGUgcm9vdCAvIFVSTC5cblxuXG4gICAgZnJvbSA9IHJvdXRlUGF0aG5hbWVJbmRleCA+PSAwID8gcm91dGVQYXRobmFtZXNbcm91dGVQYXRobmFtZUluZGV4XSA6IFwiL1wiO1xuICB9XG5cbiAgbGV0IHBhdGggPSByZXNvbHZlUGF0aCh0bywgZnJvbSk7IC8vIEVuc3VyZSB0aGUgcGF0aG5hbWUgaGFzIGEgdHJhaWxpbmcgc2xhc2ggaWYgdGhlIG9yaWdpbmFsIFwidG9cIiBoYWQgb25lXG5cbiAgbGV0IGhhc0V4cGxpY2l0VHJhaWxpbmdTbGFzaCA9IHRvUGF0aG5hbWUgJiYgdG9QYXRobmFtZSAhPT0gXCIvXCIgJiYgdG9QYXRobmFtZS5lbmRzV2l0aChcIi9cIik7IC8vIE9yIGlmIHRoaXMgd2FzIGEgbGluayB0byB0aGUgY3VycmVudCBwYXRoIHdoaWNoIGhhcyBhIHRyYWlsaW5nIHNsYXNoXG5cbiAgbGV0IGhhc0N1cnJlbnRUcmFpbGluZ1NsYXNoID0gKGlzRW1wdHlQYXRoIHx8IHRvUGF0aG5hbWUgPT09IFwiLlwiKSAmJiBsb2NhdGlvblBhdGhuYW1lLmVuZHNXaXRoKFwiL1wiKTtcblxuICBpZiAoIXBhdGgucGF0aG5hbWUuZW5kc1dpdGgoXCIvXCIpICYmIChoYXNFeHBsaWNpdFRyYWlsaW5nU2xhc2ggfHwgaGFzQ3VycmVudFRyYWlsaW5nU2xhc2gpKSB7XG4gICAgcGF0aC5wYXRobmFtZSArPSBcIi9cIjtcbiAgfVxuXG4gIHJldHVybiBwYXRoO1xufVxuLyoqXG4gKiBAcHJpdmF0ZVxuICovXG5cbmZ1bmN0aW9uIGdldFRvUGF0aG5hbWUodG8pIHtcbiAgLy8gRW1wdHkgc3RyaW5ncyBzaG91bGQgYmUgdHJlYXRlZCB0aGUgc2FtZSBhcyAvIHBhdGhzXG4gIHJldHVybiB0byA9PT0gXCJcIiB8fCB0by5wYXRobmFtZSA9PT0gXCJcIiA/IFwiL1wiIDogdHlwZW9mIHRvID09PSBcInN0cmluZ1wiID8gcGFyc2VQYXRoKHRvKS5wYXRobmFtZSA6IHRvLnBhdGhuYW1lO1xufVxuLyoqXG4gKiBAcHJpdmF0ZVxuICovXG5cbmNvbnN0IGpvaW5QYXRocyA9IHBhdGhzID0+IHBhdGhzLmpvaW4oXCIvXCIpLnJlcGxhY2UoL1xcL1xcLysvZywgXCIvXCIpO1xuLyoqXG4gKiBAcHJpdmF0ZVxuICovXG5cbmNvbnN0IG5vcm1hbGl6ZVBhdGhuYW1lID0gcGF0aG5hbWUgPT4gcGF0aG5hbWUucmVwbGFjZSgvXFwvKyQvLCBcIlwiKS5yZXBsYWNlKC9eXFwvKi8sIFwiL1wiKTtcbi8qKlxuICogQHByaXZhdGVcbiAqL1xuXG5jb25zdCBub3JtYWxpemVTZWFyY2ggPSBzZWFyY2ggPT4gIXNlYXJjaCB8fCBzZWFyY2ggPT09IFwiP1wiID8gXCJcIiA6IHNlYXJjaC5zdGFydHNXaXRoKFwiP1wiKSA/IHNlYXJjaCA6IFwiP1wiICsgc2VhcmNoO1xuLyoqXG4gKiBAcHJpdmF0ZVxuICovXG5cbmNvbnN0IG5vcm1hbGl6ZUhhc2ggPSBoYXNoID0+ICFoYXNoIHx8IGhhc2ggPT09IFwiI1wiID8gXCJcIiA6IGhhc2guc3RhcnRzV2l0aChcIiNcIikgPyBoYXNoIDogXCIjXCIgKyBoYXNoO1xuLyoqXG4gKiBUaGlzIGlzIGEgc2hvcnRjdXQgZm9yIGNyZWF0aW5nIGBhcHBsaWNhdGlvbi9qc29uYCByZXNwb25zZXMuIENvbnZlcnRzIGBkYXRhYFxuICogdG8gSlNPTiBhbmQgc2V0cyB0aGUgYENvbnRlbnQtVHlwZWAgaGVhZGVyLlxuICovXG5cbmNvbnN0IGpzb24gPSBmdW5jdGlvbiBqc29uKGRhdGEsIGluaXQpIHtcbiAgaWYgKGluaXQgPT09IHZvaWQgMCkge1xuICAgIGluaXQgPSB7fTtcbiAgfVxuXG4gIGxldCByZXNwb25zZUluaXQgPSB0eXBlb2YgaW5pdCA9PT0gXCJudW1iZXJcIiA/IHtcbiAgICBzdGF0dXM6IGluaXRcbiAgfSA6IGluaXQ7XG4gIGxldCBoZWFkZXJzID0gbmV3IEhlYWRlcnMocmVzcG9uc2VJbml0LmhlYWRlcnMpO1xuXG4gIGlmICghaGVhZGVycy5oYXMoXCJDb250ZW50LVR5cGVcIikpIHtcbiAgICBoZWFkZXJzLnNldChcIkNvbnRlbnQtVHlwZVwiLCBcImFwcGxpY2F0aW9uL2pzb247IGNoYXJzZXQ9dXRmLThcIik7XG4gIH1cblxuICByZXR1cm4gbmV3IFJlc3BvbnNlKEpTT04uc3RyaW5naWZ5KGRhdGEpLCBfZXh0ZW5kcyh7fSwgcmVzcG9uc2VJbml0LCB7XG4gICAgaGVhZGVyc1xuICB9KSk7XG59O1xuY2xhc3MgQWJvcnRlZERlZmVycmVkRXJyb3IgZXh0ZW5kcyBFcnJvciB7fVxuY2xhc3MgRGVmZXJyZWREYXRhIHtcbiAgY29uc3RydWN0b3IoZGF0YSkge1xuICAgIHRoaXMucGVuZGluZ0tleXMgPSBuZXcgU2V0KCk7XG4gICAgdGhpcy5zdWJzY3JpYmVyID0gdW5kZWZpbmVkO1xuICAgIGludmFyaWFudChkYXRhICYmIHR5cGVvZiBkYXRhID09PSBcIm9iamVjdFwiICYmICFBcnJheS5pc0FycmF5KGRhdGEpLCBcImRlZmVyKCkgb25seSBhY2NlcHRzIHBsYWluIG9iamVjdHNcIik7IC8vIFNldCB1cCBhbiBBYm9ydENvbnRyb2xsZXIgKyBQcm9taXNlIHdlIGNhbiByYWNlIGFnYWluc3QgdG8gZXhpdCBlYXJseVxuICAgIC8vIGNhbmNlbGxhdGlvblxuXG4gICAgbGV0IHJlamVjdDtcbiAgICB0aGlzLmFib3J0UHJvbWlzZSA9IG5ldyBQcm9taXNlKChfLCByKSA9PiByZWplY3QgPSByKTtcbiAgICB0aGlzLmNvbnRyb2xsZXIgPSBuZXcgQWJvcnRDb250cm9sbGVyKCk7XG5cbiAgICBsZXQgb25BYm9ydCA9ICgpID0+IHJlamVjdChuZXcgQWJvcnRlZERlZmVycmVkRXJyb3IoXCJEZWZlcnJlZCBkYXRhIGFib3J0ZWRcIikpO1xuXG4gICAgdGhpcy51bmxpc3RlbkFib3J0U2lnbmFsID0gKCkgPT4gdGhpcy5jb250cm9sbGVyLnNpZ25hbC5yZW1vdmVFdmVudExpc3RlbmVyKFwiYWJvcnRcIiwgb25BYm9ydCk7XG5cbiAgICB0aGlzLmNvbnRyb2xsZXIuc2lnbmFsLmFkZEV2ZW50TGlzdGVuZXIoXCJhYm9ydFwiLCBvbkFib3J0KTtcbiAgICB0aGlzLmRhdGEgPSBPYmplY3QuZW50cmllcyhkYXRhKS5yZWR1Y2UoKGFjYywgX3JlZikgPT4ge1xuICAgICAgbGV0IFtrZXksIHZhbHVlXSA9IF9yZWY7XG4gICAgICByZXR1cm4gT2JqZWN0LmFzc2lnbihhY2MsIHtcbiAgICAgICAgW2tleV06IHRoaXMudHJhY2tQcm9taXNlKGtleSwgdmFsdWUpXG4gICAgICB9KTtcbiAgICB9LCB7fSk7XG4gIH1cblxuICB0cmFja1Byb21pc2Uoa2V5LCB2YWx1ZSkge1xuICAgIGlmICghKHZhbHVlIGluc3RhbmNlb2YgUHJvbWlzZSkpIHtcbiAgICAgIHJldHVybiB2YWx1ZTtcbiAgICB9XG5cbiAgICB0aGlzLnBlbmRpbmdLZXlzLmFkZChrZXkpOyAvLyBXZSBzdG9yZSBhIGxpdHRsZSB3cmFwcGVyIHByb21pc2UgdGhhdCB3aWxsIGJlIGV4dGVuZGVkIHdpdGhcbiAgICAvLyBfZGF0YS9fZXJyb3IgcHJvcHMgdXBvbiByZXNvbHZlL3JlamVjdFxuXG4gICAgbGV0IHByb21pc2UgPSBQcm9taXNlLnJhY2UoW3ZhbHVlLCB0aGlzLmFib3J0UHJvbWlzZV0pLnRoZW4oZGF0YSA9PiB0aGlzLm9uU2V0dGxlKHByb21pc2UsIGtleSwgbnVsbCwgZGF0YSksIGVycm9yID0+IHRoaXMub25TZXR0bGUocHJvbWlzZSwga2V5LCBlcnJvcikpOyAvLyBSZWdpc3RlciByZWplY3Rpb24gbGlzdGVuZXJzIHRvIGF2b2lkIHVuY2F1Z2h0IHByb21pc2UgcmVqZWN0aW9ucyBvblxuICAgIC8vIGVycm9ycyBvciBhYm9ydGVkIGRlZmVycmVkIHZhbHVlc1xuXG4gICAgcHJvbWlzZS5jYXRjaCgoKSA9PiB7fSk7XG4gICAgT2JqZWN0LmRlZmluZVByb3BlcnR5KHByb21pc2UsIFwiX3RyYWNrZWRcIiwge1xuICAgICAgZ2V0OiAoKSA9PiB0cnVlXG4gICAgfSk7XG4gICAgcmV0dXJuIHByb21pc2U7XG4gIH1cblxuICBvblNldHRsZShwcm9taXNlLCBrZXksIGVycm9yLCBkYXRhKSB7XG4gICAgaWYgKHRoaXMuY29udHJvbGxlci5zaWduYWwuYWJvcnRlZCAmJiBlcnJvciBpbnN0YW5jZW9mIEFib3J0ZWREZWZlcnJlZEVycm9yKSB7XG4gICAgICB0aGlzLnVubGlzdGVuQWJvcnRTaWduYWwoKTtcbiAgICAgIE9iamVjdC5kZWZpbmVQcm9wZXJ0eShwcm9taXNlLCBcIl9lcnJvclwiLCB7XG4gICAgICAgIGdldDogKCkgPT4gZXJyb3JcbiAgICAgIH0pO1xuICAgICAgcmV0dXJuIFByb21pc2UucmVqZWN0KGVycm9yKTtcbiAgICB9XG5cbiAgICB0aGlzLnBlbmRpbmdLZXlzLmRlbGV0ZShrZXkpO1xuXG4gICAgaWYgKHRoaXMuZG9uZSkge1xuICAgICAgLy8gTm90aGluZyBsZWZ0IHRvIGFib3J0IVxuICAgICAgdGhpcy51bmxpc3RlbkFib3J0U2lnbmFsKCk7XG4gICAgfVxuXG4gICAgY29uc3Qgc3Vic2NyaWJlciA9IHRoaXMuc3Vic2NyaWJlcjtcblxuICAgIGlmIChlcnJvcikge1xuICAgICAgT2JqZWN0LmRlZmluZVByb3BlcnR5KHByb21pc2UsIFwiX2Vycm9yXCIsIHtcbiAgICAgICAgZ2V0OiAoKSA9PiBlcnJvclxuICAgICAgfSk7XG4gICAgICBzdWJzY3JpYmVyICYmIHN1YnNjcmliZXIoZmFsc2UpO1xuICAgICAgcmV0dXJuIFByb21pc2UucmVqZWN0KGVycm9yKTtcbiAgICB9XG5cbiAgICBPYmplY3QuZGVmaW5lUHJvcGVydHkocHJvbWlzZSwgXCJfZGF0YVwiLCB7XG4gICAgICBnZXQ6ICgpID0+IGRhdGFcbiAgICB9KTtcbiAgICBzdWJzY3JpYmVyICYmIHN1YnNjcmliZXIoZmFsc2UpO1xuICAgIHJldHVybiBkYXRhO1xuICB9XG5cbiAgc3Vic2NyaWJlKGZuKSB7XG4gICAgdGhpcy5zdWJzY3JpYmVyID0gZm47XG4gIH1cblxuICBjYW5jZWwoKSB7XG4gICAgdGhpcy5jb250cm9sbGVyLmFib3J0KCk7XG4gICAgdGhpcy5wZW5kaW5nS2V5cy5mb3JFYWNoKCh2LCBrKSA9PiB0aGlzLnBlbmRpbmdLZXlzLmRlbGV0ZShrKSk7XG4gICAgbGV0IHN1YnNjcmliZXIgPSB0aGlzLnN1YnNjcmliZXI7XG4gICAgc3Vic2NyaWJlciAmJiBzdWJzY3JpYmVyKHRydWUpO1xuICB9XG5cbiAgYXN5bmMgcmVzb2x2ZURhdGEoc2lnbmFsKSB7XG4gICAgbGV0IGFib3J0ZWQgPSBmYWxzZTtcblxuICAgIGlmICghdGhpcy5kb25lKSB7XG4gICAgICBsZXQgb25BYm9ydCA9ICgpID0+IHRoaXMuY2FuY2VsKCk7XG5cbiAgICAgIHNpZ25hbC5hZGRFdmVudExpc3RlbmVyKFwiYWJvcnRcIiwgb25BYm9ydCk7XG4gICAgICBhYm9ydGVkID0gYXdhaXQgbmV3IFByb21pc2UocmVzb2x2ZSA9PiB7XG4gICAgICAgIHRoaXMuc3Vic2NyaWJlKGFib3J0ZWQgPT4ge1xuICAgICAgICAgIHNpZ25hbC5yZW1vdmVFdmVudExpc3RlbmVyKFwiYWJvcnRcIiwgb25BYm9ydCk7XG5cbiAgICAgICAgICBpZiAoYWJvcnRlZCB8fCB0aGlzLmRvbmUpIHtcbiAgICAgICAgICAgIHJlc29sdmUoYWJvcnRlZCk7XG4gICAgICAgICAgfVxuICAgICAgICB9KTtcbiAgICAgIH0pO1xuICAgIH1cblxuICAgIHJldHVybiBhYm9ydGVkO1xuICB9XG5cbiAgZ2V0IGRvbmUoKSB7XG4gICAgcmV0dXJuIHRoaXMucGVuZGluZ0tleXMuc2l6ZSA9PT0gMDtcbiAgfVxuXG4gIGdldCB1bndyYXBwZWREYXRhKCkge1xuICAgIGludmFyaWFudCh0aGlzLmRhdGEgIT09IG51bGwgJiYgdGhpcy5kb25lLCBcIkNhbiBvbmx5IHVud3JhcCBkYXRhIG9uIGluaXRpYWxpemVkIGFuZCBzZXR0bGVkIGRlZmVycmVkc1wiKTtcbiAgICByZXR1cm4gT2JqZWN0LmVudHJpZXModGhpcy5kYXRhKS5yZWR1Y2UoKGFjYywgX3JlZjIpID0+IHtcbiAgICAgIGxldCBba2V5LCB2YWx1ZV0gPSBfcmVmMjtcbiAgICAgIHJldHVybiBPYmplY3QuYXNzaWduKGFjYywge1xuICAgICAgICBba2V5XTogdW53cmFwVHJhY2tlZFByb21pc2UodmFsdWUpXG4gICAgICB9KTtcbiAgICB9LCB7fSk7XG4gIH1cblxufVxuXG5mdW5jdGlvbiBpc1RyYWNrZWRQcm9taXNlKHZhbHVlKSB7XG4gIHJldHVybiB2YWx1ZSBpbnN0YW5jZW9mIFByb21pc2UgJiYgdmFsdWUuX3RyYWNrZWQgPT09IHRydWU7XG59XG5cbmZ1bmN0aW9uIHVud3JhcFRyYWNrZWRQcm9taXNlKHZhbHVlKSB7XG4gIGlmICghaXNUcmFja2VkUHJvbWlzZSh2YWx1ZSkpIHtcbiAgICByZXR1cm4gdmFsdWU7XG4gIH1cblxuICBpZiAodmFsdWUuX2Vycm9yKSB7XG4gICAgdGhyb3cgdmFsdWUuX2Vycm9yO1xuICB9XG5cbiAgcmV0dXJuIHZhbHVlLl9kYXRhO1xufVxuXG5mdW5jdGlvbiBkZWZlcihkYXRhKSB7XG4gIHJldHVybiBuZXcgRGVmZXJyZWREYXRhKGRhdGEpO1xufVxuLyoqXG4gKiBBIHJlZGlyZWN0IHJlc3BvbnNlLiBTZXRzIHRoZSBzdGF0dXMgY29kZSBhbmQgdGhlIGBMb2NhdGlvbmAgaGVhZGVyLlxuICogRGVmYXVsdHMgdG8gXCIzMDIgRm91bmRcIi5cbiAqL1xuXG5jb25zdCByZWRpcmVjdCA9IGZ1bmN0aW9uIHJlZGlyZWN0KHVybCwgaW5pdCkge1xuICBpZiAoaW5pdCA9PT0gdm9pZCAwKSB7XG4gICAgaW5pdCA9IDMwMjtcbiAgfVxuXG4gIGxldCByZXNwb25zZUluaXQgPSBpbml0O1xuXG4gIGlmICh0eXBlb2YgcmVzcG9uc2VJbml0ID09PSBcIm51bWJlclwiKSB7XG4gICAgcmVzcG9uc2VJbml0ID0ge1xuICAgICAgc3RhdHVzOiByZXNwb25zZUluaXRcbiAgICB9O1xuICB9IGVsc2UgaWYgKHR5cGVvZiByZXNwb25zZUluaXQuc3RhdHVzID09PSBcInVuZGVmaW5lZFwiKSB7XG4gICAgcmVzcG9uc2VJbml0LnN0YXR1cyA9IDMwMjtcbiAgfVxuXG4gIGxldCBoZWFkZXJzID0gbmV3IEhlYWRlcnMocmVzcG9uc2VJbml0LmhlYWRlcnMpO1xuICBoZWFkZXJzLnNldChcIkxvY2F0aW9uXCIsIHVybCk7XG4gIHJldHVybiBuZXcgUmVzcG9uc2UobnVsbCwgX2V4dGVuZHMoe30sIHJlc3BvbnNlSW5pdCwge1xuICAgIGhlYWRlcnNcbiAgfSkpO1xufTtcbi8qKlxuICogQHByaXZhdGVcbiAqIFV0aWxpdHkgY2xhc3Mgd2UgdXNlIHRvIGhvbGQgYXV0by11bndyYXBwZWQgNHh4LzV4eCBSZXNwb25zZSBib2RpZXNcbiAqL1xuXG5jbGFzcyBFcnJvclJlc3BvbnNlIHtcbiAgY29uc3RydWN0b3Ioc3RhdHVzLCBzdGF0dXNUZXh0LCBkYXRhKSB7XG4gICAgdGhpcy5zdGF0dXMgPSBzdGF0dXM7XG4gICAgdGhpcy5zdGF0dXNUZXh0ID0gc3RhdHVzVGV4dCB8fCBcIlwiO1xuICAgIHRoaXMuZGF0YSA9IGRhdGE7XG4gIH1cblxufVxuLyoqXG4gKiBDaGVjayBpZiB0aGUgZ2l2ZW4gZXJyb3IgaXMgYW4gRXJyb3JSZXNwb25zZSBnZW5lcmF0ZWQgZnJvbSBhIDR4eC81eHhcbiAqIFJlc3BvbnNlIHRocm93IGZyb20gYW4gYWN0aW9uL2xvYWRlclxuICovXG5cbmZ1bmN0aW9uIGlzUm91dGVFcnJvclJlc3BvbnNlKGUpIHtcbiAgcmV0dXJuIGUgaW5zdGFuY2VvZiBFcnJvclJlc3BvbnNlO1xufVxuXG5jb25zdCBJRExFX05BVklHQVRJT04gPSB7XG4gIHN0YXRlOiBcImlkbGVcIixcbiAgbG9jYXRpb246IHVuZGVmaW5lZCxcbiAgZm9ybU1ldGhvZDogdW5kZWZpbmVkLFxuICBmb3JtQWN0aW9uOiB1bmRlZmluZWQsXG4gIGZvcm1FbmNUeXBlOiB1bmRlZmluZWQsXG4gIGZvcm1EYXRhOiB1bmRlZmluZWRcbn07XG5jb25zdCBJRExFX0ZFVENIRVIgPSB7XG4gIHN0YXRlOiBcImlkbGVcIixcbiAgZGF0YTogdW5kZWZpbmVkLFxuICBmb3JtTWV0aG9kOiB1bmRlZmluZWQsXG4gIGZvcm1BY3Rpb246IHVuZGVmaW5lZCxcbiAgZm9ybUVuY1R5cGU6IHVuZGVmaW5lZCxcbiAgZm9ybURhdGE6IHVuZGVmaW5lZFxufTsgLy8jZW5kcmVnaW9uXG4vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vL1xuLy8jcmVnaW9uIGNyZWF0ZVJvdXRlclxuLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy9cblxuLyoqXG4gKiBDcmVhdGUgYSByb3V0ZXIgYW5kIGxpc3RlbiB0byBoaXN0b3J5IFBPUCBuYXZpZ2F0aW9uc1xuICovXG5cbmZ1bmN0aW9uIGNyZWF0ZVJvdXRlcihpbml0KSB7XG4gIGludmFyaWFudChpbml0LnJvdXRlcy5sZW5ndGggPiAwLCBcIllvdSBtdXN0IHByb3ZpZGUgYSBub24tZW1wdHkgcm91dGVzIGFycmF5IHRvIGNyZWF0ZVJvdXRlclwiKTtcbiAgbGV0IGRhdGFSb3V0ZXMgPSBjb252ZXJ0Um91dGVzVG9EYXRhUm91dGVzKGluaXQucm91dGVzKTsgLy8gQ2xlYW51cCBmdW5jdGlvbiBmb3IgaGlzdG9yeVxuXG4gIGxldCB1bmxpc3Rlbkhpc3RvcnkgPSBudWxsOyAvLyBFeHRlcm5hbGx5LXByb3ZpZGVkIGZ1bmN0aW9ucyB0byBjYWxsIG9uIGFsbCBzdGF0ZSBjaGFuZ2VzXG5cbiAgbGV0IHN1YnNjcmliZXJzID0gbmV3IFNldCgpOyAvLyBFeHRlcm5hbGx5LXByb3ZpZGVkIG9iamVjdCB0byBob2xkIHNjcm9sbCByZXN0b3JhdGlvbiBsb2NhdGlvbnMgZHVyaW5nIHJvdXRpbmdcblxuICBsZXQgc2F2ZWRTY3JvbGxQb3NpdGlvbnMgPSBudWxsOyAvLyBFeHRlcm5hbGx5LXByb3ZpZGVkIGZ1bmN0aW9uIHRvIGdldCBzY3JvbGwgcmVzdG9yYXRpb24ga2V5c1xuXG4gIGxldCBnZXRTY3JvbGxSZXN0b3JhdGlvbktleSA9IG51bGw7IC8vIEV4dGVybmFsbHktcHJvdmlkZWQgZnVuY3Rpb24gdG8gZ2V0IGN1cnJlbnQgc2Nyb2xsIHBvc2l0aW9uXG5cbiAgbGV0IGdldFNjcm9sbFBvc2l0aW9uID0gbnVsbDsgLy8gT25lLXRpbWUgZmxhZyB0byBjb250cm9sIHRoZSBpbml0aWFsIGh5ZHJhdGlvbiBzY3JvbGwgcmVzdG9yYXRpb24uICBCZWNhdXNlXG4gIC8vIHdlIGRvbid0IGdldCB0aGUgc2F2ZWQgcG9zaXRpb25zIGZyb20gPFNjcm9sbFJlc3RvcmF0aW9uIC8+IHVudGlsIF9hZnRlcl9cbiAgLy8gdGhlIGluaXRpYWwgcmVuZGVyLCB3ZSBuZWVkIHRvIG1hbnVhbGx5IHRyaWdnZXIgYSBzZXBhcmF0ZSB1cGRhdGVTdGF0ZSB0b1xuICAvLyBzZW5kIGFsb25nIHRoZSByZXN0b3JlU2Nyb2xsUG9zaXRpb25cblxuICBsZXQgaW5pdGlhbFNjcm9sbFJlc3RvcmVkID0gZmFsc2U7XG4gIGxldCBpbml0aWFsTWF0Y2hlcyA9IG1hdGNoUm91dGVzKGRhdGFSb3V0ZXMsIGluaXQuaGlzdG9yeS5sb2NhdGlvbiwgaW5pdC5iYXNlbmFtZSk7XG4gIGxldCBpbml0aWFsRXJyb3JzID0gbnVsbDtcblxuICBpZiAoaW5pdGlhbE1hdGNoZXMgPT0gbnVsbCkge1xuICAgIC8vIElmIHdlIGRvIG5vdCBtYXRjaCBhIHVzZXItcHJvdmlkZWQtcm91dGUsIGZhbGwgYmFjayB0byB0aGUgcm9vdFxuICAgIC8vIHRvIGFsbG93IHRoZSBlcnJvciBib3VuZGFyeSB0byB0YWtlIG92ZXJcbiAgICBsZXQge1xuICAgICAgbWF0Y2hlcyxcbiAgICAgIHJvdXRlLFxuICAgICAgZXJyb3JcbiAgICB9ID0gZ2V0Tm90Rm91bmRNYXRjaGVzKGRhdGFSb3V0ZXMpO1xuICAgIGluaXRpYWxNYXRjaGVzID0gbWF0Y2hlcztcbiAgICBpbml0aWFsRXJyb3JzID0ge1xuICAgICAgW3JvdXRlLmlkXTogZXJyb3JcbiAgICB9O1xuICB9XG5cbiAgbGV0IGluaXRpYWxpemVkID0gIWluaXRpYWxNYXRjaGVzLnNvbWUobSA9PiBtLnJvdXRlLmxvYWRlcikgfHwgaW5pdC5oeWRyYXRpb25EYXRhICE9IG51bGw7XG4gIGxldCByb3V0ZXI7XG4gIGxldCBzdGF0ZSA9IHtcbiAgICBoaXN0b3J5QWN0aW9uOiBpbml0Lmhpc3RvcnkuYWN0aW9uLFxuICAgIGxvY2F0aW9uOiBpbml0Lmhpc3RvcnkubG9jYXRpb24sXG4gICAgbWF0Y2hlczogaW5pdGlhbE1hdGNoZXMsXG4gICAgaW5pdGlhbGl6ZWQsXG4gICAgbmF2aWdhdGlvbjogSURMRV9OQVZJR0FUSU9OLFxuICAgIHJlc3RvcmVTY3JvbGxQb3NpdGlvbjogbnVsbCxcbiAgICBwcmV2ZW50U2Nyb2xsUmVzZXQ6IGZhbHNlLFxuICAgIHJldmFsaWRhdGlvbjogXCJpZGxlXCIsXG4gICAgbG9hZGVyRGF0YTogaW5pdC5oeWRyYXRpb25EYXRhICYmIGluaXQuaHlkcmF0aW9uRGF0YS5sb2FkZXJEYXRhIHx8IHt9LFxuICAgIGFjdGlvbkRhdGE6IGluaXQuaHlkcmF0aW9uRGF0YSAmJiBpbml0Lmh5ZHJhdGlvbkRhdGEuYWN0aW9uRGF0YSB8fCBudWxsLFxuICAgIGVycm9yczogaW5pdC5oeWRyYXRpb25EYXRhICYmIGluaXQuaHlkcmF0aW9uRGF0YS5lcnJvcnMgfHwgaW5pdGlhbEVycm9ycyxcbiAgICBmZXRjaGVyczogbmV3IE1hcCgpXG4gIH07IC8vIC0tIFN0YXRlZnVsIGludGVybmFsIHZhcmlhYmxlcyB0byBtYW5hZ2UgbmF2aWdhdGlvbnMgLS1cbiAgLy8gQ3VycmVudCBuYXZpZ2F0aW9uIGluIHByb2dyZXNzICh0byBiZSBjb21taXR0ZWQgaW4gY29tcGxldGVOYXZpZ2F0aW9uKVxuXG4gIGxldCBwZW5kaW5nQWN0aW9uID0gQWN0aW9uLlBvcDsgLy8gU2hvdWxkIHRoZSBjdXJyZW50IG5hdmlnYXRpb24gcHJldmVudCB0aGUgc2Nyb2xsIHJlc2V0IGlmIHNjcm9sbCBjYW5ub3RcbiAgLy8gYmUgcmVzdG9yZWQ/XG5cbiAgbGV0IHBlbmRpbmdQcmV2ZW50U2Nyb2xsUmVzZXQgPSBmYWxzZTsgLy8gQWJvcnRDb250cm9sbGVyIGZvciB0aGUgYWN0aXZlIG5hdmlnYXRpb25cblxuICBsZXQgcGVuZGluZ05hdmlnYXRpb25Db250cm9sbGVyOyAvLyBXZSB1c2UgdGhpcyB0byBhdm9pZCB0b3VjaGluZyBoaXN0b3J5IGluIGNvbXBsZXRlTmF2aWdhdGlvbiBpZiBhXG4gIC8vIHJldmFsaWRhdGlvbiBpcyBlbnRpcmVseSB1bmludGVycnVwdGVkXG5cbiAgbGV0IGlzVW5pbnRlcnJ1cHRlZFJldmFsaWRhdGlvbiA9IGZhbHNlOyAvLyBVc2UgdGhpcyBpbnRlcm5hbCBmbGFnIHRvIGZvcmNlIHJldmFsaWRhdGlvbiBvZiBhbGwgbG9hZGVyczpcbiAgLy8gIC0gc3VibWlzc2lvbnMgKGNvbXBsZXRlZCBvciBpbnRlcnJ1cHRlZClcbiAgLy8gIC0gdXNlUmV2YWxpZGF0ZSgpXG4gIC8vICAtIFgtUmVtaXgtUmV2YWxpZGF0ZSAoZnJvbSByZWRpcmVjdClcblxuICBsZXQgaXNSZXZhbGlkYXRpb25SZXF1aXJlZCA9IGZhbHNlOyAvLyBVc2UgdGhpcyBpbnRlcm5hbCBhcnJheSB0byBjYXB0dXJlIHJvdXRlcyB0aGF0IHJlcXVpcmUgcmV2YWxpZGF0aW9uIGR1ZVxuICAvLyB0byBhIGNhbmNlbGxlZCBkZWZlcnJlZCBvbiBhY3Rpb24gc3VibWlzc2lvblxuXG4gIGxldCBjYW5jZWxsZWREZWZlcnJlZFJvdXRlcyA9IFtdOyAvLyBVc2UgdGhpcyBpbnRlcm5hbCBhcnJheSB0byBjYXB0dXJlIGZldGNoZXIgbG9hZHMgdGhhdCB3ZXJlIGNhbmNlbGxlZCBieSBhblxuICAvLyBhY3Rpb24gbmF2aWdhdGlvbiBhbmQgcmVxdWlyZSByZXZhbGlkYXRpb25cblxuICBsZXQgY2FuY2VsbGVkRmV0Y2hlckxvYWRzID0gW107IC8vIEFib3J0Q29udHJvbGxlcnMgZm9yIGFueSBpbi1mbGlnaHQgZmV0Y2hlcnNcblxuICBsZXQgZmV0Y2hDb250cm9sbGVycyA9IG5ldyBNYXAoKTsgLy8gVHJhY2sgbG9hZHMgYmFzZWQgb24gdGhlIG9yZGVyIGluIHdoaWNoIHRoZXkgc3RhcnRlZFxuXG4gIGxldCBpbmNyZW1lbnRpbmdMb2FkSWQgPSAwOyAvLyBUcmFjayB0aGUgb3V0c3RhbmRpbmcgcGVuZGluZyBuYXZpZ2F0aW9uIGRhdGEgbG9hZCB0byBiZSBjb21wYXJlZCBhZ2FpbnN0XG4gIC8vIHRoZSBnbG9iYWxseSBpbmNyZW1lbnRpbmcgbG9hZCB3aGVuIGEgZmV0Y2hlciBsb2FkIGxhbmRzIGFmdGVyIGEgY29tcGxldGVkXG4gIC8vIG5hdmlnYXRpb25cblxuICBsZXQgcGVuZGluZ05hdmlnYXRpb25Mb2FkSWQgPSAtMTsgLy8gRmV0Y2hlcnMgdGhhdCB0cmlnZ2VyZWQgZGF0YSByZWxvYWRzIGFzIGEgcmVzdWx0IG9mIHRoZWlyIGFjdGlvbnNcblxuICBsZXQgZmV0Y2hSZWxvYWRJZHMgPSBuZXcgTWFwKCk7IC8vIEZldGNoZXJzIHRoYXQgdHJpZ2dlcmVkIHJlZGlyZWN0IG5hdmlnYXRpb25zIGZyb20gdGhlaXIgYWN0aW9uc1xuXG4gIGxldCBmZXRjaFJlZGlyZWN0SWRzID0gbmV3IFNldCgpOyAvLyBNb3N0IHJlY2VudCBocmVmL21hdGNoIGZvciBmZXRjaGVyLmxvYWQgY2FsbHMgZm9yIGZldGNoZXJzXG5cbiAgbGV0IGZldGNoTG9hZE1hdGNoZXMgPSBuZXcgTWFwKCk7IC8vIFN0b3JlIERlZmVycmVkRGF0YSBpbnN0YW5jZXMgZm9yIGFjdGl2ZSByb3V0ZSBtYXRjaGVzLiAgV2hlbiBhXG4gIC8vIHJvdXRlIGxvYWRlciByZXR1cm5zIGRlZmVyKCkgd2Ugc3RpY2sgb25lIGluIGhlcmUuICBUaGVuLCB3aGVuIGEgbmVzdGVkXG4gIC8vIHByb21pc2UgcmVzb2x2ZXMgd2UgdXBkYXRlIGxvYWRlckRhdGEuICBJZiBhIG5ldyBuYXZpZ2F0aW9uIHN0YXJ0cyB3ZVxuICAvLyBjYW5jZWwgYWN0aXZlIGRlZmVycmVkcyBmb3IgZWxpbWluYXRlZCByb3V0ZXMuXG5cbiAgbGV0IGFjdGl2ZURlZmVycmVkcyA9IG5ldyBNYXAoKTsgLy8gSW5pdGlhbGl6ZSB0aGUgcm91dGVyLCBhbGwgc2lkZSBlZmZlY3RzIHNob3VsZCBiZSBraWNrZWQgb2ZmIGZyb20gaGVyZS5cbiAgLy8gSW1wbGVtZW50ZWQgYXMgYSBGbHVlbnQgQVBJIGZvciBlYXNlIG9mOlxuICAvLyAgIGxldCByb3V0ZXIgPSBjcmVhdGVSb3V0ZXIoaW5pdCkuaW5pdGlhbGl6ZSgpO1xuXG4gIGZ1bmN0aW9uIGluaXRpYWxpemUoKSB7XG4gICAgLy8gSWYgaGlzdG9yeSBpbmZvcm1zIHVzIG9mIGEgUE9QIG5hdmlnYXRpb24sIHN0YXJ0IHRoZSBuYXZpZ2F0aW9uIGJ1dCBkbyBub3QgdXBkYXRlXG4gICAgLy8gc3RhdGUuICBXZSdsbCB1cGRhdGUgb3VyIG93biBzdGF0ZSBvbmNlIHRoZSBuYXZpZ2F0aW9uIGNvbXBsZXRlc1xuICAgIHVubGlzdGVuSGlzdG9yeSA9IGluaXQuaGlzdG9yeS5saXN0ZW4oX3JlZiA9PiB7XG4gICAgICBsZXQge1xuICAgICAgICBhY3Rpb246IGhpc3RvcnlBY3Rpb24sXG4gICAgICAgIGxvY2F0aW9uXG4gICAgICB9ID0gX3JlZjtcbiAgICAgIHJldHVybiBzdGFydE5hdmlnYXRpb24oaGlzdG9yeUFjdGlvbiwgbG9jYXRpb24pO1xuICAgIH0pOyAvLyBLaWNrIG9mZiBpbml0aWFsIGRhdGEgbG9hZCBpZiBuZWVkZWQuICBVc2UgUG9wIHRvIGF2b2lkIG1vZGlmeWluZyBoaXN0b3J5XG5cbiAgICBpZiAoIXN0YXRlLmluaXRpYWxpemVkKSB7XG4gICAgICBzdGFydE5hdmlnYXRpb24oQWN0aW9uLlBvcCwgc3RhdGUubG9jYXRpb24pO1xuICAgIH1cblxuICAgIHJldHVybiByb3V0ZXI7XG4gIH0gLy8gQ2xlYW4gdXAgYSByb3V0ZXIgYW5kIGl0J3Mgc2lkZSBlZmZlY3RzXG5cblxuICBmdW5jdGlvbiBkaXNwb3NlKCkge1xuICAgIGlmICh1bmxpc3Rlbkhpc3RvcnkpIHtcbiAgICAgIHVubGlzdGVuSGlzdG9yeSgpO1xuICAgIH1cblxuICAgIHN1YnNjcmliZXJzLmNsZWFyKCk7XG4gICAgcGVuZGluZ05hdmlnYXRpb25Db250cm9sbGVyICYmIHBlbmRpbmdOYXZpZ2F0aW9uQ29udHJvbGxlci5hYm9ydCgpO1xuICAgIHN0YXRlLmZldGNoZXJzLmZvckVhY2goKF8sIGtleSkgPT4gZGVsZXRlRmV0Y2hlcihrZXkpKTtcbiAgfSAvLyBTdWJzY3JpYmUgdG8gc3RhdGUgdXBkYXRlcyBmb3IgdGhlIHJvdXRlclxuXG5cbiAgZnVuY3Rpb24gc3Vic2NyaWJlKGZuKSB7XG4gICAgc3Vic2NyaWJlcnMuYWRkKGZuKTtcbiAgICByZXR1cm4gKCkgPT4gc3Vic2NyaWJlcnMuZGVsZXRlKGZuKTtcbiAgfSAvLyBVcGRhdGUgb3VyIHN0YXRlIGFuZCBub3RpZnkgdGhlIGNhbGxpbmcgY29udGV4dCBvZiB0aGUgY2hhbmdlXG5cblxuICBmdW5jdGlvbiB1cGRhdGVTdGF0ZShuZXdTdGF0ZSkge1xuICAgIHN0YXRlID0gX2V4dGVuZHMoe30sIHN0YXRlLCBuZXdTdGF0ZSk7XG4gICAgc3Vic2NyaWJlcnMuZm9yRWFjaChzdWJzY3JpYmVyID0+IHN1YnNjcmliZXIoc3RhdGUpKTtcbiAgfSAvLyBDb21wbGV0ZSBhIG5hdmlnYXRpb24gcmV0dXJuaW5nIHRoZSBzdGF0ZS5uYXZpZ2F0aW9uIGJhY2sgdG8gdGhlIElETEVfTkFWSUdBVElPTlxuICAvLyBhbmQgc2V0dGluZyBzdGF0ZS5baGlzdG9yeUFjdGlvbi9sb2NhdGlvbi9tYXRjaGVzXSB0byB0aGUgbmV3IHJvdXRlLlxuICAvLyAtIExvY2F0aW9uIGlzIGEgcmVxdWlyZWQgcGFyYW1cbiAgLy8gLSBOYXZpZ2F0aW9uIHdpbGwgYWx3YXlzIGJlIHNldCB0byBJRExFX05BVklHQVRJT05cbiAgLy8gLSBDYW4gcGFzcyBhbnkgb3RoZXIgc3RhdGUgaW4gbmV3U3RhdGVcblxuXG4gIGZ1bmN0aW9uIGNvbXBsZXRlTmF2aWdhdGlvbihsb2NhdGlvbiwgbmV3U3RhdGUpIHtcbiAgICB2YXIgX3N0YXRlJG5hdmlnYXRpb24kZm9yO1xuXG4gICAgLy8gRGVkdWNlIGlmIHdlJ3JlIGluIGEgbG9hZGluZy9hY3Rpb25SZWxvYWQgc3RhdGU6XG4gICAgLy8gLSBXZSBoYXZlIGNvbW1pdHRlZCBhY3Rpb25EYXRhIGluIHRoZSBzdG9yZVxuICAgIC8vIC0gVGhlIGN1cnJlbnQgbmF2aWdhdGlvbiB3YXMgYSBzdWJtaXNzaW9uXG4gICAgLy8gLSBXZSdyZSBwYXN0IHRoZSBzdWJtaXR0aW5nIHN0YXRlIGFuZCBpbnRvIHRoZSBsb2FkaW5nIHN0YXRlXG4gICAgLy8gLSBUaGUgbG9jYXRpb24gd2UndmUgZmluaXNoZWQgbG9hZGluZyBpcyBkaWZmZXJlbnQgZnJvbSB0aGUgc3VibWlzc2lvblxuICAgIC8vICAgbG9jYXRpb24sIGluZGljYXRpbmcgd2UgcmVkaXJlY3RlZCBmcm9tIHRoZSBhY3Rpb24gKGF2b2lkcyBmYWxzZVxuICAgIC8vICAgcG9zaXRpdmVzIGZvciBsb2FkaW5nL3N1Ym1pc3Npb25SZWRpcmVjdCB3aGVuIGFjdGlvbkRhdGEgcmV0dXJuZWRcbiAgICAvLyAgIG9uIGEgcHJpb3Igc3VibWlzc2lvbilcbiAgICBsZXQgaXNBY3Rpb25SZWxvYWQgPSBzdGF0ZS5hY3Rpb25EYXRhICE9IG51bGwgJiYgc3RhdGUubmF2aWdhdGlvbi5mb3JtTWV0aG9kICE9IG51bGwgJiYgc3RhdGUubmF2aWdhdGlvbi5zdGF0ZSA9PT0gXCJsb2FkaW5nXCIgJiYgKChfc3RhdGUkbmF2aWdhdGlvbiRmb3IgPSBzdGF0ZS5uYXZpZ2F0aW9uLmZvcm1BY3Rpb24pID09IG51bGwgPyB2b2lkIDAgOiBfc3RhdGUkbmF2aWdhdGlvbiRmb3Iuc3BsaXQoXCI/XCIpWzBdKSA9PT0gbG9jYXRpb24ucGF0aG5hbWU7IC8vIEFsd2F5cyBwcmVzZXJ2ZSBhbnkgZXhpc3RpbmcgbG9hZGVyRGF0YSBmcm9tIHJlLXVzZWQgcm91dGVzXG5cbiAgICBsZXQgbmV3TG9hZGVyRGF0YSA9IG5ld1N0YXRlLmxvYWRlckRhdGEgPyB7XG4gICAgICBsb2FkZXJEYXRhOiBtZXJnZUxvYWRlckRhdGEoc3RhdGUubG9hZGVyRGF0YSwgbmV3U3RhdGUubG9hZGVyRGF0YSwgbmV3U3RhdGUubWF0Y2hlcyB8fCBbXSlcbiAgICB9IDoge307XG4gICAgdXBkYXRlU3RhdGUoX2V4dGVuZHMoe30sIGlzQWN0aW9uUmVsb2FkID8ge30gOiB7XG4gICAgICBhY3Rpb25EYXRhOiBudWxsXG4gICAgfSwgbmV3U3RhdGUsIG5ld0xvYWRlckRhdGEsIHtcbiAgICAgIGhpc3RvcnlBY3Rpb246IHBlbmRpbmdBY3Rpb24sXG4gICAgICBsb2NhdGlvbixcbiAgICAgIGluaXRpYWxpemVkOiB0cnVlLFxuICAgICAgbmF2aWdhdGlvbjogSURMRV9OQVZJR0FUSU9OLFxuICAgICAgcmV2YWxpZGF0aW9uOiBcImlkbGVcIixcbiAgICAgIC8vIERvbid0IHJlc3RvcmUgb24gc3VibWlzc2lvbiBuYXZpZ2F0aW9uc1xuICAgICAgcmVzdG9yZVNjcm9sbFBvc2l0aW9uOiBzdGF0ZS5uYXZpZ2F0aW9uLmZvcm1EYXRhID8gZmFsc2UgOiBnZXRTYXZlZFNjcm9sbFBvc2l0aW9uKGxvY2F0aW9uLCBuZXdTdGF0ZS5tYXRjaGVzIHx8IHN0YXRlLm1hdGNoZXMpLFxuICAgICAgcHJldmVudFNjcm9sbFJlc2V0OiBwZW5kaW5nUHJldmVudFNjcm9sbFJlc2V0XG4gICAgfSkpO1xuXG4gICAgaWYgKGlzVW5pbnRlcnJ1cHRlZFJldmFsaWRhdGlvbikgOyBlbHNlIGlmIChwZW5kaW5nQWN0aW9uID09PSBBY3Rpb24uUG9wKSA7IGVsc2UgaWYgKHBlbmRpbmdBY3Rpb24gPT09IEFjdGlvbi5QdXNoKSB7XG4gICAgICBpbml0Lmhpc3RvcnkucHVzaChsb2NhdGlvbiwgbG9jYXRpb24uc3RhdGUpO1xuICAgIH0gZWxzZSBpZiAocGVuZGluZ0FjdGlvbiA9PT0gQWN0aW9uLlJlcGxhY2UpIHtcbiAgICAgIGluaXQuaGlzdG9yeS5yZXBsYWNlKGxvY2F0aW9uLCBsb2NhdGlvbi5zdGF0ZSk7XG4gICAgfSAvLyBSZXNldCBzdGF0ZWZ1bCBuYXZpZ2F0aW9uIHZhcnNcblxuXG4gICAgcGVuZGluZ0FjdGlvbiA9IEFjdGlvbi5Qb3A7XG4gICAgcGVuZGluZ1ByZXZlbnRTY3JvbGxSZXNldCA9IGZhbHNlO1xuICAgIGlzVW5pbnRlcnJ1cHRlZFJldmFsaWRhdGlvbiA9IGZhbHNlO1xuICAgIGlzUmV2YWxpZGF0aW9uUmVxdWlyZWQgPSBmYWxzZTtcbiAgICBjYW5jZWxsZWREZWZlcnJlZFJvdXRlcyA9IFtdO1xuICAgIGNhbmNlbGxlZEZldGNoZXJMb2FkcyA9IFtdO1xuICB9IC8vIFRyaWdnZXIgYSBuYXZpZ2F0aW9uIGV2ZW50LCB3aGljaCBjYW4gZWl0aGVyIGJlIGEgbnVtZXJpY2FsIFBPUCBvciBhIFBVU0hcbiAgLy8gcmVwbGFjZSB3aXRoIGFuIG9wdGlvbmFsIHN1Ym1pc3Npb25cblxuXG4gIGFzeW5jIGZ1bmN0aW9uIG5hdmlnYXRlKHRvLCBvcHRzKSB7XG4gICAgaWYgKHR5cGVvZiB0byA9PT0gXCJudW1iZXJcIikge1xuICAgICAgaW5pdC5oaXN0b3J5LmdvKHRvKTtcbiAgICAgIHJldHVybjtcbiAgICB9XG5cbiAgICBsZXQge1xuICAgICAgcGF0aCxcbiAgICAgIHN1Ym1pc3Npb24sXG4gICAgICBlcnJvclxuICAgIH0gPSBub3JtYWxpemVOYXZpZ2F0ZU9wdGlvbnModG8sIG9wdHMpO1xuICAgIGxldCBsb2NhdGlvbiA9IGNyZWF0ZUxvY2F0aW9uKHN0YXRlLmxvY2F0aW9uLCBwYXRoLCBvcHRzICYmIG9wdHMuc3RhdGUpO1xuICAgIGxldCBoaXN0b3J5QWN0aW9uID0gKG9wdHMgJiYgb3B0cy5yZXBsYWNlKSA9PT0gdHJ1ZSB8fCBzdWJtaXNzaW9uICE9IG51bGwgPyBBY3Rpb24uUmVwbGFjZSA6IEFjdGlvbi5QdXNoO1xuICAgIGxldCBwcmV2ZW50U2Nyb2xsUmVzZXQgPSBvcHRzICYmIFwicHJldmVudFNjcm9sbFJlc2V0XCIgaW4gb3B0cyA/IG9wdHMucHJldmVudFNjcm9sbFJlc2V0ID09PSB0cnVlIDogdW5kZWZpbmVkO1xuICAgIHJldHVybiBhd2FpdCBzdGFydE5hdmlnYXRpb24oaGlzdG9yeUFjdGlvbiwgbG9jYXRpb24sIHtcbiAgICAgIHN1Ym1pc3Npb24sXG4gICAgICAvLyBTZW5kIHRocm91Z2ggdGhlIGZvcm1EYXRhIHNlcmlhbGl6YXRpb24gZXJyb3IgaWYgd2UgaGF2ZSBvbmUgc28gd2UgY2FuXG4gICAgICAvLyByZW5kZXIgYXQgdGhlIHJpZ2h0IGVycm9yIGJvdW5kYXJ5IGFmdGVyIHdlIG1hdGNoIHJvdXRlc1xuICAgICAgcGVuZGluZ0Vycm9yOiBlcnJvcixcbiAgICAgIHByZXZlbnRTY3JvbGxSZXNldCxcbiAgICAgIHJlcGxhY2U6IG9wdHMgJiYgb3B0cy5yZXBsYWNlXG4gICAgfSk7XG4gIH0gLy8gUmV2YWxpZGF0ZSBhbGwgY3VycmVudCBsb2FkZXJzLiAgSWYgYSBuYXZpZ2F0aW9uIGlzIGluIHByb2dyZXNzIG9yIGlmIHRoaXNcbiAgLy8gaXMgaW50ZXJydXB0ZWQgYnkgYSBuYXZpZ2F0aW9uLCBhbGxvdyB0aGlzIHRvIFwic3VjY2VlZFwiIGJ5IGNhbGxpbmcgYWxsXG4gIC8vIGxvYWRlcnMgZHVyaW5nIHRoZSBuZXh0IGxvYWRlciByb3VuZFxuXG5cbiAgZnVuY3Rpb24gcmV2YWxpZGF0ZSgpIHtcbiAgICBpbnRlcnJ1cHRBY3RpdmVMb2FkcygpO1xuICAgIHVwZGF0ZVN0YXRlKHtcbiAgICAgIHJldmFsaWRhdGlvbjogXCJsb2FkaW5nXCJcbiAgICB9KTsgLy8gSWYgd2UncmUgY3VycmVudGx5IHN1Ym1pdHRpbmcgYW4gYWN0aW9uLCB3ZSBkb24ndCBuZWVkIHRvIHN0YXJ0IGEgbmV3XG4gICAgLy8gbmF2aWdhdGlvbiwgd2UnbGwganVzdCBsZXQgdGhlIGZvbGxvdyB1cCBsb2FkZXIgZXhlY3V0aW9uIGNhbGwgYWxsIGxvYWRlcnNcblxuICAgIGlmIChzdGF0ZS5uYXZpZ2F0aW9uLnN0YXRlID09PSBcInN1Ym1pdHRpbmdcIikge1xuICAgICAgcmV0dXJuO1xuICAgIH0gLy8gSWYgd2UncmUgY3VycmVudGx5IGluIGFuIGlkbGUgc3RhdGUsIHN0YXJ0IGEgbmV3IG5hdmlnYXRpb24gZm9yIHRoZSBjdXJyZW50XG4gICAgLy8gYWN0aW9uL2xvY2F0aW9uIGFuZCBtYXJrIGl0IGFzIHVuaW50ZXJydXB0ZWQsIHdoaWNoIHdpbGwgc2tpcCB0aGUgaGlzdG9yeVxuICAgIC8vIHVwZGF0ZSBpbiBjb21wbGV0ZU5hdmlnYXRpb25cblxuXG4gICAgaWYgKHN0YXRlLm5hdmlnYXRpb24uc3RhdGUgPT09IFwiaWRsZVwiKSB7XG4gICAgICBzdGFydE5hdmlnYXRpb24oc3RhdGUuaGlzdG9yeUFjdGlvbiwgc3RhdGUubG9jYXRpb24sIHtcbiAgICAgICAgc3RhcnRVbmludGVycnVwdGVkUmV2YWxpZGF0aW9uOiB0cnVlXG4gICAgICB9KTtcbiAgICAgIHJldHVybjtcbiAgICB9IC8vIE90aGVyd2lzZSwgaWYgd2UncmUgY3VycmVudGx5IGluIGEgbG9hZGluZyBzdGF0ZSwganVzdCBzdGFydCBhIG5ld1xuICAgIC8vIG5hdmlnYXRpb24gdG8gdGhlIG5hdmlnYXRpb24ubG9jYXRpb24gYnV0IGRvIG5vdCB0cmlnZ2VyIGFuIHVuaW50ZXJydXB0ZWRcbiAgICAvLyByZXZhbGlkYXRpb24gc28gdGhhdCBoaXN0b3J5IGNvcnJlY3RseSB1cGRhdGVzIG9uY2UgdGhlIG5hdmlnYXRpb24gY29tcGxldGVzXG5cblxuICAgIHN0YXJ0TmF2aWdhdGlvbihwZW5kaW5nQWN0aW9uIHx8IHN0YXRlLmhpc3RvcnlBY3Rpb24sIHN0YXRlLm5hdmlnYXRpb24ubG9jYXRpb24sIHtcbiAgICAgIG92ZXJyaWRlTmF2aWdhdGlvbjogc3RhdGUubmF2aWdhdGlvblxuICAgIH0pO1xuICB9IC8vIFN0YXJ0IGEgbmF2aWdhdGlvbiB0byB0aGUgZ2l2ZW4gYWN0aW9uL2xvY2F0aW9uLiAgQ2FuIG9wdGlvbmFsbHkgcHJvdmlkZSBhXG4gIC8vIG92ZXJyaWRlTmF2aWdhdGlvbiB3aGljaCB3aWxsIG92ZXJyaWRlIHRoZSBub3JtYWxMb2FkIGluIHRoZSBjYXNlIG9mIGEgcmVkaXJlY3RcbiAgLy8gbmF2aWdhdGlvblxuXG5cbiAgYXN5bmMgZnVuY3Rpb24gc3RhcnROYXZpZ2F0aW9uKGhpc3RvcnlBY3Rpb24sIGxvY2F0aW9uLCBvcHRzKSB7XG4gICAgLy8gQWJvcnQgYW55IGluLXByb2dyZXNzIG5hdmlnYXRpb25zIGFuZCBzdGFydCBhIG5ldyBvbmUuIFVuc2V0IGFueSBvbmdvaW5nXG4gICAgLy8gdW5pbnRlcnJ1cHRlZCByZXZhbGlkYXRpb25zIHVubGVzcyB0b2xkIG90aGVyd2lzZSwgc2luY2Ugd2Ugd2FudCB0aGlzXG4gICAgLy8gbmV3IG5hdmlnYXRpb24gdG8gdXBkYXRlIGhpc3Rvcnkgbm9ybWFsbHlcbiAgICBwZW5kaW5nTmF2aWdhdGlvbkNvbnRyb2xsZXIgJiYgcGVuZGluZ05hdmlnYXRpb25Db250cm9sbGVyLmFib3J0KCk7XG4gICAgcGVuZGluZ05hdmlnYXRpb25Db250cm9sbGVyID0gbnVsbDtcbiAgICBwZW5kaW5nQWN0aW9uID0gaGlzdG9yeUFjdGlvbjtcbiAgICBpc1VuaW50ZXJydXB0ZWRSZXZhbGlkYXRpb24gPSAob3B0cyAmJiBvcHRzLnN0YXJ0VW5pbnRlcnJ1cHRlZFJldmFsaWRhdGlvbikgPT09IHRydWU7IC8vIFNhdmUgdGhlIGN1cnJlbnQgc2Nyb2xsIHBvc2l0aW9uIGV2ZXJ5IHRpbWUgd2Ugc3RhcnQgYSBuZXcgbmF2aWdhdGlvbixcbiAgICAvLyBhbmQgdHJhY2sgd2hldGhlciB3ZSBzaG91bGQgcmVzZXQgc2Nyb2xsIG9uIGNvbXBsZXRpb25cblxuICAgIHNhdmVTY3JvbGxQb3NpdGlvbihzdGF0ZS5sb2NhdGlvbiwgc3RhdGUubWF0Y2hlcyk7XG4gICAgcGVuZGluZ1ByZXZlbnRTY3JvbGxSZXNldCA9IChvcHRzICYmIG9wdHMucHJldmVudFNjcm9sbFJlc2V0KSA9PT0gdHJ1ZTtcbiAgICBsZXQgbG9hZGluZ05hdmlnYXRpb24gPSBvcHRzICYmIG9wdHMub3ZlcnJpZGVOYXZpZ2F0aW9uO1xuICAgIGxldCBtYXRjaGVzID0gbWF0Y2hSb3V0ZXMoZGF0YVJvdXRlcywgbG9jYXRpb24sIGluaXQuYmFzZW5hbWUpOyAvLyBTaG9ydCBjaXJjdWl0IHdpdGggYSA0MDQgb24gdGhlIHJvb3QgZXJyb3IgYm91bmRhcnkgaWYgd2UgbWF0Y2ggbm90aGluZ1xuXG4gICAgaWYgKCFtYXRjaGVzKSB7XG4gICAgICBsZXQge1xuICAgICAgICBtYXRjaGVzOiBub3RGb3VuZE1hdGNoZXMsXG4gICAgICAgIHJvdXRlLFxuICAgICAgICBlcnJvclxuICAgICAgfSA9IGdldE5vdEZvdW5kTWF0Y2hlcyhkYXRhUm91dGVzKTsgLy8gQ2FuY2VsIGFsbCBwZW5kaW5nIGRlZmVycmVkIG9uIDQwNHMgc2luY2Ugd2UgZG9uJ3Qga2VlcCBhbnkgcm91dGVzXG5cbiAgICAgIGNhbmNlbEFjdGl2ZURlZmVycmVkcygpO1xuICAgICAgY29tcGxldGVOYXZpZ2F0aW9uKGxvY2F0aW9uLCB7XG4gICAgICAgIG1hdGNoZXM6IG5vdEZvdW5kTWF0Y2hlcyxcbiAgICAgICAgbG9hZGVyRGF0YToge30sXG4gICAgICAgIGVycm9yczoge1xuICAgICAgICAgIFtyb3V0ZS5pZF06IGVycm9yXG4gICAgICAgIH1cbiAgICAgIH0pO1xuICAgICAgcmV0dXJuO1xuICAgIH0gLy8gU2hvcnQgY2lyY3VpdCBpZiBpdCdzIG9ubHkgYSBoYXNoIGNoYW5nZVxuXG5cbiAgICBpZiAoaXNIYXNoQ2hhbmdlT25seShzdGF0ZS5sb2NhdGlvbiwgbG9jYXRpb24pKSB7XG4gICAgICBjb21wbGV0ZU5hdmlnYXRpb24obG9jYXRpb24sIHtcbiAgICAgICAgbWF0Y2hlc1xuICAgICAgfSk7XG4gICAgICByZXR1cm47XG4gICAgfSAvLyBDcmVhdGUgYSBjb250cm9sbGVyL1JlcXVlc3QgZm9yIHRoaXMgbmF2aWdhdGlvblxuXG5cbiAgICBwZW5kaW5nTmF2aWdhdGlvbkNvbnRyb2xsZXIgPSBuZXcgQWJvcnRDb250cm9sbGVyKCk7XG4gICAgbGV0IHJlcXVlc3QgPSBjcmVhdGVSZXF1ZXN0KGxvY2F0aW9uLCBwZW5kaW5nTmF2aWdhdGlvbkNvbnRyb2xsZXIuc2lnbmFsLCBvcHRzICYmIG9wdHMuc3VibWlzc2lvbik7XG4gICAgbGV0IHBlbmRpbmdBY3Rpb25EYXRhO1xuICAgIGxldCBwZW5kaW5nRXJyb3I7XG5cbiAgICBpZiAob3B0cyAmJiBvcHRzLnBlbmRpbmdFcnJvcikge1xuICAgICAgLy8gSWYgd2UgaGF2ZSBhIHBlbmRpbmdFcnJvciwgaXQgbWVhbnMgdGhlIHVzZXIgYXR0ZW1wdGVkIGEgR0VUIHN1Ym1pc3Npb25cbiAgICAgIC8vIHdpdGggYmluYXJ5IEZvcm1EYXRhIHNvIGFzc2lnbiBoZXJlIGFuZCBza2lwIHRvIGhhbmRsZUxvYWRlcnMuICBUaGF0XG4gICAgICAvLyB3YXkgd2UgaGFuZGxlIGNhbGxpbmcgbG9hZGVycyBhYm92ZSB0aGUgYm91bmRhcnkgZXRjLiAgSXQncyBub3QgcmVhbGx5XG4gICAgICAvLyBkaWZmZXJlbnQgZnJvbSBhbiBhY3Rpb25FcnJvciBpbiB0aGF0IHNlbnNlLlxuICAgICAgcGVuZGluZ0Vycm9yID0ge1xuICAgICAgICBbZmluZE5lYXJlc3RCb3VuZGFyeShtYXRjaGVzKS5yb3V0ZS5pZF06IG9wdHMucGVuZGluZ0Vycm9yXG4gICAgICB9O1xuICAgIH0gZWxzZSBpZiAob3B0cyAmJiBvcHRzLnN1Ym1pc3Npb24pIHtcbiAgICAgIC8vIENhbGwgYWN0aW9uIGlmIHdlIHJlY2VpdmVkIGFuIGFjdGlvbiBzdWJtaXNzaW9uXG4gICAgICBsZXQgYWN0aW9uT3V0cHV0ID0gYXdhaXQgaGFuZGxlQWN0aW9uKHJlcXVlc3QsIGxvY2F0aW9uLCBvcHRzLnN1Ym1pc3Npb24sIG1hdGNoZXMsIHtcbiAgICAgICAgcmVwbGFjZTogb3B0cy5yZXBsYWNlXG4gICAgICB9KTtcblxuICAgICAgaWYgKGFjdGlvbk91dHB1dC5zaG9ydENpcmN1aXRlZCkge1xuICAgICAgICByZXR1cm47XG4gICAgICB9XG5cbiAgICAgIHBlbmRpbmdBY3Rpb25EYXRhID0gYWN0aW9uT3V0cHV0LnBlbmRpbmdBY3Rpb25EYXRhO1xuICAgICAgcGVuZGluZ0Vycm9yID0gYWN0aW9uT3V0cHV0LnBlbmRpbmdBY3Rpb25FcnJvcjtcblxuICAgICAgbGV0IG5hdmlnYXRpb24gPSBfZXh0ZW5kcyh7XG4gICAgICAgIHN0YXRlOiBcImxvYWRpbmdcIixcbiAgICAgICAgbG9jYXRpb25cbiAgICAgIH0sIG9wdHMuc3VibWlzc2lvbik7XG5cbiAgICAgIGxvYWRpbmdOYXZpZ2F0aW9uID0gbmF2aWdhdGlvbjtcbiAgICB9IC8vIENhbGwgbG9hZGVyc1xuXG5cbiAgICBsZXQge1xuICAgICAgc2hvcnRDaXJjdWl0ZWQsXG4gICAgICBsb2FkZXJEYXRhLFxuICAgICAgZXJyb3JzXG4gICAgfSA9IGF3YWl0IGhhbmRsZUxvYWRlcnMocmVxdWVzdCwgbG9jYXRpb24sIG1hdGNoZXMsIGxvYWRpbmdOYXZpZ2F0aW9uLCBvcHRzICYmIG9wdHMuc3VibWlzc2lvbiwgb3B0cyAmJiBvcHRzLnJlcGxhY2UsIHBlbmRpbmdBY3Rpb25EYXRhLCBwZW5kaW5nRXJyb3IpO1xuXG4gICAgaWYgKHNob3J0Q2lyY3VpdGVkKSB7XG4gICAgICByZXR1cm47XG4gICAgfSAvLyBDbGVhbiB1cCBub3cgdGhhdCB0aGUgYWN0aW9uL2xvYWRlcnMgaGF2ZSBjb21wbGV0ZWQuICBEb24ndCBjbGVhbiB1cCBpZlxuICAgIC8vIHdlIHNob3J0IGNpcmN1aXRlZCBiZWNhdXNlIHBlbmRpbmdOYXZpZ2F0aW9uQ29udHJvbGxlciB3aWxsIGhhdmUgYWxyZWFkeVxuICAgIC8vIGJlZW4gYXNzaWduZWQgdG8gYSBuZXcgY29udHJvbGxlciBmb3IgdGhlIG5leHQgbmF2aWdhdGlvblxuXG5cbiAgICBwZW5kaW5nTmF2aWdhdGlvbkNvbnRyb2xsZXIgPSBudWxsO1xuICAgIGNvbXBsZXRlTmF2aWdhdGlvbihsb2NhdGlvbiwge1xuICAgICAgbWF0Y2hlcyxcbiAgICAgIGxvYWRlckRhdGEsXG4gICAgICBlcnJvcnNcbiAgICB9KTtcbiAgfSAvLyBDYWxsIHRoZSBhY3Rpb24gbWF0Y2hlZCBieSB0aGUgbGVhZiByb3V0ZSBmb3IgdGhpcyBuYXZpZ2F0aW9uIGFuZCBoYW5kbGVcbiAgLy8gcmVkaXJlY3RzL2Vycm9yc1xuXG5cbiAgYXN5bmMgZnVuY3Rpb24gaGFuZGxlQWN0aW9uKHJlcXVlc3QsIGxvY2F0aW9uLCBzdWJtaXNzaW9uLCBtYXRjaGVzLCBvcHRzKSB7XG4gICAgaW50ZXJydXB0QWN0aXZlTG9hZHMoKTsgLy8gUHV0IHVzIGluIGEgc3VibWl0dGluZyBzdGF0ZVxuXG4gICAgbGV0IG5hdmlnYXRpb24gPSBfZXh0ZW5kcyh7XG4gICAgICBzdGF0ZTogXCJzdWJtaXR0aW5nXCIsXG4gICAgICBsb2NhdGlvblxuICAgIH0sIHN1Ym1pc3Npb24pO1xuXG4gICAgdXBkYXRlU3RhdGUoe1xuICAgICAgbmF2aWdhdGlvblxuICAgIH0pOyAvLyBDYWxsIG91ciBhY3Rpb24gYW5kIGdldCB0aGUgcmVzdWx0XG5cbiAgICBsZXQgcmVzdWx0O1xuICAgIGxldCBhY3Rpb25NYXRjaCA9IGdldFRhcmdldE1hdGNoKG1hdGNoZXMsIGxvY2F0aW9uKTtcblxuICAgIGlmICghYWN0aW9uTWF0Y2gucm91dGUuYWN0aW9uKSB7XG4gICAgICByZXN1bHQgPSBnZXRNZXRob2ROb3RBbGxvd2VkUmVzdWx0KGxvY2F0aW9uKTtcbiAgICB9IGVsc2Uge1xuICAgICAgcmVzdWx0ID0gYXdhaXQgY2FsbExvYWRlck9yQWN0aW9uKFwiYWN0aW9uXCIsIHJlcXVlc3QsIGFjdGlvbk1hdGNoKTtcblxuICAgICAgaWYgKHJlcXVlc3Quc2lnbmFsLmFib3J0ZWQpIHtcbiAgICAgICAgcmV0dXJuIHtcbiAgICAgICAgICBzaG9ydENpcmN1aXRlZDogdHJ1ZVxuICAgICAgICB9O1xuICAgICAgfVxuICAgIH1cblxuICAgIGlmIChpc1JlZGlyZWN0UmVzdWx0KHJlc3VsdCkpIHtcbiAgICAgIGxldCByZWRpcmVjdE5hdmlnYXRpb24gPSBfZXh0ZW5kcyh7XG4gICAgICAgIHN0YXRlOiBcImxvYWRpbmdcIixcbiAgICAgICAgbG9jYXRpb246IGNyZWF0ZUxvY2F0aW9uKHN0YXRlLmxvY2F0aW9uLCByZXN1bHQubG9jYXRpb24pXG4gICAgICB9LCBzdWJtaXNzaW9uKTtcblxuICAgICAgYXdhaXQgc3RhcnRSZWRpcmVjdE5hdmlnYXRpb24ocmVzdWx0LCByZWRpcmVjdE5hdmlnYXRpb24sIG9wdHMgJiYgb3B0cy5yZXBsYWNlKTtcbiAgICAgIHJldHVybiB7XG4gICAgICAgIHNob3J0Q2lyY3VpdGVkOiB0cnVlXG4gICAgICB9O1xuICAgIH1cblxuICAgIGlmIChpc0Vycm9yUmVzdWx0KHJlc3VsdCkpIHtcbiAgICAgIC8vIFN0b3JlIG9mZiB0aGUgcGVuZGluZyBlcnJvciAtIHdlIHVzZSBpdCB0byBkZXRlcm1pbmUgd2hpY2ggbG9hZGVyc1xuICAgICAgLy8gdG8gY2FsbCBhbmQgd2lsbCBjb21taXQgaXQgd2hlbiB3ZSBjb21wbGV0ZSB0aGUgbmF2aWdhdGlvblxuICAgICAgbGV0IGJvdW5kYXJ5TWF0Y2ggPSBmaW5kTmVhcmVzdEJvdW5kYXJ5KG1hdGNoZXMsIGFjdGlvbk1hdGNoLnJvdXRlLmlkKTsgLy8gQnkgZGVmYXVsdCwgYWxsIHN1Ym1pc3Npb25zIGFyZSBSRVBMQUNFIG5hdmlnYXRpb25zLCBidXQgaWYgdGhlXG4gICAgICAvLyBhY3Rpb24gdGhyZXcgYW4gZXJyb3IgdGhhdCdsbCBiZSByZW5kZXJlZCBpbiBhbiBlcnJvckVsZW1lbnQsIHdlIGZhbGxcbiAgICAgIC8vIGJhY2sgdG8gUFVTSCBzbyB0aGF0IHRoZSB1c2VyIGNhbiB1c2UgdGhlIGJhY2sgYnV0dG9uIHRvIGdldCBiYWNrIHRvXG4gICAgICAvLyB0aGUgcHJlLXN1Ym1pc3Npb24gZm9ybSBsb2NhdGlvbiB0byB0cnkgYWdhaW5cblxuICAgICAgaWYgKChvcHRzICYmIG9wdHMucmVwbGFjZSkgIT09IHRydWUpIHtcbiAgICAgICAgcGVuZGluZ0FjdGlvbiA9IEFjdGlvbi5QdXNoO1xuICAgICAgfVxuXG4gICAgICByZXR1cm4ge1xuICAgICAgICBwZW5kaW5nQWN0aW9uRXJyb3I6IHtcbiAgICAgICAgICBbYm91bmRhcnlNYXRjaC5yb3V0ZS5pZF06IHJlc3VsdC5lcnJvclxuICAgICAgICB9XG4gICAgICB9O1xuICAgIH1cblxuICAgIGlmIChpc0RlZmVycmVkUmVzdWx0KHJlc3VsdCkpIHtcbiAgICAgIHRocm93IG5ldyBFcnJvcihcImRlZmVyKCkgaXMgbm90IHN1cHBvcnRlZCBpbiBhY3Rpb25zXCIpO1xuICAgIH1cblxuICAgIHJldHVybiB7XG4gICAgICBwZW5kaW5nQWN0aW9uRGF0YToge1xuICAgICAgICBbYWN0aW9uTWF0Y2gucm91dGUuaWRdOiByZXN1bHQuZGF0YVxuICAgICAgfVxuICAgIH07XG4gIH0gLy8gQ2FsbCBhbGwgYXBwbGljYWJsZSBsb2FkZXJzIGZvciB0aGUgZ2l2ZW4gbWF0Y2hlcywgaGFuZGxpbmcgcmVkaXJlY3RzLFxuICAvLyBlcnJvcnMsIGV0Yy5cblxuXG4gIGFzeW5jIGZ1bmN0aW9uIGhhbmRsZUxvYWRlcnMocmVxdWVzdCwgbG9jYXRpb24sIG1hdGNoZXMsIG92ZXJyaWRlTmF2aWdhdGlvbiwgc3VibWlzc2lvbiwgcmVwbGFjZSwgcGVuZGluZ0FjdGlvbkRhdGEsIHBlbmRpbmdFcnJvcikge1xuICAgIC8vIEZpZ3VyZSBvdXQgdGhlIHJpZ2h0IG5hdmlnYXRpb24gd2Ugd2FudCB0byB1c2UgZm9yIGRhdGEgbG9hZGluZ1xuICAgIGxldCBsb2FkaW5nTmF2aWdhdGlvbiA9IG92ZXJyaWRlTmF2aWdhdGlvbjtcblxuICAgIGlmICghbG9hZGluZ05hdmlnYXRpb24pIHtcbiAgICAgIGxldCBuYXZpZ2F0aW9uID0ge1xuICAgICAgICBzdGF0ZTogXCJsb2FkaW5nXCIsXG4gICAgICAgIGxvY2F0aW9uLFxuICAgICAgICBmb3JtTWV0aG9kOiB1bmRlZmluZWQsXG4gICAgICAgIGZvcm1BY3Rpb246IHVuZGVmaW5lZCxcbiAgICAgICAgZm9ybUVuY1R5cGU6IHVuZGVmaW5lZCxcbiAgICAgICAgZm9ybURhdGE6IHVuZGVmaW5lZFxuICAgICAgfTtcbiAgICAgIGxvYWRpbmdOYXZpZ2F0aW9uID0gbmF2aWdhdGlvbjtcbiAgICB9XG5cbiAgICBsZXQgW21hdGNoZXNUb0xvYWQsIHJldmFsaWRhdGluZ0ZldGNoZXJzXSA9IGdldE1hdGNoZXNUb0xvYWQoc3RhdGUsIG1hdGNoZXMsIHN1Ym1pc3Npb24sIGxvY2F0aW9uLCBpc1JldmFsaWRhdGlvblJlcXVpcmVkLCBjYW5jZWxsZWREZWZlcnJlZFJvdXRlcywgY2FuY2VsbGVkRmV0Y2hlckxvYWRzLCBwZW5kaW5nQWN0aW9uRGF0YSwgcGVuZGluZ0Vycm9yLCBmZXRjaExvYWRNYXRjaGVzKTsgLy8gQ2FuY2VsIHBlbmRpbmcgZGVmZXJyZWRzIGZvciBuby1sb25nZXItbWF0Y2hlZCByb3V0ZXMgb3Igcm91dGVzIHdlJ3JlXG4gICAgLy8gYWJvdXQgdG8gcmVsb2FkLiAgTm90ZSB0aGF0IGlmIHRoaXMgaXMgYW4gYWN0aW9uIHJlbG9hZCB3ZSB3b3VsZCBoYXZlXG4gICAgLy8gYWxyZWFkeSBjYW5jZWxsZWQgYWxsIHBlbmRpbmcgZGVmZXJyZWRzIHNvIHRoaXMgd291bGQgYmUgYSBuby1vcFxuXG4gICAgY2FuY2VsQWN0aXZlRGVmZXJyZWRzKHJvdXRlSWQgPT4gIShtYXRjaGVzICYmIG1hdGNoZXMuc29tZShtID0+IG0ucm91dGUuaWQgPT09IHJvdXRlSWQpKSB8fCBtYXRjaGVzVG9Mb2FkICYmIG1hdGNoZXNUb0xvYWQuc29tZShtID0+IG0ucm91dGUuaWQgPT09IHJvdXRlSWQpKTsgLy8gU2hvcnQgY2lyY3VpdCBpZiB3ZSBoYXZlIG5vIGxvYWRlcnMgdG8gcnVuXG5cbiAgICBpZiAobWF0Y2hlc1RvTG9hZC5sZW5ndGggPT09IDAgJiYgcmV2YWxpZGF0aW5nRmV0Y2hlcnMubGVuZ3RoID09PSAwKSB7XG4gICAgICBjb21wbGV0ZU5hdmlnYXRpb24obG9jYXRpb24sIHtcbiAgICAgICAgbWF0Y2hlcyxcbiAgICAgICAgbG9hZGVyRGF0YTogbWVyZ2VMb2FkZXJEYXRhKHN0YXRlLmxvYWRlckRhdGEsIHt9LCBtYXRjaGVzKSxcbiAgICAgICAgLy8gQ29tbWl0IHBlbmRpbmcgZXJyb3IgaWYgd2UncmUgc2hvcnQgY2lyY3VpdGluZ1xuICAgICAgICBlcnJvcnM6IHBlbmRpbmdFcnJvciB8fCBudWxsLFxuICAgICAgICBhY3Rpb25EYXRhOiBwZW5kaW5nQWN0aW9uRGF0YSB8fCBudWxsXG4gICAgICB9KTtcbiAgICAgIHJldHVybiB7XG4gICAgICAgIHNob3J0Q2lyY3VpdGVkOiB0cnVlXG4gICAgICB9O1xuICAgIH0gLy8gSWYgdGhpcyBpcyBhbiB1bmludGVycnVwdGVkIHJldmFsaWRhdGlvbiwgd2UgcmVtYWluIGluIG91ciBjdXJyZW50IGlkbGVcbiAgICAvLyBzdGF0ZS4gIElmIG5vdCwgd2UgbmVlZCB0byBzd2l0Y2ggdG8gb3VyIGxvYWRpbmcgc3RhdGUgYW5kIGxvYWQgZGF0YSxcbiAgICAvLyBwcmVzZXJ2aW5nIGFueSBuZXcgYWN0aW9uIGRhdGEgb3IgZXhpc3RpbmcgYWN0aW9uIGRhdGEgKGluIHRoZSBjYXNlIG9mXG4gICAgLy8gYSByZXZhbGlkYXRpb24gaW50ZXJydXB0aW5nIGFuIGFjdGlvblJlbG9hZClcblxuXG4gICAgaWYgKCFpc1VuaW50ZXJydXB0ZWRSZXZhbGlkYXRpb24pIHtcbiAgICAgIHJldmFsaWRhdGluZ0ZldGNoZXJzLmZvckVhY2goX3JlZjIgPT4ge1xuICAgICAgICBsZXQgW2tleV0gPSBfcmVmMjtcbiAgICAgICAgY29uc3QgZmV0Y2hlciA9IHN0YXRlLmZldGNoZXJzLmdldChrZXkpO1xuICAgICAgICBsZXQgcmV2YWxpZGF0aW5nRmV0Y2hlciA9IHtcbiAgICAgICAgICBzdGF0ZTogXCJsb2FkaW5nXCIsXG4gICAgICAgICAgZGF0YTogZmV0Y2hlciAmJiBmZXRjaGVyLmRhdGEsXG4gICAgICAgICAgZm9ybU1ldGhvZDogdW5kZWZpbmVkLFxuICAgICAgICAgIGZvcm1BY3Rpb246IHVuZGVmaW5lZCxcbiAgICAgICAgICBmb3JtRW5jVHlwZTogdW5kZWZpbmVkLFxuICAgICAgICAgIGZvcm1EYXRhOiB1bmRlZmluZWRcbiAgICAgICAgfTtcbiAgICAgICAgc3RhdGUuZmV0Y2hlcnMuc2V0KGtleSwgcmV2YWxpZGF0aW5nRmV0Y2hlcik7XG4gICAgICB9KTtcbiAgICAgIHVwZGF0ZVN0YXRlKF9leHRlbmRzKHtcbiAgICAgICAgbmF2aWdhdGlvbjogbG9hZGluZ05hdmlnYXRpb24sXG4gICAgICAgIGFjdGlvbkRhdGE6IHBlbmRpbmdBY3Rpb25EYXRhIHx8IHN0YXRlLmFjdGlvbkRhdGEgfHwgbnVsbFxuICAgICAgfSwgcmV2YWxpZGF0aW5nRmV0Y2hlcnMubGVuZ3RoID4gMCA/IHtcbiAgICAgICAgZmV0Y2hlcnM6IG5ldyBNYXAoc3RhdGUuZmV0Y2hlcnMpXG4gICAgICB9IDoge30pKTtcbiAgICB9XG5cbiAgICBwZW5kaW5nTmF2aWdhdGlvbkxvYWRJZCA9ICsraW5jcmVtZW50aW5nTG9hZElkO1xuICAgIHJldmFsaWRhdGluZ0ZldGNoZXJzLmZvckVhY2goX3JlZjMgPT4ge1xuICAgICAgbGV0IFtrZXldID0gX3JlZjM7XG4gICAgICByZXR1cm4gZmV0Y2hDb250cm9sbGVycy5zZXQoa2V5LCBwZW5kaW5nTmF2aWdhdGlvbkNvbnRyb2xsZXIpO1xuICAgIH0pO1xuICAgIGxldCB7XG4gICAgICByZXN1bHRzLFxuICAgICAgbG9hZGVyUmVzdWx0cyxcbiAgICAgIGZldGNoZXJSZXN1bHRzXG4gICAgfSA9IGF3YWl0IGNhbGxMb2FkZXJzQW5kTWF5YmVSZXNvbHZlRGF0YShzdGF0ZS5tYXRjaGVzLCBtYXRjaGVzVG9Mb2FkLCByZXZhbGlkYXRpbmdGZXRjaGVycywgcmVxdWVzdCk7XG5cbiAgICBpZiAocmVxdWVzdC5zaWduYWwuYWJvcnRlZCkge1xuICAgICAgcmV0dXJuIHtcbiAgICAgICAgc2hvcnRDaXJjdWl0ZWQ6IHRydWVcbiAgICAgIH07XG4gICAgfSAvLyBDbGVhbiB1cCBfYWZ0ZXJfIGxvYWRlcnMgaGF2ZSBjb21wbGV0ZWQuICBEb24ndCBjbGVhbiB1cCBpZiB3ZSBzaG9ydFxuICAgIC8vIGNpcmN1aXRlZCBiZWNhdXNlIGZldGNoQ29udHJvbGxlcnMgd291bGQgaGF2ZSBiZWVuIGFib3J0ZWQgYW5kXG4gICAgLy8gcmVhc3NpZ25lZCB0byBuZXcgY29udHJvbGxlcnMgZm9yIHRoZSBuZXh0IG5hdmlnYXRpb25cblxuXG4gICAgcmV2YWxpZGF0aW5nRmV0Y2hlcnMuZm9yRWFjaChfcmVmNCA9PiB7XG4gICAgICBsZXQgW2tleV0gPSBfcmVmNDtcbiAgICAgIHJldHVybiBmZXRjaENvbnRyb2xsZXJzLmRlbGV0ZShrZXkpO1xuICAgIH0pOyAvLyBJZiBhbnkgbG9hZGVycyByZXR1cm5lZCBhIHJlZGlyZWN0IFJlc3BvbnNlLCBzdGFydCBhIG5ldyBSRVBMQUNFIG5hdmlnYXRpb25cblxuICAgIGxldCByZWRpcmVjdCA9IGZpbmRSZWRpcmVjdChyZXN1bHRzKTtcblxuICAgIGlmIChyZWRpcmVjdCkge1xuICAgICAgbGV0IHJlZGlyZWN0TmF2aWdhdGlvbiA9IGdldExvYWRlclJlZGlyZWN0KHN0YXRlLCByZWRpcmVjdCk7XG4gICAgICBhd2FpdCBzdGFydFJlZGlyZWN0TmF2aWdhdGlvbihyZWRpcmVjdCwgcmVkaXJlY3ROYXZpZ2F0aW9uLCByZXBsYWNlKTtcbiAgICAgIHJldHVybiB7XG4gICAgICAgIHNob3J0Q2lyY3VpdGVkOiB0cnVlXG4gICAgICB9O1xuICAgIH0gLy8gUHJvY2VzcyBhbmQgY29tbWl0IG91dHB1dCBmcm9tIGxvYWRlcnNcblxuXG4gICAgbGV0IHtcbiAgICAgIGxvYWRlckRhdGEsXG4gICAgICBlcnJvcnNcbiAgICB9ID0gcHJvY2Vzc0xvYWRlckRhdGEoc3RhdGUsIG1hdGNoZXMsIG1hdGNoZXNUb0xvYWQsIGxvYWRlclJlc3VsdHMsIHBlbmRpbmdFcnJvciwgcmV2YWxpZGF0aW5nRmV0Y2hlcnMsIGZldGNoZXJSZXN1bHRzLCBhY3RpdmVEZWZlcnJlZHMpOyAvLyBXaXJlIHVwIHN1YnNjcmliZXJzIHRvIHVwZGF0ZSBsb2FkZXJEYXRhIGFzIHByb21pc2VzIHNldHRsZVxuXG4gICAgYWN0aXZlRGVmZXJyZWRzLmZvckVhY2goKGRlZmVycmVkRGF0YSwgcm91dGVJZCkgPT4ge1xuICAgICAgZGVmZXJyZWREYXRhLnN1YnNjcmliZShhYm9ydGVkID0+IHtcbiAgICAgICAgLy8gTm90ZTogTm8gbmVlZCB0byB1cGRhdGVTdGF0ZSBoZXJlIHNpbmNlIHRoZSBUcmFja2VkUHJvbWlzZSBvblxuICAgICAgICAvLyBsb2FkZXJEYXRhIGlzIHN0YWJsZSBhY3Jvc3MgcmVzb2x2ZS9yZWplY3RcbiAgICAgICAgLy8gUmVtb3ZlIHRoaXMgaW5zdGFuY2UgaWYgd2Ugd2VyZSBhYm9ydGVkIG9yIGlmIHByb21pc2VzIGhhdmUgc2V0dGxlZFxuICAgICAgICBpZiAoYWJvcnRlZCB8fCBkZWZlcnJlZERhdGEuZG9uZSkge1xuICAgICAgICAgIGFjdGl2ZURlZmVycmVkcy5kZWxldGUocm91dGVJZCk7XG4gICAgICAgIH1cbiAgICAgIH0pO1xuICAgIH0pO1xuICAgIG1hcmtGZXRjaFJlZGlyZWN0c0RvbmUoKTtcbiAgICBsZXQgZGlkQWJvcnRGZXRjaExvYWRzID0gYWJvcnRTdGFsZUZldGNoTG9hZHMocGVuZGluZ05hdmlnYXRpb25Mb2FkSWQpO1xuICAgIHJldHVybiBfZXh0ZW5kcyh7XG4gICAgICBsb2FkZXJEYXRhLFxuICAgICAgZXJyb3JzXG4gICAgfSwgZGlkQWJvcnRGZXRjaExvYWRzIHx8IHJldmFsaWRhdGluZ0ZldGNoZXJzLmxlbmd0aCA+IDAgPyB7XG4gICAgICBmZXRjaGVyczogbmV3IE1hcChzdGF0ZS5mZXRjaGVycylcbiAgICB9IDoge30pO1xuICB9XG5cbiAgZnVuY3Rpb24gZ2V0RmV0Y2hlcihrZXkpIHtcbiAgICByZXR1cm4gc3RhdGUuZmV0Y2hlcnMuZ2V0KGtleSkgfHwgSURMRV9GRVRDSEVSO1xuICB9IC8vIFRyaWdnZXIgYSBmZXRjaGVyIGxvYWQvc3VibWl0IGZvciB0aGUgZ2l2ZW4gZmV0Y2hlciBrZXlcblxuXG4gIGZ1bmN0aW9uIGZldGNoKGtleSwgcm91dGVJZCwgaHJlZiwgb3B0cykge1xuICAgIGlmICh0eXBlb2YgQWJvcnRDb250cm9sbGVyID09PSBcInVuZGVmaW5lZFwiKSB7XG4gICAgICB0aHJvdyBuZXcgRXJyb3IoXCJyb3V0ZXIuZmV0Y2goKSB3YXMgY2FsbGVkIGR1cmluZyB0aGUgc2VydmVyIHJlbmRlciwgYnV0IGl0IHNob3VsZG4ndCBiZS4gXCIgKyBcIllvdSBhcmUgbGlrZWx5IGNhbGxpbmcgYSB1c2VGZXRjaGVyKCkgbWV0aG9kIGluIHRoZSBib2R5IG9mIHlvdXIgY29tcG9uZW50LiBcIiArIFwiVHJ5IG1vdmluZyBpdCB0byBhIHVzZUVmZmVjdCBvciBhIGNhbGxiYWNrLlwiKTtcbiAgICB9XG5cbiAgICBpZiAoZmV0Y2hDb250cm9sbGVycy5oYXMoa2V5KSkgYWJvcnRGZXRjaGVyKGtleSk7XG4gICAgbGV0IG1hdGNoZXMgPSBtYXRjaFJvdXRlcyhkYXRhUm91dGVzLCBocmVmLCBpbml0LmJhc2VuYW1lKTtcblxuICAgIGlmICghbWF0Y2hlcykge1xuICAgICAgc2V0RmV0Y2hlckVycm9yKGtleSwgcm91dGVJZCwgbmV3IEVycm9yUmVzcG9uc2UoNDA0LCBcIk5vdCBGb3VuZFwiLCBudWxsKSk7XG4gICAgICByZXR1cm47XG4gICAgfVxuXG4gICAgbGV0IHtcbiAgICAgIHBhdGgsXG4gICAgICBzdWJtaXNzaW9uXG4gICAgfSA9IG5vcm1hbGl6ZU5hdmlnYXRlT3B0aW9ucyhocmVmLCBvcHRzLCB0cnVlKTtcbiAgICBsZXQgbWF0Y2ggPSBnZXRUYXJnZXRNYXRjaChtYXRjaGVzLCBwYXRoKTtcblxuICAgIGlmIChzdWJtaXNzaW9uKSB7XG4gICAgICBoYW5kbGVGZXRjaGVyQWN0aW9uKGtleSwgcm91dGVJZCwgcGF0aCwgbWF0Y2gsIHN1Ym1pc3Npb24pO1xuICAgICAgcmV0dXJuO1xuICAgIH0gLy8gU3RvcmUgb2ZmIHRoZSBtYXRjaCBzbyB3ZSBjYW4gY2FsbCBpdCdzIHNob3VsZFJldmFsaWRhdGUgb24gc3Vic2VxdWVudFxuICAgIC8vIHJldmFsaWRhdGlvbnNcblxuXG4gICAgZmV0Y2hMb2FkTWF0Y2hlcy5zZXQoa2V5LCBbcGF0aCwgbWF0Y2hdKTtcbiAgICBoYW5kbGVGZXRjaGVyTG9hZGVyKGtleSwgcm91dGVJZCwgcGF0aCwgbWF0Y2gpO1xuICB9IC8vIENhbGwgdGhlIGFjdGlvbiBmb3IgdGhlIG1hdGNoZWQgZmV0Y2hlci5zdWJtaXQoKSwgYW5kIHRoZW4gaGFuZGxlIHJlZGlyZWN0cyxcbiAgLy8gZXJyb3JzLCBhbmQgcmV2YWxpZGF0aW9uXG5cblxuICBhc3luYyBmdW5jdGlvbiBoYW5kbGVGZXRjaGVyQWN0aW9uKGtleSwgcm91dGVJZCwgcGF0aCwgbWF0Y2gsIHN1Ym1pc3Npb24pIHtcbiAgICBpbnRlcnJ1cHRBY3RpdmVMb2FkcygpO1xuICAgIGZldGNoTG9hZE1hdGNoZXMuZGVsZXRlKGtleSk7XG5cbiAgICBpZiAoIW1hdGNoLnJvdXRlLmFjdGlvbikge1xuICAgICAgbGV0IHtcbiAgICAgICAgZXJyb3JcbiAgICAgIH0gPSBnZXRNZXRob2ROb3RBbGxvd2VkUmVzdWx0KHBhdGgpO1xuICAgICAgc2V0RmV0Y2hlckVycm9yKGtleSwgcm91dGVJZCwgZXJyb3IpO1xuICAgICAgcmV0dXJuO1xuICAgIH0gLy8gUHV0IHRoaXMgZmV0Y2hlciBpbnRvIGl0J3Mgc3VibWl0dGluZyBzdGF0ZVxuXG5cbiAgICBsZXQgZXhpc3RpbmdGZXRjaGVyID0gc3RhdGUuZmV0Y2hlcnMuZ2V0KGtleSk7XG5cbiAgICBsZXQgZmV0Y2hlciA9IF9leHRlbmRzKHtcbiAgICAgIHN0YXRlOiBcInN1Ym1pdHRpbmdcIlxuICAgIH0sIHN1Ym1pc3Npb24sIHtcbiAgICAgIGRhdGE6IGV4aXN0aW5nRmV0Y2hlciAmJiBleGlzdGluZ0ZldGNoZXIuZGF0YVxuICAgIH0pO1xuXG4gICAgc3RhdGUuZmV0Y2hlcnMuc2V0KGtleSwgZmV0Y2hlcik7XG4gICAgdXBkYXRlU3RhdGUoe1xuICAgICAgZmV0Y2hlcnM6IG5ldyBNYXAoc3RhdGUuZmV0Y2hlcnMpXG4gICAgfSk7IC8vIENhbGwgdGhlIGFjdGlvbiBmb3IgdGhlIGZldGNoZXJcblxuICAgIGxldCBhYm9ydENvbnRyb2xsZXIgPSBuZXcgQWJvcnRDb250cm9sbGVyKCk7XG4gICAgbGV0IGZldGNoUmVxdWVzdCA9IGNyZWF0ZVJlcXVlc3QocGF0aCwgYWJvcnRDb250cm9sbGVyLnNpZ25hbCwgc3VibWlzc2lvbik7XG4gICAgZmV0Y2hDb250cm9sbGVycy5zZXQoa2V5LCBhYm9ydENvbnRyb2xsZXIpO1xuICAgIGxldCBhY3Rpb25SZXN1bHQgPSBhd2FpdCBjYWxsTG9hZGVyT3JBY3Rpb24oXCJhY3Rpb25cIiwgZmV0Y2hSZXF1ZXN0LCBtYXRjaCk7XG5cbiAgICBpZiAoZmV0Y2hSZXF1ZXN0LnNpZ25hbC5hYm9ydGVkKSB7XG4gICAgICAvLyBXZSBjYW4gZGVsZXRlIHRoaXMgc28gbG9uZyBhcyB3ZSB3ZXJlbid0IGFib3J0ZWQgYnkgb3Ugb3VyIG93biBmZXRjaGVyXG4gICAgICAvLyByZS1zdWJtaXQgd2hpY2ggd291bGQgaGF2ZSBwdXQgX25ld18gY29udHJvbGxlciBpcyBpbiBmZXRjaENvbnRyb2xsZXJzXG4gICAgICBpZiAoZmV0Y2hDb250cm9sbGVycy5nZXQoa2V5KSA9PT0gYWJvcnRDb250cm9sbGVyKSB7XG4gICAgICAgIGZldGNoQ29udHJvbGxlcnMuZGVsZXRlKGtleSk7XG4gICAgICB9XG5cbiAgICAgIHJldHVybjtcbiAgICB9XG5cbiAgICBpZiAoaXNSZWRpcmVjdFJlc3VsdChhY3Rpb25SZXN1bHQpKSB7XG4gICAgICBmZXRjaENvbnRyb2xsZXJzLmRlbGV0ZShrZXkpO1xuICAgICAgZmV0Y2hSZWRpcmVjdElkcy5hZGQoa2V5KTtcblxuICAgICAgbGV0IGxvYWRpbmdGZXRjaGVyID0gX2V4dGVuZHMoe1xuICAgICAgICBzdGF0ZTogXCJsb2FkaW5nXCJcbiAgICAgIH0sIHN1Ym1pc3Npb24sIHtcbiAgICAgICAgZGF0YTogdW5kZWZpbmVkXG4gICAgICB9KTtcblxuICAgICAgc3RhdGUuZmV0Y2hlcnMuc2V0KGtleSwgbG9hZGluZ0ZldGNoZXIpO1xuICAgICAgdXBkYXRlU3RhdGUoe1xuICAgICAgICBmZXRjaGVyczogbmV3IE1hcChzdGF0ZS5mZXRjaGVycylcbiAgICAgIH0pO1xuXG4gICAgICBsZXQgcmVkaXJlY3ROYXZpZ2F0aW9uID0gX2V4dGVuZHMoe1xuICAgICAgICBzdGF0ZTogXCJsb2FkaW5nXCIsXG4gICAgICAgIGxvY2F0aW9uOiBjcmVhdGVMb2NhdGlvbihzdGF0ZS5sb2NhdGlvbiwgYWN0aW9uUmVzdWx0LmxvY2F0aW9uKVxuICAgICAgfSwgc3VibWlzc2lvbik7XG5cbiAgICAgIGF3YWl0IHN0YXJ0UmVkaXJlY3ROYXZpZ2F0aW9uKGFjdGlvblJlc3VsdCwgcmVkaXJlY3ROYXZpZ2F0aW9uKTtcbiAgICAgIHJldHVybjtcbiAgICB9IC8vIFByb2Nlc3MgYW55IG5vbi1yZWRpcmVjdCBlcnJvcnMgdGhyb3duXG5cblxuICAgIGlmIChpc0Vycm9yUmVzdWx0KGFjdGlvblJlc3VsdCkpIHtcbiAgICAgIHNldEZldGNoZXJFcnJvcihrZXksIHJvdXRlSWQsIGFjdGlvblJlc3VsdC5lcnJvcik7XG4gICAgICByZXR1cm47XG4gICAgfVxuXG4gICAgaWYgKGlzRGVmZXJyZWRSZXN1bHQoYWN0aW9uUmVzdWx0KSkge1xuICAgICAgaW52YXJpYW50KGZhbHNlLCBcImRlZmVyKCkgaXMgbm90IHN1cHBvcnRlZCBpbiBhY3Rpb25zXCIpO1xuICAgIH0gLy8gU3RhcnQgdGhlIGRhdGEgbG9hZCBmb3IgY3VycmVudCBtYXRjaGVzLCBvciB0aGUgbmV4dCBsb2NhdGlvbiBpZiB3ZSdyZVxuICAgIC8vIGluIHRoZSBtaWRkbGUgb2YgYSBuYXZpZ2F0aW9uXG5cblxuICAgIGxldCBuZXh0TG9jYXRpb24gPSBzdGF0ZS5uYXZpZ2F0aW9uLmxvY2F0aW9uIHx8IHN0YXRlLmxvY2F0aW9uO1xuICAgIGxldCByZXZhbGlkYXRpb25SZXF1ZXN0ID0gY3JlYXRlUmVxdWVzdChuZXh0TG9jYXRpb24sIGFib3J0Q29udHJvbGxlci5zaWduYWwpO1xuICAgIGxldCBtYXRjaGVzID0gc3RhdGUubmF2aWdhdGlvbi5zdGF0ZSAhPT0gXCJpZGxlXCIgPyBtYXRjaFJvdXRlcyhkYXRhUm91dGVzLCBzdGF0ZS5uYXZpZ2F0aW9uLmxvY2F0aW9uLCBpbml0LmJhc2VuYW1lKSA6IHN0YXRlLm1hdGNoZXM7XG4gICAgaW52YXJpYW50KG1hdGNoZXMsIFwiRGlkbid0IGZpbmQgYW55IG1hdGNoZXMgYWZ0ZXIgZmV0Y2hlciBhY3Rpb25cIik7XG4gICAgbGV0IGxvYWRJZCA9ICsraW5jcmVtZW50aW5nTG9hZElkO1xuICAgIGZldGNoUmVsb2FkSWRzLnNldChrZXksIGxvYWRJZCk7XG5cbiAgICBsZXQgbG9hZEZldGNoZXIgPSBfZXh0ZW5kcyh7XG4gICAgICBzdGF0ZTogXCJsb2FkaW5nXCIsXG4gICAgICBkYXRhOiBhY3Rpb25SZXN1bHQuZGF0YVxuICAgIH0sIHN1Ym1pc3Npb24pO1xuXG4gICAgc3RhdGUuZmV0Y2hlcnMuc2V0KGtleSwgbG9hZEZldGNoZXIpO1xuICAgIGxldCBbbWF0Y2hlc1RvTG9hZCwgcmV2YWxpZGF0aW5nRmV0Y2hlcnNdID0gZ2V0TWF0Y2hlc1RvTG9hZChzdGF0ZSwgbWF0Y2hlcywgc3VibWlzc2lvbiwgbmV4dExvY2F0aW9uLCBpc1JldmFsaWRhdGlvblJlcXVpcmVkLCBjYW5jZWxsZWREZWZlcnJlZFJvdXRlcywgY2FuY2VsbGVkRmV0Y2hlckxvYWRzLCB7XG4gICAgICBbbWF0Y2gucm91dGUuaWRdOiBhY3Rpb25SZXN1bHQuZGF0YVxuICAgIH0sIHVuZGVmaW5lZCwgLy8gTm8gbmVlZCB0byBzZW5kIHRocm91Z2ggZXJyb3JzIHNpbmNlIHdlIHNob3J0IGNpcmN1aXQgYWJvdmVcbiAgICBmZXRjaExvYWRNYXRjaGVzKTsgLy8gUHV0IGFsbCByZXZhbGlkYXRpbmcgZmV0Y2hlcnMgaW50byB0aGUgbG9hZGluZyBzdGF0ZSwgZXhjZXB0IGZvciB0aGVcbiAgICAvLyBjdXJyZW50IGZldGNoZXIgd2hpY2ggd2Ugd2FudCB0byBrZWVwIGluIGl0J3MgY3VycmVudCBsb2FkaW5nIHN0YXRlIHdoaWNoXG4gICAgLy8gY29udGFpbnMgaXQncyBhY3Rpb24gc3VibWlzc2lvbiBpbmZvICsgYWN0aW9uIGRhdGFcblxuICAgIHJldmFsaWRhdGluZ0ZldGNoZXJzLmZpbHRlcihfcmVmNSA9PiB7XG4gICAgICBsZXQgW3N0YWxlS2V5XSA9IF9yZWY1O1xuICAgICAgcmV0dXJuIHN0YWxlS2V5ICE9PSBrZXk7XG4gICAgfSkuZm9yRWFjaChfcmVmNiA9PiB7XG4gICAgICBsZXQgW3N0YWxlS2V5XSA9IF9yZWY2O1xuICAgICAgbGV0IGV4aXN0aW5nRmV0Y2hlciA9IHN0YXRlLmZldGNoZXJzLmdldChzdGFsZUtleSk7XG4gICAgICBsZXQgcmV2YWxpZGF0aW5nRmV0Y2hlciA9IHtcbiAgICAgICAgc3RhdGU6IFwibG9hZGluZ1wiLFxuICAgICAgICBkYXRhOiBleGlzdGluZ0ZldGNoZXIgJiYgZXhpc3RpbmdGZXRjaGVyLmRhdGEsXG4gICAgICAgIGZvcm1NZXRob2Q6IHVuZGVmaW5lZCxcbiAgICAgICAgZm9ybUFjdGlvbjogdW5kZWZpbmVkLFxuICAgICAgICBmb3JtRW5jVHlwZTogdW5kZWZpbmVkLFxuICAgICAgICBmb3JtRGF0YTogdW5kZWZpbmVkXG4gICAgICB9O1xuICAgICAgc3RhdGUuZmV0Y2hlcnMuc2V0KHN0YWxlS2V5LCByZXZhbGlkYXRpbmdGZXRjaGVyKTtcbiAgICAgIGZldGNoQ29udHJvbGxlcnMuc2V0KHN0YWxlS2V5LCBhYm9ydENvbnRyb2xsZXIpO1xuICAgIH0pO1xuICAgIHVwZGF0ZVN0YXRlKHtcbiAgICAgIGZldGNoZXJzOiBuZXcgTWFwKHN0YXRlLmZldGNoZXJzKVxuICAgIH0pO1xuICAgIGxldCB7XG4gICAgICByZXN1bHRzLFxuICAgICAgbG9hZGVyUmVzdWx0cyxcbiAgICAgIGZldGNoZXJSZXN1bHRzXG4gICAgfSA9IGF3YWl0IGNhbGxMb2FkZXJzQW5kTWF5YmVSZXNvbHZlRGF0YShzdGF0ZS5tYXRjaGVzLCBtYXRjaGVzVG9Mb2FkLCByZXZhbGlkYXRpbmdGZXRjaGVycywgcmV2YWxpZGF0aW9uUmVxdWVzdCk7XG5cbiAgICBpZiAoYWJvcnRDb250cm9sbGVyLnNpZ25hbC5hYm9ydGVkKSB7XG4gICAgICByZXR1cm47XG4gICAgfVxuXG4gICAgZmV0Y2hSZWxvYWRJZHMuZGVsZXRlKGtleSk7XG4gICAgZmV0Y2hDb250cm9sbGVycy5kZWxldGUoa2V5KTtcbiAgICByZXZhbGlkYXRpbmdGZXRjaGVycy5mb3JFYWNoKF9yZWY3ID0+IHtcbiAgICAgIGxldCBbc3RhbGVLZXldID0gX3JlZjc7XG4gICAgICByZXR1cm4gZmV0Y2hDb250cm9sbGVycy5kZWxldGUoc3RhbGVLZXkpO1xuICAgIH0pO1xuICAgIGxldCByZWRpcmVjdCA9IGZpbmRSZWRpcmVjdChyZXN1bHRzKTtcblxuICAgIGlmIChyZWRpcmVjdCkge1xuICAgICAgbGV0IHJlZGlyZWN0TmF2aWdhdGlvbiA9IGdldExvYWRlclJlZGlyZWN0KHN0YXRlLCByZWRpcmVjdCk7XG4gICAgICBhd2FpdCBzdGFydFJlZGlyZWN0TmF2aWdhdGlvbihyZWRpcmVjdCwgcmVkaXJlY3ROYXZpZ2F0aW9uKTtcbiAgICAgIHJldHVybjtcbiAgICB9IC8vIFByb2Nlc3MgYW5kIGNvbW1pdCBvdXRwdXQgZnJvbSBsb2FkZXJzXG5cblxuICAgIGxldCB7XG4gICAgICBsb2FkZXJEYXRhLFxuICAgICAgZXJyb3JzXG4gICAgfSA9IHByb2Nlc3NMb2FkZXJEYXRhKHN0YXRlLCBzdGF0ZS5tYXRjaGVzLCBtYXRjaGVzVG9Mb2FkLCBsb2FkZXJSZXN1bHRzLCB1bmRlZmluZWQsIHJldmFsaWRhdGluZ0ZldGNoZXJzLCBmZXRjaGVyUmVzdWx0cywgYWN0aXZlRGVmZXJyZWRzKTtcbiAgICBsZXQgZG9uZUZldGNoZXIgPSB7XG4gICAgICBzdGF0ZTogXCJpZGxlXCIsXG4gICAgICBkYXRhOiBhY3Rpb25SZXN1bHQuZGF0YSxcbiAgICAgIGZvcm1NZXRob2Q6IHVuZGVmaW5lZCxcbiAgICAgIGZvcm1BY3Rpb246IHVuZGVmaW5lZCxcbiAgICAgIGZvcm1FbmNUeXBlOiB1bmRlZmluZWQsXG4gICAgICBmb3JtRGF0YTogdW5kZWZpbmVkXG4gICAgfTtcbiAgICBzdGF0ZS5mZXRjaGVycy5zZXQoa2V5LCBkb25lRmV0Y2hlcik7XG4gICAgbGV0IGRpZEFib3J0RmV0Y2hMb2FkcyA9IGFib3J0U3RhbGVGZXRjaExvYWRzKGxvYWRJZCk7IC8vIElmIHdlIGFyZSBjdXJyZW50bHkgaW4gYSBuYXZpZ2F0aW9uIGxvYWRpbmcgc3RhdGUgYW5kIHRoaXMgZmV0Y2hlciBpc1xuICAgIC8vIG1vcmUgcmVjZW50IHRoYW4gdGhlIG5hdmlnYXRpb24sIHdlIHdhbnQgdGhlIG5ld2VyIGRhdGEgc28gYWJvcnQgdGhlXG4gICAgLy8gbmF2aWdhdGlvbiBhbmQgY29tcGxldGUgaXQgd2l0aCB0aGUgZmV0Y2hlciBkYXRhXG5cbiAgICBpZiAoc3RhdGUubmF2aWdhdGlvbi5zdGF0ZSA9PT0gXCJsb2FkaW5nXCIgJiYgbG9hZElkID4gcGVuZGluZ05hdmlnYXRpb25Mb2FkSWQpIHtcbiAgICAgIGludmFyaWFudChwZW5kaW5nQWN0aW9uLCBcIkV4cGVjdGVkIHBlbmRpbmcgYWN0aW9uXCIpO1xuICAgICAgcGVuZGluZ05hdmlnYXRpb25Db250cm9sbGVyICYmIHBlbmRpbmdOYXZpZ2F0aW9uQ29udHJvbGxlci5hYm9ydCgpO1xuICAgICAgY29tcGxldGVOYXZpZ2F0aW9uKHN0YXRlLm5hdmlnYXRpb24ubG9jYXRpb24sIHtcbiAgICAgICAgbWF0Y2hlcyxcbiAgICAgICAgbG9hZGVyRGF0YSxcbiAgICAgICAgZXJyb3JzLFxuICAgICAgICBmZXRjaGVyczogbmV3IE1hcChzdGF0ZS5mZXRjaGVycylcbiAgICAgIH0pO1xuICAgIH0gZWxzZSB7XG4gICAgICAvLyBvdGhlcndpc2UganVzdCB1cGRhdGUgd2l0aCB0aGUgZmV0Y2hlciBkYXRhLCBwcmVzZXJ2aW5nIGFueSBleGlzdGluZ1xuICAgICAgLy8gbG9hZGVyRGF0YSBmb3IgbG9hZGVycyB0aGF0IGRpZCBub3QgbmVlZCB0byByZWxvYWQuICBXZSBoYXZlIHRvXG4gICAgICAvLyBtYW51YWxseSBtZXJnZSBoZXJlIHNpbmNlIHdlIGFyZW4ndCBnb2luZyB0aHJvdWdoIGNvbXBsZXRlTmF2aWdhdGlvblxuICAgICAgdXBkYXRlU3RhdGUoX2V4dGVuZHMoe1xuICAgICAgICBlcnJvcnMsXG4gICAgICAgIGxvYWRlckRhdGE6IG1lcmdlTG9hZGVyRGF0YShzdGF0ZS5sb2FkZXJEYXRhLCBsb2FkZXJEYXRhLCBtYXRjaGVzKVxuICAgICAgfSwgZGlkQWJvcnRGZXRjaExvYWRzID8ge1xuICAgICAgICBmZXRjaGVyczogbmV3IE1hcChzdGF0ZS5mZXRjaGVycylcbiAgICAgIH0gOiB7fSkpO1xuICAgICAgaXNSZXZhbGlkYXRpb25SZXF1aXJlZCA9IGZhbHNlO1xuICAgIH1cbiAgfSAvLyBDYWxsIHRoZSBtYXRjaGVkIGxvYWRlciBmb3IgZmV0Y2hlci5sb2FkKCksIGhhbmRsaW5nIHJlZGlyZWN0cywgZXJyb3JzLCBldGMuXG5cblxuICBhc3luYyBmdW5jdGlvbiBoYW5kbGVGZXRjaGVyTG9hZGVyKGtleSwgcm91dGVJZCwgcGF0aCwgbWF0Y2gpIHtcbiAgICBsZXQgZXhpc3RpbmdGZXRjaGVyID0gc3RhdGUuZmV0Y2hlcnMuZ2V0KGtleSk7IC8vIFB1dCB0aGlzIGZldGNoZXIgaW50byBpdCdzIGxvYWRpbmcgc3RhdGVcblxuICAgIGxldCBsb2FkaW5nRmV0Y2hlciA9IHtcbiAgICAgIHN0YXRlOiBcImxvYWRpbmdcIixcbiAgICAgIGZvcm1NZXRob2Q6IHVuZGVmaW5lZCxcbiAgICAgIGZvcm1BY3Rpb246IHVuZGVmaW5lZCxcbiAgICAgIGZvcm1FbmNUeXBlOiB1bmRlZmluZWQsXG4gICAgICBmb3JtRGF0YTogdW5kZWZpbmVkLFxuICAgICAgZGF0YTogZXhpc3RpbmdGZXRjaGVyICYmIGV4aXN0aW5nRmV0Y2hlci5kYXRhXG4gICAgfTtcbiAgICBzdGF0ZS5mZXRjaGVycy5zZXQoa2V5LCBsb2FkaW5nRmV0Y2hlcik7XG4gICAgdXBkYXRlU3RhdGUoe1xuICAgICAgZmV0Y2hlcnM6IG5ldyBNYXAoc3RhdGUuZmV0Y2hlcnMpXG4gICAgfSk7IC8vIENhbGwgdGhlIGxvYWRlciBmb3IgdGhpcyBmZXRjaGVyIHJvdXRlIG1hdGNoXG5cbiAgICBsZXQgYWJvcnRDb250cm9sbGVyID0gbmV3IEFib3J0Q29udHJvbGxlcigpO1xuICAgIGxldCBmZXRjaFJlcXVlc3QgPSBjcmVhdGVSZXF1ZXN0KHBhdGgsIGFib3J0Q29udHJvbGxlci5zaWduYWwpO1xuICAgIGZldGNoQ29udHJvbGxlcnMuc2V0KGtleSwgYWJvcnRDb250cm9sbGVyKTtcbiAgICBsZXQgcmVzdWx0ID0gYXdhaXQgY2FsbExvYWRlck9yQWN0aW9uKFwibG9hZGVyXCIsIGZldGNoUmVxdWVzdCwgbWF0Y2gpOyAvLyBEZWZlcnJlZCBpc24ndCBzdXBwb3J0ZWQgb3IgZmV0Y2hlciBsb2FkcywgYXdhaXQgZXZlcnl0aGluZyBhbmQgdHJlYXQgaXRcbiAgICAvLyBhcyBhIG5vcm1hbCBsb2FkLiAgcmVzb2x2ZURlZmVycmVkRGF0YSB3aWxsIHJldHVybiB1bmRlZmluZWQgaWYgdGhpc1xuICAgIC8vIGZldGNoZXIgZ2V0cyBhYm9ydGVkLCBzbyB3ZSBqdXN0IGxlYXZlIHJlc3VsdCB1bnRvdWNoZWQgYW5kIHNob3J0IGNpcmN1aXRcbiAgICAvLyBiZWxvdyBpZiB0aGF0IGhhcHBlbnNcblxuICAgIGlmIChpc0RlZmVycmVkUmVzdWx0KHJlc3VsdCkpIHtcbiAgICAgIHJlc3VsdCA9IChhd2FpdCByZXNvbHZlRGVmZXJyZWREYXRhKHJlc3VsdCwgZmV0Y2hSZXF1ZXN0LnNpZ25hbCwgdHJ1ZSkpIHx8IHJlc3VsdDtcbiAgICB9IC8vIFdlIGNhbiBkZWxldGUgdGhpcyBzbyBsb25nIGFzIHdlIHdlcmVuJ3QgYWJvcnRlZCBieSBvdSBvdXIgb3duIGZldGNoZXJcbiAgICAvLyByZS1sb2FkIHdoaWNoIHdvdWxkIGhhdmUgcHV0IF9uZXdfIGNvbnRyb2xsZXIgaXMgaW4gZmV0Y2hDb250cm9sbGVyc1xuXG5cbiAgICBpZiAoZmV0Y2hDb250cm9sbGVycy5nZXQoa2V5KSA9PT0gYWJvcnRDb250cm9sbGVyKSB7XG4gICAgICBmZXRjaENvbnRyb2xsZXJzLmRlbGV0ZShrZXkpO1xuICAgIH1cblxuICAgIGlmIChmZXRjaFJlcXVlc3Quc2lnbmFsLmFib3J0ZWQpIHtcbiAgICAgIHJldHVybjtcbiAgICB9IC8vIElmIHRoZSBsb2FkZXIgdGhyZXcgYSByZWRpcmVjdCBSZXNwb25zZSwgc3RhcnQgYSBuZXcgUkVQTEFDRSBuYXZpZ2F0aW9uXG5cblxuICAgIGlmIChpc1JlZGlyZWN0UmVzdWx0KHJlc3VsdCkpIHtcbiAgICAgIGxldCByZWRpcmVjdE5hdmlnYXRpb24gPSBnZXRMb2FkZXJSZWRpcmVjdChzdGF0ZSwgcmVzdWx0KTtcbiAgICAgIGF3YWl0IHN0YXJ0UmVkaXJlY3ROYXZpZ2F0aW9uKHJlc3VsdCwgcmVkaXJlY3ROYXZpZ2F0aW9uKTtcbiAgICAgIHJldHVybjtcbiAgICB9IC8vIFByb2Nlc3MgYW55IG5vbi1yZWRpcmVjdCBlcnJvcnMgdGhyb3duXG5cblxuICAgIGlmIChpc0Vycm9yUmVzdWx0KHJlc3VsdCkpIHtcbiAgICAgIGxldCBib3VuZGFyeU1hdGNoID0gZmluZE5lYXJlc3RCb3VuZGFyeShzdGF0ZS5tYXRjaGVzLCByb3V0ZUlkKTtcbiAgICAgIHN0YXRlLmZldGNoZXJzLmRlbGV0ZShrZXkpOyAvLyBUT0RPOiBJbiByZW1peCwgdGhpcyB3b3VsZCByZXNldCB0byBJRExFX05BVklHQVRJT04gaWYgaXQgd2FzIGEgY2F0Y2ggLVxuICAgICAgLy8gZG8gd2UgbmVlZCB0byBiZWhhdmUgYW55IGRpZmZlcmVudGx5IHdpdGggb3VyIG5vbi1yZWRpcmVjdCBlcnJvcnM/XG4gICAgICAvLyBXaGF0IGlmIGl0IHdhcyBhIG5vbi1yZWRpcmVjdCBSZXNwb25zZT9cblxuICAgICAgdXBkYXRlU3RhdGUoe1xuICAgICAgICBmZXRjaGVyczogbmV3IE1hcChzdGF0ZS5mZXRjaGVycyksXG4gICAgICAgIGVycm9yczoge1xuICAgICAgICAgIFtib3VuZGFyeU1hdGNoLnJvdXRlLmlkXTogcmVzdWx0LmVycm9yXG4gICAgICAgIH1cbiAgICAgIH0pO1xuICAgICAgcmV0dXJuO1xuICAgIH1cblxuICAgIGludmFyaWFudCghaXNEZWZlcnJlZFJlc3VsdChyZXN1bHQpLCBcIlVuaGFuZGxlZCBmZXRjaGVyIGRlZmVycmVkIGRhdGFcIik7IC8vIFB1dCB0aGUgZmV0Y2hlciBiYWNrIGludG8gYW4gaWRsZSBzdGF0ZVxuXG4gICAgbGV0IGRvbmVGZXRjaGVyID0ge1xuICAgICAgc3RhdGU6IFwiaWRsZVwiLFxuICAgICAgZGF0YTogcmVzdWx0LmRhdGEsXG4gICAgICBmb3JtTWV0aG9kOiB1bmRlZmluZWQsXG4gICAgICBmb3JtQWN0aW9uOiB1bmRlZmluZWQsXG4gICAgICBmb3JtRW5jVHlwZTogdW5kZWZpbmVkLFxuICAgICAgZm9ybURhdGE6IHVuZGVmaW5lZFxuICAgIH07XG4gICAgc3RhdGUuZmV0Y2hlcnMuc2V0KGtleSwgZG9uZUZldGNoZXIpO1xuICAgIHVwZGF0ZVN0YXRlKHtcbiAgICAgIGZldGNoZXJzOiBuZXcgTWFwKHN0YXRlLmZldGNoZXJzKVxuICAgIH0pO1xuICB9XG4gIC8qKlxuICAgKiBVdGlsaXR5IGZ1bmN0aW9uIHRvIGhhbmRsZSByZWRpcmVjdHMgcmV0dXJuZWQgZnJvbSBhbiBhY3Rpb24gb3IgbG9hZGVyLlxuICAgKiBOb3JtYWxseSwgYSByZWRpcmVjdCBcInJlcGxhY2VzXCIgdGhlIG5hdmlnYXRpb24gdGhhdCB0cmlnZ2VyZWQgaXQuICBTbywgZm9yXG4gICAqIGV4YW1wbGU6XG4gICAqXG4gICAqICAtIHVzZXIgaXMgb24gL2FcbiAgICogIC0gdXNlciBjbGlja3MgYSBsaW5rIHRvIC9iXG4gICAqICAtIGxvYWRlciBmb3IgL2IgcmVkaXJlY3RzIHRvIC9jXG4gICAqXG4gICAqIEluIGEgbm9uLUpTIGFwcCB0aGUgYnJvd3NlciB3b3VsZCB0cmFjayB0aGUgaW4tZmxpZ2h0IG5hdmlnYXRpb24gdG8gL2IgYW5kXG4gICAqIHRoZW4gcmVwbGFjZSBpdCB3aXRoIC9jIHdoZW4gaXQgZW5jb3VudGVyZWQgdGhlIHJlZGlyZWN0IHJlc3BvbnNlLiAgSW5cbiAgICogdGhlIGVuZCBpdCB3b3VsZCBvbmx5IGV2ZXIgdXBkYXRlIHRoZSBVUkwgYmFyIHdpdGggL2MuXG4gICAqXG4gICAqIEluIGNsaWVudC1zaWRlIHJvdXRpbmcgdXNpbmcgcHVzaFN0YXRlL3JlcGxhY2VTdGF0ZSwgd2UgYWltIHRvIGVtdWxhdGVcbiAgICogdGhpcyBiZWhhdmlvciBhbmQgd2UgYWxzbyBkbyBub3QgdXBkYXRlIGhpc3RvcnkgdW50aWwgdGhlIGVuZCBvZiB0aGVcbiAgICogbmF2aWdhdGlvbiAoaW5jbHVkaW5nIHByb2Nlc3NlZCByZWRpcmVjdHMpLiAgVGhpcyBtZWFucyB0aGF0IHdlIG5ldmVyXG4gICAqIGFjdHVhbGx5IHRvdWNoIGhpc3RvcnkgdW50aWwgd2UndmUgcHJvY2Vzc2VkIHJlZGlyZWN0cywgc28gd2UganVzdCB1c2VcbiAgICogdGhlIGhpc3RvcnkgYWN0aW9uIGZyb20gdGhlIG9yaWdpbmFsIG5hdmlnYXRpb24gKFBVU0ggb3IgUkVQTEFDRSkuXG4gICAqL1xuXG5cbiAgYXN5bmMgZnVuY3Rpb24gc3RhcnRSZWRpcmVjdE5hdmlnYXRpb24ocmVkaXJlY3QsIG5hdmlnYXRpb24sIHJlcGxhY2UpIHtcbiAgICBpZiAocmVkaXJlY3QucmV2YWxpZGF0ZSkge1xuICAgICAgaXNSZXZhbGlkYXRpb25SZXF1aXJlZCA9IHRydWU7XG4gICAgfVxuXG4gICAgaW52YXJpYW50KG5hdmlnYXRpb24ubG9jYXRpb24sIFwiRXhwZWN0ZWQgYSBsb2NhdGlvbiBvbiB0aGUgcmVkaXJlY3QgbmF2aWdhdGlvblwiKTsgLy8gVGhlcmUncyBubyBuZWVkIHRvIGFib3J0IG9uIHJlZGlyZWN0cywgc2luY2Ugd2UgZG9uJ3QgZGV0ZWN0IHRoZVxuICAgIC8vIHJlZGlyZWN0IHVudGlsIHRoZSBhY3Rpb24vbG9hZGVycyBoYXZlIHNldHRsZWRcblxuICAgIHBlbmRpbmdOYXZpZ2F0aW9uQ29udHJvbGxlciA9IG51bGw7XG4gICAgbGV0IHJlZGlyZWN0SGlzdG9yeUFjdGlvbiA9IHJlcGxhY2UgPT09IHRydWUgPyBBY3Rpb24uUmVwbGFjZSA6IEFjdGlvbi5QdXNoO1xuICAgIGF3YWl0IHN0YXJ0TmF2aWdhdGlvbihyZWRpcmVjdEhpc3RvcnlBY3Rpb24sIG5hdmlnYXRpb24ubG9jYXRpb24sIHtcbiAgICAgIG92ZXJyaWRlTmF2aWdhdGlvbjogbmF2aWdhdGlvblxuICAgIH0pO1xuICB9XG5cbiAgYXN5bmMgZnVuY3Rpb24gY2FsbExvYWRlcnNBbmRNYXliZVJlc29sdmVEYXRhKGN1cnJlbnRNYXRjaGVzLCBtYXRjaGVzVG9Mb2FkLCBmZXRjaGVyc1RvTG9hZCwgcmVxdWVzdCkge1xuICAgIC8vIENhbGwgYWxsIG5hdmlnYXRpb24gbG9hZGVycyBhbmQgcmV2YWxpZGF0aW5nIGZldGNoZXIgbG9hZGVycyBpbiBwYXJhbGxlbCxcbiAgICAvLyB0aGVuIHNsaWNlIG9mZiB0aGUgcmVzdWx0cyBpbnRvIHNlcGFyYXRlIGFycmF5cyBzbyB3ZSBjYW4gaGFuZGxlIHRoZW1cbiAgICAvLyBhY2NvcmRpbmdseVxuICAgIGxldCByZXN1bHRzID0gYXdhaXQgUHJvbWlzZS5hbGwoWy4uLm1hdGNoZXNUb0xvYWQubWFwKG0gPT4gY2FsbExvYWRlck9yQWN0aW9uKFwibG9hZGVyXCIsIHJlcXVlc3QsIG0pKSwgLi4uZmV0Y2hlcnNUb0xvYWQubWFwKF9yZWY4ID0+IHtcbiAgICAgIGxldCBbLCBocmVmLCBtYXRjaF0gPSBfcmVmODtcbiAgICAgIHJldHVybiBjYWxsTG9hZGVyT3JBY3Rpb24oXCJsb2FkZXJcIiwgY3JlYXRlUmVxdWVzdChocmVmLCByZXF1ZXN0LnNpZ25hbCksIG1hdGNoKTtcbiAgICB9KV0pO1xuICAgIGxldCBsb2FkZXJSZXN1bHRzID0gcmVzdWx0cy5zbGljZSgwLCBtYXRjaGVzVG9Mb2FkLmxlbmd0aCk7XG4gICAgbGV0IGZldGNoZXJSZXN1bHRzID0gcmVzdWx0cy5zbGljZShtYXRjaGVzVG9Mb2FkLmxlbmd0aCk7XG4gICAgYXdhaXQgUHJvbWlzZS5hbGwoW3Jlc29sdmVEZWZlcnJlZFJlc3VsdHMoY3VycmVudE1hdGNoZXMsIG1hdGNoZXNUb0xvYWQsIGxvYWRlclJlc3VsdHMsIHJlcXVlc3Quc2lnbmFsLCBmYWxzZSwgc3RhdGUubG9hZGVyRGF0YSksIHJlc29sdmVEZWZlcnJlZFJlc3VsdHMoY3VycmVudE1hdGNoZXMsIGZldGNoZXJzVG9Mb2FkLm1hcChfcmVmOSA9PiB7XG4gICAgICBsZXQgWywsIG1hdGNoXSA9IF9yZWY5O1xuICAgICAgcmV0dXJuIG1hdGNoO1xuICAgIH0pLCBmZXRjaGVyUmVzdWx0cywgcmVxdWVzdC5zaWduYWwsIHRydWUpXSk7XG4gICAgcmV0dXJuIHtcbiAgICAgIHJlc3VsdHMsXG4gICAgICBsb2FkZXJSZXN1bHRzLFxuICAgICAgZmV0Y2hlclJlc3VsdHNcbiAgICB9O1xuICB9XG5cbiAgZnVuY3Rpb24gaW50ZXJydXB0QWN0aXZlTG9hZHMoKSB7XG4gICAgLy8gRXZlcnkgaW50ZXJydXB0aW9uIHRyaWdnZXJzIGEgcmV2YWxpZGF0aW9uXG4gICAgaXNSZXZhbGlkYXRpb25SZXF1aXJlZCA9IHRydWU7IC8vIENhbmNlbCBwZW5kaW5nIHJvdXRlLWxldmVsIGRlZmVycmVkcyBhbmQgbWFyayBjYW5jZWxsZWQgcm91dGVzIGZvclxuICAgIC8vIHJldmFsaWRhdGlvblxuXG4gICAgY2FuY2VsbGVkRGVmZXJyZWRSb3V0ZXMucHVzaCguLi5jYW5jZWxBY3RpdmVEZWZlcnJlZHMoKSk7IC8vIEFib3J0IGluLWZsaWdodCBmZXRjaGVyIGxvYWRzXG5cbiAgICBmZXRjaExvYWRNYXRjaGVzLmZvckVhY2goKF8sIGtleSkgPT4ge1xuICAgICAgaWYgKGZldGNoQ29udHJvbGxlcnMuaGFzKGtleSkpIHtcbiAgICAgICAgY2FuY2VsbGVkRmV0Y2hlckxvYWRzLnB1c2goa2V5KTtcbiAgICAgICAgYWJvcnRGZXRjaGVyKGtleSk7XG4gICAgICB9XG4gICAgfSk7XG4gIH1cblxuICBmdW5jdGlvbiBzZXRGZXRjaGVyRXJyb3Ioa2V5LCByb3V0ZUlkLCBlcnJvcikge1xuICAgIGxldCBib3VuZGFyeU1hdGNoID0gZmluZE5lYXJlc3RCb3VuZGFyeShzdGF0ZS5tYXRjaGVzLCByb3V0ZUlkKTtcbiAgICBkZWxldGVGZXRjaGVyKGtleSk7XG4gICAgdXBkYXRlU3RhdGUoe1xuICAgICAgZXJyb3JzOiB7XG4gICAgICAgIFtib3VuZGFyeU1hdGNoLnJvdXRlLmlkXTogZXJyb3JcbiAgICAgIH0sXG4gICAgICBmZXRjaGVyczogbmV3IE1hcChzdGF0ZS5mZXRjaGVycylcbiAgICB9KTtcbiAgfVxuXG4gIGZ1bmN0aW9uIGRlbGV0ZUZldGNoZXIoa2V5KSB7XG4gICAgaWYgKGZldGNoQ29udHJvbGxlcnMuaGFzKGtleSkpIGFib3J0RmV0Y2hlcihrZXkpO1xuICAgIGZldGNoTG9hZE1hdGNoZXMuZGVsZXRlKGtleSk7XG4gICAgZmV0Y2hSZWxvYWRJZHMuZGVsZXRlKGtleSk7XG4gICAgZmV0Y2hSZWRpcmVjdElkcy5kZWxldGUoa2V5KTtcbiAgICBzdGF0ZS5mZXRjaGVycy5kZWxldGUoa2V5KTtcbiAgfVxuXG4gIGZ1bmN0aW9uIGFib3J0RmV0Y2hlcihrZXkpIHtcbiAgICBsZXQgY29udHJvbGxlciA9IGZldGNoQ29udHJvbGxlcnMuZ2V0KGtleSk7XG4gICAgaW52YXJpYW50KGNvbnRyb2xsZXIsIFwiRXhwZWN0ZWQgZmV0Y2ggY29udHJvbGxlcjogXCIgKyBrZXkpO1xuICAgIGNvbnRyb2xsZXIuYWJvcnQoKTtcbiAgICBmZXRjaENvbnRyb2xsZXJzLmRlbGV0ZShrZXkpO1xuICB9XG5cbiAgZnVuY3Rpb24gbWFya0ZldGNoZXJzRG9uZShrZXlzKSB7XG4gICAgZm9yIChsZXQga2V5IG9mIGtleXMpIHtcbiAgICAgIGxldCBmZXRjaGVyID0gZ2V0RmV0Y2hlcihrZXkpO1xuICAgICAgbGV0IGRvbmVGZXRjaGVyID0ge1xuICAgICAgICBzdGF0ZTogXCJpZGxlXCIsXG4gICAgICAgIGRhdGE6IGZldGNoZXIuZGF0YSxcbiAgICAgICAgZm9ybU1ldGhvZDogdW5kZWZpbmVkLFxuICAgICAgICBmb3JtQWN0aW9uOiB1bmRlZmluZWQsXG4gICAgICAgIGZvcm1FbmNUeXBlOiB1bmRlZmluZWQsXG4gICAgICAgIGZvcm1EYXRhOiB1bmRlZmluZWRcbiAgICAgIH07XG4gICAgICBzdGF0ZS5mZXRjaGVycy5zZXQoa2V5LCBkb25lRmV0Y2hlcik7XG4gICAgfVxuICB9XG5cbiAgZnVuY3Rpb24gbWFya0ZldGNoUmVkaXJlY3RzRG9uZSgpIHtcbiAgICBsZXQgZG9uZUtleXMgPSBbXTtcblxuICAgIGZvciAobGV0IGtleSBvZiBmZXRjaFJlZGlyZWN0SWRzKSB7XG4gICAgICBsZXQgZmV0Y2hlciA9IHN0YXRlLmZldGNoZXJzLmdldChrZXkpO1xuICAgICAgaW52YXJpYW50KGZldGNoZXIsIFwiRXhwZWN0ZWQgZmV0Y2hlcjogXCIgKyBrZXkpO1xuXG4gICAgICBpZiAoZmV0Y2hlci5zdGF0ZSA9PT0gXCJsb2FkaW5nXCIpIHtcbiAgICAgICAgZmV0Y2hSZWRpcmVjdElkcy5kZWxldGUoa2V5KTtcbiAgICAgICAgZG9uZUtleXMucHVzaChrZXkpO1xuICAgICAgfVxuICAgIH1cblxuICAgIG1hcmtGZXRjaGVyc0RvbmUoZG9uZUtleXMpO1xuICB9XG5cbiAgZnVuY3Rpb24gYWJvcnRTdGFsZUZldGNoTG9hZHMobGFuZGVkSWQpIHtcbiAgICBsZXQgeWVldGVkS2V5cyA9IFtdO1xuXG4gICAgZm9yIChsZXQgW2tleSwgaWRdIG9mIGZldGNoUmVsb2FkSWRzKSB7XG4gICAgICBpZiAoaWQgPCBsYW5kZWRJZCkge1xuICAgICAgICBsZXQgZmV0Y2hlciA9IHN0YXRlLmZldGNoZXJzLmdldChrZXkpO1xuICAgICAgICBpbnZhcmlhbnQoZmV0Y2hlciwgXCJFeHBlY3RlZCBmZXRjaGVyOiBcIiArIGtleSk7XG5cbiAgICAgICAgaWYgKGZldGNoZXIuc3RhdGUgPT09IFwibG9hZGluZ1wiKSB7XG4gICAgICAgICAgYWJvcnRGZXRjaGVyKGtleSk7XG4gICAgICAgICAgZmV0Y2hSZWxvYWRJZHMuZGVsZXRlKGtleSk7XG4gICAgICAgICAgeWVldGVkS2V5cy5wdXNoKGtleSk7XG4gICAgICAgIH1cbiAgICAgIH1cbiAgICB9XG5cbiAgICBtYXJrRmV0Y2hlcnNEb25lKHllZXRlZEtleXMpO1xuICAgIHJldHVybiB5ZWV0ZWRLZXlzLmxlbmd0aCA+IDA7XG4gIH1cblxuICBmdW5jdGlvbiBjYW5jZWxBY3RpdmVEZWZlcnJlZHMocHJlZGljYXRlKSB7XG4gICAgbGV0IGNhbmNlbGxlZFJvdXRlSWRzID0gW107XG4gICAgYWN0aXZlRGVmZXJyZWRzLmZvckVhY2goKGRmZCwgcm91dGVJZCkgPT4ge1xuICAgICAgaWYgKCFwcmVkaWNhdGUgfHwgcHJlZGljYXRlKHJvdXRlSWQpKSB7XG4gICAgICAgIC8vIENhbmNlbCB0aGUgZGVmZXJyZWQgLSBidXQgZG8gbm90IHJlbW92ZSBmcm9tIGFjdGl2ZURlZmVycmVkcyBoZXJlIC1cbiAgICAgICAgLy8gd2UgcmVseSBvbiB0aGUgc3Vic2NyaWJlcnMgdG8gZG8gdGhhdCBzbyBvdXIgdGVzdHMgY2FuIGFzc2VydCBwcm9wZXJcbiAgICAgICAgLy8gY2xlYW51cCB2aWEgX2ludGVybmFsQWN0aXZlRGVmZXJyZWRzXG4gICAgICAgIGRmZC5jYW5jZWwoKTtcbiAgICAgICAgY2FuY2VsbGVkUm91dGVJZHMucHVzaChyb3V0ZUlkKTtcbiAgICAgICAgYWN0aXZlRGVmZXJyZWRzLmRlbGV0ZShyb3V0ZUlkKTtcbiAgICAgIH1cbiAgICB9KTtcbiAgICByZXR1cm4gY2FuY2VsbGVkUm91dGVJZHM7XG4gIH0gLy8gT3B0IGluIHRvIGNhcHR1cmluZyBhbmQgcmVwb3J0aW5nIHNjcm9sbCBwb3NpdGlvbnMgZHVyaW5nIG5hdmlnYXRpb25zLFxuICAvLyB1c2VkIGJ5IHRoZSA8U2Nyb2xsUmVzdG9yYXRpb24+IGNvbXBvbmVudFxuXG5cbiAgZnVuY3Rpb24gZW5hYmxlU2Nyb2xsUmVzdG9yYXRpb24ocG9zaXRpb25zLCBnZXRQb3NpdGlvbiwgZ2V0S2V5KSB7XG4gICAgc2F2ZWRTY3JvbGxQb3NpdGlvbnMgPSBwb3NpdGlvbnM7XG4gICAgZ2V0U2Nyb2xsUG9zaXRpb24gPSBnZXRQb3NpdGlvbjtcblxuICAgIGdldFNjcm9sbFJlc3RvcmF0aW9uS2V5ID0gZ2V0S2V5IHx8IChsb2NhdGlvbiA9PiBsb2NhdGlvbi5rZXkpOyAvLyBQZXJmb3JtIGluaXRpYWwgaHlkcmF0aW9uIHNjcm9sbCByZXN0b3JhdGlvbiwgc2luY2Ugd2UgbWlzcyB0aGUgYm9hdCBvblxuICAgIC8vIHRoZSBpbml0aWFsIHVwZGF0ZVN0YXRlKCkgYmVjYXVzZSB3ZSd2ZSBub3QgeWV0IHJlbmRlcmVkIDxTY3JvbGxSZXN0b3JhdGlvbi8+XG4gICAgLy8gYW5kIHRoZXJlZm9yZSBoYXZlIG5vIHNhdmVkU2Nyb2xsUG9zaXRpb25zIGF2YWlsYWJsZVxuXG5cbiAgICBpZiAoIWluaXRpYWxTY3JvbGxSZXN0b3JlZCAmJiBzdGF0ZS5uYXZpZ2F0aW9uID09PSBJRExFX05BVklHQVRJT04pIHtcbiAgICAgIGluaXRpYWxTY3JvbGxSZXN0b3JlZCA9IHRydWU7XG4gICAgICBsZXQgeSA9IGdldFNhdmVkU2Nyb2xsUG9zaXRpb24oc3RhdGUubG9jYXRpb24sIHN0YXRlLm1hdGNoZXMpO1xuXG4gICAgICBpZiAoeSAhPSBudWxsKSB7XG4gICAgICAgIHVwZGF0ZVN0YXRlKHtcbiAgICAgICAgICByZXN0b3JlU2Nyb2xsUG9zaXRpb246IHlcbiAgICAgICAgfSk7XG4gICAgICB9XG4gICAgfVxuXG4gICAgcmV0dXJuICgpID0+IHtcbiAgICAgIHNhdmVkU2Nyb2xsUG9zaXRpb25zID0gbnVsbDtcbiAgICAgIGdldFNjcm9sbFBvc2l0aW9uID0gbnVsbDtcbiAgICAgIGdldFNjcm9sbFJlc3RvcmF0aW9uS2V5ID0gbnVsbDtcbiAgICB9O1xuICB9XG5cbiAgZnVuY3Rpb24gc2F2ZVNjcm9sbFBvc2l0aW9uKGxvY2F0aW9uLCBtYXRjaGVzKSB7XG4gICAgaWYgKHNhdmVkU2Nyb2xsUG9zaXRpb25zICYmIGdldFNjcm9sbFJlc3RvcmF0aW9uS2V5ICYmIGdldFNjcm9sbFBvc2l0aW9uKSB7XG4gICAgICBsZXQgdXNlck1hdGNoZXMgPSBtYXRjaGVzLm1hcChtID0+IGNyZWF0ZVVzZU1hdGNoZXNNYXRjaChtLCBzdGF0ZS5sb2FkZXJEYXRhKSk7XG4gICAgICBsZXQga2V5ID0gZ2V0U2Nyb2xsUmVzdG9yYXRpb25LZXkobG9jYXRpb24sIHVzZXJNYXRjaGVzKSB8fCBsb2NhdGlvbi5rZXk7XG4gICAgICBzYXZlZFNjcm9sbFBvc2l0aW9uc1trZXldID0gZ2V0U2Nyb2xsUG9zaXRpb24oKTtcbiAgICB9XG4gIH1cblxuICBmdW5jdGlvbiBnZXRTYXZlZFNjcm9sbFBvc2l0aW9uKGxvY2F0aW9uLCBtYXRjaGVzKSB7XG4gICAgaWYgKHNhdmVkU2Nyb2xsUG9zaXRpb25zICYmIGdldFNjcm9sbFJlc3RvcmF0aW9uS2V5ICYmIGdldFNjcm9sbFBvc2l0aW9uKSB7XG4gICAgICBsZXQgdXNlck1hdGNoZXMgPSBtYXRjaGVzLm1hcChtID0+IGNyZWF0ZVVzZU1hdGNoZXNNYXRjaChtLCBzdGF0ZS5sb2FkZXJEYXRhKSk7XG4gICAgICBsZXQga2V5ID0gZ2V0U2Nyb2xsUmVzdG9yYXRpb25LZXkobG9jYXRpb24sIHVzZXJNYXRjaGVzKSB8fCBsb2NhdGlvbi5rZXk7XG4gICAgICBsZXQgeSA9IHNhdmVkU2Nyb2xsUG9zaXRpb25zW2tleV07XG5cbiAgICAgIGlmICh0eXBlb2YgeSA9PT0gXCJudW1iZXJcIikge1xuICAgICAgICByZXR1cm4geTtcbiAgICAgIH1cbiAgICB9XG5cbiAgICByZXR1cm4gbnVsbDtcbiAgfVxuXG4gIHJvdXRlciA9IHtcbiAgICBnZXQgYmFzZW5hbWUoKSB7XG4gICAgICByZXR1cm4gaW5pdC5iYXNlbmFtZTtcbiAgICB9LFxuXG4gICAgZ2V0IHN0YXRlKCkge1xuICAgICAgcmV0dXJuIHN0YXRlO1xuICAgIH0sXG5cbiAgICBnZXQgcm91dGVzKCkge1xuICAgICAgcmV0dXJuIGRhdGFSb3V0ZXM7XG4gICAgfSxcblxuICAgIGluaXRpYWxpemUsXG4gICAgc3Vic2NyaWJlLFxuICAgIGVuYWJsZVNjcm9sbFJlc3RvcmF0aW9uLFxuICAgIG5hdmlnYXRlLFxuICAgIGZldGNoLFxuICAgIHJldmFsaWRhdGUsXG4gICAgY3JlYXRlSHJlZixcbiAgICBnZXRGZXRjaGVyLFxuICAgIGRlbGV0ZUZldGNoZXIsXG4gICAgZGlzcG9zZSxcbiAgICBfaW50ZXJuYWxGZXRjaENvbnRyb2xsZXJzOiBmZXRjaENvbnRyb2xsZXJzLFxuICAgIF9pbnRlcm5hbEFjdGl2ZURlZmVycmVkczogYWN0aXZlRGVmZXJyZWRzXG4gIH07XG4gIHJldHVybiByb3V0ZXI7XG59IC8vI2VuZHJlZ2lvblxuLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy9cbi8vI3JlZ2lvbiBjcmVhdGVTdGF0aWNIYW5kbGVyXG4vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vL1xuXG5mdW5jdGlvbiB1bnN0YWJsZV9jcmVhdGVTdGF0aWNIYW5kbGVyKHJvdXRlcykge1xuICBpbnZhcmlhbnQocm91dGVzLmxlbmd0aCA+IDAsIFwiWW91IG11c3QgcHJvdmlkZSBhIG5vbi1lbXB0eSByb3V0ZXMgYXJyYXkgdG8gdW5zdGFibGVfY3JlYXRlU3RhdGljSGFuZGxlclwiKTtcbiAgbGV0IGRhdGFSb3V0ZXMgPSBjb252ZXJ0Um91dGVzVG9EYXRhUm91dGVzKHJvdXRlcyk7XG5cbiAgYXN5bmMgZnVuY3Rpb24gcXVlcnkocmVxdWVzdCkge1xuICAgIGxldCB7XG4gICAgICBsb2NhdGlvbixcbiAgICAgIHJlc3VsdFxuICAgIH0gPSBhd2FpdCBxdWVyeUltcGwocmVxdWVzdCk7XG5cbiAgICBpZiAocmVzdWx0IGluc3RhbmNlb2YgUmVzcG9uc2UpIHtcbiAgICAgIHJldHVybiByZXN1bHQ7XG4gICAgfSAvLyBXaGVuIHJldHVybmluZyBTdGF0aWNIYW5kbGVyQ29udGV4dCwgd2UgcGF0Y2ggYmFjayBpbiB0aGUgbG9jYXRpb24gaGVyZVxuICAgIC8vIHNpbmNlIHdlIG5lZWQgaXQgZm9yIFJlYWN0IENvbnRleHQuICBCdXQgdGhpcyBoZWxwcyBrZWVwIG91ciBzdWJtaXQgYW5kXG4gICAgLy8gbG9hZFJvdXRlRGF0YSBvcGVyYXRpbmcgb24gYSBSZXF1ZXN0IGluc3RlYWQgb2YgYSBMb2NhdGlvblxuXG5cbiAgICByZXR1cm4gX2V4dGVuZHMoe1xuICAgICAgbG9jYXRpb25cbiAgICB9LCByZXN1bHQpO1xuICB9XG5cbiAgYXN5bmMgZnVuY3Rpb24gcXVlcnlSb3V0ZShyZXF1ZXN0LCByb3V0ZUlkKSB7XG4gICAgbGV0IHtcbiAgICAgIHJlc3VsdFxuICAgIH0gPSBhd2FpdCBxdWVyeUltcGwocmVxdWVzdCwgcm91dGVJZCk7XG5cbiAgICBpZiAocmVzdWx0IGluc3RhbmNlb2YgUmVzcG9uc2UpIHtcbiAgICAgIHJldHVybiByZXN1bHQ7XG4gICAgfVxuXG4gICAgbGV0IGVycm9yID0gcmVzdWx0LmVycm9ycyA/IE9iamVjdC52YWx1ZXMocmVzdWx0LmVycm9ycylbMF0gOiB1bmRlZmluZWQ7XG5cbiAgICBpZiAoZXJyb3IgIT09IHVuZGVmaW5lZCkge1xuICAgICAgLy8gV2hpbGUgd2UgYWx3YXlzIHJlLXRocm93IFJlc3BvbnNlcyByZXR1cm5lZCBmcm9tIGxvYWRlcnMvYWN0aW9uc1xuICAgICAgLy8gZGlyZWN0bHkgZm9yIHJvdXRlIHJlcXVlc3RzIGFuZCBwcmV2ZW50IHRoZSB1bndyYXBwaW5nIGludG8gYW5cbiAgICAgIC8vIEVycm9yUmVzcG9uc2UsIHdlIHN0aWxsIG5lZWQgdGhpcyBmb3IgZXJyb3IgY2FzZXMgX3ByaW9yXyB0aGVcbiAgICAgIC8vIGV4ZWN1dGlvbiBvZiB0aGUgbG9hZGVyL2FjdGlvbiwgc3VjaCBhcyBhIDQwNC80MDUgZXJyb3IuXG4gICAgICBpZiAoaXNSb3V0ZUVycm9yUmVzcG9uc2UoZXJyb3IpKSB7XG4gICAgICAgIHJldHVybiBuZXcgUmVzcG9uc2UoZXJyb3IuZGF0YSwge1xuICAgICAgICAgIHN0YXR1czogZXJyb3Iuc3RhdHVzLFxuICAgICAgICAgIHN0YXR1c1RleHQ6IGVycm9yLnN0YXR1c1RleHRcbiAgICAgICAgfSk7XG4gICAgICB9IC8vIElmIHdlIGdvdCBiYWNrIHJlc3VsdC5lcnJvcnMsIHRoYXQgbWVhbnMgdGhlIGxvYWRlci9hY3Rpb24gdGhyZXdcbiAgICAgIC8vIF9zb21ldGhpbmdfIHRoYXQgd2Fzbid0IGEgUmVzcG9uc2UsIGJ1dCBpdCdzIG5vdCBndWFyYW50ZWVkL3JlcXVpcmVkXG4gICAgICAvLyB0byBiZSBhbiBgaW5zdGFuY2VvZiBFcnJvcmAgZWl0aGVyLCBzbyB3ZSBoYXZlIHRvIHVzZSB0aHJvdyBoZXJlIHRvXG4gICAgICAvLyBwcmVzZXJ2ZSB0aGUgXCJlcnJvclwiIHN0YXRlIG91dHNpZGUgb2YgcXVlcnlJbXBsLlxuXG5cbiAgICAgIHRocm93IGVycm9yO1xuICAgIH0gLy8gUGljayBvZmYgdGhlIHJpZ2h0IHN0YXRlIHZhbHVlIHRvIHJldHVyblxuXG5cbiAgICBsZXQgcm91dGVEYXRhID0gW3Jlc3VsdC5hY3Rpb25EYXRhLCByZXN1bHQubG9hZGVyRGF0YV0uZmluZCh2ID0+IHYpO1xuICAgIGxldCB2YWx1ZSA9IE9iamVjdC52YWx1ZXMocm91dGVEYXRhIHx8IHt9KVswXTtcblxuICAgIGlmIChpc1JvdXRlRXJyb3JSZXNwb25zZSh2YWx1ZSkpIHtcbiAgICAgIHJldHVybiBuZXcgUmVzcG9uc2UodmFsdWUuZGF0YSwge1xuICAgICAgICBzdGF0dXM6IHZhbHVlLnN0YXR1cyxcbiAgICAgICAgc3RhdHVzVGV4dDogdmFsdWUuc3RhdHVzVGV4dFxuICAgICAgfSk7XG4gICAgfVxuXG4gICAgcmV0dXJuIHZhbHVlO1xuICB9XG5cbiAgYXN5bmMgZnVuY3Rpb24gcXVlcnlJbXBsKHJlcXVlc3QsIHJvdXRlSWQpIHtcbiAgICBpbnZhcmlhbnQocmVxdWVzdC5tZXRob2QgIT09IFwiSEVBRFwiLCBcInF1ZXJ5KCkvcXVlcnlSb3V0ZSgpIGRvIG5vdCBzdXBwb3J0IEhFQUQgcmVxdWVzdHNcIik7XG4gICAgaW52YXJpYW50KHJlcXVlc3Quc2lnbmFsLCBcInF1ZXJ5KCkvcXVlcnlSb3V0ZSgpIHJlcXVlc3RzIG11c3QgY29udGFpbiBhbiBBYm9ydENvbnRyb2xsZXIgc2lnbmFsXCIpO1xuICAgIGxldCB7XG4gICAgICBsb2NhdGlvbixcbiAgICAgIG1hdGNoZXMsXG4gICAgICBzaG9ydENpcmN1aXRTdGF0ZVxuICAgIH0gPSBtYXRjaFJlcXVlc3QocmVxdWVzdCwgcm91dGVJZCk7XG5cbiAgICB0cnkge1xuICAgICAgaWYgKHNob3J0Q2lyY3VpdFN0YXRlKSB7XG4gICAgICAgIHJldHVybiB7XG4gICAgICAgICAgbG9jYXRpb24sXG4gICAgICAgICAgcmVzdWx0OiBzaG9ydENpcmN1aXRTdGF0ZVxuICAgICAgICB9O1xuICAgICAgfVxuXG4gICAgICBpZiAocmVxdWVzdC5tZXRob2QgIT09IFwiR0VUXCIpIHtcbiAgICAgICAgbGV0IHJlc3VsdCA9IGF3YWl0IHN1Ym1pdChyZXF1ZXN0LCBtYXRjaGVzLCBnZXRUYXJnZXRNYXRjaChtYXRjaGVzLCBsb2NhdGlvbiksIHJvdXRlSWQgIT0gbnVsbCk7XG4gICAgICAgIHJldHVybiB7XG4gICAgICAgICAgbG9jYXRpb24sXG4gICAgICAgICAgcmVzdWx0XG4gICAgICAgIH07XG4gICAgICB9XG5cbiAgICAgIGxldCByZXN1bHQgPSBhd2FpdCBsb2FkUm91dGVEYXRhKHJlcXVlc3QsIG1hdGNoZXMsIHJvdXRlSWQgIT0gbnVsbCk7XG4gICAgICByZXR1cm4ge1xuICAgICAgICBsb2NhdGlvbixcbiAgICAgICAgcmVzdWx0OiBfZXh0ZW5kcyh7fSwgcmVzdWx0LCB7XG4gICAgICAgICAgYWN0aW9uRGF0YTogbnVsbCxcbiAgICAgICAgICBhY3Rpb25IZWFkZXJzOiB7fVxuICAgICAgICB9KVxuICAgICAgfTtcbiAgICB9IGNhdGNoIChlKSB7XG4gICAgICBpZiAoZSBpbnN0YW5jZW9mIFJlc3BvbnNlKSB7XG4gICAgICAgIHJldHVybiB7XG4gICAgICAgICAgbG9jYXRpb24sXG4gICAgICAgICAgcmVzdWx0OiBlXG4gICAgICAgIH07XG4gICAgICB9XG5cbiAgICAgIHRocm93IGU7XG4gICAgfVxuICB9XG5cbiAgYXN5bmMgZnVuY3Rpb24gc3VibWl0KHJlcXVlc3QsIG1hdGNoZXMsIGFjdGlvbk1hdGNoLCBpc1JvdXRlUmVxdWVzdCkge1xuICAgIGxldCByZXN1bHQ7XG5cbiAgICBpZiAoIWFjdGlvbk1hdGNoLnJvdXRlLmFjdGlvbikge1xuICAgICAgbGV0IGhyZWYgPSBjcmVhdGVIcmVmKG5ldyBVUkwocmVxdWVzdC51cmwpKTtcbiAgICAgIHJlc3VsdCA9IGdldE1ldGhvZE5vdEFsbG93ZWRSZXN1bHQoaHJlZik7XG4gICAgfSBlbHNlIHtcbiAgICAgIHJlc3VsdCA9IGF3YWl0IGNhbGxMb2FkZXJPckFjdGlvbihcImFjdGlvblwiLCByZXF1ZXN0LCBhY3Rpb25NYXRjaCwgdHJ1ZSwgaXNSb3V0ZVJlcXVlc3QpO1xuXG4gICAgICBpZiAocmVxdWVzdC5zaWduYWwuYWJvcnRlZCkge1xuICAgICAgICBsZXQgbWV0aG9kID0gaXNSb3V0ZVJlcXVlc3QgPyBcInF1ZXJ5Um91dGVcIiA6IFwicXVlcnlcIjtcbiAgICAgICAgdGhyb3cgbmV3IEVycm9yKG1ldGhvZCArIFwiKCkgY2FsbCBhYm9ydGVkXCIpO1xuICAgICAgfVxuICAgIH1cblxuICAgIGlmIChpc1JlZGlyZWN0UmVzdWx0KHJlc3VsdCkpIHtcbiAgICAgIC8vIFVoaGhoIC0gdGhpcyBzaG91bGQgbmV2ZXIgaGFwcGVuLCB3ZSBzaG91bGQgYWx3YXlzIHRocm93IHRoZXNlIGZyb21cbiAgICAgIC8vIGNhbExvYWRlck9yQWN0aW9uLCBidXQgdGhlIHR5cGUgbmFycm93aW5nIGhlcmUga2VlcHMgVFMgaGFwcHkgYW5kIHdlXG4gICAgICAvLyBjYW4gZ2V0IGJhY2sgb24gdGhlIFwidGhyb3cgYWxsIHJlZGlyZWN0IHJlc3BvbnNlc1wiIHRyYWluIGhlcmUgc2hvdWxkXG4gICAgICAvLyB0aGlzIGV2ZXIgaGFwcGVuIDovXG4gICAgICB0aHJvdyBuZXcgUmVzcG9uc2UobnVsbCwge1xuICAgICAgICBzdGF0dXM6IHJlc3VsdC5zdGF0dXMsXG4gICAgICAgIGhlYWRlcnM6IHtcbiAgICAgICAgICBMb2NhdGlvbjogcmVzdWx0LmxvY2F0aW9uXG4gICAgICAgIH1cbiAgICAgIH0pO1xuICAgIH1cblxuICAgIGlmIChpc0RlZmVycmVkUmVzdWx0KHJlc3VsdCkpIHtcbiAgICAgIHRocm93IG5ldyBFcnJvcihcImRlZmVyKCkgaXMgbm90IHN1cHBvcnRlZCBpbiBhY3Rpb25zXCIpO1xuICAgIH1cblxuICAgIGlmIChpc1JvdXRlUmVxdWVzdCkge1xuICAgICAgaWYgKGlzRXJyb3JSZXN1bHQocmVzdWx0KSkge1xuICAgICAgICBsZXQgYm91bmRhcnlNYXRjaCA9IGZpbmROZWFyZXN0Qm91bmRhcnkobWF0Y2hlcywgYWN0aW9uTWF0Y2gucm91dGUuaWQpO1xuICAgICAgICByZXR1cm4ge1xuICAgICAgICAgIG1hdGNoZXM6IFthY3Rpb25NYXRjaF0sXG4gICAgICAgICAgbG9hZGVyRGF0YToge30sXG4gICAgICAgICAgYWN0aW9uRGF0YTogbnVsbCxcbiAgICAgICAgICBlcnJvcnM6IHtcbiAgICAgICAgICAgIFtib3VuZGFyeU1hdGNoLnJvdXRlLmlkXTogcmVzdWx0LmVycm9yXG4gICAgICAgICAgfSxcbiAgICAgICAgICAvLyBOb3RlOiBzdGF0dXNDb2RlICsgaGVhZGVycyBhcmUgdW51c2VkIGhlcmUgc2luY2UgcXVlcnlSb3V0ZSB3aWxsXG4gICAgICAgICAgLy8gcmV0dXJuIHRoZSByYXcgUmVzcG9uc2Ugb3IgdmFsdWVcbiAgICAgICAgICBzdGF0dXNDb2RlOiA1MDAsXG4gICAgICAgICAgbG9hZGVySGVhZGVyczoge30sXG4gICAgICAgICAgYWN0aW9uSGVhZGVyczoge31cbiAgICAgICAgfTtcbiAgICAgIH1cblxuICAgICAgcmV0dXJuIHtcbiAgICAgICAgbWF0Y2hlczogW2FjdGlvbk1hdGNoXSxcbiAgICAgICAgbG9hZGVyRGF0YToge30sXG4gICAgICAgIGFjdGlvbkRhdGE6IHtcbiAgICAgICAgICBbYWN0aW9uTWF0Y2gucm91dGUuaWRdOiByZXN1bHQuZGF0YVxuICAgICAgICB9LFxuICAgICAgICBlcnJvcnM6IG51bGwsXG4gICAgICAgIC8vIE5vdGU6IHN0YXR1c0NvZGUgKyBoZWFkZXJzIGFyZSB1bnVzZWQgaGVyZSBzaW5jZSBxdWVyeVJvdXRlIHdpbGxcbiAgICAgICAgLy8gcmV0dXJuIHRoZSByYXcgUmVzcG9uc2Ugb3IgdmFsdWVcbiAgICAgICAgc3RhdHVzQ29kZTogMjAwLFxuICAgICAgICBsb2FkZXJIZWFkZXJzOiB7fSxcbiAgICAgICAgYWN0aW9uSGVhZGVyczoge31cbiAgICAgIH07XG4gICAgfVxuXG4gICAgaWYgKGlzRXJyb3JSZXN1bHQocmVzdWx0KSkge1xuICAgICAgLy8gU3RvcmUgb2ZmIHRoZSBwZW5kaW5nIGVycm9yIC0gd2UgdXNlIGl0IHRvIGRldGVybWluZSB3aGljaCBsb2FkZXJzXG4gICAgICAvLyB0byBjYWxsIGFuZCB3aWxsIGNvbW1pdCBpdCB3aGVuIHdlIGNvbXBsZXRlIHRoZSBuYXZpZ2F0aW9uXG4gICAgICBsZXQgYm91bmRhcnlNYXRjaCA9IGZpbmROZWFyZXN0Qm91bmRhcnkobWF0Y2hlcywgYWN0aW9uTWF0Y2gucm91dGUuaWQpO1xuICAgICAgbGV0IGNvbnRleHQgPSBhd2FpdCBsb2FkUm91dGVEYXRhKHJlcXVlc3QsIG1hdGNoZXMsIGlzUm91dGVSZXF1ZXN0LCB7XG4gICAgICAgIFtib3VuZGFyeU1hdGNoLnJvdXRlLmlkXTogcmVzdWx0LmVycm9yXG4gICAgICB9KTsgLy8gYWN0aW9uIHN0YXR1cyBjb2RlcyB0YWtlIHByZWNlZGVuY2Ugb3ZlciBsb2FkZXIgc3RhdHVzIGNvZGVzXG5cbiAgICAgIHJldHVybiBfZXh0ZW5kcyh7fSwgY29udGV4dCwge1xuICAgICAgICBzdGF0dXNDb2RlOiBpc1JvdXRlRXJyb3JSZXNwb25zZShyZXN1bHQuZXJyb3IpID8gcmVzdWx0LmVycm9yLnN0YXR1cyA6IDUwMCxcbiAgICAgICAgYWN0aW9uRGF0YTogbnVsbCxcbiAgICAgICAgYWN0aW9uSGVhZGVyczogX2V4dGVuZHMoe30sIHJlc3VsdC5oZWFkZXJzID8ge1xuICAgICAgICAgIFthY3Rpb25NYXRjaC5yb3V0ZS5pZF06IHJlc3VsdC5oZWFkZXJzXG4gICAgICAgIH0gOiB7fSlcbiAgICAgIH0pO1xuICAgIH1cblxuICAgIGxldCBjb250ZXh0ID0gYXdhaXQgbG9hZFJvdXRlRGF0YShyZXF1ZXN0LCBtYXRjaGVzLCBpc1JvdXRlUmVxdWVzdCk7XG4gICAgcmV0dXJuIF9leHRlbmRzKHt9LCBjb250ZXh0LCByZXN1bHQuc3RhdHVzQ29kZSA/IHtcbiAgICAgIHN0YXR1c0NvZGU6IHJlc3VsdC5zdGF0dXNDb2RlXG4gICAgfSA6IHt9LCB7XG4gICAgICBhY3Rpb25EYXRhOiB7XG4gICAgICAgIFthY3Rpb25NYXRjaC5yb3V0ZS5pZF06IHJlc3VsdC5kYXRhXG4gICAgICB9LFxuICAgICAgYWN0aW9uSGVhZGVyczogX2V4dGVuZHMoe30sIHJlc3VsdC5oZWFkZXJzID8ge1xuICAgICAgICBbYWN0aW9uTWF0Y2gucm91dGUuaWRdOiByZXN1bHQuaGVhZGVyc1xuICAgICAgfSA6IHt9KVxuICAgIH0pO1xuICB9XG5cbiAgYXN5bmMgZnVuY3Rpb24gbG9hZFJvdXRlRGF0YShyZXF1ZXN0LCBtYXRjaGVzLCBpc1JvdXRlUmVxdWVzdCwgcGVuZGluZ0FjdGlvbkVycm9yKSB7XG4gICAgbGV0IG1hdGNoZXNUb0xvYWQgPSBnZXRMb2FkZXJNYXRjaGVzVW50aWxCb3VuZGFyeShtYXRjaGVzLCBPYmplY3Qua2V5cyhwZW5kaW5nQWN0aW9uRXJyb3IgfHwge30pWzBdKS5maWx0ZXIobSA9PiBtLnJvdXRlLmxvYWRlcik7IC8vIFNob3J0IGNpcmN1aXQgaWYgd2UgaGF2ZSBubyBsb2FkZXJzIHRvIHJ1blxuXG4gICAgaWYgKG1hdGNoZXNUb0xvYWQubGVuZ3RoID09PSAwKSB7XG4gICAgICByZXR1cm4ge1xuICAgICAgICBtYXRjaGVzLFxuICAgICAgICBsb2FkZXJEYXRhOiB7fSxcbiAgICAgICAgZXJyb3JzOiBwZW5kaW5nQWN0aW9uRXJyb3IgfHwgbnVsbCxcbiAgICAgICAgc3RhdHVzQ29kZTogMjAwLFxuICAgICAgICBsb2FkZXJIZWFkZXJzOiB7fVxuICAgICAgfTtcbiAgICB9XG5cbiAgICBsZXQgcmVzdWx0cyA9IGF3YWl0IFByb21pc2UuYWxsKFsuLi5tYXRjaGVzVG9Mb2FkLm1hcChtID0+IGNhbGxMb2FkZXJPckFjdGlvbihcImxvYWRlclwiLCByZXF1ZXN0LCBtLCB0cnVlLCBpc1JvdXRlUmVxdWVzdCkpXSk7XG5cbiAgICBpZiAocmVxdWVzdC5zaWduYWwuYWJvcnRlZCkge1xuICAgICAgbGV0IG1ldGhvZCA9IGlzUm91dGVSZXF1ZXN0ID8gXCJxdWVyeVJvdXRlXCIgOiBcInF1ZXJ5XCI7XG4gICAgICB0aHJvdyBuZXcgRXJyb3IobWV0aG9kICsgXCIoKSBjYWxsIGFib3J0ZWRcIik7XG4gICAgfSAvLyBDYW4ndCBkbyBhbnl0aGluZyB3aXRoIHRoZXNlIHdpdGhvdXQgdGhlIFJlbWl4IHNpZGUgb2YgdGhpbmdzLCBzbyBqdXN0XG4gICAgLy8gY2FuY2VsIHRoZW0gZm9yIG5vd1xuXG5cbiAgICByZXN1bHRzLmZvckVhY2gocmVzdWx0ID0+IHtcbiAgICAgIGlmIChpc0RlZmVycmVkUmVzdWx0KHJlc3VsdCkpIHtcbiAgICAgICAgcmVzdWx0LmRlZmVycmVkRGF0YS5jYW5jZWwoKTtcbiAgICAgIH1cbiAgICB9KTsgLy8gUHJvY2VzcyBhbmQgY29tbWl0IG91dHB1dCBmcm9tIGxvYWRlcnNcblxuICAgIGxldCBjb250ZXh0ID0gcHJvY2Vzc1JvdXRlTG9hZGVyRGF0YShtYXRjaGVzLCBtYXRjaGVzVG9Mb2FkLCByZXN1bHRzLCBwZW5kaW5nQWN0aW9uRXJyb3IpO1xuICAgIHJldHVybiBfZXh0ZW5kcyh7fSwgY29udGV4dCwge1xuICAgICAgbWF0Y2hlc1xuICAgIH0pO1xuICB9XG5cbiAgZnVuY3Rpb24gbWF0Y2hSZXF1ZXN0KHJlcSwgcm91dGVJZCkge1xuICAgIGxldCB1cmwgPSBuZXcgVVJMKHJlcS51cmwpO1xuICAgIGxldCBsb2NhdGlvbiA9IGNyZWF0ZUxvY2F0aW9uKFwiXCIsIGNyZWF0ZVBhdGgodXJsKSwgbnVsbCwgXCJkZWZhdWx0XCIpO1xuICAgIGxldCBtYXRjaGVzID0gbWF0Y2hSb3V0ZXMoZGF0YVJvdXRlcywgbG9jYXRpb24pO1xuXG4gICAgaWYgKG1hdGNoZXMgJiYgcm91dGVJZCkge1xuICAgICAgbWF0Y2hlcyA9IG1hdGNoZXMuZmlsdGVyKG0gPT4gbS5yb3V0ZS5pZCA9PT0gcm91dGVJZCk7XG4gICAgfSAvLyBTaG9ydCBjaXJjdWl0IHdpdGggYSA0MDQgaWYgd2UgbWF0Y2ggbm90aGluZ1xuXG5cbiAgICBpZiAoIW1hdGNoZXMpIHtcbiAgICAgIGxldCB7XG4gICAgICAgIG1hdGNoZXM6IG5vdEZvdW5kTWF0Y2hlcyxcbiAgICAgICAgcm91dGUsXG4gICAgICAgIGVycm9yXG4gICAgICB9ID0gZ2V0Tm90Rm91bmRNYXRjaGVzKGRhdGFSb3V0ZXMpO1xuICAgICAgcmV0dXJuIHtcbiAgICAgICAgbG9jYXRpb24sXG4gICAgICAgIG1hdGNoZXM6IG5vdEZvdW5kTWF0Y2hlcyxcbiAgICAgICAgc2hvcnRDaXJjdWl0U3RhdGU6IHtcbiAgICAgICAgICBtYXRjaGVzOiBub3RGb3VuZE1hdGNoZXMsXG4gICAgICAgICAgbG9hZGVyRGF0YToge30sXG4gICAgICAgICAgYWN0aW9uRGF0YTogbnVsbCxcbiAgICAgICAgICBlcnJvcnM6IHtcbiAgICAgICAgICAgIFtyb3V0ZS5pZF06IGVycm9yXG4gICAgICAgICAgfSxcbiAgICAgICAgICBzdGF0dXNDb2RlOiA0MDQsXG4gICAgICAgICAgbG9hZGVySGVhZGVyczoge30sXG4gICAgICAgICAgYWN0aW9uSGVhZGVyczoge31cbiAgICAgICAgfVxuICAgICAgfTtcbiAgICB9XG5cbiAgICByZXR1cm4ge1xuICAgICAgbG9jYXRpb24sXG4gICAgICBtYXRjaGVzXG4gICAgfTtcbiAgfVxuXG4gIHJldHVybiB7XG4gICAgZGF0YVJvdXRlcyxcbiAgICBxdWVyeSxcbiAgICBxdWVyeVJvdXRlXG4gIH07XG59IC8vI2VuZHJlZ2lvblxuLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy9cbi8vI3JlZ2lvbiBIZWxwZXJzXG4vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vL1xuXG4vKipcbiAqIEdpdmVuIGFuIGV4aXN0aW5nIFN0YXRpY0hhbmRsZXJDb250ZXh0IGFuZCBhbiBlcnJvciB0aHJvd24gYXQgcmVuZGVyIHRpbWUsXG4gKiBwcm92aWRlIGFuIHVwZGF0ZWQgU3RhdGljSGFuZGxlckNvbnRleHQgc3VpdGFibGUgZm9yIGEgc2Vjb25kIFNTUiByZW5kZXJcbiAqL1xuXG5mdW5jdGlvbiBnZXRTdGF0aWNDb250ZXh0RnJvbUVycm9yKHJvdXRlcywgY29udGV4dCwgZXJyb3IpIHtcbiAgbGV0IG5ld0NvbnRleHQgPSBfZXh0ZW5kcyh7fSwgY29udGV4dCwge1xuICAgIHN0YXR1c0NvZGU6IDUwMCxcbiAgICBlcnJvcnM6IHtcbiAgICAgIFtjb250ZXh0Ll9kZWVwZXN0UmVuZGVyZWRCb3VuZGFyeUlkIHx8IHJvdXRlc1swXS5pZF06IGVycm9yXG4gICAgfVxuICB9KTtcblxuICByZXR1cm4gbmV3Q29udGV4dDtcbn0gLy8gTm9ybWFsaXplIG5hdmlnYXRpb24gb3B0aW9ucyBieSBjb252ZXJ0aW5nIGZvcm1NZXRob2Q9R0VUIGZvcm1EYXRhIG9iamVjdHMgdG9cbi8vIFVSTFNlYXJjaFBhcmFtcyBzbyB0aGV5IGJlaGF2ZSBpZGVudGljYWxseSB0byBsaW5rcyB3aXRoIHF1ZXJ5IHBhcmFtc1xuXG5mdW5jdGlvbiBub3JtYWxpemVOYXZpZ2F0ZU9wdGlvbnModG8sIG9wdHMsIGlzRmV0Y2hlcikge1xuICBpZiAoaXNGZXRjaGVyID09PSB2b2lkIDApIHtcbiAgICBpc0ZldGNoZXIgPSBmYWxzZTtcbiAgfVxuXG4gIGxldCBwYXRoID0gdHlwZW9mIHRvID09PSBcInN0cmluZ1wiID8gdG8gOiBjcmVhdGVQYXRoKHRvKTsgLy8gUmV0dXJuIGxvY2F0aW9uIHZlcmJhdGltIG9uIG5vbi1zdWJtaXNzaW9uIG5hdmlnYXRpb25zXG5cbiAgaWYgKCFvcHRzIHx8ICEoXCJmb3JtTWV0aG9kXCIgaW4gb3B0cykgJiYgIShcImZvcm1EYXRhXCIgaW4gb3B0cykpIHtcbiAgICByZXR1cm4ge1xuICAgICAgcGF0aFxuICAgIH07XG4gIH0gLy8gQ3JlYXRlIGEgU3VibWlzc2lvbiBvbiBub24tR0VUIG5hdmlnYXRpb25zXG5cblxuICBpZiAob3B0cy5mb3JtTWV0aG9kICE9IG51bGwgJiYgb3B0cy5mb3JtTWV0aG9kICE9PSBcImdldFwiKSB7XG4gICAgcmV0dXJuIHtcbiAgICAgIHBhdGgsXG4gICAgICBzdWJtaXNzaW9uOiB7XG4gICAgICAgIGZvcm1NZXRob2Q6IG9wdHMuZm9ybU1ldGhvZCxcbiAgICAgICAgZm9ybUFjdGlvbjogY3JlYXRlSHJlZihwYXJzZVBhdGgocGF0aCkpLFxuICAgICAgICBmb3JtRW5jVHlwZTogb3B0cyAmJiBvcHRzLmZvcm1FbmNUeXBlIHx8IFwiYXBwbGljYXRpb24veC13d3ctZm9ybS11cmxlbmNvZGVkXCIsXG4gICAgICAgIGZvcm1EYXRhOiBvcHRzLmZvcm1EYXRhXG4gICAgICB9XG4gICAgfTtcbiAgfSAvLyBObyBmb3JtRGF0YSB0byBmbGF0dGVuIGZvciBHRVQgc3VibWlzc2lvblxuXG5cbiAgaWYgKCFvcHRzLmZvcm1EYXRhKSB7XG4gICAgcmV0dXJuIHtcbiAgICAgIHBhdGhcbiAgICB9O1xuICB9IC8vIEZsYXR0ZW4gc3VibWlzc2lvbiBvbnRvIFVSTFNlYXJjaFBhcmFtcyBmb3IgR0VUIHN1Ym1pc3Npb25zXG5cblxuICBsZXQgcGFyc2VkUGF0aCA9IHBhcnNlUGF0aChwYXRoKTtcblxuICB0cnkge1xuICAgIGxldCBzZWFyY2hQYXJhbXMgPSBjb252ZXJ0Rm9ybURhdGFUb1NlYXJjaFBhcmFtcyhvcHRzLmZvcm1EYXRhKTsgLy8gU2luY2UgZmV0Y2hlciBHRVQgc3VibWlzc2lvbnMgb25seSBydW4gYSBzaW5nbGUgbG9hZGVyIChhcyBvcHBvc2VkIHRvXG4gICAgLy8gbmF2aWdhdGlvbiBHRVQgc3VibWlzc2lvbnMgd2hpY2ggcnVuIGFsbCBsb2FkZXJzKSwgd2UgbmVlZCB0byBwcmVzZXJ2ZVxuICAgIC8vIGFueSBpbmNvbWluZyA/aW5kZXggcGFyYW1zXG5cbiAgICBpZiAoaXNGZXRjaGVyICYmIHBhcnNlZFBhdGguc2VhcmNoICYmIGhhc05ha2VkSW5kZXhRdWVyeShwYXJzZWRQYXRoLnNlYXJjaCkpIHtcbiAgICAgIHNlYXJjaFBhcmFtcy5hcHBlbmQoXCJpbmRleFwiLCBcIlwiKTtcbiAgICB9XG5cbiAgICBwYXJzZWRQYXRoLnNlYXJjaCA9IFwiP1wiICsgc2VhcmNoUGFyYW1zO1xuICB9IGNhdGNoIChlKSB7XG4gICAgcmV0dXJuIHtcbiAgICAgIHBhdGgsXG4gICAgICBlcnJvcjogbmV3IEVycm9yUmVzcG9uc2UoNDAwLCBcIkJhZCBSZXF1ZXN0XCIsIFwiQ2Fubm90IHN1Ym1pdCBiaW5hcnkgZm9ybSBkYXRhIHVzaW5nIEdFVFwiKVxuICAgIH07XG4gIH1cblxuICByZXR1cm4ge1xuICAgIHBhdGg6IGNyZWF0ZVBhdGgocGFyc2VkUGF0aClcbiAgfTtcbn1cblxuZnVuY3Rpb24gZ2V0TG9hZGVyUmVkaXJlY3Qoc3RhdGUsIHJlZGlyZWN0KSB7XG4gIGxldCB7XG4gICAgZm9ybU1ldGhvZCxcbiAgICBmb3JtQWN0aW9uLFxuICAgIGZvcm1FbmNUeXBlLFxuICAgIGZvcm1EYXRhXG4gIH0gPSBzdGF0ZS5uYXZpZ2F0aW9uO1xuICBsZXQgbmF2aWdhdGlvbiA9IHtcbiAgICBzdGF0ZTogXCJsb2FkaW5nXCIsXG4gICAgbG9jYXRpb246IGNyZWF0ZUxvY2F0aW9uKHN0YXRlLmxvY2F0aW9uLCByZWRpcmVjdC5sb2NhdGlvbiksXG4gICAgZm9ybU1ldGhvZDogZm9ybU1ldGhvZCB8fCB1bmRlZmluZWQsXG4gICAgZm9ybUFjdGlvbjogZm9ybUFjdGlvbiB8fCB1bmRlZmluZWQsXG4gICAgZm9ybUVuY1R5cGU6IGZvcm1FbmNUeXBlIHx8IHVuZGVmaW5lZCxcbiAgICBmb3JtRGF0YTogZm9ybURhdGEgfHwgdW5kZWZpbmVkXG4gIH07XG4gIHJldHVybiBuYXZpZ2F0aW9uO1xufSAvLyBGaWx0ZXIgb3V0IGFsbCByb3V0ZXMgYmVsb3cgYW55IGNhdWdodCBlcnJvciBhcyB0aGV5IGFyZW4ndCBnb2luZyB0b1xuLy8gcmVuZGVyIHNvIHdlIGRvbid0IG5lZWQgdG8gbG9hZCB0aGVtXG5cblxuZnVuY3Rpb24gZ2V0TG9hZGVyTWF0Y2hlc1VudGlsQm91bmRhcnkobWF0Y2hlcywgYm91bmRhcnlJZCkge1xuICBsZXQgYm91bmRhcnlNYXRjaGVzID0gbWF0Y2hlcztcblxuICBpZiAoYm91bmRhcnlJZCkge1xuICAgIGxldCBpbmRleCA9IG1hdGNoZXMuZmluZEluZGV4KG0gPT4gbS5yb3V0ZS5pZCA9PT0gYm91bmRhcnlJZCk7XG5cbiAgICBpZiAoaW5kZXggPj0gMCkge1xuICAgICAgYm91bmRhcnlNYXRjaGVzID0gbWF0Y2hlcy5zbGljZSgwLCBpbmRleCk7XG4gICAgfVxuICB9XG5cbiAgcmV0dXJuIGJvdW5kYXJ5TWF0Y2hlcztcbn1cblxuZnVuY3Rpb24gZ2V0TWF0Y2hlc1RvTG9hZChzdGF0ZSwgbWF0Y2hlcywgc3VibWlzc2lvbiwgbG9jYXRpb24sIGlzUmV2YWxpZGF0aW9uUmVxdWlyZWQsIGNhbmNlbGxlZERlZmVycmVkUm91dGVzLCBjYW5jZWxsZWRGZXRjaGVyTG9hZHMsIHBlbmRpbmdBY3Rpb25EYXRhLCBwZW5kaW5nRXJyb3IsIGZldGNoTG9hZE1hdGNoZXMpIHtcbiAgbGV0IGFjdGlvblJlc3VsdCA9IHBlbmRpbmdFcnJvciA/IE9iamVjdC52YWx1ZXMocGVuZGluZ0Vycm9yKVswXSA6IHBlbmRpbmdBY3Rpb25EYXRhID8gT2JqZWN0LnZhbHVlcyhwZW5kaW5nQWN0aW9uRGF0YSlbMF0gOiBudWxsOyAvLyBQaWNrIG5hdmlnYXRpb24gbWF0Y2hlcyB0aGF0IGFyZSBuZXQtbmV3IG9yIHF1YWxpZnkgZm9yIHJldmFsaWRhdGlvblxuXG4gIGxldCBib3VuZGFyeUlkID0gcGVuZGluZ0Vycm9yID8gT2JqZWN0LmtleXMocGVuZGluZ0Vycm9yKVswXSA6IHVuZGVmaW5lZDtcbiAgbGV0IGJvdW5kYXJ5TWF0Y2hlcyA9IGdldExvYWRlck1hdGNoZXNVbnRpbEJvdW5kYXJ5KG1hdGNoZXMsIGJvdW5kYXJ5SWQpO1xuICBsZXQgbmF2aWdhdGlvbk1hdGNoZXMgPSBib3VuZGFyeU1hdGNoZXMuZmlsdGVyKChtYXRjaCwgaW5kZXgpID0+IG1hdGNoLnJvdXRlLmxvYWRlciAhPSBudWxsICYmIChpc05ld0xvYWRlcihzdGF0ZS5sb2FkZXJEYXRhLCBzdGF0ZS5tYXRjaGVzW2luZGV4XSwgbWF0Y2gpIHx8IC8vIElmIHRoaXMgcm91dGUgaGFkIGEgcGVuZGluZyBkZWZlcnJlZCBjYW5jZWxsZWQgaXQgbXVzdCBiZSByZXZhbGlkYXRlZFxuICBjYW5jZWxsZWREZWZlcnJlZFJvdXRlcy5zb21lKGlkID0+IGlkID09PSBtYXRjaC5yb3V0ZS5pZCkgfHwgc2hvdWxkUmV2YWxpZGF0ZUxvYWRlcihzdGF0ZS5sb2NhdGlvbiwgc3RhdGUubWF0Y2hlc1tpbmRleF0sIHN1Ym1pc3Npb24sIGxvY2F0aW9uLCBtYXRjaCwgaXNSZXZhbGlkYXRpb25SZXF1aXJlZCwgYWN0aW9uUmVzdWx0KSkpOyAvLyBQaWNrIGZldGNoZXIubG9hZHMgdGhhdCBuZWVkIHRvIGJlIHJldmFsaWRhdGVkXG5cbiAgbGV0IHJldmFsaWRhdGluZ0ZldGNoZXJzID0gW107XG4gIGZldGNoTG9hZE1hdGNoZXMgJiYgZmV0Y2hMb2FkTWF0Y2hlcy5mb3JFYWNoKChfcmVmMTAsIGtleSkgPT4ge1xuICAgIGxldCBbaHJlZiwgbWF0Y2hdID0gX3JlZjEwO1xuXG4gICAgLy8gVGhpcyBmZXRjaGVyIHdhcyBjYW5jZWxsZWQgZnJvbSBhIHByaW9yIGFjdGlvbiBzdWJtaXNzaW9uIC0gZm9yY2UgcmVsb2FkXG4gICAgaWYgKGNhbmNlbGxlZEZldGNoZXJMb2Fkcy5pbmNsdWRlcyhrZXkpKSB7XG4gICAgICByZXZhbGlkYXRpbmdGZXRjaGVycy5wdXNoKFtrZXksIGhyZWYsIG1hdGNoXSk7XG4gICAgfSBlbHNlIGlmIChpc1JldmFsaWRhdGlvblJlcXVpcmVkKSB7XG4gICAgICBsZXQgc2hvdWxkUmV2YWxpZGF0ZSA9IHNob3VsZFJldmFsaWRhdGVMb2FkZXIoaHJlZiwgbWF0Y2gsIHN1Ym1pc3Npb24sIGhyZWYsIG1hdGNoLCBpc1JldmFsaWRhdGlvblJlcXVpcmVkLCBhY3Rpb25SZXN1bHQpO1xuXG4gICAgICBpZiAoc2hvdWxkUmV2YWxpZGF0ZSkge1xuICAgICAgICByZXZhbGlkYXRpbmdGZXRjaGVycy5wdXNoKFtrZXksIGhyZWYsIG1hdGNoXSk7XG4gICAgICB9XG4gICAgfVxuICB9KTtcbiAgcmV0dXJuIFtuYXZpZ2F0aW9uTWF0Y2hlcywgcmV2YWxpZGF0aW5nRmV0Y2hlcnNdO1xufVxuXG5mdW5jdGlvbiBpc05ld0xvYWRlcihjdXJyZW50TG9hZGVyRGF0YSwgY3VycmVudE1hdGNoLCBtYXRjaCkge1xuICBsZXQgaXNOZXcgPSAvLyBbYV0gLT4gW2EsIGJdXG4gICFjdXJyZW50TWF0Y2ggfHwgLy8gW2EsIGJdIC0+IFthLCBjXVxuICBtYXRjaC5yb3V0ZS5pZCAhPT0gY3VycmVudE1hdGNoLnJvdXRlLmlkOyAvLyBIYW5kbGUgdGhlIGNhc2UgdGhhdCB3ZSBkb24ndCBoYXZlIGRhdGEgZm9yIGEgcmUtdXNlZCByb3V0ZSwgcG90ZW50aWFsbHlcbiAgLy8gZnJvbSBhIHByaW9yIGVycm9yIG9yIGZyb20gYSBjYW5jZWxsZWQgcGVuZGluZyBkZWZlcnJlZFxuXG4gIGxldCBpc01pc3NpbmdEYXRhID0gY3VycmVudExvYWRlckRhdGFbbWF0Y2gucm91dGUuaWRdID09PSB1bmRlZmluZWQ7IC8vIEFsd2F5cyBsb2FkIGlmIHRoaXMgaXMgYSBuZXQtbmV3IHJvdXRlIG9yIHdlIGRvbid0IHlldCBoYXZlIGRhdGFcblxuICByZXR1cm4gaXNOZXcgfHwgaXNNaXNzaW5nRGF0YTtcbn1cblxuZnVuY3Rpb24gaXNOZXdSb3V0ZUluc3RhbmNlKGN1cnJlbnRNYXRjaCwgbWF0Y2gpIHtcbiAgbGV0IGN1cnJlbnRQYXRoID0gY3VycmVudE1hdGNoLnJvdXRlLnBhdGg7XG4gIHJldHVybiAoLy8gcGFyYW0gY2hhbmdlIGZvciB0aGlzIG1hdGNoLCAvdXNlcnMvMTIzIC0+IC91c2Vycy80NTZcbiAgICBjdXJyZW50TWF0Y2gucGF0aG5hbWUgIT09IG1hdGNoLnBhdGhuYW1lIHx8IC8vIHNwbGF0IHBhcmFtIGNoYW5nZWQsIHdoaWNoIGlzIG5vdCBwcmVzZW50IGluIG1hdGNoLnBhdGhcbiAgICAvLyBlLmcuIC9maWxlcy9pbWFnZXMvYXZhdGFyLmpwZyAtPiBmaWxlcy9maW5hbmNlcy54bHNcbiAgICBjdXJyZW50UGF0aCAmJiBjdXJyZW50UGF0aC5lbmRzV2l0aChcIipcIikgJiYgY3VycmVudE1hdGNoLnBhcmFtc1tcIipcIl0gIT09IG1hdGNoLnBhcmFtc1tcIipcIl1cbiAgKTtcbn1cblxuZnVuY3Rpb24gc2hvdWxkUmV2YWxpZGF0ZUxvYWRlcihjdXJyZW50TG9jYXRpb24sIGN1cnJlbnRNYXRjaCwgc3VibWlzc2lvbiwgbG9jYXRpb24sIG1hdGNoLCBpc1JldmFsaWRhdGlvblJlcXVpcmVkLCBhY3Rpb25SZXN1bHQpIHtcbiAgbGV0IGN1cnJlbnRVcmwgPSBjcmVhdGVVUkwoY3VycmVudExvY2F0aW9uKTtcbiAgbGV0IGN1cnJlbnRQYXJhbXMgPSBjdXJyZW50TWF0Y2gucGFyYW1zO1xuICBsZXQgbmV4dFVybCA9IGNyZWF0ZVVSTChsb2NhdGlvbik7XG4gIGxldCBuZXh0UGFyYW1zID0gbWF0Y2gucGFyYW1zOyAvLyBUaGlzIGlzIHRoZSBkZWZhdWx0IGltcGxlbWVudGF0aW9uIGFzIHRvIHdoZW4gd2UgcmV2YWxpZGF0ZS4gIElmIHRoZSByb3V0ZVxuICAvLyBwcm92aWRlcyBpdCdzIG93biBpbXBsZW1lbnRhdGlvbiwgdGhlbiB3ZSBnaXZlIHRoZW0gZnVsbCBjb250cm9sIGJ1dFxuICAvLyBwcm92aWRlIHRoaXMgdmFsdWUgc28gdGhleSBjYW4gbGV2ZXJhZ2UgaXQgaWYgbmVlZGVkIGFmdGVyIHRoZXkgY2hlY2tcbiAgLy8gdGhlaXIgb3duIHNwZWNpZmljIHVzZSBjYXNlc1xuICAvLyBOb3RlIHRoYXQgZmV0Y2hlcnMgYWx3YXlzIHByb3ZpZGUgdGhlIHNhbWUgY3VycmVudC9uZXh0IGxvY2F0aW9ucyBzbyB0aGVcbiAgLy8gVVJMLWJhc2VkIGNoZWNrcyBoZXJlIGRvbid0IGFwcGx5IHRvIGZldGNoZXIgc2hvdWxkUmV2YWxpZGF0ZSBjYWxsc1xuXG4gIGxldCBkZWZhdWx0U2hvdWxkUmV2YWxpZGF0ZSA9IGlzTmV3Um91dGVJbnN0YW5jZShjdXJyZW50TWF0Y2gsIG1hdGNoKSB8fCAvLyBDbGlja2VkIHRoZSBzYW1lIGxpbmssIHJlc3VibWl0dGVkIGEgR0VUIGZvcm1cbiAgY3VycmVudFVybC50b1N0cmluZygpID09PSBuZXh0VXJsLnRvU3RyaW5nKCkgfHwgLy8gU2VhcmNoIHBhcmFtcyBhZmZlY3QgYWxsIGxvYWRlcnNcbiAgY3VycmVudFVybC5zZWFyY2ggIT09IG5leHRVcmwuc2VhcmNoIHx8IC8vIEZvcmNlZCByZXZhbGlkYXRpb24gZHVlIHRvIHN1Ym1pc3Npb24sIHVzZVJldmFsaWRhdGUsIG9yIFgtUmVtaXgtUmV2YWxpZGF0ZVxuICBpc1JldmFsaWRhdGlvblJlcXVpcmVkO1xuXG4gIGlmIChtYXRjaC5yb3V0ZS5zaG91bGRSZXZhbGlkYXRlKSB7XG4gICAgbGV0IHJvdXRlQ2hvaWNlID0gbWF0Y2gucm91dGUuc2hvdWxkUmV2YWxpZGF0ZShfZXh0ZW5kcyh7XG4gICAgICBjdXJyZW50VXJsLFxuICAgICAgY3VycmVudFBhcmFtcyxcbiAgICAgIG5leHRVcmwsXG4gICAgICBuZXh0UGFyYW1zXG4gICAgfSwgc3VibWlzc2lvbiwge1xuICAgICAgYWN0aW9uUmVzdWx0LFxuICAgICAgZGVmYXVsdFNob3VsZFJldmFsaWRhdGVcbiAgICB9KSk7XG5cbiAgICBpZiAodHlwZW9mIHJvdXRlQ2hvaWNlID09PSBcImJvb2xlYW5cIikge1xuICAgICAgcmV0dXJuIHJvdXRlQ2hvaWNlO1xuICAgIH1cbiAgfVxuXG4gIHJldHVybiBkZWZhdWx0U2hvdWxkUmV2YWxpZGF0ZTtcbn1cblxuYXN5bmMgZnVuY3Rpb24gY2FsbExvYWRlck9yQWN0aW9uKHR5cGUsIHJlcXVlc3QsIG1hdGNoLCBza2lwUmVkaXJlY3RzLCBpc1JvdXRlUmVxdWVzdCkge1xuICBpZiAoc2tpcFJlZGlyZWN0cyA9PT0gdm9pZCAwKSB7XG4gICAgc2tpcFJlZGlyZWN0cyA9IGZhbHNlO1xuICB9XG5cbiAgaWYgKGlzUm91dGVSZXF1ZXN0ID09PSB2b2lkIDApIHtcbiAgICBpc1JvdXRlUmVxdWVzdCA9IGZhbHNlO1xuICB9XG5cbiAgbGV0IHJlc3VsdFR5cGU7XG4gIGxldCByZXN1bHQ7IC8vIFNldHVwIGEgcHJvbWlzZSB3ZSBjYW4gcmFjZSBhZ2FpbnN0IHNvIHRoYXQgYWJvcnQgc2lnbmFscyBzaG9ydCBjaXJjdWl0XG5cbiAgbGV0IHJlamVjdDtcbiAgbGV0IGFib3J0UHJvbWlzZSA9IG5ldyBQcm9taXNlKChfLCByKSA9PiByZWplY3QgPSByKTtcblxuICBsZXQgb25SZWplY3QgPSAoKSA9PiByZWplY3QoKTtcblxuICByZXF1ZXN0LnNpZ25hbC5hZGRFdmVudExpc3RlbmVyKFwiYWJvcnRcIiwgb25SZWplY3QpO1xuXG4gIHRyeSB7XG4gICAgbGV0IGhhbmRsZXIgPSBtYXRjaC5yb3V0ZVt0eXBlXTtcbiAgICBpbnZhcmlhbnQoaGFuZGxlciwgXCJDb3VsZCBub3QgZmluZCB0aGUgXCIgKyB0eXBlICsgXCIgdG8gcnVuIG9uIHRoZSBcXFwiXCIgKyBtYXRjaC5yb3V0ZS5pZCArIFwiXFxcIiByb3V0ZVwiKTtcbiAgICByZXN1bHQgPSBhd2FpdCBQcm9taXNlLnJhY2UoW2hhbmRsZXIoe1xuICAgICAgcmVxdWVzdCxcbiAgICAgIHBhcmFtczogbWF0Y2gucGFyYW1zXG4gICAgfSksIGFib3J0UHJvbWlzZV0pO1xuICB9IGNhdGNoIChlKSB7XG4gICAgcmVzdWx0VHlwZSA9IFJlc3VsdFR5cGUuZXJyb3I7XG4gICAgcmVzdWx0ID0gZTtcbiAgfSBmaW5hbGx5IHtcbiAgICByZXF1ZXN0LnNpZ25hbC5yZW1vdmVFdmVudExpc3RlbmVyKFwiYWJvcnRcIiwgb25SZWplY3QpO1xuICB9XG5cbiAgaWYgKHJlc3VsdCBpbnN0YW5jZW9mIFJlc3BvbnNlKSB7XG4gICAgLy8gUHJvY2VzcyByZWRpcmVjdHNcbiAgICBsZXQgc3RhdHVzID0gcmVzdWx0LnN0YXR1cztcbiAgICBsZXQgbG9jYXRpb24gPSByZXN1bHQuaGVhZGVycy5nZXQoXCJMb2NhdGlvblwiKTsgLy8gRm9yIFNTUiBzaW5nbGUtcm91dGUgcmVxdWVzdHMsIHdlIHdhbnQgdG8gaGFuZCBSZXNwb25zZXMgYmFjayBkaXJlY3RseVxuICAgIC8vIHdpdGhvdXQgdW53cmFwcGluZ1xuXG4gICAgaWYgKGlzUm91dGVSZXF1ZXN0KSB7XG4gICAgICB0aHJvdyByZXN1bHQ7XG4gICAgfVxuXG4gICAgaWYgKHN0YXR1cyA+PSAzMDAgJiYgc3RhdHVzIDw9IDM5OSAmJiBsb2NhdGlvbiAhPSBudWxsKSB7XG4gICAgICAvLyBEb24ndCBwcm9jZXNzIHJlZGlyZWN0cyBpbiB0aGUgcm91dGVyIGR1cmluZyBTU1IgZG9jdW1lbnQgcmVxdWVzdHMuXG4gICAgICAvLyBJbnN0ZWFkLCB0aHJvdyB0aGUgUmVzcG9uc2UgYW5kIGxldCB0aGUgc2VydmVyIGhhbmRsZSBpdCB3aXRoIGFuIEhUVFBcbiAgICAgIC8vIHJlZGlyZWN0XG4gICAgICBpZiAoc2tpcFJlZGlyZWN0cykge1xuICAgICAgICB0aHJvdyByZXN1bHQ7XG4gICAgICB9XG5cbiAgICAgIHJldHVybiB7XG4gICAgICAgIHR5cGU6IFJlc3VsdFR5cGUucmVkaXJlY3QsXG4gICAgICAgIHN0YXR1cyxcbiAgICAgICAgbG9jYXRpb24sXG4gICAgICAgIHJldmFsaWRhdGU6IHJlc3VsdC5oZWFkZXJzLmdldChcIlgtUmVtaXgtUmV2YWxpZGF0ZVwiKSAhPT0gbnVsbFxuICAgICAgfTtcbiAgICB9XG5cbiAgICBsZXQgZGF0YTtcbiAgICBsZXQgY29udGVudFR5cGUgPSByZXN1bHQuaGVhZGVycy5nZXQoXCJDb250ZW50LVR5cGVcIik7XG5cbiAgICBpZiAoY29udGVudFR5cGUgJiYgY29udGVudFR5cGUuc3RhcnRzV2l0aChcImFwcGxpY2F0aW9uL2pzb25cIikpIHtcbiAgICAgIGRhdGEgPSBhd2FpdCByZXN1bHQuanNvbigpO1xuICAgIH0gZWxzZSB7XG4gICAgICBkYXRhID0gYXdhaXQgcmVzdWx0LnRleHQoKTtcbiAgICB9XG5cbiAgICBpZiAocmVzdWx0VHlwZSA9PT0gUmVzdWx0VHlwZS5lcnJvcikge1xuICAgICAgcmV0dXJuIHtcbiAgICAgICAgdHlwZTogcmVzdWx0VHlwZSxcbiAgICAgICAgZXJyb3I6IG5ldyBFcnJvclJlc3BvbnNlKHN0YXR1cywgcmVzdWx0LnN0YXR1c1RleHQsIGRhdGEpLFxuICAgICAgICBoZWFkZXJzOiByZXN1bHQuaGVhZGVyc1xuICAgICAgfTtcbiAgICB9XG5cbiAgICByZXR1cm4ge1xuICAgICAgdHlwZTogUmVzdWx0VHlwZS5kYXRhLFxuICAgICAgZGF0YSxcbiAgICAgIHN0YXR1c0NvZGU6IHJlc3VsdC5zdGF0dXMsXG4gICAgICBoZWFkZXJzOiByZXN1bHQuaGVhZGVyc1xuICAgIH07XG4gIH1cblxuICBpZiAocmVzdWx0VHlwZSA9PT0gUmVzdWx0VHlwZS5lcnJvcikge1xuICAgIHJldHVybiB7XG4gICAgICB0eXBlOiByZXN1bHRUeXBlLFxuICAgICAgZXJyb3I6IHJlc3VsdFxuICAgIH07XG4gIH1cblxuICBpZiAocmVzdWx0IGluc3RhbmNlb2YgRGVmZXJyZWREYXRhKSB7XG4gICAgcmV0dXJuIHtcbiAgICAgIHR5cGU6IFJlc3VsdFR5cGUuZGVmZXJyZWQsXG4gICAgICBkZWZlcnJlZERhdGE6IHJlc3VsdFxuICAgIH07XG4gIH1cblxuICByZXR1cm4ge1xuICAgIHR5cGU6IFJlc3VsdFR5cGUuZGF0YSxcbiAgICBkYXRhOiByZXN1bHRcbiAgfTtcbn1cblxuZnVuY3Rpb24gY3JlYXRlUmVxdWVzdChsb2NhdGlvbiwgc2lnbmFsLCBzdWJtaXNzaW9uKSB7XG4gIGxldCB1cmwgPSBjcmVhdGVVUkwobG9jYXRpb24pLnRvU3RyaW5nKCk7XG4gIGxldCBpbml0ID0ge1xuICAgIHNpZ25hbFxuICB9O1xuXG4gIGlmIChzdWJtaXNzaW9uKSB7XG4gICAgbGV0IHtcbiAgICAgIGZvcm1NZXRob2QsXG4gICAgICBmb3JtRW5jVHlwZSxcbiAgICAgIGZvcm1EYXRhXG4gICAgfSA9IHN1Ym1pc3Npb247XG4gICAgaW5pdC5tZXRob2QgPSBmb3JtTWV0aG9kLnRvVXBwZXJDYXNlKCk7XG4gICAgaW5pdC5ib2R5ID0gZm9ybUVuY1R5cGUgPT09IFwiYXBwbGljYXRpb24veC13d3ctZm9ybS11cmxlbmNvZGVkXCIgPyBjb252ZXJ0Rm9ybURhdGFUb1NlYXJjaFBhcmFtcyhmb3JtRGF0YSkgOiBmb3JtRGF0YTtcbiAgfSAvLyBDb250ZW50LVR5cGUgaXMgaW5mZXJyZWQgKGh0dHBzOi8vZmV0Y2guc3BlYy53aGF0d2cub3JnLyNkb20tcmVxdWVzdClcblxuXG4gIHJldHVybiBuZXcgUmVxdWVzdCh1cmwsIGluaXQpO1xufVxuXG5mdW5jdGlvbiBjb252ZXJ0Rm9ybURhdGFUb1NlYXJjaFBhcmFtcyhmb3JtRGF0YSkge1xuICBsZXQgc2VhcmNoUGFyYW1zID0gbmV3IFVSTFNlYXJjaFBhcmFtcygpO1xuXG4gIGZvciAobGV0IFtrZXksIHZhbHVlXSBvZiBmb3JtRGF0YS5lbnRyaWVzKCkpIHtcbiAgICBpbnZhcmlhbnQodHlwZW9mIHZhbHVlID09PSBcInN0cmluZ1wiLCAnRmlsZSBpbnB1dHMgYXJlIG5vdCBzdXBwb3J0ZWQgd2l0aCBlbmNUeXBlIFwiYXBwbGljYXRpb24veC13d3ctZm9ybS11cmxlbmNvZGVkXCIsICcgKyAncGxlYXNlIHVzZSBcIm11bHRpcGFydC9mb3JtLWRhdGFcIiBpbnN0ZWFkLicpO1xuICAgIHNlYXJjaFBhcmFtcy5hcHBlbmQoa2V5LCB2YWx1ZSk7XG4gIH1cblxuICByZXR1cm4gc2VhcmNoUGFyYW1zO1xufVxuXG5mdW5jdGlvbiBwcm9jZXNzUm91dGVMb2FkZXJEYXRhKG1hdGNoZXMsIG1hdGNoZXNUb0xvYWQsIHJlc3VsdHMsIHBlbmRpbmdFcnJvciwgYWN0aXZlRGVmZXJyZWRzKSB7XG4gIC8vIEZpbGwgaW4gbG9hZGVyRGF0YS9lcnJvcnMgZnJvbSBvdXIgbG9hZGVyc1xuICBsZXQgbG9hZGVyRGF0YSA9IHt9O1xuICBsZXQgZXJyb3JzID0gbnVsbDtcbiAgbGV0IHN0YXR1c0NvZGU7XG4gIGxldCBmb3VuZEVycm9yID0gZmFsc2U7XG4gIGxldCBsb2FkZXJIZWFkZXJzID0ge307IC8vIFByb2Nlc3MgbG9hZGVyIHJlc3VsdHMgaW50byBzdGF0ZS5sb2FkZXJEYXRhL3N0YXRlLmVycm9yc1xuXG4gIHJlc3VsdHMuZm9yRWFjaCgocmVzdWx0LCBpbmRleCkgPT4ge1xuICAgIGxldCBpZCA9IG1hdGNoZXNUb0xvYWRbaW5kZXhdLnJvdXRlLmlkO1xuICAgIGludmFyaWFudCghaXNSZWRpcmVjdFJlc3VsdChyZXN1bHQpLCBcIkNhbm5vdCBoYW5kbGUgcmVkaXJlY3QgcmVzdWx0cyBpbiBwcm9jZXNzTG9hZGVyRGF0YVwiKTtcblxuICAgIGlmIChpc0Vycm9yUmVzdWx0KHJlc3VsdCkpIHtcbiAgICAgIC8vIExvb2sgdXB3YXJkcyBmcm9tIHRoZSBtYXRjaGVkIHJvdXRlIGZvciB0aGUgY2xvc2VzdCBhbmNlc3RvclxuICAgICAgLy8gZXJyb3IgYm91bmRhcnksIGRlZmF1bHRpbmcgdG8gdGhlIHJvb3QgbWF0Y2hcbiAgICAgIGxldCBib3VuZGFyeU1hdGNoID0gZmluZE5lYXJlc3RCb3VuZGFyeShtYXRjaGVzLCBpZCk7XG4gICAgICBsZXQgZXJyb3IgPSByZXN1bHQuZXJyb3I7IC8vIElmIHdlIGhhdmUgYSBwZW5kaW5nIGFjdGlvbiBlcnJvciwgd2UgcmVwb3J0IGl0IGF0IHRoZSBoaWdoZXN0LXJvdXRlXG4gICAgICAvLyB0aGF0IHRocm93cyBhIGxvYWRlciBlcnJvciwgYW5kIHRoZW4gY2xlYXIgaXQgb3V0IHRvIGluZGljYXRlIHRoYXRcbiAgICAgIC8vIGl0IHdhcyBjb25zdW1lZFxuXG4gICAgICBpZiAocGVuZGluZ0Vycm9yKSB7XG4gICAgICAgIGVycm9yID0gT2JqZWN0LnZhbHVlcyhwZW5kaW5nRXJyb3IpWzBdO1xuICAgICAgICBwZW5kaW5nRXJyb3IgPSB1bmRlZmluZWQ7XG4gICAgICB9XG5cbiAgICAgIGVycm9ycyA9IE9iamVjdC5hc3NpZ24oZXJyb3JzIHx8IHt9LCB7XG4gICAgICAgIFtib3VuZGFyeU1hdGNoLnJvdXRlLmlkXTogZXJyb3JcbiAgICAgIH0pOyAvLyBPbmNlIHdlIGZpbmQgb3VyIGZpcnN0IChoaWdoZXN0KSBlcnJvciwgd2Ugc2V0IHRoZSBzdGF0dXMgY29kZSBhbmRcbiAgICAgIC8vIHByZXZlbnQgZGVlcGVyIHN0YXR1cyBjb2RlcyBmcm9tIG92ZXJyaWRpbmdcblxuICAgICAgaWYgKCFmb3VuZEVycm9yKSB7XG4gICAgICAgIGZvdW5kRXJyb3IgPSB0cnVlO1xuICAgICAgICBzdGF0dXNDb2RlID0gaXNSb3V0ZUVycm9yUmVzcG9uc2UocmVzdWx0LmVycm9yKSA/IHJlc3VsdC5lcnJvci5zdGF0dXMgOiA1MDA7XG4gICAgICB9XG5cbiAgICAgIGlmIChyZXN1bHQuaGVhZGVycykge1xuICAgICAgICBsb2FkZXJIZWFkZXJzW2lkXSA9IHJlc3VsdC5oZWFkZXJzO1xuICAgICAgfVxuICAgIH0gZWxzZSBpZiAoaXNEZWZlcnJlZFJlc3VsdChyZXN1bHQpKSB7XG4gICAgICBhY3RpdmVEZWZlcnJlZHMgJiYgYWN0aXZlRGVmZXJyZWRzLnNldChpZCwgcmVzdWx0LmRlZmVycmVkRGF0YSk7XG4gICAgICBsb2FkZXJEYXRhW2lkXSA9IHJlc3VsdC5kZWZlcnJlZERhdGEuZGF0YTsgLy8gVE9ETzogQWRkIHN0YXR1c0NvZGUvaGVhZGVycyBvbmNlIHdlIHdpcmUgdXAgc3RyZWFtaW5nIGluIFJlbWl4XG4gICAgfSBlbHNlIHtcbiAgICAgIGxvYWRlckRhdGFbaWRdID0gcmVzdWx0LmRhdGE7IC8vIEVycm9yIHN0YXR1cyBjb2RlcyBhbHdheXMgb3ZlcnJpZGUgc3VjY2VzcyBzdGF0dXMgY29kZXMsIGJ1dCBpZiBhbGxcbiAgICAgIC8vIGxvYWRlcnMgYXJlIHN1Y2Nlc3NmdWwgd2UgdGFrZSB0aGUgZGVlcGVzdCBzdGF0dXMgY29kZS5cblxuICAgICAgaWYgKHJlc3VsdC5zdGF0dXNDb2RlICE9IG51bGwgJiYgcmVzdWx0LnN0YXR1c0NvZGUgIT09IDIwMCAmJiAhZm91bmRFcnJvcikge1xuICAgICAgICBzdGF0dXNDb2RlID0gcmVzdWx0LnN0YXR1c0NvZGU7XG4gICAgICB9XG5cbiAgICAgIGlmIChyZXN1bHQuaGVhZGVycykge1xuICAgICAgICBsb2FkZXJIZWFkZXJzW2lkXSA9IHJlc3VsdC5oZWFkZXJzO1xuICAgICAgfVxuICAgIH1cbiAgfSk7IC8vIElmIHdlIGRpZG4ndCBjb25zdW1lIHRoZSBwZW5kaW5nIGFjdGlvbiBlcnJvciAoaS5lLiwgYWxsIGxvYWRlcnNcbiAgLy8gcmVzb2x2ZWQpLCB0aGVuIGNvbnN1bWUgaXQgaGVyZVxuXG4gIGlmIChwZW5kaW5nRXJyb3IpIHtcbiAgICBlcnJvcnMgPSBwZW5kaW5nRXJyb3I7XG4gIH1cblxuICByZXR1cm4ge1xuICAgIGxvYWRlckRhdGEsXG4gICAgZXJyb3JzLFxuICAgIHN0YXR1c0NvZGU6IHN0YXR1c0NvZGUgfHwgMjAwLFxuICAgIGxvYWRlckhlYWRlcnNcbiAgfTtcbn1cblxuZnVuY3Rpb24gcHJvY2Vzc0xvYWRlckRhdGEoc3RhdGUsIG1hdGNoZXMsIG1hdGNoZXNUb0xvYWQsIHJlc3VsdHMsIHBlbmRpbmdFcnJvciwgcmV2YWxpZGF0aW5nRmV0Y2hlcnMsIGZldGNoZXJSZXN1bHRzLCBhY3RpdmVEZWZlcnJlZHMpIHtcbiAgbGV0IHtcbiAgICBsb2FkZXJEYXRhLFxuICAgIGVycm9yc1xuICB9ID0gcHJvY2Vzc1JvdXRlTG9hZGVyRGF0YShtYXRjaGVzLCBtYXRjaGVzVG9Mb2FkLCByZXN1bHRzLCBwZW5kaW5nRXJyb3IsIGFjdGl2ZURlZmVycmVkcyk7IC8vIFByb2Nlc3MgcmVzdWx0cyBmcm9tIG91ciByZXZhbGlkYXRpbmcgZmV0Y2hlcnNcblxuICBmb3IgKGxldCBpbmRleCA9IDA7IGluZGV4IDwgcmV2YWxpZGF0aW5nRmV0Y2hlcnMubGVuZ3RoOyBpbmRleCsrKSB7XG4gICAgbGV0IFtrZXksLCBtYXRjaF0gPSByZXZhbGlkYXRpbmdGZXRjaGVyc1tpbmRleF07XG4gICAgaW52YXJpYW50KGZldGNoZXJSZXN1bHRzICE9PSB1bmRlZmluZWQgJiYgZmV0Y2hlclJlc3VsdHNbaW5kZXhdICE9PSB1bmRlZmluZWQsIFwiRGlkIG5vdCBmaW5kIGNvcnJlc3BvbmRpbmcgZmV0Y2hlciByZXN1bHRcIik7XG4gICAgbGV0IHJlc3VsdCA9IGZldGNoZXJSZXN1bHRzW2luZGV4XTsgLy8gUHJvY2VzcyBmZXRjaGVyIG5vbi1yZWRpcmVjdCBlcnJvcnNcblxuICAgIGlmIChpc0Vycm9yUmVzdWx0KHJlc3VsdCkpIHtcbiAgICAgIGxldCBib3VuZGFyeU1hdGNoID0gZmluZE5lYXJlc3RCb3VuZGFyeShzdGF0ZS5tYXRjaGVzLCBtYXRjaC5yb3V0ZS5pZCk7XG5cbiAgICAgIGlmICghKGVycm9ycyAmJiBlcnJvcnNbYm91bmRhcnlNYXRjaC5yb3V0ZS5pZF0pKSB7XG4gICAgICAgIGVycm9ycyA9IF9leHRlbmRzKHt9LCBlcnJvcnMsIHtcbiAgICAgICAgICBbYm91bmRhcnlNYXRjaC5yb3V0ZS5pZF06IHJlc3VsdC5lcnJvclxuICAgICAgICB9KTtcbiAgICAgIH1cblxuICAgICAgc3RhdGUuZmV0Y2hlcnMuZGVsZXRlKGtleSk7XG4gICAgfSBlbHNlIGlmIChpc1JlZGlyZWN0UmVzdWx0KHJlc3VsdCkpIHtcbiAgICAgIC8vIFNob3VsZCBuZXZlciBnZXQgaGVyZSwgcmVkaXJlY3RzIHNob3VsZCBnZXQgcHJvY2Vzc2VkIGFib3ZlLCBidXQgd2VcbiAgICAgIC8vIGtlZXAgdGhpcyB0byB0eXBlIG5hcnJvdyB0byBhIHN1Y2Nlc3MgcmVzdWx0IGluIHRoZSBlbHNlXG4gICAgICB0aHJvdyBuZXcgRXJyb3IoXCJVbmhhbmRsZWQgZmV0Y2hlciByZXZhbGlkYXRpb24gcmVkaXJlY3RcIik7XG4gICAgfSBlbHNlIGlmIChpc0RlZmVycmVkUmVzdWx0KHJlc3VsdCkpIHtcbiAgICAgIC8vIFNob3VsZCBuZXZlciBnZXQgaGVyZSwgZGVmZXJyZWQgZGF0YSBzaG91bGQgYmUgYXdhaXRlZCBmb3IgZmV0Y2hlcnNcbiAgICAgIC8vIGluIHJlc29sdmVEZWZlcnJlZFJlc3VsdHNcbiAgICAgIHRocm93IG5ldyBFcnJvcihcIlVuaGFuZGxlZCBmZXRjaGVyIGRlZmVycmVkIGRhdGFcIik7XG4gICAgfSBlbHNlIHtcbiAgICAgIGxldCBkb25lRmV0Y2hlciA9IHtcbiAgICAgICAgc3RhdGU6IFwiaWRsZVwiLFxuICAgICAgICBkYXRhOiByZXN1bHQuZGF0YSxcbiAgICAgICAgZm9ybU1ldGhvZDogdW5kZWZpbmVkLFxuICAgICAgICBmb3JtQWN0aW9uOiB1bmRlZmluZWQsXG4gICAgICAgIGZvcm1FbmNUeXBlOiB1bmRlZmluZWQsXG4gICAgICAgIGZvcm1EYXRhOiB1bmRlZmluZWRcbiAgICAgIH07XG4gICAgICBzdGF0ZS5mZXRjaGVycy5zZXQoa2V5LCBkb25lRmV0Y2hlcik7XG4gICAgfVxuICB9XG5cbiAgcmV0dXJuIHtcbiAgICBsb2FkZXJEYXRhLFxuICAgIGVycm9yc1xuICB9O1xufVxuXG5mdW5jdGlvbiBtZXJnZUxvYWRlckRhdGEobG9hZGVyRGF0YSwgbmV3TG9hZGVyRGF0YSwgbWF0Y2hlcykge1xuICBsZXQgbWVyZ2VkTG9hZGVyRGF0YSA9IF9leHRlbmRzKHt9LCBuZXdMb2FkZXJEYXRhKTtcblxuICBtYXRjaGVzLmZvckVhY2gobWF0Y2ggPT4ge1xuICAgIGxldCBpZCA9IG1hdGNoLnJvdXRlLmlkO1xuXG4gICAgaWYgKG5ld0xvYWRlckRhdGFbaWRdID09PSB1bmRlZmluZWQgJiYgbG9hZGVyRGF0YVtpZF0gIT09IHVuZGVmaW5lZCkge1xuICAgICAgbWVyZ2VkTG9hZGVyRGF0YVtpZF0gPSBsb2FkZXJEYXRhW2lkXTtcbiAgICB9XG4gIH0pO1xuICByZXR1cm4gbWVyZ2VkTG9hZGVyRGF0YTtcbn0gLy8gRmluZCB0aGUgbmVhcmVzdCBlcnJvciBib3VuZGFyeSwgbG9va2luZyB1cHdhcmRzIGZyb20gdGhlIGxlYWYgcm91dGUgKG9yIHRoZVxuLy8gcm91dGUgc3BlY2lmaWVkIGJ5IHJvdXRlSWQpIGZvciB0aGUgY2xvc2VzdCBhbmNlc3RvciBlcnJvciBib3VuZGFyeSxcbi8vIGRlZmF1bHRpbmcgdG8gdGhlIHJvb3QgbWF0Y2hcblxuXG5mdW5jdGlvbiBmaW5kTmVhcmVzdEJvdW5kYXJ5KG1hdGNoZXMsIHJvdXRlSWQpIHtcbiAgbGV0IGVsaWdpYmxlTWF0Y2hlcyA9IHJvdXRlSWQgPyBtYXRjaGVzLnNsaWNlKDAsIG1hdGNoZXMuZmluZEluZGV4KG0gPT4gbS5yb3V0ZS5pZCA9PT0gcm91dGVJZCkgKyAxKSA6IFsuLi5tYXRjaGVzXTtcbiAgcmV0dXJuIGVsaWdpYmxlTWF0Y2hlcy5yZXZlcnNlKCkuZmluZChtID0+IG0ucm91dGUuaGFzRXJyb3JCb3VuZGFyeSA9PT0gdHJ1ZSkgfHwgbWF0Y2hlc1swXTtcbn1cblxuZnVuY3Rpb24gZ2V0Tm90Rm91bmRNYXRjaGVzKHJvdXRlcykge1xuICAvLyBQcmVmZXIgYSByb290IGxheW91dCByb3V0ZSBpZiBwcmVzZW50LCBvdGhlcndpc2Ugc2hpbSBpbiBhIHJvdXRlIG9iamVjdFxuICBsZXQgcm91dGUgPSByb3V0ZXMuZmluZChyID0+IHIuaW5kZXggfHwgci5wYXRoID09PSBcIlwiIHx8IHIucGF0aCA9PT0gXCIvXCIpIHx8IHtcbiAgICBpZDogXCJfX3NoaW0tNDA0LXJvdXRlX19cIlxuICB9O1xuICByZXR1cm4ge1xuICAgIG1hdGNoZXM6IFt7XG4gICAgICBwYXJhbXM6IHt9LFxuICAgICAgcGF0aG5hbWU6IFwiXCIsXG4gICAgICBwYXRobmFtZUJhc2U6IFwiXCIsXG4gICAgICByb3V0ZVxuICAgIH1dLFxuICAgIHJvdXRlLFxuICAgIGVycm9yOiBuZXcgRXJyb3JSZXNwb25zZSg0MDQsIFwiTm90IEZvdW5kXCIsIG51bGwpXG4gIH07XG59XG5cbmZ1bmN0aW9uIGdldE1ldGhvZE5vdEFsbG93ZWRSZXN1bHQocGF0aCkge1xuICBsZXQgaHJlZiA9IHR5cGVvZiBwYXRoID09PSBcInN0cmluZ1wiID8gcGF0aCA6IGNyZWF0ZUhyZWYocGF0aCk7XG4gIGNvbnNvbGUud2FybihcIllvdSdyZSB0cnlpbmcgdG8gc3VibWl0IHRvIGEgcm91dGUgdGhhdCBkb2VzIG5vdCBoYXZlIGFuIGFjdGlvbi4gIFRvIFwiICsgXCJmaXggdGhpcywgcGxlYXNlIGFkZCBhbiBgYWN0aW9uYCBmdW5jdGlvbiB0byB0aGUgcm91dGUgZm9yIFwiICsgKFwiW1wiICsgaHJlZiArIFwiXVwiKSk7XG4gIHJldHVybiB7XG4gICAgdHlwZTogUmVzdWx0VHlwZS5lcnJvcixcbiAgICBlcnJvcjogbmV3IEVycm9yUmVzcG9uc2UoNDA1LCBcIk1ldGhvZCBOb3QgQWxsb3dlZFwiLCBcIk5vIGFjdGlvbiBmb3VuZCBmb3IgW1wiICsgaHJlZiArIFwiXVwiKVxuICB9O1xufSAvLyBGaW5kIGFueSByZXR1cm5lZCByZWRpcmVjdCBlcnJvcnMsIHN0YXJ0aW5nIGZyb20gdGhlIGxvd2VzdCBtYXRjaFxuXG5cbmZ1bmN0aW9uIGZpbmRSZWRpcmVjdChyZXN1bHRzKSB7XG4gIGZvciAobGV0IGkgPSByZXN1bHRzLmxlbmd0aCAtIDE7IGkgPj0gMDsgaS0tKSB7XG4gICAgbGV0IHJlc3VsdCA9IHJlc3VsdHNbaV07XG5cbiAgICBpZiAoaXNSZWRpcmVjdFJlc3VsdChyZXN1bHQpKSB7XG4gICAgICByZXR1cm4gcmVzdWx0O1xuICAgIH1cbiAgfVxufSAvLyBDcmVhdGUgYW4gaHJlZiB0byByZXByZXNlbnQgYSBcInNlcnZlclwiIFVSTCB3aXRob3V0IHRoZSBoYXNoXG5cblxuZnVuY3Rpb24gY3JlYXRlSHJlZihsb2NhdGlvbikge1xuICByZXR1cm4gKGxvY2F0aW9uLnBhdGhuYW1lIHx8IFwiXCIpICsgKGxvY2F0aW9uLnNlYXJjaCB8fCBcIlwiKTtcbn1cblxuZnVuY3Rpb24gaXNIYXNoQ2hhbmdlT25seShhLCBiKSB7XG4gIHJldHVybiBhLnBhdGhuYW1lID09PSBiLnBhdGhuYW1lICYmIGEuc2VhcmNoID09PSBiLnNlYXJjaCAmJiBhLmhhc2ggIT09IGIuaGFzaDtcbn1cblxuZnVuY3Rpb24gaXNEZWZlcnJlZFJlc3VsdChyZXN1bHQpIHtcbiAgcmV0dXJuIHJlc3VsdC50eXBlID09PSBSZXN1bHRUeXBlLmRlZmVycmVkO1xufVxuXG5mdW5jdGlvbiBpc0Vycm9yUmVzdWx0KHJlc3VsdCkge1xuICByZXR1cm4gcmVzdWx0LnR5cGUgPT09IFJlc3VsdFR5cGUuZXJyb3I7XG59XG5cbmZ1bmN0aW9uIGlzUmVkaXJlY3RSZXN1bHQocmVzdWx0KSB7XG4gIHJldHVybiAocmVzdWx0ICYmIHJlc3VsdC50eXBlKSA9PT0gUmVzdWx0VHlwZS5yZWRpcmVjdDtcbn1cblxuYXN5bmMgZnVuY3Rpb24gcmVzb2x2ZURlZmVycmVkUmVzdWx0cyhjdXJyZW50TWF0Y2hlcywgbWF0Y2hlc1RvTG9hZCwgcmVzdWx0cywgc2lnbmFsLCBpc0ZldGNoZXIsIGN1cnJlbnRMb2FkZXJEYXRhKSB7XG4gIGZvciAobGV0IGluZGV4ID0gMDsgaW5kZXggPCByZXN1bHRzLmxlbmd0aDsgaW5kZXgrKykge1xuICAgIGxldCByZXN1bHQgPSByZXN1bHRzW2luZGV4XTtcbiAgICBsZXQgbWF0Y2ggPSBtYXRjaGVzVG9Mb2FkW2luZGV4XTtcbiAgICBsZXQgY3VycmVudE1hdGNoID0gY3VycmVudE1hdGNoZXMuZmluZChtID0+IG0ucm91dGUuaWQgPT09IG1hdGNoLnJvdXRlLmlkKTtcbiAgICBsZXQgaXNSZXZhbGlkYXRpbmdMb2FkZXIgPSBjdXJyZW50TWF0Y2ggIT0gbnVsbCAmJiAhaXNOZXdSb3V0ZUluc3RhbmNlKGN1cnJlbnRNYXRjaCwgbWF0Y2gpICYmIChjdXJyZW50TG9hZGVyRGF0YSAmJiBjdXJyZW50TG9hZGVyRGF0YVttYXRjaC5yb3V0ZS5pZF0pICE9PSB1bmRlZmluZWQ7XG5cbiAgICBpZiAoaXNEZWZlcnJlZFJlc3VsdChyZXN1bHQpICYmIChpc0ZldGNoZXIgfHwgaXNSZXZhbGlkYXRpbmdMb2FkZXIpKSB7XG4gICAgICAvLyBOb3RlOiB3ZSBkbyBub3QgaGF2ZSB0byB0b3VjaCBhY3RpdmVEZWZlcnJlZHMgaGVyZSBzaW5jZSB3ZSByYWNlIHRoZW1cbiAgICAgIC8vIGFnYWluc3QgdGhlIHNpZ25hbCBpbiByZXNvbHZlRGVmZXJyZWREYXRhIGFuZCB0aGV5J2xsIGdldCBhYm9ydGVkXG4gICAgICAvLyB0aGVyZSBpZiBuZWVkZWRcbiAgICAgIGF3YWl0IHJlc29sdmVEZWZlcnJlZERhdGEocmVzdWx0LCBzaWduYWwsIGlzRmV0Y2hlcikudGhlbihyZXN1bHQgPT4ge1xuICAgICAgICBpZiAocmVzdWx0KSB7XG4gICAgICAgICAgcmVzdWx0c1tpbmRleF0gPSByZXN1bHQgfHwgcmVzdWx0c1tpbmRleF07XG4gICAgICAgIH1cbiAgICAgIH0pO1xuICAgIH1cbiAgfVxufVxuXG5hc3luYyBmdW5jdGlvbiByZXNvbHZlRGVmZXJyZWREYXRhKHJlc3VsdCwgc2lnbmFsLCB1bndyYXApIHtcbiAgaWYgKHVud3JhcCA9PT0gdm9pZCAwKSB7XG4gICAgdW53cmFwID0gZmFsc2U7XG4gIH1cblxuICBsZXQgYWJvcnRlZCA9IGF3YWl0IHJlc3VsdC5kZWZlcnJlZERhdGEucmVzb2x2ZURhdGEoc2lnbmFsKTtcblxuICBpZiAoYWJvcnRlZCkge1xuICAgIHJldHVybjtcbiAgfVxuXG4gIGlmICh1bndyYXApIHtcbiAgICB0cnkge1xuICAgICAgcmV0dXJuIHtcbiAgICAgICAgdHlwZTogUmVzdWx0VHlwZS5kYXRhLFxuICAgICAgICBkYXRhOiByZXN1bHQuZGVmZXJyZWREYXRhLnVud3JhcHBlZERhdGFcbiAgICAgIH07XG4gICAgfSBjYXRjaCAoZSkge1xuICAgICAgLy8gSGFuZGxlIGFueSBUcmFja2VkUHJvbWlzZS5fZXJyb3IgdmFsdWVzIGVuY291bnRlcmVkIHdoaWxlIHVud3JhcHBpbmdcbiAgICAgIHJldHVybiB7XG4gICAgICAgIHR5cGU6IFJlc3VsdFR5cGUuZXJyb3IsXG4gICAgICAgIGVycm9yOiBlXG4gICAgICB9O1xuICAgIH1cbiAgfVxuXG4gIHJldHVybiB7XG4gICAgdHlwZTogUmVzdWx0VHlwZS5kYXRhLFxuICAgIGRhdGE6IHJlc3VsdC5kZWZlcnJlZERhdGEuZGF0YVxuICB9O1xufVxuXG5mdW5jdGlvbiBoYXNOYWtlZEluZGV4UXVlcnkoc2VhcmNoKSB7XG4gIHJldHVybiBuZXcgVVJMU2VhcmNoUGFyYW1zKHNlYXJjaCkuZ2V0QWxsKFwiaW5kZXhcIikuc29tZSh2ID0+IHYgPT09IFwiXCIpO1xufSAvLyBOb3RlOiBUaGlzIHNob3VsZCBtYXRjaCB0aGUgZm9ybWF0IGV4cG9ydGVkIGJ5IHVzZU1hdGNoZXMsIHNvIGlmIHlvdSBjaGFuZ2Vcbi8vIHRoaXMgcGxlYXNlIGFsc28gY2hhbmdlIHRoYXQgOikgIEV2ZW50dWFsbHkgd2UnbGwgRFJZIHRoaXMgdXBcblxuXG5mdW5jdGlvbiBjcmVhdGVVc2VNYXRjaGVzTWF0Y2gobWF0Y2gsIGxvYWRlckRhdGEpIHtcbiAgbGV0IHtcbiAgICByb3V0ZSxcbiAgICBwYXRobmFtZSxcbiAgICBwYXJhbXNcbiAgfSA9IG1hdGNoO1xuICByZXR1cm4ge1xuICAgIGlkOiByb3V0ZS5pZCxcbiAgICBwYXRobmFtZSxcbiAgICBwYXJhbXMsXG4gICAgZGF0YTogbG9hZGVyRGF0YVtyb3V0ZS5pZF0sXG4gICAgaGFuZGxlOiByb3V0ZS5oYW5kbGVcbiAgfTtcbn1cblxuZnVuY3Rpb24gZ2V0VGFyZ2V0TWF0Y2gobWF0Y2hlcywgbG9jYXRpb24pIHtcbiAgbGV0IHNlYXJjaCA9IHR5cGVvZiBsb2NhdGlvbiA9PT0gXCJzdHJpbmdcIiA/IHBhcnNlUGF0aChsb2NhdGlvbikuc2VhcmNoIDogbG9jYXRpb24uc2VhcmNoO1xuXG4gIGlmIChtYXRjaGVzW21hdGNoZXMubGVuZ3RoIC0gMV0ucm91dGUuaW5kZXggJiYgIWhhc05ha2VkSW5kZXhRdWVyeShzZWFyY2ggfHwgXCJcIikpIHtcbiAgICByZXR1cm4gbWF0Y2hlcy5zbGljZSgtMilbMF07XG4gIH1cblxuICByZXR1cm4gbWF0Y2hlcy5zbGljZSgtMSlbMF07XG59XG5cbmZ1bmN0aW9uIGNyZWF0ZVVSTChsb2NhdGlvbikge1xuICBsZXQgYmFzZSA9IHR5cGVvZiB3aW5kb3cgIT09IFwidW5kZWZpbmVkXCIgJiYgdHlwZW9mIHdpbmRvdy5sb2NhdGlvbiAhPT0gXCJ1bmRlZmluZWRcIiA/IHdpbmRvdy5sb2NhdGlvbi5vcmlnaW4gOiBcInVua25vd246Ly91bmtub3duXCI7XG4gIGxldCBocmVmID0gdHlwZW9mIGxvY2F0aW9uID09PSBcInN0cmluZ1wiID8gbG9jYXRpb24gOiBjcmVhdGVIcmVmKGxvY2F0aW9uKTtcbiAgcmV0dXJuIG5ldyBVUkwoaHJlZiwgYmFzZSk7XG59IC8vI2VuZHJlZ2lvblxuXG5leHBvcnQgeyBBYm9ydGVkRGVmZXJyZWRFcnJvciwgQWN0aW9uLCBFcnJvclJlc3BvbnNlLCBJRExFX0ZFVENIRVIsIElETEVfTkFWSUdBVElPTiwgY29udmVydFJvdXRlc1RvRGF0YVJvdXRlcyBhcyBVTlNBRkVfY29udmVydFJvdXRlc1RvRGF0YVJvdXRlcywgY3JlYXRlQnJvd3Nlckhpc3RvcnksIGNyZWF0ZUhhc2hIaXN0b3J5LCBjcmVhdGVNZW1vcnlIaXN0b3J5LCBjcmVhdGVQYXRoLCBjcmVhdGVSb3V0ZXIsIGRlZmVyLCBnZW5lcmF0ZVBhdGgsIGdldFN0YXRpY0NvbnRleHRGcm9tRXJyb3IsIGdldFRvUGF0aG5hbWUsIGludmFyaWFudCwgaXNSb3V0ZUVycm9yUmVzcG9uc2UsIGpvaW5QYXRocywganNvbiwgbWF0Y2hQYXRoLCBtYXRjaFJvdXRlcywgbm9ybWFsaXplUGF0aG5hbWUsIHBhcnNlUGF0aCwgcmVkaXJlY3QsIHJlc29sdmVQYXRoLCByZXNvbHZlVG8sIHN0cmlwQmFzZW5hbWUsIHVuc3RhYmxlX2NyZWF0ZVN0YXRpY0hhbmRsZXIsIHdhcm5pbmcgfTtcbi8vIyBzb3VyY2VNYXBwaW5nVVJMPXJvdXRlci5qcy5tYXBcbiIsImltcG9ydCBBcHAgZnJvbSAnLi4vYXBwJztcbmltcG9ydCBIb21lIGZyb20gJy4uL3BhZ2VzL0hvbWUvaW5kZXgnO1xuaW1wb3J0IEFib3V0IGZyb20gJy4uL3BhZ2VzL0Fib3V0L2luZGV4JztcblxuZXhwb3J0IGNvbnN0IHJvdXRlQ29uZmlnID0gW1xuICAgIHtcbiAgICAgICAgcGF0aDogJy8nLFxuICAgICAgICBjb21wb25lbnQ6IEFwcCxcbiAgICAgICAgaW5kZXhSb3V0ZTogeyBjb21wb25lbnQ6IEhvbWUgfSxcbiAgICAgICAgY2hpbGRSb3V0ZXM6IFtcbiAgICAgICAgICAgIHsgcGF0aDogJ2Fib3V0JywgY29tcG9uZW50OiBBYm91dCB9XG4gICAgICAgIF1cbiAgICB9XG5dIiwiaW1wb3J0IFJlYWN0IGZyb20gXCJyZWFjdFwiO1xuXG5leHBvcnQgZGVmYXVsdCAoKSA9PiB7XG4gICAgcmV0dXJuIChcbiAgICAgICAgPGgxPjExMTwvaDE+XG4gICAgKVxufSIsImltcG9ydCBSZWFjdCBmcm9tIFwicmVhY3RcIjtcblxuZXhwb3J0IGRlZmF1bHQgKCkgPT4ge1xuICAgIHJldHVybiAoXG4gICAgICAgIDxoMT4zMzM8L2gxPlxuICAgIClcbn0iLCJpbXBvcnQgUmVhY3QgZnJvbSBcInJlYWN0XCI7XG5cbmV4cG9ydCBkZWZhdWx0ICgpID0+IHtcbiAgICByZXR1cm4gKFxuICAgICAgICA8aDE+MjIyPC9oMT5cbiAgICApXG59IiwiLyoqXG4gKiBSZWFjdCBSb3V0ZXIgdjYuNC4yXG4gKlxuICogQ29weXJpZ2h0IChjKSBSZW1peCBTb2Z0d2FyZSBJbmMuXG4gKlxuICogVGhpcyBzb3VyY2UgY29kZSBpcyBsaWNlbnNlZCB1bmRlciB0aGUgTUlUIGxpY2Vuc2UgZm91bmQgaW4gdGhlXG4gKiBMSUNFTlNFLm1kIGZpbGUgaW4gdGhlIHJvb3QgZGlyZWN0b3J5IG9mIHRoaXMgc291cmNlIHRyZWUuXG4gKlxuICogQGxpY2Vuc2UgTUlUXG4gKi9cbmltcG9ydCB7IGludmFyaWFudCwgcmVzb2x2ZVRvLCBqb2luUGF0aHMsIG1hdGNoUGF0aCwgd2FybmluZywgcGFyc2VQYXRoLCBtYXRjaFJvdXRlcywgQWN0aW9uLCBpc1JvdXRlRXJyb3JSZXNwb25zZSwgY3JlYXRlTWVtb3J5SGlzdG9yeSwgc3RyaXBCYXNlbmFtZSwgQWJvcnRlZERlZmVycmVkRXJyb3IsIGNyZWF0ZVJvdXRlciB9IGZyb20gJ0ByZW1peC1ydW4vcm91dGVyJztcbmV4cG9ydCB7IEFib3J0ZWREZWZlcnJlZEVycm9yLCBBY3Rpb24gYXMgTmF2aWdhdGlvblR5cGUsIGNyZWF0ZVBhdGgsIGRlZmVyLCBnZW5lcmF0ZVBhdGgsIGlzUm91dGVFcnJvclJlc3BvbnNlLCBqc29uLCBtYXRjaFBhdGgsIG1hdGNoUm91dGVzLCBwYXJzZVBhdGgsIHJlZGlyZWN0LCByZXNvbHZlUGF0aCB9IGZyb20gJ0ByZW1peC1ydW4vcm91dGVyJztcbmltcG9ydCAqIGFzIFJlYWN0IGZyb20gJ3JlYWN0JztcblxuZnVuY3Rpb24gX2V4dGVuZHMoKSB7XG4gIF9leHRlbmRzID0gT2JqZWN0LmFzc2lnbiA/IE9iamVjdC5hc3NpZ24uYmluZCgpIDogZnVuY3Rpb24gKHRhcmdldCkge1xuICAgIGZvciAodmFyIGkgPSAxOyBpIDwgYXJndW1lbnRzLmxlbmd0aDsgaSsrKSB7XG4gICAgICB2YXIgc291cmNlID0gYXJndW1lbnRzW2ldO1xuXG4gICAgICBmb3IgKHZhciBrZXkgaW4gc291cmNlKSB7XG4gICAgICAgIGlmIChPYmplY3QucHJvdG90eXBlLmhhc093blByb3BlcnR5LmNhbGwoc291cmNlLCBrZXkpKSB7XG4gICAgICAgICAgdGFyZ2V0W2tleV0gPSBzb3VyY2Vba2V5XTtcbiAgICAgICAgfVxuICAgICAgfVxuICAgIH1cblxuICAgIHJldHVybiB0YXJnZXQ7XG4gIH07XG4gIHJldHVybiBfZXh0ZW5kcy5hcHBseSh0aGlzLCBhcmd1bWVudHMpO1xufVxuXG4vKipcbiAqIENvcHlyaWdodCAoYykgRmFjZWJvb2ssIEluYy4gYW5kIGl0cyBhZmZpbGlhdGVzLlxuICpcbiAqIFRoaXMgc291cmNlIGNvZGUgaXMgbGljZW5zZWQgdW5kZXIgdGhlIE1JVCBsaWNlbnNlIGZvdW5kIGluIHRoZVxuICogTElDRU5TRSBmaWxlIGluIHRoZSByb290IGRpcmVjdG9yeSBvZiB0aGlzIHNvdXJjZSB0cmVlLlxuICovXG4vKipcbiAqIGlubGluZWQgT2JqZWN0LmlzIHBvbHlmaWxsIHRvIGF2b2lkIHJlcXVpcmluZyBjb25zdW1lcnMgc2hpcCB0aGVpciBvd25cbiAqIGh0dHBzOi8vZGV2ZWxvcGVyLm1vemlsbGEub3JnL2VuLVVTL2RvY3MvV2ViL0phdmFTY3JpcHQvUmVmZXJlbmNlL0dsb2JhbF9PYmplY3RzL09iamVjdC9pc1xuICovXG5cbmZ1bmN0aW9uIGlzUG9seWZpbGwoeCwgeSkge1xuICByZXR1cm4geCA9PT0geSAmJiAoeCAhPT0gMCB8fCAxIC8geCA9PT0gMSAvIHkpIHx8IHggIT09IHggJiYgeSAhPT0geSAvLyBlc2xpbnQtZGlzYWJsZS1saW5lIG5vLXNlbGYtY29tcGFyZVxuICA7XG59XG5cbmNvbnN0IGlzID0gdHlwZW9mIE9iamVjdC5pcyA9PT0gXCJmdW5jdGlvblwiID8gT2JqZWN0LmlzIDogaXNQb2x5ZmlsbDsgLy8gSW50ZW50aW9uYWxseSBub3QgdXNpbmcgbmFtZWQgaW1wb3J0cyBiZWNhdXNlIFJvbGx1cCB1c2VzIGR5bmFtaWNcbi8vIGRpc3BhdGNoIGZvciBDb21tb25KUyBpbnRlcm9wIG5hbWVkIGltcG9ydHMuXG5cbmNvbnN0IHtcbiAgdXNlU3RhdGUsXG4gIHVzZUVmZmVjdCxcbiAgdXNlTGF5b3V0RWZmZWN0LFxuICB1c2VEZWJ1Z1ZhbHVlXG59ID0gUmVhY3Q7XG5sZXQgZGlkV2Fybk9sZDE4QWxwaGEgPSBmYWxzZTtcbmxldCBkaWRXYXJuVW5jYWNoZWRHZXRTbmFwc2hvdCA9IGZhbHNlOyAvLyBEaXNjbGFpbWVyOiBUaGlzIHNoaW0gYnJlYWtzIG1hbnkgb2YgdGhlIHJ1bGVzIG9mIFJlYWN0LCBhbmQgb25seSB3b3Jrc1xuLy8gYmVjYXVzZSBvZiBhIHZlcnkgcGFydGljdWxhciBzZXQgb2YgaW1wbGVtZW50YXRpb24gZGV0YWlscyBhbmQgYXNzdW1wdGlvbnNcbi8vIC0tIGNoYW5nZSBhbnkgb25lIG9mIHRoZW0gYW5kIGl0IHdpbGwgYnJlYWsuIFRoZSBtb3N0IGltcG9ydGFudCBhc3N1bXB0aW9uXG4vLyBpcyB0aGF0IHVwZGF0ZXMgYXJlIGFsd2F5cyBzeW5jaHJvbm91cywgYmVjYXVzZSBjb25jdXJyZW50IHJlbmRlcmluZyBpc1xuLy8gb25seSBhdmFpbGFibGUgaW4gdmVyc2lvbnMgb2YgUmVhY3QgdGhhdCBhbHNvIGhhdmUgYSBidWlsdC1pblxuLy8gdXNlU3luY0V4dGVybmFsU3RvcmUgQVBJLiBBbmQgd2Ugb25seSB1c2UgdGhpcyBzaGltIHdoZW4gdGhlIGJ1aWx0LWluIEFQSVxuLy8gZG9lcyBub3QgZXhpc3QuXG4vL1xuLy8gRG8gbm90IGFzc3VtZSB0aGF0IHRoZSBjbGV2ZXIgaGFja3MgdXNlZCBieSB0aGlzIGhvb2sgYWxzbyB3b3JrIGluIGdlbmVyYWwuXG4vLyBUaGUgcG9pbnQgb2YgdGhpcyBzaGltIGlzIHRvIHJlcGxhY2UgdGhlIG5lZWQgZm9yIGhhY2tzIGJ5IG90aGVyIGxpYnJhcmllcy5cblxuZnVuY3Rpb24gdXNlU3luY0V4dGVybmFsU3RvcmUkMihzdWJzY3JpYmUsIGdldFNuYXBzaG90LCAvLyBOb3RlOiBUaGUgc2hpbSBkb2VzIG5vdCB1c2UgZ2V0U2VydmVyU25hcHNob3QsIGJlY2F1c2UgcHJlLTE4IHZlcnNpb25zIG9mXG4vLyBSZWFjdCBkbyBub3QgZXhwb3NlIGEgd2F5IHRvIGNoZWNrIGlmIHdlJ3JlIGh5ZHJhdGluZy4gU28gdXNlcnMgb2YgdGhlIHNoaW1cbi8vIHdpbGwgbmVlZCB0byB0cmFjayB0aGF0IHRoZW1zZWx2ZXMgYW5kIHJldHVybiB0aGUgY29ycmVjdCB2YWx1ZVxuLy8gZnJvbSBgZ2V0U25hcHNob3RgLlxuZ2V0U2VydmVyU25hcHNob3QpIHtcbiAgaWYgKHByb2Nlc3MuZW52Lk5PREVfRU5WICE9PSBcInByb2R1Y3Rpb25cIikge1xuICAgIGlmICghZGlkV2Fybk9sZDE4QWxwaGEpIHtcbiAgICAgIGlmIChcInN0YXJ0VHJhbnNpdGlvblwiIGluIFJlYWN0KSB7XG4gICAgICAgIGRpZFdhcm5PbGQxOEFscGhhID0gdHJ1ZTtcbiAgICAgICAgY29uc29sZS5lcnJvcihcIllvdSBhcmUgdXNpbmcgYW4gb3V0ZGF0ZWQsIHByZS1yZWxlYXNlIGFscGhhIG9mIFJlYWN0IDE4IHRoYXQgXCIgKyBcImRvZXMgbm90IHN1cHBvcnQgdXNlU3luY0V4dGVybmFsU3RvcmUuIFRoZSBcIiArIFwidXNlLXN5bmMtZXh0ZXJuYWwtc3RvcmUgc2hpbSB3aWxsIG5vdCB3b3JrIGNvcnJlY3RseS4gVXBncmFkZSBcIiArIFwidG8gYSBuZXdlciBwcmUtcmVsZWFzZS5cIik7XG4gICAgICB9XG4gICAgfVxuICB9IC8vIFJlYWQgdGhlIGN1cnJlbnQgc25hcHNob3QgZnJvbSB0aGUgc3RvcmUgb24gZXZlcnkgcmVuZGVyLiBBZ2FpbiwgdGhpc1xuICAvLyBicmVha3MgdGhlIHJ1bGVzIG9mIFJlYWN0LCBhbmQgb25seSB3b3JrcyBoZXJlIGJlY2F1c2Ugb2Ygc3BlY2lmaWNcbiAgLy8gaW1wbGVtZW50YXRpb24gZGV0YWlscywgbW9zdCBpbXBvcnRhbnRseSB0aGF0IHVwZGF0ZXMgYXJlXG4gIC8vIGFsd2F5cyBzeW5jaHJvbm91cy5cblxuXG4gIGNvbnN0IHZhbHVlID0gZ2V0U25hcHNob3QoKTtcblxuICBpZiAocHJvY2Vzcy5lbnYuTk9ERV9FTlYgIT09IFwicHJvZHVjdGlvblwiKSB7XG4gICAgaWYgKCFkaWRXYXJuVW5jYWNoZWRHZXRTbmFwc2hvdCkge1xuICAgICAgY29uc3QgY2FjaGVkVmFsdWUgPSBnZXRTbmFwc2hvdCgpO1xuXG4gICAgICBpZiAoIWlzKHZhbHVlLCBjYWNoZWRWYWx1ZSkpIHtcbiAgICAgICAgY29uc29sZS5lcnJvcihcIlRoZSByZXN1bHQgb2YgZ2V0U25hcHNob3Qgc2hvdWxkIGJlIGNhY2hlZCB0byBhdm9pZCBhbiBpbmZpbml0ZSBsb29wXCIpO1xuICAgICAgICBkaWRXYXJuVW5jYWNoZWRHZXRTbmFwc2hvdCA9IHRydWU7XG4gICAgICB9XG4gICAgfVxuICB9IC8vIEJlY2F1c2UgdXBkYXRlcyBhcmUgc3luY2hyb25vdXMsIHdlIGRvbid0IHF1ZXVlIHRoZW0uIEluc3RlYWQgd2UgZm9yY2UgYVxuICAvLyByZS1yZW5kZXIgd2hlbmV2ZXIgdGhlIHN1YnNjcmliZWQgc3RhdGUgY2hhbmdlcyBieSB1cGRhdGluZyBhbiBzb21lXG4gIC8vIGFyYml0cmFyeSB1c2VTdGF0ZSBob29rLiBUaGVuLCBkdXJpbmcgcmVuZGVyLCB3ZSBjYWxsIGdldFNuYXBzaG90IHRvIHJlYWRcbiAgLy8gdGhlIGN1cnJlbnQgdmFsdWUuXG4gIC8vXG4gIC8vIEJlY2F1c2Ugd2UgZG9uJ3QgYWN0dWFsbHkgdXNlIHRoZSBzdGF0ZSByZXR1cm5lZCBieSB0aGUgdXNlU3RhdGUgaG9vaywgd2VcbiAgLy8gY2FuIHNhdmUgYSBiaXQgb2YgbWVtb3J5IGJ5IHN0b3Jpbmcgb3RoZXIgc3R1ZmYgaW4gdGhhdCBzbG90LlxuICAvL1xuICAvLyBUbyBpbXBsZW1lbnQgdGhlIGVhcmx5IGJhaWxvdXQsIHdlIG5lZWQgdG8gdHJhY2sgc29tZSB0aGluZ3Mgb24gYSBtdXRhYmxlXG4gIC8vIG9iamVjdC4gVXN1YWxseSwgd2Ugd291bGQgcHV0IHRoYXQgaW4gYSB1c2VSZWYgaG9vaywgYnV0IHdlIGNhbiBzdGFzaCBpdCBpblxuICAvLyBvdXIgdXNlU3RhdGUgaG9vayBpbnN0ZWFkLlxuICAvL1xuICAvLyBUbyBmb3JjZSBhIHJlLXJlbmRlciwgd2UgY2FsbCBmb3JjZVVwZGF0ZSh7aW5zdH0pLiBUaGF0IHdvcmtzIGJlY2F1c2UgdGhlXG4gIC8vIG5ldyBvYmplY3QgYWx3YXlzIGZhaWxzIGFuIGVxdWFsaXR5IGNoZWNrLlxuXG5cbiAgY29uc3QgW3tcbiAgICBpbnN0XG4gIH0sIGZvcmNlVXBkYXRlXSA9IHVzZVN0YXRlKHtcbiAgICBpbnN0OiB7XG4gICAgICB2YWx1ZSxcbiAgICAgIGdldFNuYXBzaG90XG4gICAgfVxuICB9KTsgLy8gVHJhY2sgdGhlIGxhdGVzdCBnZXRTbmFwc2hvdCBmdW5jdGlvbiB3aXRoIGEgcmVmLiBUaGlzIG5lZWRzIHRvIGJlIHVwZGF0ZWRcbiAgLy8gaW4gdGhlIGxheW91dCBwaGFzZSBzbyB3ZSBjYW4gYWNjZXNzIGl0IGR1cmluZyB0aGUgdGVhcmluZyBjaGVjayB0aGF0XG4gIC8vIGhhcHBlbnMgb24gc3Vic2NyaWJlLlxuXG4gIHVzZUxheW91dEVmZmVjdCgoKSA9PiB7XG4gICAgaW5zdC52YWx1ZSA9IHZhbHVlO1xuICAgIGluc3QuZ2V0U25hcHNob3QgPSBnZXRTbmFwc2hvdDsgLy8gV2hlbmV2ZXIgZ2V0U25hcHNob3Qgb3Igc3Vic2NyaWJlIGNoYW5nZXMsIHdlIG5lZWQgdG8gY2hlY2sgaW4gdGhlXG4gICAgLy8gY29tbWl0IHBoYXNlIGlmIHRoZXJlIHdhcyBhbiBpbnRlcmxlYXZlZCBtdXRhdGlvbi4gSW4gY29uY3VycmVudCBtb2RlXG4gICAgLy8gdGhpcyBjYW4gaGFwcGVuIGFsbCB0aGUgdGltZSwgYnV0IGV2ZW4gaW4gc3luY2hyb25vdXMgbW9kZSwgYW4gZWFybGllclxuICAgIC8vIGVmZmVjdCBtYXkgaGF2ZSBtdXRhdGVkIHRoZSBzdG9yZS5cblxuICAgIGlmIChjaGVja0lmU25hcHNob3RDaGFuZ2VkKGluc3QpKSB7XG4gICAgICAvLyBGb3JjZSBhIHJlLXJlbmRlci5cbiAgICAgIGZvcmNlVXBkYXRlKHtcbiAgICAgICAgaW5zdFxuICAgICAgfSk7XG4gICAgfSAvLyBlc2xpbnQtZGlzYWJsZS1uZXh0LWxpbmUgcmVhY3QtaG9va3MvZXhoYXVzdGl2ZS1kZXBzXG5cbiAgfSwgW3N1YnNjcmliZSwgdmFsdWUsIGdldFNuYXBzaG90XSk7XG4gIHVzZUVmZmVjdCgoKSA9PiB7XG4gICAgLy8gQ2hlY2sgZm9yIGNoYW5nZXMgcmlnaHQgYmVmb3JlIHN1YnNjcmliaW5nLiBTdWJzZXF1ZW50IGNoYW5nZXMgd2lsbCBiZVxuICAgIC8vIGRldGVjdGVkIGluIHRoZSBzdWJzY3JpcHRpb24gaGFuZGxlci5cbiAgICBpZiAoY2hlY2tJZlNuYXBzaG90Q2hhbmdlZChpbnN0KSkge1xuICAgICAgLy8gRm9yY2UgYSByZS1yZW5kZXIuXG4gICAgICBmb3JjZVVwZGF0ZSh7XG4gICAgICAgIGluc3RcbiAgICAgIH0pO1xuICAgIH1cblxuICAgIGNvbnN0IGhhbmRsZVN0b3JlQ2hhbmdlID0gKCkgPT4ge1xuICAgICAgLy8gVE9ETzogQmVjYXVzZSB0aGVyZSBpcyBubyBjcm9zcy1yZW5kZXJlciBBUEkgZm9yIGJhdGNoaW5nIHVwZGF0ZXMsIGl0J3NcbiAgICAgIC8vIHVwIHRvIHRoZSBjb25zdW1lciBvZiB0aGlzIGxpYnJhcnkgdG8gd3JhcCB0aGVpciBzdWJzY3JpcHRpb24gZXZlbnRcbiAgICAgIC8vIHdpdGggdW5zdGFibGVfYmF0Y2hlZFVwZGF0ZXMuIFNob3VsZCB3ZSB0cnkgdG8gZGV0ZWN0IHdoZW4gdGhpcyBpc24ndFxuICAgICAgLy8gdGhlIGNhc2UgYW5kIHByaW50IGEgd2FybmluZyBpbiBkZXZlbG9wbWVudD9cbiAgICAgIC8vIFRoZSBzdG9yZSBjaGFuZ2VkLiBDaGVjayBpZiB0aGUgc25hcHNob3QgY2hhbmdlZCBzaW5jZSB0aGUgbGFzdCB0aW1lIHdlXG4gICAgICAvLyByZWFkIGZyb20gdGhlIHN0b3JlLlxuICAgICAgaWYgKGNoZWNrSWZTbmFwc2hvdENoYW5nZWQoaW5zdCkpIHtcbiAgICAgICAgLy8gRm9yY2UgYSByZS1yZW5kZXIuXG4gICAgICAgIGZvcmNlVXBkYXRlKHtcbiAgICAgICAgICBpbnN0XG4gICAgICAgIH0pO1xuICAgICAgfVxuICAgIH07IC8vIFN1YnNjcmliZSB0byB0aGUgc3RvcmUgYW5kIHJldHVybiBhIGNsZWFuLXVwIGZ1bmN0aW9uLlxuXG5cbiAgICByZXR1cm4gc3Vic2NyaWJlKGhhbmRsZVN0b3JlQ2hhbmdlKTsgLy8gZXNsaW50LWRpc2FibGUtbmV4dC1saW5lIHJlYWN0LWhvb2tzL2V4aGF1c3RpdmUtZGVwc1xuICB9LCBbc3Vic2NyaWJlXSk7XG4gIHVzZURlYnVnVmFsdWUodmFsdWUpO1xuICByZXR1cm4gdmFsdWU7XG59XG5cbmZ1bmN0aW9uIGNoZWNrSWZTbmFwc2hvdENoYW5nZWQoaW5zdCkge1xuICBjb25zdCBsYXRlc3RHZXRTbmFwc2hvdCA9IGluc3QuZ2V0U25hcHNob3Q7XG4gIGNvbnN0IHByZXZWYWx1ZSA9IGluc3QudmFsdWU7XG5cbiAgdHJ5IHtcbiAgICBjb25zdCBuZXh0VmFsdWUgPSBsYXRlc3RHZXRTbmFwc2hvdCgpO1xuICAgIHJldHVybiAhaXMocHJldlZhbHVlLCBuZXh0VmFsdWUpO1xuICB9IGNhdGNoIChlcnJvcikge1xuICAgIHJldHVybiB0cnVlO1xuICB9XG59XG5cbi8qKlxuICogQ29weXJpZ2h0IChjKSBGYWNlYm9vaywgSW5jLiBhbmQgaXRzIGFmZmlsaWF0ZXMuXG4gKlxuICogVGhpcyBzb3VyY2UgY29kZSBpcyBsaWNlbnNlZCB1bmRlciB0aGUgTUlUIGxpY2Vuc2UgZm91bmQgaW4gdGhlXG4gKiBMSUNFTlNFIGZpbGUgaW4gdGhlIHJvb3QgZGlyZWN0b3J5IG9mIHRoaXMgc291cmNlIHRyZWUuXG4gKlxuICogQGZsb3dcbiAqL1xuZnVuY3Rpb24gdXNlU3luY0V4dGVybmFsU3RvcmUkMShzdWJzY3JpYmUsIGdldFNuYXBzaG90LCBnZXRTZXJ2ZXJTbmFwc2hvdCkge1xuICAvLyBOb3RlOiBUaGUgc2hpbSBkb2VzIG5vdCB1c2UgZ2V0U2VydmVyU25hcHNob3QsIGJlY2F1c2UgcHJlLTE4IHZlcnNpb25zIG9mXG4gIC8vIFJlYWN0IGRvIG5vdCBleHBvc2UgYSB3YXkgdG8gY2hlY2sgaWYgd2UncmUgaHlkcmF0aW5nLiBTbyB1c2VycyBvZiB0aGUgc2hpbVxuICAvLyB3aWxsIG5lZWQgdG8gdHJhY2sgdGhhdCB0aGVtc2VsdmVzIGFuZCByZXR1cm4gdGhlIGNvcnJlY3QgdmFsdWVcbiAgLy8gZnJvbSBgZ2V0U25hcHNob3RgLlxuICByZXR1cm4gZ2V0U25hcHNob3QoKTtcbn1cblxuLyoqXG4gKiBJbmxpbmVkIGludG8gdGhlIHJlYWN0LXJvdXRlciByZXBvIHNpbmNlIHVzZS1zeW5jLWV4dGVybmFsLXN0b3JlIGRvZXMgbm90XG4gKiBwcm92aWRlIGEgVU1ELWNvbXBhdGlibGUgcGFja2FnZSwgc28gd2UgbmVlZCB0aGlzIHRvIGJlIGFibGUgdG8gZGlzdHJpYnV0ZVxuICogVU1EIHJlYWN0LXJvdXRlciBidW5kbGVzXG4gKi9cbmNvbnN0IGNhblVzZURPTSA9ICEhKHR5cGVvZiB3aW5kb3cgIT09IFwidW5kZWZpbmVkXCIgJiYgdHlwZW9mIHdpbmRvdy5kb2N1bWVudCAhPT0gXCJ1bmRlZmluZWRcIiAmJiB0eXBlb2Ygd2luZG93LmRvY3VtZW50LmNyZWF0ZUVsZW1lbnQgIT09IFwidW5kZWZpbmVkXCIpO1xuY29uc3QgaXNTZXJ2ZXJFbnZpcm9ubWVudCA9ICFjYW5Vc2VET007XG5jb25zdCBzaGltID0gaXNTZXJ2ZXJFbnZpcm9ubWVudCA/IHVzZVN5bmNFeHRlcm5hbFN0b3JlJDEgOiB1c2VTeW5jRXh0ZXJuYWxTdG9yZSQyO1xuY29uc3QgdXNlU3luY0V4dGVybmFsU3RvcmUgPSBcInVzZVN5bmNFeHRlcm5hbFN0b3JlXCIgaW4gUmVhY3QgPyAobW9kdWxlID0+IG1vZHVsZS51c2VTeW5jRXh0ZXJuYWxTdG9yZSkoUmVhY3QpIDogc2hpbTtcblxuLy8gQ29udGV4dHMgZm9yIGRhdGEgcm91dGVyc1xuY29uc3QgRGF0YVN0YXRpY1JvdXRlckNvbnRleHQgPSAvKiNfX1BVUkVfXyovUmVhY3QuY3JlYXRlQ29udGV4dChudWxsKTtcblxuaWYgKHByb2Nlc3MuZW52Lk5PREVfRU5WICE9PSBcInByb2R1Y3Rpb25cIikge1xuICBEYXRhU3RhdGljUm91dGVyQ29udGV4dC5kaXNwbGF5TmFtZSA9IFwiRGF0YVN0YXRpY1JvdXRlckNvbnRleHRcIjtcbn1cblxuY29uc3QgRGF0YVJvdXRlckNvbnRleHQgPSAvKiNfX1BVUkVfXyovUmVhY3QuY3JlYXRlQ29udGV4dChudWxsKTtcblxuaWYgKHByb2Nlc3MuZW52Lk5PREVfRU5WICE9PSBcInByb2R1Y3Rpb25cIikge1xuICBEYXRhUm91dGVyQ29udGV4dC5kaXNwbGF5TmFtZSA9IFwiRGF0YVJvdXRlclwiO1xufVxuXG5jb25zdCBEYXRhUm91dGVyU3RhdGVDb250ZXh0ID0gLyojX19QVVJFX18qL1JlYWN0LmNyZWF0ZUNvbnRleHQobnVsbCk7XG5cbmlmIChwcm9jZXNzLmVudi5OT0RFX0VOViAhPT0gXCJwcm9kdWN0aW9uXCIpIHtcbiAgRGF0YVJvdXRlclN0YXRlQ29udGV4dC5kaXNwbGF5TmFtZSA9IFwiRGF0YVJvdXRlclN0YXRlXCI7XG59XG5cbmNvbnN0IEF3YWl0Q29udGV4dCA9IC8qI19fUFVSRV9fKi9SZWFjdC5jcmVhdGVDb250ZXh0KG51bGwpO1xuXG5pZiAocHJvY2Vzcy5lbnYuTk9ERV9FTlYgIT09IFwicHJvZHVjdGlvblwiKSB7XG4gIEF3YWl0Q29udGV4dC5kaXNwbGF5TmFtZSA9IFwiQXdhaXRcIjtcbn1cblxuY29uc3QgTmF2aWdhdGlvbkNvbnRleHQgPSAvKiNfX1BVUkVfXyovUmVhY3QuY3JlYXRlQ29udGV4dChudWxsKTtcblxuaWYgKHByb2Nlc3MuZW52Lk5PREVfRU5WICE9PSBcInByb2R1Y3Rpb25cIikge1xuICBOYXZpZ2F0aW9uQ29udGV4dC5kaXNwbGF5TmFtZSA9IFwiTmF2aWdhdGlvblwiO1xufVxuXG5jb25zdCBMb2NhdGlvbkNvbnRleHQgPSAvKiNfX1BVUkVfXyovUmVhY3QuY3JlYXRlQ29udGV4dChudWxsKTtcblxuaWYgKHByb2Nlc3MuZW52Lk5PREVfRU5WICE9PSBcInByb2R1Y3Rpb25cIikge1xuICBMb2NhdGlvbkNvbnRleHQuZGlzcGxheU5hbWUgPSBcIkxvY2F0aW9uXCI7XG59XG5cbmNvbnN0IFJvdXRlQ29udGV4dCA9IC8qI19fUFVSRV9fKi9SZWFjdC5jcmVhdGVDb250ZXh0KHtcbiAgb3V0bGV0OiBudWxsLFxuICBtYXRjaGVzOiBbXVxufSk7XG5cbmlmIChwcm9jZXNzLmVudi5OT0RFX0VOViAhPT0gXCJwcm9kdWN0aW9uXCIpIHtcbiAgUm91dGVDb250ZXh0LmRpc3BsYXlOYW1lID0gXCJSb3V0ZVwiO1xufVxuXG5jb25zdCBSb3V0ZUVycm9yQ29udGV4dCA9IC8qI19fUFVSRV9fKi9SZWFjdC5jcmVhdGVDb250ZXh0KG51bGwpO1xuXG5pZiAocHJvY2Vzcy5lbnYuTk9ERV9FTlYgIT09IFwicHJvZHVjdGlvblwiKSB7XG4gIFJvdXRlRXJyb3JDb250ZXh0LmRpc3BsYXlOYW1lID0gXCJSb3V0ZUVycm9yXCI7XG59XG5cbi8qKlxuICogUmV0dXJucyB0aGUgZnVsbCBocmVmIGZvciB0aGUgZ2l2ZW4gXCJ0b1wiIHZhbHVlLiBUaGlzIGlzIHVzZWZ1bCBmb3IgYnVpbGRpbmdcbiAqIGN1c3RvbSBsaW5rcyB0aGF0IGFyZSBhbHNvIGFjY2Vzc2libGUgYW5kIHByZXNlcnZlIHJpZ2h0LWNsaWNrIGJlaGF2aW9yLlxuICpcbiAqIEBzZWUgaHR0cHM6Ly9yZWFjdHJvdXRlci5jb20vZG9jcy9lbi92Ni9ob29rcy91c2UtaHJlZlxuICovXG5cbmZ1bmN0aW9uIHVzZUhyZWYodG8sIF90ZW1wKSB7XG4gIGxldCB7XG4gICAgcmVsYXRpdmVcbiAgfSA9IF90ZW1wID09PSB2b2lkIDAgPyB7fSA6IF90ZW1wO1xuICAhdXNlSW5Sb3V0ZXJDb250ZXh0KCkgPyBwcm9jZXNzLmVudi5OT0RFX0VOViAhPT0gXCJwcm9kdWN0aW9uXCIgPyBpbnZhcmlhbnQoZmFsc2UsIC8vIFRPRE86IFRoaXMgZXJyb3IgaXMgcHJvYmFibHkgYmVjYXVzZSB0aGV5IHNvbWVob3cgaGF2ZSAyIHZlcnNpb25zIG9mIHRoZVxuICAvLyByb3V0ZXIgbG9hZGVkLiBXZSBjYW4gaGVscCB0aGVtIHVuZGVyc3RhbmQgaG93IHRvIGF2b2lkIHRoYXQuXG4gIFwidXNlSHJlZigpIG1heSBiZSB1c2VkIG9ubHkgaW4gdGhlIGNvbnRleHQgb2YgYSA8Um91dGVyPiBjb21wb25lbnQuXCIpIDogaW52YXJpYW50KGZhbHNlKSA6IHZvaWQgMDtcbiAgbGV0IHtcbiAgICBiYXNlbmFtZSxcbiAgICBuYXZpZ2F0b3JcbiAgfSA9IFJlYWN0LnVzZUNvbnRleHQoTmF2aWdhdGlvbkNvbnRleHQpO1xuICBsZXQge1xuICAgIGhhc2gsXG4gICAgcGF0aG5hbWUsXG4gICAgc2VhcmNoXG4gIH0gPSB1c2VSZXNvbHZlZFBhdGgodG8sIHtcbiAgICByZWxhdGl2ZVxuICB9KTtcbiAgbGV0IGpvaW5lZFBhdGhuYW1lID0gcGF0aG5hbWU7IC8vIElmIHdlJ3JlIG9wZXJhdGluZyB3aXRoaW4gYSBiYXNlbmFtZSwgcHJlcGVuZCBpdCB0byB0aGUgcGF0aG5hbWUgcHJpb3JcbiAgLy8gdG8gY3JlYXRpbmcgdGhlIGhyZWYuICBJZiB0aGlzIGlzIGEgcm9vdCBuYXZpZ2F0aW9uLCB0aGVuIGp1c3QgdXNlIHRoZSByYXdcbiAgLy8gYmFzZW5hbWUgd2hpY2ggYWxsb3dzIHRoZSBiYXNlbmFtZSB0byBoYXZlIGZ1bGwgY29udHJvbCBvdmVyIHRoZSBwcmVzZW5jZVxuICAvLyBvZiBhIHRyYWlsaW5nIHNsYXNoIG9uIHJvb3QgbGlua3NcblxuICBpZiAoYmFzZW5hbWUgIT09IFwiL1wiKSB7XG4gICAgam9pbmVkUGF0aG5hbWUgPSBwYXRobmFtZSA9PT0gXCIvXCIgPyBiYXNlbmFtZSA6IGpvaW5QYXRocyhbYmFzZW5hbWUsIHBhdGhuYW1lXSk7XG4gIH1cblxuICByZXR1cm4gbmF2aWdhdG9yLmNyZWF0ZUhyZWYoe1xuICAgIHBhdGhuYW1lOiBqb2luZWRQYXRobmFtZSxcbiAgICBzZWFyY2gsXG4gICAgaGFzaFxuICB9KTtcbn1cbi8qKlxuICogUmV0dXJucyB0cnVlIGlmIHRoaXMgY29tcG9uZW50IGlzIGEgZGVzY2VuZGFudCBvZiBhIDxSb3V0ZXI+LlxuICpcbiAqIEBzZWUgaHR0cHM6Ly9yZWFjdHJvdXRlci5jb20vZG9jcy9lbi92Ni9ob29rcy91c2UtaW4tcm91dGVyLWNvbnRleHRcbiAqL1xuXG5mdW5jdGlvbiB1c2VJblJvdXRlckNvbnRleHQoKSB7XG4gIHJldHVybiBSZWFjdC51c2VDb250ZXh0KExvY2F0aW9uQ29udGV4dCkgIT0gbnVsbDtcbn1cbi8qKlxuICogUmV0dXJucyB0aGUgY3VycmVudCBsb2NhdGlvbiBvYmplY3QsIHdoaWNoIHJlcHJlc2VudHMgdGhlIGN1cnJlbnQgVVJMIGluIHdlYlxuICogYnJvd3NlcnMuXG4gKlxuICogTm90ZTogSWYgeW91J3JlIHVzaW5nIHRoaXMgaXQgbWF5IG1lYW4geW91J3JlIGRvaW5nIHNvbWUgb2YgeW91ciBvd25cbiAqIFwicm91dGluZ1wiIGluIHlvdXIgYXBwLCBhbmQgd2UnZCBsaWtlIHRvIGtub3cgd2hhdCB5b3VyIHVzZSBjYXNlIGlzLiBXZSBtYXlcbiAqIGJlIGFibGUgdG8gcHJvdmlkZSBzb21ldGhpbmcgaGlnaGVyLWxldmVsIHRvIGJldHRlciBzdWl0IHlvdXIgbmVlZHMuXG4gKlxuICogQHNlZSBodHRwczovL3JlYWN0cm91dGVyLmNvbS9kb2NzL2VuL3Y2L2hvb2tzL3VzZS1sb2NhdGlvblxuICovXG5cbmZ1bmN0aW9uIHVzZUxvY2F0aW9uKCkge1xuICAhdXNlSW5Sb3V0ZXJDb250ZXh0KCkgPyBwcm9jZXNzLmVudi5OT0RFX0VOViAhPT0gXCJwcm9kdWN0aW9uXCIgPyBpbnZhcmlhbnQoZmFsc2UsIC8vIFRPRE86IFRoaXMgZXJyb3IgaXMgcHJvYmFibHkgYmVjYXVzZSB0aGV5IHNvbWVob3cgaGF2ZSAyIHZlcnNpb25zIG9mIHRoZVxuICAvLyByb3V0ZXIgbG9hZGVkLiBXZSBjYW4gaGVscCB0aGVtIHVuZGVyc3RhbmQgaG93IHRvIGF2b2lkIHRoYXQuXG4gIFwidXNlTG9jYXRpb24oKSBtYXkgYmUgdXNlZCBvbmx5IGluIHRoZSBjb250ZXh0IG9mIGEgPFJvdXRlcj4gY29tcG9uZW50LlwiKSA6IGludmFyaWFudChmYWxzZSkgOiB2b2lkIDA7XG4gIHJldHVybiBSZWFjdC51c2VDb250ZXh0KExvY2F0aW9uQ29udGV4dCkubG9jYXRpb247XG59XG4vKipcbiAqIFJldHVybnMgdGhlIGN1cnJlbnQgbmF2aWdhdGlvbiBhY3Rpb24gd2hpY2ggZGVzY3JpYmVzIGhvdyB0aGUgcm91dGVyIGNhbWUgdG9cbiAqIHRoZSBjdXJyZW50IGxvY2F0aW9uLCBlaXRoZXIgYnkgYSBwb3AsIHB1c2gsIG9yIHJlcGxhY2Ugb24gdGhlIGhpc3Rvcnkgc3RhY2suXG4gKlxuICogQHNlZSBodHRwczovL3JlYWN0cm91dGVyLmNvbS9kb2NzL2VuL3Y2L2hvb2tzL3VzZS1uYXZpZ2F0aW9uLXR5cGVcbiAqL1xuXG5mdW5jdGlvbiB1c2VOYXZpZ2F0aW9uVHlwZSgpIHtcbiAgcmV0dXJuIFJlYWN0LnVzZUNvbnRleHQoTG9jYXRpb25Db250ZXh0KS5uYXZpZ2F0aW9uVHlwZTtcbn1cbi8qKlxuICogUmV0dXJucyB0cnVlIGlmIHRoZSBVUkwgZm9yIHRoZSBnaXZlbiBcInRvXCIgdmFsdWUgbWF0Y2hlcyB0aGUgY3VycmVudCBVUkwuXG4gKiBUaGlzIGlzIHVzZWZ1bCBmb3IgY29tcG9uZW50cyB0aGF0IG5lZWQgdG8ga25vdyBcImFjdGl2ZVwiIHN0YXRlLCBlLmcuXG4gKiA8TmF2TGluaz4uXG4gKlxuICogQHNlZSBodHRwczovL3JlYWN0cm91dGVyLmNvbS9kb2NzL2VuL3Y2L2hvb2tzL3VzZS1tYXRjaFxuICovXG5cbmZ1bmN0aW9uIHVzZU1hdGNoKHBhdHRlcm4pIHtcbiAgIXVzZUluUm91dGVyQ29udGV4dCgpID8gcHJvY2Vzcy5lbnYuTk9ERV9FTlYgIT09IFwicHJvZHVjdGlvblwiID8gaW52YXJpYW50KGZhbHNlLCAvLyBUT0RPOiBUaGlzIGVycm9yIGlzIHByb2JhYmx5IGJlY2F1c2UgdGhleSBzb21laG93IGhhdmUgMiB2ZXJzaW9ucyBvZiB0aGVcbiAgLy8gcm91dGVyIGxvYWRlZC4gV2UgY2FuIGhlbHAgdGhlbSB1bmRlcnN0YW5kIGhvdyB0byBhdm9pZCB0aGF0LlxuICBcInVzZU1hdGNoKCkgbWF5IGJlIHVzZWQgb25seSBpbiB0aGUgY29udGV4dCBvZiBhIDxSb3V0ZXI+IGNvbXBvbmVudC5cIikgOiBpbnZhcmlhbnQoZmFsc2UpIDogdm9pZCAwO1xuICBsZXQge1xuICAgIHBhdGhuYW1lXG4gIH0gPSB1c2VMb2NhdGlvbigpO1xuICByZXR1cm4gUmVhY3QudXNlTWVtbygoKSA9PiBtYXRjaFBhdGgocGF0dGVybiwgcGF0aG5hbWUpLCBbcGF0aG5hbWUsIHBhdHRlcm5dKTtcbn1cbi8qKlxuICogVGhlIGludGVyZmFjZSBmb3IgdGhlIG5hdmlnYXRlKCkgZnVuY3Rpb24gcmV0dXJuZWQgZnJvbSB1c2VOYXZpZ2F0ZSgpLlxuICovXG5cbi8qKlxuICogV2hlbiBwcm9jZXNzaW5nIHJlbGF0aXZlIG5hdmlnYXRpb24gd2Ugd2FudCB0byBpZ25vcmUgYW5jZXN0b3Igcm91dGVzIHRoYXRcbiAqIGRvIG5vdCBjb250cmlidXRlIHRvIHRoZSBwYXRoLCBzdWNoIHRoYXQgaW5kZXgvcGF0aGxlc3MgbGF5b3V0IHJvdXRlcyBkb24ndFxuICogaW50ZXJmZXJlLlxuICpcbiAqIEZvciBleGFtcGxlLCB3aGVuIG1vdmluZyBhIHJvdXRlIGVsZW1lbnQgaW50byBhbiBpbmRleCByb3V0ZSBhbmQvb3IgYVxuICogcGF0aGxlc3MgbGF5b3V0IHJvdXRlLCByZWxhdGl2ZSBsaW5rIGJlaGF2aW9yIGNvbnRhaW5lZCB3aXRoaW4gc2hvdWxkIHN0YXlcbiAqIHRoZSBzYW1lLiAgQm90aCBvZiB0aGUgZm9sbG93aW5nIGV4YW1wbGVzIHNob3VsZCBsaW5rIGJhY2sgdG8gdGhlIHJvb3Q6XG4gKlxuICogICA8Um91dGUgcGF0aD1cIi9cIj5cbiAqICAgICA8Um91dGUgcGF0aD1cImFjY291bnRzXCIgZWxlbWVudD17PExpbmsgdG89XCIuLlwifT5cbiAqICAgPC9Sb3V0ZT5cbiAqXG4gKiAgIDxSb3V0ZSBwYXRoPVwiL1wiPlxuICogICAgIDxSb3V0ZSBwYXRoPVwiYWNjb3VudHNcIj5cbiAqICAgICAgIDxSb3V0ZSBlbGVtZW50PXs8QWNjb3VudHNMYXlvdXQgLz59PiAgICAgICAvLyA8LS0gRG9lcyBub3QgY29udHJpYnV0ZVxuICogICAgICAgICA8Um91dGUgaW5kZXggZWxlbWVudD17PExpbmsgdG89XCIuLlwifSAvPiAgLy8gPC0tIERvZXMgbm90IGNvbnRyaWJ1dGVcbiAqICAgICAgIDwvUm91dGVcbiAqICAgICA8L1JvdXRlPlxuICogICA8L1JvdXRlPlxuICovXG5mdW5jdGlvbiBnZXRQYXRoQ29udHJpYnV0aW5nTWF0Y2hlcyhtYXRjaGVzKSB7XG4gIHJldHVybiBtYXRjaGVzLmZpbHRlcigobWF0Y2gsIGluZGV4KSA9PiBpbmRleCA9PT0gMCB8fCAhbWF0Y2gucm91dGUuaW5kZXggJiYgbWF0Y2gucGF0aG5hbWVCYXNlICE9PSBtYXRjaGVzW2luZGV4IC0gMV0ucGF0aG5hbWVCYXNlKTtcbn1cbi8qKlxuICogUmV0dXJucyBhbiBpbXBlcmF0aXZlIG1ldGhvZCBmb3IgY2hhbmdpbmcgdGhlIGxvY2F0aW9uLiBVc2VkIGJ5IDxMaW5rPnMsIGJ1dFxuICogbWF5IGFsc28gYmUgdXNlZCBieSBvdGhlciBlbGVtZW50cyB0byBjaGFuZ2UgdGhlIGxvY2F0aW9uLlxuICpcbiAqIEBzZWUgaHR0cHM6Ly9yZWFjdHJvdXRlci5jb20vZG9jcy9lbi92Ni9ob29rcy91c2UtbmF2aWdhdGVcbiAqL1xuXG5cbmZ1bmN0aW9uIHVzZU5hdmlnYXRlKCkge1xuICAhdXNlSW5Sb3V0ZXJDb250ZXh0KCkgPyBwcm9jZXNzLmVudi5OT0RFX0VOViAhPT0gXCJwcm9kdWN0aW9uXCIgPyBpbnZhcmlhbnQoZmFsc2UsIC8vIFRPRE86IFRoaXMgZXJyb3IgaXMgcHJvYmFibHkgYmVjYXVzZSB0aGV5IHNvbWVob3cgaGF2ZSAyIHZlcnNpb25zIG9mIHRoZVxuICAvLyByb3V0ZXIgbG9hZGVkLiBXZSBjYW4gaGVscCB0aGVtIHVuZGVyc3RhbmQgaG93IHRvIGF2b2lkIHRoYXQuXG4gIFwidXNlTmF2aWdhdGUoKSBtYXkgYmUgdXNlZCBvbmx5IGluIHRoZSBjb250ZXh0IG9mIGEgPFJvdXRlcj4gY29tcG9uZW50LlwiKSA6IGludmFyaWFudChmYWxzZSkgOiB2b2lkIDA7XG4gIGxldCB7XG4gICAgYmFzZW5hbWUsXG4gICAgbmF2aWdhdG9yXG4gIH0gPSBSZWFjdC51c2VDb250ZXh0KE5hdmlnYXRpb25Db250ZXh0KTtcbiAgbGV0IHtcbiAgICBtYXRjaGVzXG4gIH0gPSBSZWFjdC51c2VDb250ZXh0KFJvdXRlQ29udGV4dCk7XG4gIGxldCB7XG4gICAgcGF0aG5hbWU6IGxvY2F0aW9uUGF0aG5hbWVcbiAgfSA9IHVzZUxvY2F0aW9uKCk7XG4gIGxldCByb3V0ZVBhdGhuYW1lc0pzb24gPSBKU09OLnN0cmluZ2lmeShnZXRQYXRoQ29udHJpYnV0aW5nTWF0Y2hlcyhtYXRjaGVzKS5tYXAobWF0Y2ggPT4gbWF0Y2gucGF0aG5hbWVCYXNlKSk7XG4gIGxldCBhY3RpdmVSZWYgPSBSZWFjdC51c2VSZWYoZmFsc2UpO1xuICBSZWFjdC51c2VFZmZlY3QoKCkgPT4ge1xuICAgIGFjdGl2ZVJlZi5jdXJyZW50ID0gdHJ1ZTtcbiAgfSk7XG4gIGxldCBuYXZpZ2F0ZSA9IFJlYWN0LnVzZUNhbGxiYWNrKGZ1bmN0aW9uICh0bywgb3B0aW9ucykge1xuICAgIGlmIChvcHRpb25zID09PSB2b2lkIDApIHtcbiAgICAgIG9wdGlvbnMgPSB7fTtcbiAgICB9XG5cbiAgICBwcm9jZXNzLmVudi5OT0RFX0VOViAhPT0gXCJwcm9kdWN0aW9uXCIgPyB3YXJuaW5nKGFjdGl2ZVJlZi5jdXJyZW50LCBcIllvdSBzaG91bGQgY2FsbCBuYXZpZ2F0ZSgpIGluIGEgUmVhY3QudXNlRWZmZWN0KCksIG5vdCB3aGVuIFwiICsgXCJ5b3VyIGNvbXBvbmVudCBpcyBmaXJzdCByZW5kZXJlZC5cIikgOiB2b2lkIDA7XG4gICAgaWYgKCFhY3RpdmVSZWYuY3VycmVudCkgcmV0dXJuO1xuXG4gICAgaWYgKHR5cGVvZiB0byA9PT0gXCJudW1iZXJcIikge1xuICAgICAgbmF2aWdhdG9yLmdvKHRvKTtcbiAgICAgIHJldHVybjtcbiAgICB9XG5cbiAgICBsZXQgcGF0aCA9IHJlc29sdmVUbyh0bywgSlNPTi5wYXJzZShyb3V0ZVBhdGhuYW1lc0pzb24pLCBsb2NhdGlvblBhdGhuYW1lLCBvcHRpb25zLnJlbGF0aXZlID09PSBcInBhdGhcIik7IC8vIElmIHdlJ3JlIG9wZXJhdGluZyB3aXRoaW4gYSBiYXNlbmFtZSwgcHJlcGVuZCBpdCB0byB0aGUgcGF0aG5hbWUgcHJpb3JcbiAgICAvLyB0byBoYW5kaW5nIG9mZiB0byBoaXN0b3J5LiAgSWYgdGhpcyBpcyBhIHJvb3QgbmF2aWdhdGlvbiwgdGhlbiB3ZVxuICAgIC8vIG5hdmlnYXRlIHRvIHRoZSByYXcgYmFzZW5hbWUgd2hpY2ggYWxsb3dzIHRoZSBiYXNlbmFtZSB0byBoYXZlIGZ1bGxcbiAgICAvLyBjb250cm9sIG92ZXIgdGhlIHByZXNlbmNlIG9mIGEgdHJhaWxpbmcgc2xhc2ggb24gcm9vdCBsaW5rc1xuXG4gICAgaWYgKGJhc2VuYW1lICE9PSBcIi9cIikge1xuICAgICAgcGF0aC5wYXRobmFtZSA9IHBhdGgucGF0aG5hbWUgPT09IFwiL1wiID8gYmFzZW5hbWUgOiBqb2luUGF0aHMoW2Jhc2VuYW1lLCBwYXRoLnBhdGhuYW1lXSk7XG4gICAgfVxuXG4gICAgKCEhb3B0aW9ucy5yZXBsYWNlID8gbmF2aWdhdG9yLnJlcGxhY2UgOiBuYXZpZ2F0b3IucHVzaCkocGF0aCwgb3B0aW9ucy5zdGF0ZSwgb3B0aW9ucyk7XG4gIH0sIFtiYXNlbmFtZSwgbmF2aWdhdG9yLCByb3V0ZVBhdGhuYW1lc0pzb24sIGxvY2F0aW9uUGF0aG5hbWVdKTtcbiAgcmV0dXJuIG5hdmlnYXRlO1xufVxuY29uc3QgT3V0bGV0Q29udGV4dCA9IC8qI19fUFVSRV9fKi9SZWFjdC5jcmVhdGVDb250ZXh0KG51bGwpO1xuLyoqXG4gKiBSZXR1cm5zIHRoZSBjb250ZXh0IChpZiBwcm92aWRlZCkgZm9yIHRoZSBjaGlsZCByb3V0ZSBhdCB0aGlzIGxldmVsIG9mIHRoZSByb3V0ZVxuICogaGllcmFyY2h5LlxuICogQHNlZSBodHRwczovL3JlYWN0cm91dGVyLmNvbS9kb2NzL2VuL3Y2L2hvb2tzL3VzZS1vdXRsZXQtY29udGV4dFxuICovXG5cbmZ1bmN0aW9uIHVzZU91dGxldENvbnRleHQoKSB7XG4gIHJldHVybiBSZWFjdC51c2VDb250ZXh0KE91dGxldENvbnRleHQpO1xufVxuLyoqXG4gKiBSZXR1cm5zIHRoZSBlbGVtZW50IGZvciB0aGUgY2hpbGQgcm91dGUgYXQgdGhpcyBsZXZlbCBvZiB0aGUgcm91dGVcbiAqIGhpZXJhcmNoeS4gVXNlZCBpbnRlcm5hbGx5IGJ5IDxPdXRsZXQ+IHRvIHJlbmRlciBjaGlsZCByb3V0ZXMuXG4gKlxuICogQHNlZSBodHRwczovL3JlYWN0cm91dGVyLmNvbS9kb2NzL2VuL3Y2L2hvb2tzL3VzZS1vdXRsZXRcbiAqL1xuXG5mdW5jdGlvbiB1c2VPdXRsZXQoY29udGV4dCkge1xuICBsZXQgb3V0bGV0ID0gUmVhY3QudXNlQ29udGV4dChSb3V0ZUNvbnRleHQpLm91dGxldDtcblxuICBpZiAob3V0bGV0KSB7XG4gICAgcmV0dXJuIC8qI19fUFVSRV9fKi9SZWFjdC5jcmVhdGVFbGVtZW50KE91dGxldENvbnRleHQuUHJvdmlkZXIsIHtcbiAgICAgIHZhbHVlOiBjb250ZXh0XG4gICAgfSwgb3V0bGV0KTtcbiAgfVxuXG4gIHJldHVybiBvdXRsZXQ7XG59XG4vKipcbiAqIFJldHVybnMgYW4gb2JqZWN0IG9mIGtleS92YWx1ZSBwYWlycyBvZiB0aGUgZHluYW1pYyBwYXJhbXMgZnJvbSB0aGUgY3VycmVudFxuICogVVJMIHRoYXQgd2VyZSBtYXRjaGVkIGJ5IHRoZSByb3V0ZSBwYXRoLlxuICpcbiAqIEBzZWUgaHR0cHM6Ly9yZWFjdHJvdXRlci5jb20vZG9jcy9lbi92Ni9ob29rcy91c2UtcGFyYW1zXG4gKi9cblxuZnVuY3Rpb24gdXNlUGFyYW1zKCkge1xuICBsZXQge1xuICAgIG1hdGNoZXNcbiAgfSA9IFJlYWN0LnVzZUNvbnRleHQoUm91dGVDb250ZXh0KTtcbiAgbGV0IHJvdXRlTWF0Y2ggPSBtYXRjaGVzW21hdGNoZXMubGVuZ3RoIC0gMV07XG4gIHJldHVybiByb3V0ZU1hdGNoID8gcm91dGVNYXRjaC5wYXJhbXMgOiB7fTtcbn1cbi8qKlxuICogUmVzb2x2ZXMgdGhlIHBhdGhuYW1lIG9mIHRoZSBnaXZlbiBgdG9gIHZhbHVlIGFnYWluc3QgdGhlIGN1cnJlbnQgbG9jYXRpb24uXG4gKlxuICogQHNlZSBodHRwczovL3JlYWN0cm91dGVyLmNvbS9kb2NzL2VuL3Y2L2hvb2tzL3VzZS1yZXNvbHZlZC1wYXRoXG4gKi9cblxuZnVuY3Rpb24gdXNlUmVzb2x2ZWRQYXRoKHRvLCBfdGVtcDIpIHtcbiAgbGV0IHtcbiAgICByZWxhdGl2ZVxuICB9ID0gX3RlbXAyID09PSB2b2lkIDAgPyB7fSA6IF90ZW1wMjtcbiAgbGV0IHtcbiAgICBtYXRjaGVzXG4gIH0gPSBSZWFjdC51c2VDb250ZXh0KFJvdXRlQ29udGV4dCk7XG4gIGxldCB7XG4gICAgcGF0aG5hbWU6IGxvY2F0aW9uUGF0aG5hbWVcbiAgfSA9IHVzZUxvY2F0aW9uKCk7XG4gIGxldCByb3V0ZVBhdGhuYW1lc0pzb24gPSBKU09OLnN0cmluZ2lmeShnZXRQYXRoQ29udHJpYnV0aW5nTWF0Y2hlcyhtYXRjaGVzKS5tYXAobWF0Y2ggPT4gbWF0Y2gucGF0aG5hbWVCYXNlKSk7XG4gIHJldHVybiBSZWFjdC51c2VNZW1vKCgpID0+IHJlc29sdmVUbyh0bywgSlNPTi5wYXJzZShyb3V0ZVBhdGhuYW1lc0pzb24pLCBsb2NhdGlvblBhdGhuYW1lLCByZWxhdGl2ZSA9PT0gXCJwYXRoXCIpLCBbdG8sIHJvdXRlUGF0aG5hbWVzSnNvbiwgbG9jYXRpb25QYXRobmFtZSwgcmVsYXRpdmVdKTtcbn1cbi8qKlxuICogUmV0dXJucyB0aGUgZWxlbWVudCBvZiB0aGUgcm91dGUgdGhhdCBtYXRjaGVkIHRoZSBjdXJyZW50IGxvY2F0aW9uLCBwcmVwYXJlZFxuICogd2l0aCB0aGUgY29ycmVjdCBjb250ZXh0IHRvIHJlbmRlciB0aGUgcmVtYWluZGVyIG9mIHRoZSByb3V0ZSB0cmVlLiBSb3V0ZVxuICogZWxlbWVudHMgaW4gdGhlIHRyZWUgbXVzdCByZW5kZXIgYW4gPE91dGxldD4gdG8gcmVuZGVyIHRoZWlyIGNoaWxkIHJvdXRlJ3NcbiAqIGVsZW1lbnQuXG4gKlxuICogQHNlZSBodHRwczovL3JlYWN0cm91dGVyLmNvbS9kb2NzL2VuL3Y2L2hvb2tzL3VzZS1yb3V0ZXNcbiAqL1xuXG5mdW5jdGlvbiB1c2VSb3V0ZXMocm91dGVzLCBsb2NhdGlvbkFyZykge1xuICAhdXNlSW5Sb3V0ZXJDb250ZXh0KCkgPyBwcm9jZXNzLmVudi5OT0RFX0VOViAhPT0gXCJwcm9kdWN0aW9uXCIgPyBpbnZhcmlhbnQoZmFsc2UsIC8vIFRPRE86IFRoaXMgZXJyb3IgaXMgcHJvYmFibHkgYmVjYXVzZSB0aGV5IHNvbWVob3cgaGF2ZSAyIHZlcnNpb25zIG9mIHRoZVxuICAvLyByb3V0ZXIgbG9hZGVkLiBXZSBjYW4gaGVscCB0aGVtIHVuZGVyc3RhbmQgaG93IHRvIGF2b2lkIHRoYXQuXG4gIFwidXNlUm91dGVzKCkgbWF5IGJlIHVzZWQgb25seSBpbiB0aGUgY29udGV4dCBvZiBhIDxSb3V0ZXI+IGNvbXBvbmVudC5cIikgOiBpbnZhcmlhbnQoZmFsc2UpIDogdm9pZCAwO1xuICBsZXQgZGF0YVJvdXRlclN0YXRlQ29udGV4dCA9IFJlYWN0LnVzZUNvbnRleHQoRGF0YVJvdXRlclN0YXRlQ29udGV4dCk7XG4gIGxldCB7XG4gICAgbWF0Y2hlczogcGFyZW50TWF0Y2hlc1xuICB9ID0gUmVhY3QudXNlQ29udGV4dChSb3V0ZUNvbnRleHQpO1xuICBsZXQgcm91dGVNYXRjaCA9IHBhcmVudE1hdGNoZXNbcGFyZW50TWF0Y2hlcy5sZW5ndGggLSAxXTtcbiAgbGV0IHBhcmVudFBhcmFtcyA9IHJvdXRlTWF0Y2ggPyByb3V0ZU1hdGNoLnBhcmFtcyA6IHt9O1xuICBsZXQgcGFyZW50UGF0aG5hbWUgPSByb3V0ZU1hdGNoID8gcm91dGVNYXRjaC5wYXRobmFtZSA6IFwiL1wiO1xuICBsZXQgcGFyZW50UGF0aG5hbWVCYXNlID0gcm91dGVNYXRjaCA/IHJvdXRlTWF0Y2gucGF0aG5hbWVCYXNlIDogXCIvXCI7XG4gIGxldCBwYXJlbnRSb3V0ZSA9IHJvdXRlTWF0Y2ggJiYgcm91dGVNYXRjaC5yb3V0ZTtcblxuICBpZiAocHJvY2Vzcy5lbnYuTk9ERV9FTlYgIT09IFwicHJvZHVjdGlvblwiKSB7XG4gICAgLy8gWW91IHdvbid0IGdldCBhIHdhcm5pbmcgYWJvdXQgMiBkaWZmZXJlbnQgPFJvdXRlcz4gdW5kZXIgYSA8Um91dGU+XG4gICAgLy8gd2l0aG91dCBhIHRyYWlsaW5nICosIGJ1dCB0aGlzIGlzIGEgYmVzdC1lZmZvcnQgd2FybmluZyBhbnl3YXkgc2luY2Ugd2VcbiAgICAvLyBjYW5ub3QgZXZlbiBnaXZlIHRoZSB3YXJuaW5nIHVubGVzcyB0aGV5IGxhbmQgYXQgdGhlIHBhcmVudCByb3V0ZS5cbiAgICAvL1xuICAgIC8vIEV4YW1wbGU6XG4gICAgLy9cbiAgICAvLyA8Um91dGVzPlxuICAgIC8vICAgey8qIFRoaXMgcm91dGUgcGF0aCBNVVNUIGVuZCB3aXRoIC8qIGJlY2F1c2Ugb3RoZXJ3aXNlXG4gICAgLy8gICAgICAgaXQgd2lsbCBuZXZlciBtYXRjaCAvYmxvZy9wb3N0LzEyMyAqL31cbiAgICAvLyAgIDxSb3V0ZSBwYXRoPVwiYmxvZ1wiIGVsZW1lbnQ9ezxCbG9nIC8+fSAvPlxuICAgIC8vICAgPFJvdXRlIHBhdGg9XCJibG9nL2ZlZWRcIiBlbGVtZW50PXs8QmxvZ0ZlZWQgLz59IC8+XG4gICAgLy8gPC9Sb3V0ZXM+XG4gICAgLy9cbiAgICAvLyBmdW5jdGlvbiBCbG9nKCkge1xuICAgIC8vICAgcmV0dXJuIChcbiAgICAvLyAgICAgPFJvdXRlcz5cbiAgICAvLyAgICAgICA8Um91dGUgcGF0aD1cInBvc3QvOmlkXCIgZWxlbWVudD17PFBvc3QgLz59IC8+XG4gICAgLy8gICAgIDwvUm91dGVzPlxuICAgIC8vICAgKTtcbiAgICAvLyB9XG4gICAgbGV0IHBhcmVudFBhdGggPSBwYXJlbnRSb3V0ZSAmJiBwYXJlbnRSb3V0ZS5wYXRoIHx8IFwiXCI7XG4gICAgd2FybmluZ09uY2UocGFyZW50UGF0aG5hbWUsICFwYXJlbnRSb3V0ZSB8fCBwYXJlbnRQYXRoLmVuZHNXaXRoKFwiKlwiKSwgXCJZb3UgcmVuZGVyZWQgZGVzY2VuZGFudCA8Um91dGVzPiAob3IgY2FsbGVkIGB1c2VSb3V0ZXMoKWApIGF0IFwiICsgKFwiXFxcIlwiICsgcGFyZW50UGF0aG5hbWUgKyBcIlxcXCIgKHVuZGVyIDxSb3V0ZSBwYXRoPVxcXCJcIiArIHBhcmVudFBhdGggKyBcIlxcXCI+KSBidXQgdGhlIFwiKSArIFwicGFyZW50IHJvdXRlIHBhdGggaGFzIG5vIHRyYWlsaW5nIFxcXCIqXFxcIi4gVGhpcyBtZWFucyBpZiB5b3UgbmF2aWdhdGUgXCIgKyBcImRlZXBlciwgdGhlIHBhcmVudCB3b24ndCBtYXRjaCBhbnltb3JlIGFuZCB0aGVyZWZvcmUgdGhlIGNoaWxkIFwiICsgXCJyb3V0ZXMgd2lsbCBuZXZlciByZW5kZXIuXFxuXFxuXCIgKyAoXCJQbGVhc2UgY2hhbmdlIHRoZSBwYXJlbnQgPFJvdXRlIHBhdGg9XFxcIlwiICsgcGFyZW50UGF0aCArIFwiXFxcIj4gdG8gPFJvdXRlIFwiKSArIChcInBhdGg9XFxcIlwiICsgKHBhcmVudFBhdGggPT09IFwiL1wiID8gXCIqXCIgOiBwYXJlbnRQYXRoICsgXCIvKlwiKSArIFwiXFxcIj4uXCIpKTtcbiAgfVxuXG4gIGxldCBsb2NhdGlvbkZyb21Db250ZXh0ID0gdXNlTG9jYXRpb24oKTtcbiAgbGV0IGxvY2F0aW9uO1xuXG4gIGlmIChsb2NhdGlvbkFyZykge1xuICAgIHZhciBfcGFyc2VkTG9jYXRpb25BcmckcGE7XG5cbiAgICBsZXQgcGFyc2VkTG9jYXRpb25BcmcgPSB0eXBlb2YgbG9jYXRpb25BcmcgPT09IFwic3RyaW5nXCIgPyBwYXJzZVBhdGgobG9jYXRpb25BcmcpIDogbG9jYXRpb25Bcmc7XG4gICAgIShwYXJlbnRQYXRobmFtZUJhc2UgPT09IFwiL1wiIHx8ICgoX3BhcnNlZExvY2F0aW9uQXJnJHBhID0gcGFyc2VkTG9jYXRpb25BcmcucGF0aG5hbWUpID09IG51bGwgPyB2b2lkIDAgOiBfcGFyc2VkTG9jYXRpb25BcmckcGEuc3RhcnRzV2l0aChwYXJlbnRQYXRobmFtZUJhc2UpKSkgPyBwcm9jZXNzLmVudi5OT0RFX0VOViAhPT0gXCJwcm9kdWN0aW9uXCIgPyBpbnZhcmlhbnQoZmFsc2UsIFwiV2hlbiBvdmVycmlkaW5nIHRoZSBsb2NhdGlvbiB1c2luZyBgPFJvdXRlcyBsb2NhdGlvbj5gIG9yIGB1c2VSb3V0ZXMocm91dGVzLCBsb2NhdGlvbilgLCBcIiArIFwidGhlIGxvY2F0aW9uIHBhdGhuYW1lIG11c3QgYmVnaW4gd2l0aCB0aGUgcG9ydGlvbiBvZiB0aGUgVVJMIHBhdGhuYW1lIHRoYXQgd2FzIFwiICsgKFwibWF0Y2hlZCBieSBhbGwgcGFyZW50IHJvdXRlcy4gVGhlIGN1cnJlbnQgcGF0aG5hbWUgYmFzZSBpcyBcXFwiXCIgKyBwYXJlbnRQYXRobmFtZUJhc2UgKyBcIlxcXCIgXCIpICsgKFwiYnV0IHBhdGhuYW1lIFxcXCJcIiArIHBhcnNlZExvY2F0aW9uQXJnLnBhdGhuYW1lICsgXCJcXFwiIHdhcyBnaXZlbiBpbiB0aGUgYGxvY2F0aW9uYCBwcm9wLlwiKSkgOiBpbnZhcmlhbnQoZmFsc2UpIDogdm9pZCAwO1xuICAgIGxvY2F0aW9uID0gcGFyc2VkTG9jYXRpb25Bcmc7XG4gIH0gZWxzZSB7XG4gICAgbG9jYXRpb24gPSBsb2NhdGlvbkZyb21Db250ZXh0O1xuICB9XG5cbiAgbGV0IHBhdGhuYW1lID0gbG9jYXRpb24ucGF0aG5hbWUgfHwgXCIvXCI7XG4gIGxldCByZW1haW5pbmdQYXRobmFtZSA9IHBhcmVudFBhdGhuYW1lQmFzZSA9PT0gXCIvXCIgPyBwYXRobmFtZSA6IHBhdGhuYW1lLnNsaWNlKHBhcmVudFBhdGhuYW1lQmFzZS5sZW5ndGgpIHx8IFwiL1wiO1xuICBsZXQgbWF0Y2hlcyA9IG1hdGNoUm91dGVzKHJvdXRlcywge1xuICAgIHBhdGhuYW1lOiByZW1haW5pbmdQYXRobmFtZVxuICB9KTtcblxuICBpZiAocHJvY2Vzcy5lbnYuTk9ERV9FTlYgIT09IFwicHJvZHVjdGlvblwiKSB7XG4gICAgcHJvY2Vzcy5lbnYuTk9ERV9FTlYgIT09IFwicHJvZHVjdGlvblwiID8gd2FybmluZyhwYXJlbnRSb3V0ZSB8fCBtYXRjaGVzICE9IG51bGwsIFwiTm8gcm91dGVzIG1hdGNoZWQgbG9jYXRpb24gXFxcIlwiICsgbG9jYXRpb24ucGF0aG5hbWUgKyBsb2NhdGlvbi5zZWFyY2ggKyBsb2NhdGlvbi5oYXNoICsgXCJcXFwiIFwiKSA6IHZvaWQgMDtcbiAgICBwcm9jZXNzLmVudi5OT0RFX0VOViAhPT0gXCJwcm9kdWN0aW9uXCIgPyB3YXJuaW5nKG1hdGNoZXMgPT0gbnVsbCB8fCBtYXRjaGVzW21hdGNoZXMubGVuZ3RoIC0gMV0ucm91dGUuZWxlbWVudCAhPT0gdW5kZWZpbmVkLCBcIk1hdGNoZWQgbGVhZiByb3V0ZSBhdCBsb2NhdGlvbiBcXFwiXCIgKyBsb2NhdGlvbi5wYXRobmFtZSArIGxvY2F0aW9uLnNlYXJjaCArIGxvY2F0aW9uLmhhc2ggKyBcIlxcXCIgZG9lcyBub3QgaGF2ZSBhbiBlbGVtZW50LiBcIiArIFwiVGhpcyBtZWFucyBpdCB3aWxsIHJlbmRlciBhbiA8T3V0bGV0IC8+IHdpdGggYSBudWxsIHZhbHVlIGJ5IGRlZmF1bHQgcmVzdWx0aW5nIGluIGFuIFxcXCJlbXB0eVxcXCIgcGFnZS5cIikgOiB2b2lkIDA7XG4gIH1cblxuICBsZXQgcmVuZGVyZWRNYXRjaGVzID0gX3JlbmRlck1hdGNoZXMobWF0Y2hlcyAmJiBtYXRjaGVzLm1hcChtYXRjaCA9PiBPYmplY3QuYXNzaWduKHt9LCBtYXRjaCwge1xuICAgIHBhcmFtczogT2JqZWN0LmFzc2lnbih7fSwgcGFyZW50UGFyYW1zLCBtYXRjaC5wYXJhbXMpLFxuICAgIHBhdGhuYW1lOiBqb2luUGF0aHMoW3BhcmVudFBhdGhuYW1lQmFzZSwgbWF0Y2gucGF0aG5hbWVdKSxcbiAgICBwYXRobmFtZUJhc2U6IG1hdGNoLnBhdGhuYW1lQmFzZSA9PT0gXCIvXCIgPyBwYXJlbnRQYXRobmFtZUJhc2UgOiBqb2luUGF0aHMoW3BhcmVudFBhdGhuYW1lQmFzZSwgbWF0Y2gucGF0aG5hbWVCYXNlXSlcbiAgfSkpLCBwYXJlbnRNYXRjaGVzLCBkYXRhUm91dGVyU3RhdGVDb250ZXh0IHx8IHVuZGVmaW5lZCk7IC8vIFdoZW4gYSB1c2VyIHBhc3NlcyBpbiBhIGBsb2NhdGlvbkFyZ2AsIHRoZSBhc3NvY2lhdGVkIHJvdXRlcyBuZWVkIHRvXG4gIC8vIGJlIHdyYXBwZWQgaW4gYSBuZXcgYExvY2F0aW9uQ29udGV4dC5Qcm92aWRlcmAgaW4gb3JkZXIgZm9yIGB1c2VMb2NhdGlvbmBcbiAgLy8gdG8gdXNlIHRoZSBzY29wZWQgbG9jYXRpb24gaW5zdGVhZCBvZiB0aGUgZ2xvYmFsIGxvY2F0aW9uLlxuXG5cbiAgaWYgKGxvY2F0aW9uQXJnKSB7XG4gICAgcmV0dXJuIC8qI19fUFVSRV9fKi9SZWFjdC5jcmVhdGVFbGVtZW50KExvY2F0aW9uQ29udGV4dC5Qcm92aWRlciwge1xuICAgICAgdmFsdWU6IHtcbiAgICAgICAgbG9jYXRpb246IF9leHRlbmRzKHtcbiAgICAgICAgICBwYXRobmFtZTogXCIvXCIsXG4gICAgICAgICAgc2VhcmNoOiBcIlwiLFxuICAgICAgICAgIGhhc2g6IFwiXCIsXG4gICAgICAgICAgc3RhdGU6IG51bGwsXG4gICAgICAgICAga2V5OiBcImRlZmF1bHRcIlxuICAgICAgICB9LCBsb2NhdGlvbiksXG4gICAgICAgIG5hdmlnYXRpb25UeXBlOiBBY3Rpb24uUG9wXG4gICAgICB9XG4gICAgfSwgcmVuZGVyZWRNYXRjaGVzKTtcbiAgfVxuXG4gIHJldHVybiByZW5kZXJlZE1hdGNoZXM7XG59XG5cbmZ1bmN0aW9uIERlZmF1bHRFcnJvckVsZW1lbnQoKSB7XG4gIGxldCBlcnJvciA9IHVzZVJvdXRlRXJyb3IoKTtcbiAgbGV0IG1lc3NhZ2UgPSBpc1JvdXRlRXJyb3JSZXNwb25zZShlcnJvcikgPyBlcnJvci5zdGF0dXMgKyBcIiBcIiArIGVycm9yLnN0YXR1c1RleHQgOiBlcnJvciBpbnN0YW5jZW9mIEVycm9yID8gZXJyb3IubWVzc2FnZSA6IEpTT04uc3RyaW5naWZ5KGVycm9yKTtcbiAgbGV0IHN0YWNrID0gZXJyb3IgaW5zdGFuY2VvZiBFcnJvciA/IGVycm9yLnN0YWNrIDogbnVsbDtcbiAgbGV0IGxpZ2h0Z3JleSA9IFwicmdiYSgyMDAsMjAwLDIwMCwgMC41KVwiO1xuICBsZXQgcHJlU3R5bGVzID0ge1xuICAgIHBhZGRpbmc6IFwiMC41cmVtXCIsXG4gICAgYmFja2dyb3VuZENvbG9yOiBsaWdodGdyZXlcbiAgfTtcbiAgbGV0IGNvZGVTdHlsZXMgPSB7XG4gICAgcGFkZGluZzogXCIycHggNHB4XCIsXG4gICAgYmFja2dyb3VuZENvbG9yOiBsaWdodGdyZXlcbiAgfTtcbiAgcmV0dXJuIC8qI19fUFVSRV9fKi9SZWFjdC5jcmVhdGVFbGVtZW50KFJlYWN0LkZyYWdtZW50LCBudWxsLCAvKiNfX1BVUkVfXyovUmVhY3QuY3JlYXRlRWxlbWVudChcImgyXCIsIG51bGwsIFwiVW5oYW5kbGVkIFRocm93biBFcnJvciFcIiksIC8qI19fUFVSRV9fKi9SZWFjdC5jcmVhdGVFbGVtZW50KFwiaDNcIiwge1xuICAgIHN0eWxlOiB7XG4gICAgICBmb250U3R5bGU6IFwiaXRhbGljXCJcbiAgICB9XG4gIH0sIG1lc3NhZ2UpLCBzdGFjayA/IC8qI19fUFVSRV9fKi9SZWFjdC5jcmVhdGVFbGVtZW50KFwicHJlXCIsIHtcbiAgICBzdHlsZTogcHJlU3R5bGVzXG4gIH0sIHN0YWNrKSA6IG51bGwsIC8qI19fUFVSRV9fKi9SZWFjdC5jcmVhdGVFbGVtZW50KFwicFwiLCBudWxsLCBcIlxcdUQ4M0RcXHVEQ0JGIEhleSBkZXZlbG9wZXIgXFx1RDgzRFxcdURDNEJcIiksIC8qI19fUFVSRV9fKi9SZWFjdC5jcmVhdGVFbGVtZW50KFwicFwiLCBudWxsLCBcIllvdSBjYW4gcHJvdmlkZSBhIHdheSBiZXR0ZXIgVVggdGhhbiB0aGlzIHdoZW4geW91ciBhcHAgdGhyb3dzIGVycm9ycyBieSBwcm92aWRpbmcgeW91ciBvd25cXHhBMFwiLCAvKiNfX1BVUkVfXyovUmVhY3QuY3JlYXRlRWxlbWVudChcImNvZGVcIiwge1xuICAgIHN0eWxlOiBjb2RlU3R5bGVzXG4gIH0sIFwiZXJyb3JFbGVtZW50XCIpLCBcIiBwcm9wcyBvblxceEEwXCIsIC8qI19fUFVSRV9fKi9SZWFjdC5jcmVhdGVFbGVtZW50KFwiY29kZVwiLCB7XG4gICAgc3R5bGU6IGNvZGVTdHlsZXNcbiAgfSwgXCI8Um91dGU+XCIpKSk7XG59XG5cbmNsYXNzIFJlbmRlckVycm9yQm91bmRhcnkgZXh0ZW5kcyBSZWFjdC5Db21wb25lbnQge1xuICBjb25zdHJ1Y3Rvcihwcm9wcykge1xuICAgIHN1cGVyKHByb3BzKTtcbiAgICB0aGlzLnN0YXRlID0ge1xuICAgICAgbG9jYXRpb246IHByb3BzLmxvY2F0aW9uLFxuICAgICAgZXJyb3I6IHByb3BzLmVycm9yXG4gICAgfTtcbiAgfVxuXG4gIHN0YXRpYyBnZXREZXJpdmVkU3RhdGVGcm9tRXJyb3IoZXJyb3IpIHtcbiAgICByZXR1cm4ge1xuICAgICAgZXJyb3I6IGVycm9yXG4gICAgfTtcbiAgfVxuXG4gIHN0YXRpYyBnZXREZXJpdmVkU3RhdGVGcm9tUHJvcHMocHJvcHMsIHN0YXRlKSB7XG4gICAgLy8gV2hlbiB3ZSBnZXQgaW50byBhbiBlcnJvciBzdGF0ZSwgdGhlIHVzZXIgd2lsbCBsaWtlbHkgY2xpY2sgXCJiYWNrXCIgdG8gdGhlXG4gICAgLy8gcHJldmlvdXMgcGFnZSB0aGF0IGRpZG4ndCBoYXZlIGFuIGVycm9yLiBCZWNhdXNlIHRoaXMgd3JhcHMgdGhlIGVudGlyZVxuICAgIC8vIGFwcGxpY2F0aW9uLCB0aGF0IHdpbGwgaGF2ZSBubyBlZmZlY3QtLXRoZSBlcnJvciBwYWdlIGNvbnRpbnVlcyB0byBkaXNwbGF5LlxuICAgIC8vIFRoaXMgZ2l2ZXMgdXMgYSBtZWNoYW5pc20gdG8gcmVjb3ZlciBmcm9tIHRoZSBlcnJvciB3aGVuIHRoZSBsb2NhdGlvbiBjaGFuZ2VzLlxuICAgIC8vXG4gICAgLy8gV2hldGhlciB3ZSdyZSBpbiBhbiBlcnJvciBzdGF0ZSBvciBub3QsIHdlIHVwZGF0ZSB0aGUgbG9jYXRpb24gaW4gc3RhdGVcbiAgICAvLyBzbyB0aGF0IHdoZW4gd2UgYXJlIGluIGFuIGVycm9yIHN0YXRlLCBpdCBnZXRzIHJlc2V0IHdoZW4gYSBuZXcgbG9jYXRpb25cbiAgICAvLyBjb21lcyBpbiBhbmQgdGhlIHVzZXIgcmVjb3ZlcnMgZnJvbSB0aGUgZXJyb3IuXG4gICAgaWYgKHN0YXRlLmxvY2F0aW9uICE9PSBwcm9wcy5sb2NhdGlvbikge1xuICAgICAgcmV0dXJuIHtcbiAgICAgICAgZXJyb3I6IHByb3BzLmVycm9yLFxuICAgICAgICBsb2NhdGlvbjogcHJvcHMubG9jYXRpb25cbiAgICAgIH07XG4gICAgfSAvLyBJZiB3ZSdyZSBub3QgY2hhbmdpbmcgbG9jYXRpb25zLCBwcmVzZXJ2ZSB0aGUgbG9jYXRpb24gYnV0IHN0aWxsIHN1cmZhY2VcbiAgICAvLyBhbnkgbmV3IGVycm9ycyB0aGF0IG1heSBjb21lIHRocm91Z2guIFdlIHJldGFpbiB0aGUgZXhpc3RpbmcgZXJyb3IsIHdlIGRvXG4gICAgLy8gdGhpcyBiZWNhdXNlIHRoZSBlcnJvciBwcm92aWRlZCBmcm9tIHRoZSBhcHAgc3RhdGUgbWF5IGJlIGNsZWFyZWQgd2l0aG91dFxuICAgIC8vIHRoZSBsb2NhdGlvbiBjaGFuZ2luZy5cblxuXG4gICAgcmV0dXJuIHtcbiAgICAgIGVycm9yOiBwcm9wcy5lcnJvciB8fCBzdGF0ZS5lcnJvcixcbiAgICAgIGxvY2F0aW9uOiBzdGF0ZS5sb2NhdGlvblxuICAgIH07XG4gIH1cblxuICBjb21wb25lbnREaWRDYXRjaChlcnJvciwgZXJyb3JJbmZvKSB7XG4gICAgY29uc29sZS5lcnJvcihcIlJlYWN0IFJvdXRlciBjYXVnaHQgdGhlIGZvbGxvd2luZyBlcnJvciBkdXJpbmcgcmVuZGVyXCIsIGVycm9yLCBlcnJvckluZm8pO1xuICB9XG5cbiAgcmVuZGVyKCkge1xuICAgIHJldHVybiB0aGlzLnN0YXRlLmVycm9yID8gLyojX19QVVJFX18qL1JlYWN0LmNyZWF0ZUVsZW1lbnQoUm91dGVFcnJvckNvbnRleHQuUHJvdmlkZXIsIHtcbiAgICAgIHZhbHVlOiB0aGlzLnN0YXRlLmVycm9yLFxuICAgICAgY2hpbGRyZW46IHRoaXMucHJvcHMuY29tcG9uZW50XG4gICAgfSkgOiB0aGlzLnByb3BzLmNoaWxkcmVuO1xuICB9XG5cbn1cblxuZnVuY3Rpb24gUmVuZGVyZWRSb3V0ZShfcmVmKSB7XG4gIGxldCB7XG4gICAgcm91dGVDb250ZXh0LFxuICAgIG1hdGNoLFxuICAgIGNoaWxkcmVuXG4gIH0gPSBfcmVmO1xuICBsZXQgZGF0YVN0YXRpY1JvdXRlckNvbnRleHQgPSBSZWFjdC51c2VDb250ZXh0KERhdGFTdGF0aWNSb3V0ZXJDb250ZXh0KTsgLy8gVHJhY2sgaG93IGRlZXAgd2UgZ290IGluIG91ciByZW5kZXIgcGFzcyB0byBlbXVsYXRlIFNTUiBjb21wb25lbnREaWRDYXRjaFxuICAvLyBpbiBhIERhdGFTdGF0aWNSb3V0ZXJcblxuICBpZiAoZGF0YVN0YXRpY1JvdXRlckNvbnRleHQgJiYgbWF0Y2gucm91dGUuZXJyb3JFbGVtZW50KSB7XG4gICAgZGF0YVN0YXRpY1JvdXRlckNvbnRleHQuX2RlZXBlc3RSZW5kZXJlZEJvdW5kYXJ5SWQgPSBtYXRjaC5yb3V0ZS5pZDtcbiAgfVxuXG4gIHJldHVybiAvKiNfX1BVUkVfXyovUmVhY3QuY3JlYXRlRWxlbWVudChSb3V0ZUNvbnRleHQuUHJvdmlkZXIsIHtcbiAgICB2YWx1ZTogcm91dGVDb250ZXh0XG4gIH0sIGNoaWxkcmVuKTtcbn1cblxuZnVuY3Rpb24gX3JlbmRlck1hdGNoZXMobWF0Y2hlcywgcGFyZW50TWF0Y2hlcywgZGF0YVJvdXRlclN0YXRlKSB7XG4gIGlmIChwYXJlbnRNYXRjaGVzID09PSB2b2lkIDApIHtcbiAgICBwYXJlbnRNYXRjaGVzID0gW107XG4gIH1cblxuICBpZiAobWF0Y2hlcyA9PSBudWxsKSB7XG4gICAgaWYgKGRhdGFSb3V0ZXJTdGF0ZSAhPSBudWxsICYmIGRhdGFSb3V0ZXJTdGF0ZS5lcnJvcnMpIHtcbiAgICAgIC8vIERvbid0IGJhaWwgaWYgd2UgaGF2ZSBkYXRhIHJvdXRlciBlcnJvcnMgc28gd2UgY2FuIHJlbmRlciB0aGVtIGluIHRoZVxuICAgICAgLy8gYm91bmRhcnkuICBVc2UgdGhlIHByZS1tYXRjaGVkIChvciBzaGltbWVkKSBtYXRjaGVzXG4gICAgICBtYXRjaGVzID0gZGF0YVJvdXRlclN0YXRlLm1hdGNoZXM7XG4gICAgfSBlbHNlIHtcbiAgICAgIHJldHVybiBudWxsO1xuICAgIH1cbiAgfVxuXG4gIGxldCByZW5kZXJlZE1hdGNoZXMgPSBtYXRjaGVzOyAvLyBJZiB3ZSBoYXZlIGRhdGEgZXJyb3JzLCB0cmltIG1hdGNoZXMgdG8gdGhlIGhpZ2hlc3QgZXJyb3IgYm91bmRhcnlcblxuICBsZXQgZXJyb3JzID0gZGF0YVJvdXRlclN0YXRlID09IG51bGwgPyB2b2lkIDAgOiBkYXRhUm91dGVyU3RhdGUuZXJyb3JzO1xuXG4gIGlmIChlcnJvcnMgIT0gbnVsbCkge1xuICAgIGxldCBlcnJvckluZGV4ID0gcmVuZGVyZWRNYXRjaGVzLmZpbmRJbmRleChtID0+IG0ucm91dGUuaWQgJiYgKGVycm9ycyA9PSBudWxsID8gdm9pZCAwIDogZXJyb3JzW20ucm91dGUuaWRdKSk7XG4gICAgIShlcnJvckluZGV4ID49IDApID8gcHJvY2Vzcy5lbnYuTk9ERV9FTlYgIT09IFwicHJvZHVjdGlvblwiID8gaW52YXJpYW50KGZhbHNlLCBcIkNvdWxkIG5vdCBmaW5kIGEgbWF0Y2hpbmcgcm91dGUgZm9yIHRoZSBjdXJyZW50IGVycm9yczogXCIgKyBlcnJvcnMpIDogaW52YXJpYW50KGZhbHNlKSA6IHZvaWQgMDtcbiAgICByZW5kZXJlZE1hdGNoZXMgPSByZW5kZXJlZE1hdGNoZXMuc2xpY2UoMCwgTWF0aC5taW4ocmVuZGVyZWRNYXRjaGVzLmxlbmd0aCwgZXJyb3JJbmRleCArIDEpKTtcbiAgfVxuXG4gIHJldHVybiByZW5kZXJlZE1hdGNoZXMucmVkdWNlUmlnaHQoKG91dGxldCwgbWF0Y2gsIGluZGV4KSA9PiB7XG4gICAgbGV0IGVycm9yID0gbWF0Y2gucm91dGUuaWQgPyBlcnJvcnMgPT0gbnVsbCA/IHZvaWQgMCA6IGVycm9yc1ttYXRjaC5yb3V0ZS5pZF0gOiBudWxsOyAvLyBPbmx5IGRhdGEgcm91dGVycyBoYW5kbGUgZXJyb3JzXG5cbiAgICBsZXQgZXJyb3JFbGVtZW50ID0gZGF0YVJvdXRlclN0YXRlID8gbWF0Y2gucm91dGUuZXJyb3JFbGVtZW50IHx8IC8qI19fUFVSRV9fKi9SZWFjdC5jcmVhdGVFbGVtZW50KERlZmF1bHRFcnJvckVsZW1lbnQsIG51bGwpIDogbnVsbDtcblxuICAgIGxldCBnZXRDaGlsZHJlbiA9ICgpID0+IC8qI19fUFVSRV9fKi9SZWFjdC5jcmVhdGVFbGVtZW50KFJlbmRlcmVkUm91dGUsIHtcbiAgICAgIG1hdGNoOiBtYXRjaCxcbiAgICAgIHJvdXRlQ29udGV4dDoge1xuICAgICAgICBvdXRsZXQsXG4gICAgICAgIG1hdGNoZXM6IHBhcmVudE1hdGNoZXMuY29uY2F0KHJlbmRlcmVkTWF0Y2hlcy5zbGljZSgwLCBpbmRleCArIDEpKVxuICAgICAgfVxuICAgIH0sIGVycm9yID8gZXJyb3JFbGVtZW50IDogbWF0Y2gucm91dGUuZWxlbWVudCAhPT0gdW5kZWZpbmVkID8gbWF0Y2gucm91dGUuZWxlbWVudCA6IG91dGxldCk7IC8vIE9ubHkgd3JhcCBpbiBhbiBlcnJvciBib3VuZGFyeSB3aXRoaW4gZGF0YSByb3V0ZXIgdXNhZ2VzIHdoZW4gd2UgaGF2ZSBhblxuICAgIC8vIGVycm9yRWxlbWVudCBvbiB0aGlzIHJvdXRlLiAgT3RoZXJ3aXNlIGxldCBpdCBidWJibGUgdXAgdG8gYW4gYW5jZXN0b3JcbiAgICAvLyBlcnJvckVsZW1lbnRcblxuXG4gICAgcmV0dXJuIGRhdGFSb3V0ZXJTdGF0ZSAmJiAobWF0Y2gucm91dGUuZXJyb3JFbGVtZW50IHx8IGluZGV4ID09PSAwKSA/IC8qI19fUFVSRV9fKi9SZWFjdC5jcmVhdGVFbGVtZW50KFJlbmRlckVycm9yQm91bmRhcnksIHtcbiAgICAgIGxvY2F0aW9uOiBkYXRhUm91dGVyU3RhdGUubG9jYXRpb24sXG4gICAgICBjb21wb25lbnQ6IGVycm9yRWxlbWVudCxcbiAgICAgIGVycm9yOiBlcnJvcixcbiAgICAgIGNoaWxkcmVuOiBnZXRDaGlsZHJlbigpXG4gICAgfSkgOiBnZXRDaGlsZHJlbigpO1xuICB9LCBudWxsKTtcbn1cbnZhciBEYXRhUm91dGVySG9vaztcblxuKGZ1bmN0aW9uIChEYXRhUm91dGVySG9vaykge1xuICBEYXRhUm91dGVySG9va1tcIlVzZVJldmFsaWRhdG9yXCJdID0gXCJ1c2VSZXZhbGlkYXRvclwiO1xufSkoRGF0YVJvdXRlckhvb2sgfHwgKERhdGFSb3V0ZXJIb29rID0ge30pKTtcblxudmFyIERhdGFSb3V0ZXJTdGF0ZUhvb2s7XG5cbihmdW5jdGlvbiAoRGF0YVJvdXRlclN0YXRlSG9vaykge1xuICBEYXRhUm91dGVyU3RhdGVIb29rW1wiVXNlTG9hZGVyRGF0YVwiXSA9IFwidXNlTG9hZGVyRGF0YVwiO1xuICBEYXRhUm91dGVyU3RhdGVIb29rW1wiVXNlQWN0aW9uRGF0YVwiXSA9IFwidXNlQWN0aW9uRGF0YVwiO1xuICBEYXRhUm91dGVyU3RhdGVIb29rW1wiVXNlUm91dGVFcnJvclwiXSA9IFwidXNlUm91dGVFcnJvclwiO1xuICBEYXRhUm91dGVyU3RhdGVIb29rW1wiVXNlTmF2aWdhdGlvblwiXSA9IFwidXNlTmF2aWdhdGlvblwiO1xuICBEYXRhUm91dGVyU3RhdGVIb29rW1wiVXNlUm91dGVMb2FkZXJEYXRhXCJdID0gXCJ1c2VSb3V0ZUxvYWRlckRhdGFcIjtcbiAgRGF0YVJvdXRlclN0YXRlSG9va1tcIlVzZU1hdGNoZXNcIl0gPSBcInVzZU1hdGNoZXNcIjtcbiAgRGF0YVJvdXRlclN0YXRlSG9va1tcIlVzZVJldmFsaWRhdG9yXCJdID0gXCJ1c2VSZXZhbGlkYXRvclwiO1xufSkoRGF0YVJvdXRlclN0YXRlSG9vayB8fCAoRGF0YVJvdXRlclN0YXRlSG9vayA9IHt9KSk7XG5cbmZ1bmN0aW9uIGdldERhdGFSb3V0ZXJDb25zb2xlRXJyb3IoaG9va05hbWUpIHtcbiAgcmV0dXJuIGhvb2tOYW1lICsgXCIgbXVzdCBiZSB1c2VkIHdpdGhpbiBhIGRhdGEgcm91dGVyLiAgU2VlIGh0dHBzOi8vcmVhY3Ryb3V0ZXIuY29tL2VuL21haW4vcm91dGVycy9waWNraW5nLWEtcm91dGVyLlwiO1xufVxuXG5mdW5jdGlvbiB1c2VEYXRhUm91dGVyQ29udGV4dChob29rTmFtZSkge1xuICBsZXQgY3R4ID0gUmVhY3QudXNlQ29udGV4dChEYXRhUm91dGVyQ29udGV4dCk7XG4gICFjdHggPyBwcm9jZXNzLmVudi5OT0RFX0VOViAhPT0gXCJwcm9kdWN0aW9uXCIgPyBpbnZhcmlhbnQoZmFsc2UsIGdldERhdGFSb3V0ZXJDb25zb2xlRXJyb3IoaG9va05hbWUpKSA6IGludmFyaWFudChmYWxzZSkgOiB2b2lkIDA7XG4gIHJldHVybiBjdHg7XG59XG5cbmZ1bmN0aW9uIHVzZURhdGFSb3V0ZXJTdGF0ZShob29rTmFtZSkge1xuICBsZXQgc3RhdGUgPSBSZWFjdC51c2VDb250ZXh0KERhdGFSb3V0ZXJTdGF0ZUNvbnRleHQpO1xuICAhc3RhdGUgPyBwcm9jZXNzLmVudi5OT0RFX0VOViAhPT0gXCJwcm9kdWN0aW9uXCIgPyBpbnZhcmlhbnQoZmFsc2UsIGdldERhdGFSb3V0ZXJDb25zb2xlRXJyb3IoaG9va05hbWUpKSA6IGludmFyaWFudChmYWxzZSkgOiB2b2lkIDA7XG4gIHJldHVybiBzdGF0ZTtcbn1cbi8qKlxuICogUmV0dXJucyB0aGUgY3VycmVudCBuYXZpZ2F0aW9uLCBkZWZhdWx0aW5nIHRvIGFuIFwiaWRsZVwiIG5hdmlnYXRpb24gd2hlblxuICogbm8gbmF2aWdhdGlvbiBpcyBpbiBwcm9ncmVzc1xuICovXG5cblxuZnVuY3Rpb24gdXNlTmF2aWdhdGlvbigpIHtcbiAgbGV0IHN0YXRlID0gdXNlRGF0YVJvdXRlclN0YXRlKERhdGFSb3V0ZXJTdGF0ZUhvb2suVXNlTmF2aWdhdGlvbik7XG4gIHJldHVybiBzdGF0ZS5uYXZpZ2F0aW9uO1xufVxuLyoqXG4gKiBSZXR1cm5zIGEgcmV2YWxpZGF0ZSBmdW5jdGlvbiBmb3IgbWFudWFsbHkgdHJpZ2dlcmluZyByZXZhbGlkYXRpb24sIGFzIHdlbGxcbiAqIGFzIHRoZSBjdXJyZW50IHN0YXRlIG9mIGFueSBtYW51YWwgcmV2YWxpZGF0aW9uc1xuICovXG5cbmZ1bmN0aW9uIHVzZVJldmFsaWRhdG9yKCkge1xuICBsZXQgZGF0YVJvdXRlckNvbnRleHQgPSB1c2VEYXRhUm91dGVyQ29udGV4dChEYXRhUm91dGVySG9vay5Vc2VSZXZhbGlkYXRvcik7XG4gIGxldCBzdGF0ZSA9IHVzZURhdGFSb3V0ZXJTdGF0ZShEYXRhUm91dGVyU3RhdGVIb29rLlVzZVJldmFsaWRhdG9yKTtcbiAgcmV0dXJuIHtcbiAgICByZXZhbGlkYXRlOiBkYXRhUm91dGVyQ29udGV4dC5yb3V0ZXIucmV2YWxpZGF0ZSxcbiAgICBzdGF0ZTogc3RhdGUucmV2YWxpZGF0aW9uXG4gIH07XG59XG4vKipcbiAqIFJldHVybnMgdGhlIGFjdGl2ZSByb3V0ZSBtYXRjaGVzLCB1c2VmdWwgZm9yIGFjY2Vzc2luZyBsb2FkZXJEYXRhIGZvclxuICogcGFyZW50L2NoaWxkIHJvdXRlcyBvciB0aGUgcm91dGUgXCJoYW5kbGVcIiBwcm9wZXJ0eVxuICovXG5cbmZ1bmN0aW9uIHVzZU1hdGNoZXMoKSB7XG4gIGxldCB7XG4gICAgbWF0Y2hlcyxcbiAgICBsb2FkZXJEYXRhXG4gIH0gPSB1c2VEYXRhUm91dGVyU3RhdGUoRGF0YVJvdXRlclN0YXRlSG9vay5Vc2VNYXRjaGVzKTtcbiAgcmV0dXJuIFJlYWN0LnVzZU1lbW8oKCkgPT4gbWF0Y2hlcy5tYXAobWF0Y2ggPT4ge1xuICAgIGxldCB7XG4gICAgICBwYXRobmFtZSxcbiAgICAgIHBhcmFtc1xuICAgIH0gPSBtYXRjaDsgLy8gTm90ZTogVGhpcyBzdHJ1Y3R1cmUgbWF0Y2hlcyB0aGF0IGNyZWF0ZWQgYnkgY3JlYXRlVXNlTWF0Y2hlc01hdGNoXG4gICAgLy8gaW4gdGhlIEByZW1peC1ydW4vcm91dGVyICwgc28gaWYgeW91IGNoYW5nZSB0aGlzIHBsZWFzZSBhbHNvIGNoYW5nZVxuICAgIC8vIHRoYXQgOikgIEV2ZW50dWFsbHkgd2UnbGwgRFJZIHRoaXMgdXBcblxuICAgIHJldHVybiB7XG4gICAgICBpZDogbWF0Y2gucm91dGUuaWQsXG4gICAgICBwYXRobmFtZSxcbiAgICAgIHBhcmFtcyxcbiAgICAgIGRhdGE6IGxvYWRlckRhdGFbbWF0Y2gucm91dGUuaWRdLFxuICAgICAgaGFuZGxlOiBtYXRjaC5yb3V0ZS5oYW5kbGVcbiAgICB9O1xuICB9KSwgW21hdGNoZXMsIGxvYWRlckRhdGFdKTtcbn1cbi8qKlxuICogUmV0dXJucyB0aGUgbG9hZGVyIGRhdGEgZm9yIHRoZSBuZWFyZXN0IGFuY2VzdG9yIFJvdXRlIGxvYWRlclxuICovXG5cbmZ1bmN0aW9uIHVzZUxvYWRlckRhdGEoKSB7XG4gIGxldCBzdGF0ZSA9IHVzZURhdGFSb3V0ZXJTdGF0ZShEYXRhUm91dGVyU3RhdGVIb29rLlVzZUxvYWRlckRhdGEpO1xuICBsZXQgcm91dGUgPSBSZWFjdC51c2VDb250ZXh0KFJvdXRlQ29udGV4dCk7XG4gICFyb3V0ZSA/IHByb2Nlc3MuZW52Lk5PREVfRU5WICE9PSBcInByb2R1Y3Rpb25cIiA/IGludmFyaWFudChmYWxzZSwgXCJ1c2VMb2FkZXJEYXRhIG11c3QgYmUgdXNlZCBpbnNpZGUgYSBSb3V0ZUNvbnRleHRcIikgOiBpbnZhcmlhbnQoZmFsc2UpIDogdm9pZCAwO1xuICBsZXQgdGhpc1JvdXRlID0gcm91dGUubWF0Y2hlc1tyb3V0ZS5tYXRjaGVzLmxlbmd0aCAtIDFdO1xuICAhdGhpc1JvdXRlLnJvdXRlLmlkID8gcHJvY2Vzcy5lbnYuTk9ERV9FTlYgIT09IFwicHJvZHVjdGlvblwiID8gaW52YXJpYW50KGZhbHNlLCBcInVzZUxvYWRlckRhdGEgY2FuIG9ubHkgYmUgdXNlZCBvbiByb3V0ZXMgdGhhdCBjb250YWluIGEgdW5pcXVlIFxcXCJpZFxcXCJcIikgOiBpbnZhcmlhbnQoZmFsc2UpIDogdm9pZCAwO1xuICByZXR1cm4gc3RhdGUubG9hZGVyRGF0YVt0aGlzUm91dGUucm91dGUuaWRdO1xufVxuLyoqXG4gKiBSZXR1cm5zIHRoZSBsb2FkZXJEYXRhIGZvciB0aGUgZ2l2ZW4gcm91dGVJZFxuICovXG5cbmZ1bmN0aW9uIHVzZVJvdXRlTG9hZGVyRGF0YShyb3V0ZUlkKSB7XG4gIGxldCBzdGF0ZSA9IHVzZURhdGFSb3V0ZXJTdGF0ZShEYXRhUm91dGVyU3RhdGVIb29rLlVzZVJvdXRlTG9hZGVyRGF0YSk7XG4gIHJldHVybiBzdGF0ZS5sb2FkZXJEYXRhW3JvdXRlSWRdO1xufVxuLyoqXG4gKiBSZXR1cm5zIHRoZSBhY3Rpb24gZGF0YSBmb3IgdGhlIG5lYXJlc3QgYW5jZXN0b3IgUm91dGUgYWN0aW9uXG4gKi9cblxuZnVuY3Rpb24gdXNlQWN0aW9uRGF0YSgpIHtcbiAgbGV0IHN0YXRlID0gdXNlRGF0YVJvdXRlclN0YXRlKERhdGFSb3V0ZXJTdGF0ZUhvb2suVXNlQWN0aW9uRGF0YSk7XG4gIGxldCByb3V0ZSA9IFJlYWN0LnVzZUNvbnRleHQoUm91dGVDb250ZXh0KTtcbiAgIXJvdXRlID8gcHJvY2Vzcy5lbnYuTk9ERV9FTlYgIT09IFwicHJvZHVjdGlvblwiID8gaW52YXJpYW50KGZhbHNlLCBcInVzZUFjdGlvbkRhdGEgbXVzdCBiZSB1c2VkIGluc2lkZSBhIFJvdXRlQ29udGV4dFwiKSA6IGludmFyaWFudChmYWxzZSkgOiB2b2lkIDA7XG4gIHJldHVybiBPYmplY3QudmFsdWVzKChzdGF0ZSA9PSBudWxsID8gdm9pZCAwIDogc3RhdGUuYWN0aW9uRGF0YSkgfHwge30pWzBdO1xufVxuLyoqXG4gKiBSZXR1cm5zIHRoZSBuZWFyZXN0IGFuY2VzdG9yIFJvdXRlIGVycm9yLCB3aGljaCBjb3VsZCBiZSBhIGxvYWRlci9hY3Rpb25cbiAqIGVycm9yIG9yIGEgcmVuZGVyIGVycm9yLiAgVGhpcyBpcyBpbnRlbmRlZCB0byBiZSBjYWxsZWQgZnJvbSB5b3VyXG4gKiBlcnJvckVsZW1lbnQgdG8gZGlzcGxheSBhIHByb3BlciBlcnJvciBtZXNzYWdlLlxuICovXG5cbmZ1bmN0aW9uIHVzZVJvdXRlRXJyb3IoKSB7XG4gIHZhciBfc3RhdGUkZXJyb3JzO1xuXG4gIGxldCBlcnJvciA9IFJlYWN0LnVzZUNvbnRleHQoUm91dGVFcnJvckNvbnRleHQpO1xuICBsZXQgc3RhdGUgPSB1c2VEYXRhUm91dGVyU3RhdGUoRGF0YVJvdXRlclN0YXRlSG9vay5Vc2VSb3V0ZUVycm9yKTtcbiAgbGV0IHJvdXRlID0gUmVhY3QudXNlQ29udGV4dChSb3V0ZUNvbnRleHQpO1xuICBsZXQgdGhpc1JvdXRlID0gcm91dGUubWF0Y2hlc1tyb3V0ZS5tYXRjaGVzLmxlbmd0aCAtIDFdOyAvLyBJZiB0aGlzIHdhcyBhIHJlbmRlciBlcnJvciwgd2UgcHV0IGl0IGluIGEgUm91dGVFcnJvciBjb250ZXh0IGluc2lkZVxuICAvLyBvZiBSZW5kZXJFcnJvckJvdW5kYXJ5XG5cbiAgaWYgKGVycm9yKSB7XG4gICAgcmV0dXJuIGVycm9yO1xuICB9XG5cbiAgIXJvdXRlID8gcHJvY2Vzcy5lbnYuTk9ERV9FTlYgIT09IFwicHJvZHVjdGlvblwiID8gaW52YXJpYW50KGZhbHNlLCBcInVzZVJvdXRlRXJyb3IgbXVzdCBiZSB1c2VkIGluc2lkZSBhIFJvdXRlQ29udGV4dFwiKSA6IGludmFyaWFudChmYWxzZSkgOiB2b2lkIDA7XG4gICF0aGlzUm91dGUucm91dGUuaWQgPyBwcm9jZXNzLmVudi5OT0RFX0VOViAhPT0gXCJwcm9kdWN0aW9uXCIgPyBpbnZhcmlhbnQoZmFsc2UsIFwidXNlUm91dGVFcnJvciBjYW4gb25seSBiZSB1c2VkIG9uIHJvdXRlcyB0aGF0IGNvbnRhaW4gYSB1bmlxdWUgXFxcImlkXFxcIlwiKSA6IGludmFyaWFudChmYWxzZSkgOiB2b2lkIDA7IC8vIE90aGVyd2lzZSBsb29rIGZvciBlcnJvcnMgZnJvbSBvdXIgZGF0YSByb3V0ZXIgc3RhdGVcblxuICByZXR1cm4gKF9zdGF0ZSRlcnJvcnMgPSBzdGF0ZS5lcnJvcnMpID09IG51bGwgPyB2b2lkIDAgOiBfc3RhdGUkZXJyb3JzW3RoaXNSb3V0ZS5yb3V0ZS5pZF07XG59XG4vKipcbiAqIFJldHVybnMgdGhlIGhhcHB5LXBhdGggZGF0YSBmcm9tIHRoZSBuZWFyZXN0IGFuY2VzdG9yIDxBd2FpdCAvPiB2YWx1ZVxuICovXG5cbmZ1bmN0aW9uIHVzZUFzeW5jVmFsdWUoKSB7XG4gIGxldCB2YWx1ZSA9IFJlYWN0LnVzZUNvbnRleHQoQXdhaXRDb250ZXh0KTtcbiAgcmV0dXJuIHZhbHVlID09IG51bGwgPyB2b2lkIDAgOiB2YWx1ZS5fZGF0YTtcbn1cbi8qKlxuICogUmV0dXJucyB0aGUgZXJyb3IgZnJvbSB0aGUgbmVhcmVzdCBhbmNlc3RvciA8QXdhaXQgLz4gdmFsdWVcbiAqL1xuXG5mdW5jdGlvbiB1c2VBc3luY0Vycm9yKCkge1xuICBsZXQgdmFsdWUgPSBSZWFjdC51c2VDb250ZXh0KEF3YWl0Q29udGV4dCk7XG4gIHJldHVybiB2YWx1ZSA9PSBudWxsID8gdm9pZCAwIDogdmFsdWUuX2Vycm9yO1xufVxuY29uc3QgYWxyZWFkeVdhcm5lZCA9IHt9O1xuXG5mdW5jdGlvbiB3YXJuaW5nT25jZShrZXksIGNvbmQsIG1lc3NhZ2UpIHtcbiAgaWYgKCFjb25kICYmICFhbHJlYWR5V2FybmVkW2tleV0pIHtcbiAgICBhbHJlYWR5V2FybmVkW2tleV0gPSB0cnVlO1xuICAgIHByb2Nlc3MuZW52Lk5PREVfRU5WICE9PSBcInByb2R1Y3Rpb25cIiA/IHdhcm5pbmcoZmFsc2UsIG1lc3NhZ2UpIDogdm9pZCAwO1xuICB9XG59XG5cbi8qKlxuICogR2l2ZW4gYSBSZW1peCBSb3V0ZXIgaW5zdGFuY2UsIHJlbmRlciB0aGUgYXBwcm9wcmlhdGUgVUlcbiAqL1xuZnVuY3Rpb24gUm91dGVyUHJvdmlkZXIoX3JlZikge1xuICBsZXQge1xuICAgIGZhbGxiYWNrRWxlbWVudCxcbiAgICByb3V0ZXJcbiAgfSA9IF9yZWY7XG4gIC8vIFN5bmMgcm91dGVyIHN0YXRlIHRvIG91ciBjb21wb25lbnQgc3RhdGUgdG8gZm9yY2UgcmUtcmVuZGVyc1xuICBsZXQgc3RhdGUgPSB1c2VTeW5jRXh0ZXJuYWxTdG9yZShyb3V0ZXIuc3Vic2NyaWJlLCAoKSA9PiByb3V0ZXIuc3RhdGUsIC8vIFdlIGhhdmUgdG8gcHJvdmlkZSB0aGlzIHNvIFJlYWN0QDE4IGRvZXNuJ3QgY29tcGxhaW4gZHVyaW5nIGh5ZHJhdGlvbixcbiAgLy8gYnV0IHdlIHBhc3Mgb3VyIHNlcmlhbGl6ZWQgaHlkcmF0aW9uIGRhdGEgaW50byB0aGUgcm91dGVyIHNvIHN0YXRlIGhlcmVcbiAgLy8gaXMgYWxyZWFkeSBzeW5jZWQgd2l0aCB3aGF0IHRoZSBzZXJ2ZXIgc2F3XG4gICgpID0+IHJvdXRlci5zdGF0ZSk7XG4gIGxldCBuYXZpZ2F0b3IgPSBSZWFjdC51c2VNZW1vKCgpID0+IHtcbiAgICByZXR1cm4ge1xuICAgICAgY3JlYXRlSHJlZjogcm91dGVyLmNyZWF0ZUhyZWYsXG4gICAgICBnbzogbiA9PiByb3V0ZXIubmF2aWdhdGUobiksXG4gICAgICBwdXNoOiAodG8sIHN0YXRlLCBvcHRzKSA9PiByb3V0ZXIubmF2aWdhdGUodG8sIHtcbiAgICAgICAgc3RhdGUsXG4gICAgICAgIHByZXZlbnRTY3JvbGxSZXNldDogb3B0cyA9PSBudWxsID8gdm9pZCAwIDogb3B0cy5wcmV2ZW50U2Nyb2xsUmVzZXRcbiAgICAgIH0pLFxuICAgICAgcmVwbGFjZTogKHRvLCBzdGF0ZSwgb3B0cykgPT4gcm91dGVyLm5hdmlnYXRlKHRvLCB7XG4gICAgICAgIHJlcGxhY2U6IHRydWUsXG4gICAgICAgIHN0YXRlLFxuICAgICAgICBwcmV2ZW50U2Nyb2xsUmVzZXQ6IG9wdHMgPT0gbnVsbCA/IHZvaWQgMCA6IG9wdHMucHJldmVudFNjcm9sbFJlc2V0XG4gICAgICB9KVxuICAgIH07XG4gIH0sIFtyb3V0ZXJdKTtcbiAgbGV0IGJhc2VuYW1lID0gcm91dGVyLmJhc2VuYW1lIHx8IFwiL1wiO1xuICByZXR1cm4gLyojX19QVVJFX18qL1JlYWN0LmNyZWF0ZUVsZW1lbnQoRGF0YVJvdXRlckNvbnRleHQuUHJvdmlkZXIsIHtcbiAgICB2YWx1ZToge1xuICAgICAgcm91dGVyLFxuICAgICAgbmF2aWdhdG9yLFxuICAgICAgc3RhdGljOiBmYWxzZSxcbiAgICAgIC8vIERvIHdlIG5lZWQgdGhpcz9cbiAgICAgIGJhc2VuYW1lXG4gICAgfVxuICB9LCAvKiNfX1BVUkVfXyovUmVhY3QuY3JlYXRlRWxlbWVudChEYXRhUm91dGVyU3RhdGVDb250ZXh0LlByb3ZpZGVyLCB7XG4gICAgdmFsdWU6IHN0YXRlXG4gIH0sIC8qI19fUFVSRV9fKi9SZWFjdC5jcmVhdGVFbGVtZW50KFJvdXRlciwge1xuICAgIGJhc2VuYW1lOiByb3V0ZXIuYmFzZW5hbWUsXG4gICAgbG9jYXRpb246IHJvdXRlci5zdGF0ZS5sb2NhdGlvbixcbiAgICBuYXZpZ2F0aW9uVHlwZTogcm91dGVyLnN0YXRlLmhpc3RvcnlBY3Rpb24sXG4gICAgbmF2aWdhdG9yOiBuYXZpZ2F0b3JcbiAgfSwgcm91dGVyLnN0YXRlLmluaXRpYWxpemVkID8gLyojX19QVVJFX18qL1JlYWN0LmNyZWF0ZUVsZW1lbnQoUm91dGVzLCBudWxsKSA6IGZhbGxiYWNrRWxlbWVudCkpKTtcbn1cblxuLyoqXG4gKiBBIDxSb3V0ZXI+IHRoYXQgc3RvcmVzIGFsbCBlbnRyaWVzIGluIG1lbW9yeS5cbiAqXG4gKiBAc2VlIGh0dHBzOi8vcmVhY3Ryb3V0ZXIuY29tL2RvY3MvZW4vdjYvcm91dGVycy9tZW1vcnktcm91dGVyXG4gKi9cbmZ1bmN0aW9uIE1lbW9yeVJvdXRlcihfcmVmMikge1xuICBsZXQge1xuICAgIGJhc2VuYW1lLFxuICAgIGNoaWxkcmVuLFxuICAgIGluaXRpYWxFbnRyaWVzLFxuICAgIGluaXRpYWxJbmRleFxuICB9ID0gX3JlZjI7XG4gIGxldCBoaXN0b3J5UmVmID0gUmVhY3QudXNlUmVmKCk7XG5cbiAgaWYgKGhpc3RvcnlSZWYuY3VycmVudCA9PSBudWxsKSB7XG4gICAgaGlzdG9yeVJlZi5jdXJyZW50ID0gY3JlYXRlTWVtb3J5SGlzdG9yeSh7XG4gICAgICBpbml0aWFsRW50cmllcyxcbiAgICAgIGluaXRpYWxJbmRleCxcbiAgICAgIHY1Q29tcGF0OiB0cnVlXG4gICAgfSk7XG4gIH1cblxuICBsZXQgaGlzdG9yeSA9IGhpc3RvcnlSZWYuY3VycmVudDtcbiAgbGV0IFtzdGF0ZSwgc2V0U3RhdGVdID0gUmVhY3QudXNlU3RhdGUoe1xuICAgIGFjdGlvbjogaGlzdG9yeS5hY3Rpb24sXG4gICAgbG9jYXRpb246IGhpc3RvcnkubG9jYXRpb25cbiAgfSk7XG4gIFJlYWN0LnVzZUxheW91dEVmZmVjdCgoKSA9PiBoaXN0b3J5Lmxpc3RlbihzZXRTdGF0ZSksIFtoaXN0b3J5XSk7XG4gIHJldHVybiAvKiNfX1BVUkVfXyovUmVhY3QuY3JlYXRlRWxlbWVudChSb3V0ZXIsIHtcbiAgICBiYXNlbmFtZTogYmFzZW5hbWUsXG4gICAgY2hpbGRyZW46IGNoaWxkcmVuLFxuICAgIGxvY2F0aW9uOiBzdGF0ZS5sb2NhdGlvbixcbiAgICBuYXZpZ2F0aW9uVHlwZTogc3RhdGUuYWN0aW9uLFxuICAgIG5hdmlnYXRvcjogaGlzdG9yeVxuICB9KTtcbn1cblxuLyoqXG4gKiBDaGFuZ2VzIHRoZSBjdXJyZW50IGxvY2F0aW9uLlxuICpcbiAqIE5vdGU6IFRoaXMgQVBJIGlzIG1vc3RseSB1c2VmdWwgaW4gUmVhY3QuQ29tcG9uZW50IHN1YmNsYXNzZXMgdGhhdCBhcmUgbm90XG4gKiBhYmxlIHRvIHVzZSBob29rcy4gSW4gZnVuY3Rpb25hbCBjb21wb25lbnRzLCB3ZSByZWNvbW1lbmQgeW91IHVzZSB0aGVcbiAqIGB1c2VOYXZpZ2F0ZWAgaG9vayBpbnN0ZWFkLlxuICpcbiAqIEBzZWUgaHR0cHM6Ly9yZWFjdHJvdXRlci5jb20vZG9jcy9lbi92Ni9jb21wb25lbnRzL25hdmlnYXRlXG4gKi9cbmZ1bmN0aW9uIE5hdmlnYXRlKF9yZWYzKSB7XG4gIGxldCB7XG4gICAgdG8sXG4gICAgcmVwbGFjZSxcbiAgICBzdGF0ZSxcbiAgICByZWxhdGl2ZVxuICB9ID0gX3JlZjM7XG4gICF1c2VJblJvdXRlckNvbnRleHQoKSA/IHByb2Nlc3MuZW52Lk5PREVfRU5WICE9PSBcInByb2R1Y3Rpb25cIiA/IGludmFyaWFudChmYWxzZSwgLy8gVE9ETzogVGhpcyBlcnJvciBpcyBwcm9iYWJseSBiZWNhdXNlIHRoZXkgc29tZWhvdyBoYXZlIDIgdmVyc2lvbnMgb2ZcbiAgLy8gdGhlIHJvdXRlciBsb2FkZWQuIFdlIGNhbiBoZWxwIHRoZW0gdW5kZXJzdGFuZCBob3cgdG8gYXZvaWQgdGhhdC5cbiAgXCI8TmF2aWdhdGU+IG1heSBiZSB1c2VkIG9ubHkgaW4gdGhlIGNvbnRleHQgb2YgYSA8Um91dGVyPiBjb21wb25lbnQuXCIpIDogaW52YXJpYW50KGZhbHNlKSA6IHZvaWQgMDtcbiAgcHJvY2Vzcy5lbnYuTk9ERV9FTlYgIT09IFwicHJvZHVjdGlvblwiID8gd2FybmluZyghUmVhY3QudXNlQ29udGV4dChOYXZpZ2F0aW9uQ29udGV4dCkuc3RhdGljLCBcIjxOYXZpZ2F0ZT4gbXVzdCBub3QgYmUgdXNlZCBvbiB0aGUgaW5pdGlhbCByZW5kZXIgaW4gYSA8U3RhdGljUm91dGVyPi4gXCIgKyBcIlRoaXMgaXMgYSBuby1vcCwgYnV0IHlvdSBzaG91bGQgbW9kaWZ5IHlvdXIgY29kZSBzbyB0aGUgPE5hdmlnYXRlPiBpcyBcIiArIFwib25seSBldmVyIHJlbmRlcmVkIGluIHJlc3BvbnNlIHRvIHNvbWUgdXNlciBpbnRlcmFjdGlvbiBvciBzdGF0ZSBjaGFuZ2UuXCIpIDogdm9pZCAwO1xuICBsZXQgZGF0YVJvdXRlclN0YXRlID0gUmVhY3QudXNlQ29udGV4dChEYXRhUm91dGVyU3RhdGVDb250ZXh0KTtcbiAgbGV0IG5hdmlnYXRlID0gdXNlTmF2aWdhdGUoKTtcbiAgUmVhY3QudXNlRWZmZWN0KCgpID0+IHtcbiAgICAvLyBBdm9pZCBraWNraW5nIG9mZiBtdWx0aXBsZSBuYXZpZ2F0aW9ucyBpZiB3ZSdyZSBpbiB0aGUgbWlkZGxlIG9mIGFcbiAgICAvLyBkYXRhLXJvdXRlciBuYXZpZ2F0aW9uLCBzaW5jZSBjb21wb25lbnRzIGdldCByZS1yZW5kZXJlZCB3aGVuIHdlIGVudGVyXG4gICAgLy8gYSBzdWJtaXR0aW5nL2xvYWRpbmcgc3RhdGVcbiAgICBpZiAoZGF0YVJvdXRlclN0YXRlICYmIGRhdGFSb3V0ZXJTdGF0ZS5uYXZpZ2F0aW9uLnN0YXRlICE9PSBcImlkbGVcIikge1xuICAgICAgcmV0dXJuO1xuICAgIH1cblxuICAgIG5hdmlnYXRlKHRvLCB7XG4gICAgICByZXBsYWNlLFxuICAgICAgc3RhdGUsXG4gICAgICByZWxhdGl2ZVxuICAgIH0pO1xuICB9KTtcbiAgcmV0dXJuIG51bGw7XG59XG5cbi8qKlxuICogUmVuZGVycyB0aGUgY2hpbGQgcm91dGUncyBlbGVtZW50LCBpZiB0aGVyZSBpcyBvbmUuXG4gKlxuICogQHNlZSBodHRwczovL3JlYWN0cm91dGVyLmNvbS9kb2NzL2VuL3Y2L2NvbXBvbmVudHMvb3V0bGV0XG4gKi9cbmZ1bmN0aW9uIE91dGxldChwcm9wcykge1xuICByZXR1cm4gdXNlT3V0bGV0KHByb3BzLmNvbnRleHQpO1xufVxuXG4vKipcbiAqIERlY2xhcmVzIGFuIGVsZW1lbnQgdGhhdCBzaG91bGQgYmUgcmVuZGVyZWQgYXQgYSBjZXJ0YWluIFVSTCBwYXRoLlxuICpcbiAqIEBzZWUgaHR0cHM6Ly9yZWFjdHJvdXRlci5jb20vZG9jcy9lbi92Ni9jb21wb25lbnRzL3JvdXRlXG4gKi9cbmZ1bmN0aW9uIFJvdXRlKF9wcm9wcykge1xuICBwcm9jZXNzLmVudi5OT0RFX0VOViAhPT0gXCJwcm9kdWN0aW9uXCIgPyBpbnZhcmlhbnQoZmFsc2UsIFwiQSA8Um91dGU+IGlzIG9ubHkgZXZlciB0byBiZSB1c2VkIGFzIHRoZSBjaGlsZCBvZiA8Um91dGVzPiBlbGVtZW50LCBcIiArIFwibmV2ZXIgcmVuZGVyZWQgZGlyZWN0bHkuIFBsZWFzZSB3cmFwIHlvdXIgPFJvdXRlPiBpbiBhIDxSb3V0ZXM+LlwiKSA6IGludmFyaWFudChmYWxzZSkgO1xufVxuXG4vKipcbiAqIFByb3ZpZGVzIGxvY2F0aW9uIGNvbnRleHQgZm9yIHRoZSByZXN0IG9mIHRoZSBhcHAuXG4gKlxuICogTm90ZTogWW91IHVzdWFsbHkgd29uJ3QgcmVuZGVyIGEgPFJvdXRlcj4gZGlyZWN0bHkuIEluc3RlYWQsIHlvdSdsbCByZW5kZXIgYVxuICogcm91dGVyIHRoYXQgaXMgbW9yZSBzcGVjaWZpYyB0byB5b3VyIGVudmlyb25tZW50IHN1Y2ggYXMgYSA8QnJvd3NlclJvdXRlcj5cbiAqIGluIHdlYiBicm93c2VycyBvciBhIDxTdGF0aWNSb3V0ZXI+IGZvciBzZXJ2ZXIgcmVuZGVyaW5nLlxuICpcbiAqIEBzZWUgaHR0cHM6Ly9yZWFjdHJvdXRlci5jb20vZG9jcy9lbi92Ni9yb3V0ZXJzL3JvdXRlclxuICovXG5mdW5jdGlvbiBSb3V0ZXIoX3JlZjQpIHtcbiAgbGV0IHtcbiAgICBiYXNlbmFtZTogYmFzZW5hbWVQcm9wID0gXCIvXCIsXG4gICAgY2hpbGRyZW4gPSBudWxsLFxuICAgIGxvY2F0aW9uOiBsb2NhdGlvblByb3AsXG4gICAgbmF2aWdhdGlvblR5cGUgPSBBY3Rpb24uUG9wLFxuICAgIG5hdmlnYXRvcixcbiAgICBzdGF0aWM6IHN0YXRpY1Byb3AgPSBmYWxzZVxuICB9ID0gX3JlZjQ7XG4gICEhdXNlSW5Sb3V0ZXJDb250ZXh0KCkgPyBwcm9jZXNzLmVudi5OT0RFX0VOViAhPT0gXCJwcm9kdWN0aW9uXCIgPyBpbnZhcmlhbnQoZmFsc2UsIFwiWW91IGNhbm5vdCByZW5kZXIgYSA8Um91dGVyPiBpbnNpZGUgYW5vdGhlciA8Um91dGVyPi5cIiArIFwiIFlvdSBzaG91bGQgbmV2ZXIgaGF2ZSBtb3JlIHRoYW4gb25lIGluIHlvdXIgYXBwLlwiKSA6IGludmFyaWFudChmYWxzZSkgOiB2b2lkIDA7IC8vIFByZXNlcnZlIHRyYWlsaW5nIHNsYXNoZXMgb24gYmFzZW5hbWUsIHNvIHdlIGNhbiBsZXQgdGhlIHVzZXIgY29udHJvbFxuICAvLyB0aGUgZW5mb3JjZW1lbnQgb2YgdHJhaWxpbmcgc2xhc2hlcyB0aHJvdWdob3V0IHRoZSBhcHBcblxuICBsZXQgYmFzZW5hbWUgPSBiYXNlbmFtZVByb3AucmVwbGFjZSgvXlxcLyovLCBcIi9cIik7XG4gIGxldCBuYXZpZ2F0aW9uQ29udGV4dCA9IFJlYWN0LnVzZU1lbW8oKCkgPT4gKHtcbiAgICBiYXNlbmFtZSxcbiAgICBuYXZpZ2F0b3IsXG4gICAgc3RhdGljOiBzdGF0aWNQcm9wXG4gIH0pLCBbYmFzZW5hbWUsIG5hdmlnYXRvciwgc3RhdGljUHJvcF0pO1xuXG4gIGlmICh0eXBlb2YgbG9jYXRpb25Qcm9wID09PSBcInN0cmluZ1wiKSB7XG4gICAgbG9jYXRpb25Qcm9wID0gcGFyc2VQYXRoKGxvY2F0aW9uUHJvcCk7XG4gIH1cblxuICBsZXQge1xuICAgIHBhdGhuYW1lID0gXCIvXCIsXG4gICAgc2VhcmNoID0gXCJcIixcbiAgICBoYXNoID0gXCJcIixcbiAgICBzdGF0ZSA9IG51bGwsXG4gICAga2V5ID0gXCJkZWZhdWx0XCJcbiAgfSA9IGxvY2F0aW9uUHJvcDtcbiAgbGV0IGxvY2F0aW9uID0gUmVhY3QudXNlTWVtbygoKSA9PiB7XG4gICAgbGV0IHRyYWlsaW5nUGF0aG5hbWUgPSBzdHJpcEJhc2VuYW1lKHBhdGhuYW1lLCBiYXNlbmFtZSk7XG5cbiAgICBpZiAodHJhaWxpbmdQYXRobmFtZSA9PSBudWxsKSB7XG4gICAgICByZXR1cm4gbnVsbDtcbiAgICB9XG5cbiAgICByZXR1cm4ge1xuICAgICAgcGF0aG5hbWU6IHRyYWlsaW5nUGF0aG5hbWUsXG4gICAgICBzZWFyY2gsXG4gICAgICBoYXNoLFxuICAgICAgc3RhdGUsXG4gICAgICBrZXlcbiAgICB9O1xuICB9LCBbYmFzZW5hbWUsIHBhdGhuYW1lLCBzZWFyY2gsIGhhc2gsIHN0YXRlLCBrZXldKTtcbiAgcHJvY2Vzcy5lbnYuTk9ERV9FTlYgIT09IFwicHJvZHVjdGlvblwiID8gd2FybmluZyhsb2NhdGlvbiAhPSBudWxsLCBcIjxSb3V0ZXIgYmFzZW5hbWU9XFxcIlwiICsgYmFzZW5hbWUgKyBcIlxcXCI+IGlzIG5vdCBhYmxlIHRvIG1hdGNoIHRoZSBVUkwgXCIgKyAoXCJcXFwiXCIgKyBwYXRobmFtZSArIHNlYXJjaCArIGhhc2ggKyBcIlxcXCIgYmVjYXVzZSBpdCBkb2VzIG5vdCBzdGFydCB3aXRoIHRoZSBcIikgKyBcImJhc2VuYW1lLCBzbyB0aGUgPFJvdXRlcj4gd29uJ3QgcmVuZGVyIGFueXRoaW5nLlwiKSA6IHZvaWQgMDtcblxuICBpZiAobG9jYXRpb24gPT0gbnVsbCkge1xuICAgIHJldHVybiBudWxsO1xuICB9XG5cbiAgcmV0dXJuIC8qI19fUFVSRV9fKi9SZWFjdC5jcmVhdGVFbGVtZW50KE5hdmlnYXRpb25Db250ZXh0LlByb3ZpZGVyLCB7XG4gICAgdmFsdWU6IG5hdmlnYXRpb25Db250ZXh0XG4gIH0sIC8qI19fUFVSRV9fKi9SZWFjdC5jcmVhdGVFbGVtZW50KExvY2F0aW9uQ29udGV4dC5Qcm92aWRlciwge1xuICAgIGNoaWxkcmVuOiBjaGlsZHJlbixcbiAgICB2YWx1ZToge1xuICAgICAgbG9jYXRpb24sXG4gICAgICBuYXZpZ2F0aW9uVHlwZVxuICAgIH1cbiAgfSkpO1xufVxuXG4vKipcbiAqIEEgY29udGFpbmVyIGZvciBhIG5lc3RlZCB0cmVlIG9mIDxSb3V0ZT4gZWxlbWVudHMgdGhhdCByZW5kZXJzIHRoZSBicmFuY2hcbiAqIHRoYXQgYmVzdCBtYXRjaGVzIHRoZSBjdXJyZW50IGxvY2F0aW9uLlxuICpcbiAqIEBzZWUgaHR0cHM6Ly9yZWFjdHJvdXRlci5jb20vZG9jcy9lbi92Ni9jb21wb25lbnRzL3JvdXRlc1xuICovXG5mdW5jdGlvbiBSb3V0ZXMoX3JlZjUpIHtcbiAgbGV0IHtcbiAgICBjaGlsZHJlbixcbiAgICBsb2NhdGlvblxuICB9ID0gX3JlZjU7XG4gIGxldCBkYXRhUm91dGVyQ29udGV4dCA9IFJlYWN0LnVzZUNvbnRleHQoRGF0YVJvdXRlckNvbnRleHQpOyAvLyBXaGVuIGluIGEgRGF0YVJvdXRlckNvbnRleHQgX3dpdGhvdXRfIGNoaWxkcmVuLCB3ZSB1c2UgdGhlIHJvdXRlciByb3V0ZXNcbiAgLy8gZGlyZWN0bHkuICBJZiB3ZSBoYXZlIGNoaWxkcmVuLCB0aGVuIHdlJ3JlIGluIGEgZGVzY2VuZGFudCB0cmVlIGFuZCB3ZVxuICAvLyBuZWVkIHRvIHVzZSBjaGlsZCByb3V0ZXMuXG5cbiAgbGV0IHJvdXRlcyA9IGRhdGFSb3V0ZXJDb250ZXh0ICYmICFjaGlsZHJlbiA/IGRhdGFSb3V0ZXJDb250ZXh0LnJvdXRlci5yb3V0ZXMgOiBjcmVhdGVSb3V0ZXNGcm9tQ2hpbGRyZW4oY2hpbGRyZW4pO1xuICByZXR1cm4gdXNlUm91dGVzKHJvdXRlcywgbG9jYXRpb24pO1xufVxuXG4vKipcbiAqIENvbXBvbmVudCB0byB1c2UgZm9yIHJlbmRlcmluZyBsYXppbHkgbG9hZGVkIGRhdGEgZnJvbSByZXR1cm5pbmcgZGVmZXIoKVxuICogaW4gYSBsb2FkZXIgZnVuY3Rpb25cbiAqL1xuZnVuY3Rpb24gQXdhaXQoX3JlZjYpIHtcbiAgbGV0IHtcbiAgICBjaGlsZHJlbixcbiAgICBlcnJvckVsZW1lbnQsXG4gICAgcmVzb2x2ZVxuICB9ID0gX3JlZjY7XG4gIHJldHVybiAvKiNfX1BVUkVfXyovUmVhY3QuY3JlYXRlRWxlbWVudChBd2FpdEVycm9yQm91bmRhcnksIHtcbiAgICByZXNvbHZlOiByZXNvbHZlLFxuICAgIGVycm9yRWxlbWVudDogZXJyb3JFbGVtZW50XG4gIH0sIC8qI19fUFVSRV9fKi9SZWFjdC5jcmVhdGVFbGVtZW50KFJlc29sdmVBd2FpdCwgbnVsbCwgY2hpbGRyZW4pKTtcbn1cbnZhciBBd2FpdFJlbmRlclN0YXR1cztcblxuKGZ1bmN0aW9uIChBd2FpdFJlbmRlclN0YXR1cykge1xuICBBd2FpdFJlbmRlclN0YXR1c1tBd2FpdFJlbmRlclN0YXR1c1tcInBlbmRpbmdcIl0gPSAwXSA9IFwicGVuZGluZ1wiO1xuICBBd2FpdFJlbmRlclN0YXR1c1tBd2FpdFJlbmRlclN0YXR1c1tcInN1Y2Nlc3NcIl0gPSAxXSA9IFwic3VjY2Vzc1wiO1xuICBBd2FpdFJlbmRlclN0YXR1c1tBd2FpdFJlbmRlclN0YXR1c1tcImVycm9yXCJdID0gMl0gPSBcImVycm9yXCI7XG59KShBd2FpdFJlbmRlclN0YXR1cyB8fCAoQXdhaXRSZW5kZXJTdGF0dXMgPSB7fSkpO1xuXG5jb25zdCBuZXZlclNldHRsZWRQcm9taXNlID0gbmV3IFByb21pc2UoKCkgPT4ge30pO1xuXG5jbGFzcyBBd2FpdEVycm9yQm91bmRhcnkgZXh0ZW5kcyBSZWFjdC5Db21wb25lbnQge1xuICBjb25zdHJ1Y3Rvcihwcm9wcykge1xuICAgIHN1cGVyKHByb3BzKTtcbiAgICB0aGlzLnN0YXRlID0ge1xuICAgICAgZXJyb3I6IG51bGxcbiAgICB9O1xuICB9XG5cbiAgc3RhdGljIGdldERlcml2ZWRTdGF0ZUZyb21FcnJvcihlcnJvcikge1xuICAgIHJldHVybiB7XG4gICAgICBlcnJvclxuICAgIH07XG4gIH1cblxuICBjb21wb25lbnREaWRDYXRjaChlcnJvciwgZXJyb3JJbmZvKSB7XG4gICAgY29uc29sZS5lcnJvcihcIjxBd2FpdD4gY2F1Z2h0IHRoZSBmb2xsb3dpbmcgZXJyb3IgZHVyaW5nIHJlbmRlclwiLCBlcnJvciwgZXJyb3JJbmZvKTtcbiAgfVxuXG4gIHJlbmRlcigpIHtcbiAgICBsZXQge1xuICAgICAgY2hpbGRyZW4sXG4gICAgICBlcnJvckVsZW1lbnQsXG4gICAgICByZXNvbHZlXG4gICAgfSA9IHRoaXMucHJvcHM7XG4gICAgbGV0IHByb21pc2UgPSBudWxsO1xuICAgIGxldCBzdGF0dXMgPSBBd2FpdFJlbmRlclN0YXR1cy5wZW5kaW5nO1xuXG4gICAgaWYgKCEocmVzb2x2ZSBpbnN0YW5jZW9mIFByb21pc2UpKSB7XG4gICAgICAvLyBEaWRuJ3QgZ2V0IGEgcHJvbWlzZSAtIHByb3ZpZGUgYXMgYSByZXNvbHZlZCBwcm9taXNlXG4gICAgICBzdGF0dXMgPSBBd2FpdFJlbmRlclN0YXR1cy5zdWNjZXNzO1xuICAgICAgcHJvbWlzZSA9IFByb21pc2UucmVzb2x2ZSgpO1xuICAgICAgT2JqZWN0LmRlZmluZVByb3BlcnR5KHByb21pc2UsIFwiX3RyYWNrZWRcIiwge1xuICAgICAgICBnZXQ6ICgpID0+IHRydWVcbiAgICAgIH0pO1xuICAgICAgT2JqZWN0LmRlZmluZVByb3BlcnR5KHByb21pc2UsIFwiX2RhdGFcIiwge1xuICAgICAgICBnZXQ6ICgpID0+IHJlc29sdmVcbiAgICAgIH0pO1xuICAgIH0gZWxzZSBpZiAodGhpcy5zdGF0ZS5lcnJvcikge1xuICAgICAgLy8gQ2F1Z2h0IGEgcmVuZGVyIGVycm9yLCBwcm92aWRlIGl0IGFzIGEgcmVqZWN0ZWQgcHJvbWlzZVxuICAgICAgc3RhdHVzID0gQXdhaXRSZW5kZXJTdGF0dXMuZXJyb3I7XG4gICAgICBsZXQgcmVuZGVyRXJyb3IgPSB0aGlzLnN0YXRlLmVycm9yO1xuICAgICAgcHJvbWlzZSA9IFByb21pc2UucmVqZWN0KCkuY2F0Y2goKCkgPT4ge30pOyAvLyBBdm9pZCB1bmhhbmRsZWQgcmVqZWN0aW9uIHdhcm5pbmdzXG5cbiAgICAgIE9iamVjdC5kZWZpbmVQcm9wZXJ0eShwcm9taXNlLCBcIl90cmFja2VkXCIsIHtcbiAgICAgICAgZ2V0OiAoKSA9PiB0cnVlXG4gICAgICB9KTtcbiAgICAgIE9iamVjdC5kZWZpbmVQcm9wZXJ0eShwcm9taXNlLCBcIl9lcnJvclwiLCB7XG4gICAgICAgIGdldDogKCkgPT4gcmVuZGVyRXJyb3JcbiAgICAgIH0pO1xuICAgIH0gZWxzZSBpZiAocmVzb2x2ZS5fdHJhY2tlZCkge1xuICAgICAgLy8gQWxyZWFkeSB0cmFja2VkIHByb21pc2UgLSBjaGVjayBjb250ZW50c1xuICAgICAgcHJvbWlzZSA9IHJlc29sdmU7XG4gICAgICBzdGF0dXMgPSBwcm9taXNlLl9lcnJvciAhPT0gdW5kZWZpbmVkID8gQXdhaXRSZW5kZXJTdGF0dXMuZXJyb3IgOiBwcm9taXNlLl9kYXRhICE9PSB1bmRlZmluZWQgPyBBd2FpdFJlbmRlclN0YXR1cy5zdWNjZXNzIDogQXdhaXRSZW5kZXJTdGF0dXMucGVuZGluZztcbiAgICB9IGVsc2Uge1xuICAgICAgLy8gUmF3ICh1bnRyYWNrZWQpIHByb21pc2UgLSB0cmFjayBpdFxuICAgICAgc3RhdHVzID0gQXdhaXRSZW5kZXJTdGF0dXMucGVuZGluZztcbiAgICAgIE9iamVjdC5kZWZpbmVQcm9wZXJ0eShyZXNvbHZlLCBcIl90cmFja2VkXCIsIHtcbiAgICAgICAgZ2V0OiAoKSA9PiB0cnVlXG4gICAgICB9KTtcbiAgICAgIHByb21pc2UgPSByZXNvbHZlLnRoZW4oZGF0YSA9PiBPYmplY3QuZGVmaW5lUHJvcGVydHkocmVzb2x2ZSwgXCJfZGF0YVwiLCB7XG4gICAgICAgIGdldDogKCkgPT4gZGF0YVxuICAgICAgfSksIGVycm9yID0+IE9iamVjdC5kZWZpbmVQcm9wZXJ0eShyZXNvbHZlLCBcIl9lcnJvclwiLCB7XG4gICAgICAgIGdldDogKCkgPT4gZXJyb3JcbiAgICAgIH0pKTtcbiAgICB9XG5cbiAgICBpZiAoc3RhdHVzID09PSBBd2FpdFJlbmRlclN0YXR1cy5lcnJvciAmJiBwcm9taXNlLl9lcnJvciBpbnN0YW5jZW9mIEFib3J0ZWREZWZlcnJlZEVycm9yKSB7XG4gICAgICAvLyBGcmVlemUgdGhlIFVJIGJ5IHRocm93aW5nIGEgbmV2ZXIgcmVzb2x2ZWQgcHJvbWlzZVxuICAgICAgdGhyb3cgbmV2ZXJTZXR0bGVkUHJvbWlzZTtcbiAgICB9XG5cbiAgICBpZiAoc3RhdHVzID09PSBBd2FpdFJlbmRlclN0YXR1cy5lcnJvciAmJiAhZXJyb3JFbGVtZW50KSB7XG4gICAgICAvLyBObyBlcnJvckVsZW1lbnQsIHRocm93IHRvIHRoZSBuZWFyZXN0IHJvdXRlLWxldmVsIGVycm9yIGJvdW5kYXJ5XG4gICAgICB0aHJvdyBwcm9taXNlLl9lcnJvcjtcbiAgICB9XG5cbiAgICBpZiAoc3RhdHVzID09PSBBd2FpdFJlbmRlclN0YXR1cy5lcnJvcikge1xuICAgICAgLy8gUmVuZGVyIHZpYSBvdXIgZXJyb3JFbGVtZW50XG4gICAgICByZXR1cm4gLyojX19QVVJFX18qL1JlYWN0LmNyZWF0ZUVsZW1lbnQoQXdhaXRDb250ZXh0LlByb3ZpZGVyLCB7XG4gICAgICAgIHZhbHVlOiBwcm9taXNlLFxuICAgICAgICBjaGlsZHJlbjogZXJyb3JFbGVtZW50XG4gICAgICB9KTtcbiAgICB9XG5cbiAgICBpZiAoc3RhdHVzID09PSBBd2FpdFJlbmRlclN0YXR1cy5zdWNjZXNzKSB7XG4gICAgICAvLyBSZW5kZXIgY2hpbGRyZW4gd2l0aCByZXNvbHZlZCB2YWx1ZVxuICAgICAgcmV0dXJuIC8qI19fUFVSRV9fKi9SZWFjdC5jcmVhdGVFbGVtZW50KEF3YWl0Q29udGV4dC5Qcm92aWRlciwge1xuICAgICAgICB2YWx1ZTogcHJvbWlzZSxcbiAgICAgICAgY2hpbGRyZW46IGNoaWxkcmVuXG4gICAgICB9KTtcbiAgICB9IC8vIFRocm93IHRvIHRoZSBzdXNwZW5zZSBib3VuZGFyeVxuXG5cbiAgICB0aHJvdyBwcm9taXNlO1xuICB9XG5cbn1cbi8qKlxuICogQHByaXZhdGVcbiAqIEluZGlyZWN0aW9uIHRvIGxldmVyYWdlIHVzZUFzeW5jVmFsdWUgZm9yIGEgcmVuZGVyLXByb3AgQVBJIG9uIDxBd2FpdD5cbiAqL1xuXG5cbmZ1bmN0aW9uIFJlc29sdmVBd2FpdChfcmVmNykge1xuICBsZXQge1xuICAgIGNoaWxkcmVuXG4gIH0gPSBfcmVmNztcbiAgbGV0IGRhdGEgPSB1c2VBc3luY1ZhbHVlKCk7XG5cbiAgaWYgKHR5cGVvZiBjaGlsZHJlbiA9PT0gXCJmdW5jdGlvblwiKSB7XG4gICAgcmV0dXJuIGNoaWxkcmVuKGRhdGEpO1xuICB9XG5cbiAgcmV0dXJuIC8qI19fUFVSRV9fKi9SZWFjdC5jcmVhdGVFbGVtZW50KFJlYWN0LkZyYWdtZW50LCBudWxsLCBjaGlsZHJlbik7XG59IC8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy9cbi8vIFVUSUxTXG4vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vXG5cbi8qKlxuICogQ3JlYXRlcyBhIHJvdXRlIGNvbmZpZyBmcm9tIGEgUmVhY3QgXCJjaGlsZHJlblwiIG9iamVjdCwgd2hpY2ggaXMgdXN1YWxseVxuICogZWl0aGVyIGEgYDxSb3V0ZT5gIGVsZW1lbnQgb3IgYW4gYXJyYXkgb2YgdGhlbS4gVXNlZCBpbnRlcm5hbGx5IGJ5XG4gKiBgPFJvdXRlcz5gIHRvIGNyZWF0ZSBhIHJvdXRlIGNvbmZpZyBmcm9tIGl0cyBjaGlsZHJlbi5cbiAqXG4gKiBAc2VlIGh0dHBzOi8vcmVhY3Ryb3V0ZXIuY29tL2RvY3MvZW4vdjYvdXRpbHMvY3JlYXRlLXJvdXRlcy1mcm9tLWNoaWxkcmVuXG4gKi9cblxuXG5mdW5jdGlvbiBjcmVhdGVSb3V0ZXNGcm9tQ2hpbGRyZW4oY2hpbGRyZW4sIHBhcmVudFBhdGgpIHtcbiAgaWYgKHBhcmVudFBhdGggPT09IHZvaWQgMCkge1xuICAgIHBhcmVudFBhdGggPSBbXTtcbiAgfVxuXG4gIGxldCByb3V0ZXMgPSBbXTtcbiAgUmVhY3QuQ2hpbGRyZW4uZm9yRWFjaChjaGlsZHJlbiwgKGVsZW1lbnQsIGluZGV4KSA9PiB7XG4gICAgaWYgKCEgLyojX19QVVJFX18qL1JlYWN0LmlzVmFsaWRFbGVtZW50KGVsZW1lbnQpKSB7XG4gICAgICAvLyBJZ25vcmUgbm9uLWVsZW1lbnRzLiBUaGlzIGFsbG93cyBwZW9wbGUgdG8gbW9yZSBlYXNpbHkgaW5saW5lXG4gICAgICAvLyBjb25kaXRpb25hbHMgaW4gdGhlaXIgcm91dGUgY29uZmlnLlxuICAgICAgcmV0dXJuO1xuICAgIH1cblxuICAgIGlmIChlbGVtZW50LnR5cGUgPT09IFJlYWN0LkZyYWdtZW50KSB7XG4gICAgICAvLyBUcmFuc3BhcmVudGx5IHN1cHBvcnQgUmVhY3QuRnJhZ21lbnQgYW5kIGl0cyBjaGlsZHJlbi5cbiAgICAgIHJvdXRlcy5wdXNoLmFwcGx5KHJvdXRlcywgY3JlYXRlUm91dGVzRnJvbUNoaWxkcmVuKGVsZW1lbnQucHJvcHMuY2hpbGRyZW4sIHBhcmVudFBhdGgpKTtcbiAgICAgIHJldHVybjtcbiAgICB9XG5cbiAgICAhKGVsZW1lbnQudHlwZSA9PT0gUm91dGUpID8gcHJvY2Vzcy5lbnYuTk9ERV9FTlYgIT09IFwicHJvZHVjdGlvblwiID8gaW52YXJpYW50KGZhbHNlLCBcIltcIiArICh0eXBlb2YgZWxlbWVudC50eXBlID09PSBcInN0cmluZ1wiID8gZWxlbWVudC50eXBlIDogZWxlbWVudC50eXBlLm5hbWUpICsgXCJdIGlzIG5vdCBhIDxSb3V0ZT4gY29tcG9uZW50LiBBbGwgY29tcG9uZW50IGNoaWxkcmVuIG9mIDxSb3V0ZXM+IG11c3QgYmUgYSA8Um91dGU+IG9yIDxSZWFjdC5GcmFnbWVudD5cIikgOiBpbnZhcmlhbnQoZmFsc2UpIDogdm9pZCAwO1xuICAgICEoIWVsZW1lbnQucHJvcHMuaW5kZXggfHwgIWVsZW1lbnQucHJvcHMuY2hpbGRyZW4pID8gcHJvY2Vzcy5lbnYuTk9ERV9FTlYgIT09IFwicHJvZHVjdGlvblwiID8gaW52YXJpYW50KGZhbHNlLCBcIkFuIGluZGV4IHJvdXRlIGNhbm5vdCBoYXZlIGNoaWxkIHJvdXRlcy5cIikgOiBpbnZhcmlhbnQoZmFsc2UpIDogdm9pZCAwO1xuICAgIGxldCB0cmVlUGF0aCA9IFsuLi5wYXJlbnRQYXRoLCBpbmRleF07XG4gICAgbGV0IHJvdXRlID0ge1xuICAgICAgaWQ6IGVsZW1lbnQucHJvcHMuaWQgfHwgdHJlZVBhdGguam9pbihcIi1cIiksXG4gICAgICBjYXNlU2Vuc2l0aXZlOiBlbGVtZW50LnByb3BzLmNhc2VTZW5zaXRpdmUsXG4gICAgICBlbGVtZW50OiBlbGVtZW50LnByb3BzLmVsZW1lbnQsXG4gICAgICBpbmRleDogZWxlbWVudC5wcm9wcy5pbmRleCxcbiAgICAgIHBhdGg6IGVsZW1lbnQucHJvcHMucGF0aCxcbiAgICAgIGxvYWRlcjogZWxlbWVudC5wcm9wcy5sb2FkZXIsXG4gICAgICBhY3Rpb246IGVsZW1lbnQucHJvcHMuYWN0aW9uLFxuICAgICAgZXJyb3JFbGVtZW50OiBlbGVtZW50LnByb3BzLmVycm9yRWxlbWVudCxcbiAgICAgIGhhc0Vycm9yQm91bmRhcnk6IGVsZW1lbnQucHJvcHMuZXJyb3JFbGVtZW50ICE9IG51bGwsXG4gICAgICBzaG91bGRSZXZhbGlkYXRlOiBlbGVtZW50LnByb3BzLnNob3VsZFJldmFsaWRhdGUsXG4gICAgICBoYW5kbGU6IGVsZW1lbnQucHJvcHMuaGFuZGxlXG4gICAgfTtcblxuICAgIGlmIChlbGVtZW50LnByb3BzLmNoaWxkcmVuKSB7XG4gICAgICByb3V0ZS5jaGlsZHJlbiA9IGNyZWF0ZVJvdXRlc0Zyb21DaGlsZHJlbihlbGVtZW50LnByb3BzLmNoaWxkcmVuLCB0cmVlUGF0aCk7XG4gICAgfVxuXG4gICAgcm91dGVzLnB1c2gocm91dGUpO1xuICB9KTtcbiAgcmV0dXJuIHJvdXRlcztcbn1cbi8qKlxuICogUmVuZGVycyB0aGUgcmVzdWx0IG9mIGBtYXRjaFJvdXRlcygpYCBpbnRvIGEgUmVhY3QgZWxlbWVudC5cbiAqL1xuXG5mdW5jdGlvbiByZW5kZXJNYXRjaGVzKG1hdGNoZXMpIHtcbiAgcmV0dXJuIF9yZW5kZXJNYXRjaGVzKG1hdGNoZXMpO1xufVxuLyoqXG4gKiBAcHJpdmF0ZVxuICogV2FsayB0aGUgcm91dGUgdHJlZSBhbmQgYWRkIGhhc0Vycm9yQm91bmRhcnkgaWYgaXQncyBub3QgcHJvdmlkZWQsIHNvIHRoYXRcbiAqIHVzZXJzIHByb3ZpZGluZyBtYW51YWwgcm91dGUgYXJyYXlzIGNhbiBqdXN0IHNwZWNpZnkgZXJyb3JFbGVtZW50XG4gKi9cblxuZnVuY3Rpb24gZW5oYW5jZU1hbnVhbFJvdXRlT2JqZWN0cyhyb3V0ZXMpIHtcbiAgcmV0dXJuIHJvdXRlcy5tYXAocm91dGUgPT4ge1xuICAgIGxldCByb3V0ZUNsb25lID0gX2V4dGVuZHMoe30sIHJvdXRlKTtcblxuICAgIGlmIChyb3V0ZUNsb25lLmhhc0Vycm9yQm91bmRhcnkgPT0gbnVsbCkge1xuICAgICAgcm91dGVDbG9uZS5oYXNFcnJvckJvdW5kYXJ5ID0gcm91dGVDbG9uZS5lcnJvckVsZW1lbnQgIT0gbnVsbDtcbiAgICB9XG5cbiAgICBpZiAocm91dGVDbG9uZS5jaGlsZHJlbikge1xuICAgICAgcm91dGVDbG9uZS5jaGlsZHJlbiA9IGVuaGFuY2VNYW51YWxSb3V0ZU9iamVjdHMocm91dGVDbG9uZS5jaGlsZHJlbik7XG4gICAgfVxuXG4gICAgcmV0dXJuIHJvdXRlQ2xvbmU7XG4gIH0pO1xufVxuXG5mdW5jdGlvbiBjcmVhdGVNZW1vcnlSb3V0ZXIocm91dGVzLCBvcHRzKSB7XG4gIHJldHVybiBjcmVhdGVSb3V0ZXIoe1xuICAgIGJhc2VuYW1lOiBvcHRzID09IG51bGwgPyB2b2lkIDAgOiBvcHRzLmJhc2VuYW1lLFxuICAgIGhpc3Rvcnk6IGNyZWF0ZU1lbW9yeUhpc3Rvcnkoe1xuICAgICAgaW5pdGlhbEVudHJpZXM6IG9wdHMgPT0gbnVsbCA/IHZvaWQgMCA6IG9wdHMuaW5pdGlhbEVudHJpZXMsXG4gICAgICBpbml0aWFsSW5kZXg6IG9wdHMgPT0gbnVsbCA/IHZvaWQgMCA6IG9wdHMuaW5pdGlhbEluZGV4XG4gICAgfSksXG4gICAgaHlkcmF0aW9uRGF0YTogb3B0cyA9PSBudWxsID8gdm9pZCAwIDogb3B0cy5oeWRyYXRpb25EYXRhLFxuICAgIHJvdXRlczogZW5oYW5jZU1hbnVhbFJvdXRlT2JqZWN0cyhyb3V0ZXMpXG4gIH0pLmluaXRpYWxpemUoKTtcbn0gLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vL1xuXG5leHBvcnQgeyBBd2FpdCwgTWVtb3J5Um91dGVyLCBOYXZpZ2F0ZSwgT3V0bGV0LCBSb3V0ZSwgUm91dGVyLCBSb3V0ZXJQcm92aWRlciwgUm91dGVzLCBEYXRhUm91dGVyQ29udGV4dCBhcyBVTlNBRkVfRGF0YVJvdXRlckNvbnRleHQsIERhdGFSb3V0ZXJTdGF0ZUNvbnRleHQgYXMgVU5TQUZFX0RhdGFSb3V0ZXJTdGF0ZUNvbnRleHQsIERhdGFTdGF0aWNSb3V0ZXJDb250ZXh0IGFzIFVOU0FGRV9EYXRhU3RhdGljUm91dGVyQ29udGV4dCwgTG9jYXRpb25Db250ZXh0IGFzIFVOU0FGRV9Mb2NhdGlvbkNvbnRleHQsIE5hdmlnYXRpb25Db250ZXh0IGFzIFVOU0FGRV9OYXZpZ2F0aW9uQ29udGV4dCwgUm91dGVDb250ZXh0IGFzIFVOU0FGRV9Sb3V0ZUNvbnRleHQsIGVuaGFuY2VNYW51YWxSb3V0ZU9iamVjdHMgYXMgVU5TQUZFX2VuaGFuY2VNYW51YWxSb3V0ZU9iamVjdHMsIGNyZWF0ZU1lbW9yeVJvdXRlciwgY3JlYXRlUm91dGVzRnJvbUNoaWxkcmVuLCBjcmVhdGVSb3V0ZXNGcm9tQ2hpbGRyZW4gYXMgY3JlYXRlUm91dGVzRnJvbUVsZW1lbnRzLCByZW5kZXJNYXRjaGVzLCB1c2VBY3Rpb25EYXRhLCB1c2VBc3luY0Vycm9yLCB1c2VBc3luY1ZhbHVlLCB1c2VIcmVmLCB1c2VJblJvdXRlckNvbnRleHQsIHVzZUxvYWRlckRhdGEsIHVzZUxvY2F0aW9uLCB1c2VNYXRjaCwgdXNlTWF0Y2hlcywgdXNlTmF2aWdhdGUsIHVzZU5hdmlnYXRpb24sIHVzZU5hdmlnYXRpb25UeXBlLCB1c2VPdXRsZXQsIHVzZU91dGxldENvbnRleHQsIHVzZVBhcmFtcywgdXNlUmVzb2x2ZWRQYXRoLCB1c2VSZXZhbGlkYXRvciwgdXNlUm91dGVFcnJvciwgdXNlUm91dGVMb2FkZXJEYXRhLCB1c2VSb3V0ZXMgfTtcbi8vIyBzb3VyY2VNYXBwaW5nVVJMPWluZGV4LmpzLm1hcFxuIiwiaW1wb3J0IFJlYWN0RE9NIGZyb20gXCJyZWFjdC1kb20vY2xpZW50XCI7XG5pbXBvcnQgeyByb3V0ZUNvbmZpZyB9IGZyb20gXCIuL3JvdXRlci9pbmRleFwiO1xuaW1wb3J0IHsgUm91dGVyIH0gZnJvbSAncmVhY3Qtcm91dGVyJztcblxuY29uc3Qgbm9kZSA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoXCIjcm9vdFwiKVxuY29uc29sZS5sb2coJ25vZGU6Jywgbm9kZSlcbmxldCByb290O1xuaWYgKG5vZGUpIHtcbiAgICByb290ID0gUmVhY3RET00uY3JlYXRlUm9vdChub2RlKTtcbiAgICByb290LnJlbmRlcig8Um91dGVyIHJvdXRlcz17cm91dGVDb25maWd9IC8+KTtcbn0gZWxzZSB7XG4gICAgY29uc29sZS5lcnJvcignUmVhY3TmsqHmnInmib7liLByb2905qC56IqC54K5Jylcbn1cbiIsIi8qKlxuICogQGxpY2Vuc2UgUmVhY3RcbiAqIHJlYWN0LWRvbS5wcm9kdWN0aW9uLm1pbi5qc1xuICpcbiAqIENvcHlyaWdodCAoYykgRmFjZWJvb2ssIEluYy4gYW5kIGl0cyBhZmZpbGlhdGVzLlxuICpcbiAqIFRoaXMgc291cmNlIGNvZGUgaXMgbGljZW5zZWQgdW5kZXIgdGhlIE1JVCBsaWNlbnNlIGZvdW5kIGluIHRoZVxuICogTElDRU5TRSBmaWxlIGluIHRoZSByb290IGRpcmVjdG9yeSBvZiB0aGlzIHNvdXJjZSB0cmVlLlxuICovXG4vKlxuIE1vZGVybml6ciAzLjAuMHByZSAoQ3VzdG9tIEJ1aWxkKSB8IE1JVFxuKi9cbid1c2Ugc3RyaWN0Jzt2YXIgYWE9cmVxdWlyZShcInJlYWN0XCIpLGNhPXJlcXVpcmUoXCJzY2hlZHVsZXJcIik7ZnVuY3Rpb24gcChhKXtmb3IodmFyIGI9XCJodHRwczovL3JlYWN0anMub3JnL2RvY3MvZXJyb3ItZGVjb2Rlci5odG1sP2ludmFyaWFudD1cIithLGM9MTtjPGFyZ3VtZW50cy5sZW5ndGg7YysrKWIrPVwiJmFyZ3NbXT1cIitlbmNvZGVVUklDb21wb25lbnQoYXJndW1lbnRzW2NdKTtyZXR1cm5cIk1pbmlmaWVkIFJlYWN0IGVycm9yICNcIithK1wiOyB2aXNpdCBcIitiK1wiIGZvciB0aGUgZnVsbCBtZXNzYWdlIG9yIHVzZSB0aGUgbm9uLW1pbmlmaWVkIGRldiBlbnZpcm9ubWVudCBmb3IgZnVsbCBlcnJvcnMgYW5kIGFkZGl0aW9uYWwgaGVscGZ1bCB3YXJuaW5ncy5cIn12YXIgZGE9bmV3IFNldCxlYT17fTtmdW5jdGlvbiBmYShhLGIpe2hhKGEsYik7aGEoYStcIkNhcHR1cmVcIixiKX1cbmZ1bmN0aW9uIGhhKGEsYil7ZWFbYV09Yjtmb3IoYT0wO2E8Yi5sZW5ndGg7YSsrKWRhLmFkZChiW2FdKX1cbnZhciBpYT0hKFwidW5kZWZpbmVkXCI9PT10eXBlb2Ygd2luZG93fHxcInVuZGVmaW5lZFwiPT09dHlwZW9mIHdpbmRvdy5kb2N1bWVudHx8XCJ1bmRlZmluZWRcIj09PXR5cGVvZiB3aW5kb3cuZG9jdW1lbnQuY3JlYXRlRWxlbWVudCksamE9T2JqZWN0LnByb3RvdHlwZS5oYXNPd25Qcm9wZXJ0eSxrYT0vXls6QS1aX2EtelxcdTAwQzAtXFx1MDBENlxcdTAwRDgtXFx1MDBGNlxcdTAwRjgtXFx1MDJGRlxcdTAzNzAtXFx1MDM3RFxcdTAzN0YtXFx1MUZGRlxcdTIwMEMtXFx1MjAwRFxcdTIwNzAtXFx1MjE4RlxcdTJDMDAtXFx1MkZFRlxcdTMwMDEtXFx1RDdGRlxcdUY5MDAtXFx1RkRDRlxcdUZERjAtXFx1RkZGRF1bOkEtWl9hLXpcXHUwMEMwLVxcdTAwRDZcXHUwMEQ4LVxcdTAwRjZcXHUwMEY4LVxcdTAyRkZcXHUwMzcwLVxcdTAzN0RcXHUwMzdGLVxcdTFGRkZcXHUyMDBDLVxcdTIwMERcXHUyMDcwLVxcdTIxOEZcXHUyQzAwLVxcdTJGRUZcXHUzMDAxLVxcdUQ3RkZcXHVGOTAwLVxcdUZEQ0ZcXHVGREYwLVxcdUZGRkRcXC0uMC05XFx1MDBCN1xcdTAzMDAtXFx1MDM2RlxcdTIwM0YtXFx1MjA0MF0qJC8sbGE9XG57fSxtYT17fTtmdW5jdGlvbiBvYShhKXtpZihqYS5jYWxsKG1hLGEpKXJldHVybiEwO2lmKGphLmNhbGwobGEsYSkpcmV0dXJuITE7aWYoa2EudGVzdChhKSlyZXR1cm4gbWFbYV09ITA7bGFbYV09ITA7cmV0dXJuITF9ZnVuY3Rpb24gcGEoYSxiLGMsZCl7aWYobnVsbCE9PWMmJjA9PT1jLnR5cGUpcmV0dXJuITE7c3dpdGNoKHR5cGVvZiBiKXtjYXNlIFwiZnVuY3Rpb25cIjpjYXNlIFwic3ltYm9sXCI6cmV0dXJuITA7Y2FzZSBcImJvb2xlYW5cIjppZihkKXJldHVybiExO2lmKG51bGwhPT1jKXJldHVybiFjLmFjY2VwdHNCb29sZWFuczthPWEudG9Mb3dlckNhc2UoKS5zbGljZSgwLDUpO3JldHVyblwiZGF0YS1cIiE9PWEmJlwiYXJpYS1cIiE9PWE7ZGVmYXVsdDpyZXR1cm4hMX19XG5mdW5jdGlvbiBxYShhLGIsYyxkKXtpZihudWxsPT09Ynx8XCJ1bmRlZmluZWRcIj09PXR5cGVvZiBifHxwYShhLGIsYyxkKSlyZXR1cm4hMDtpZihkKXJldHVybiExO2lmKG51bGwhPT1jKXN3aXRjaChjLnR5cGUpe2Nhc2UgMzpyZXR1cm4hYjtjYXNlIDQ6cmV0dXJuITE9PT1iO2Nhc2UgNTpyZXR1cm4gaXNOYU4oYik7Y2FzZSA2OnJldHVybiBpc05hTihiKXx8MT5ifXJldHVybiExfWZ1bmN0aW9uIHYoYSxiLGMsZCxlLGYsZyl7dGhpcy5hY2NlcHRzQm9vbGVhbnM9Mj09PWJ8fDM9PT1ifHw0PT09Yjt0aGlzLmF0dHJpYnV0ZU5hbWU9ZDt0aGlzLmF0dHJpYnV0ZU5hbWVzcGFjZT1lO3RoaXMubXVzdFVzZVByb3BlcnR5PWM7dGhpcy5wcm9wZXJ0eU5hbWU9YTt0aGlzLnR5cGU9Yjt0aGlzLnNhbml0aXplVVJMPWY7dGhpcy5yZW1vdmVFbXB0eVN0cmluZz1nfXZhciB6PXt9O1xuXCJjaGlsZHJlbiBkYW5nZXJvdXNseVNldElubmVySFRNTCBkZWZhdWx0VmFsdWUgZGVmYXVsdENoZWNrZWQgaW5uZXJIVE1MIHN1cHByZXNzQ29udGVudEVkaXRhYmxlV2FybmluZyBzdXBwcmVzc0h5ZHJhdGlvbldhcm5pbmcgc3R5bGVcIi5zcGxpdChcIiBcIikuZm9yRWFjaChmdW5jdGlvbihhKXt6W2FdPW5ldyB2KGEsMCwhMSxhLG51bGwsITEsITEpfSk7W1tcImFjY2VwdENoYXJzZXRcIixcImFjY2VwdC1jaGFyc2V0XCJdLFtcImNsYXNzTmFtZVwiLFwiY2xhc3NcIl0sW1wiaHRtbEZvclwiLFwiZm9yXCJdLFtcImh0dHBFcXVpdlwiLFwiaHR0cC1lcXVpdlwiXV0uZm9yRWFjaChmdW5jdGlvbihhKXt2YXIgYj1hWzBdO3pbYl09bmV3IHYoYiwxLCExLGFbMV0sbnVsbCwhMSwhMSl9KTtbXCJjb250ZW50RWRpdGFibGVcIixcImRyYWdnYWJsZVwiLFwic3BlbGxDaGVja1wiLFwidmFsdWVcIl0uZm9yRWFjaChmdW5jdGlvbihhKXt6W2FdPW5ldyB2KGEsMiwhMSxhLnRvTG93ZXJDYXNlKCksbnVsbCwhMSwhMSl9KTtcbltcImF1dG9SZXZlcnNlXCIsXCJleHRlcm5hbFJlc291cmNlc1JlcXVpcmVkXCIsXCJmb2N1c2FibGVcIixcInByZXNlcnZlQWxwaGFcIl0uZm9yRWFjaChmdW5jdGlvbihhKXt6W2FdPW5ldyB2KGEsMiwhMSxhLG51bGwsITEsITEpfSk7XCJhbGxvd0Z1bGxTY3JlZW4gYXN5bmMgYXV0b0ZvY3VzIGF1dG9QbGF5IGNvbnRyb2xzIGRlZmF1bHQgZGVmZXIgZGlzYWJsZWQgZGlzYWJsZVBpY3R1cmVJblBpY3R1cmUgZGlzYWJsZVJlbW90ZVBsYXliYWNrIGZvcm1Ob1ZhbGlkYXRlIGhpZGRlbiBsb29wIG5vTW9kdWxlIG5vVmFsaWRhdGUgb3BlbiBwbGF5c0lubGluZSByZWFkT25seSByZXF1aXJlZCByZXZlcnNlZCBzY29wZWQgc2VhbWxlc3MgaXRlbVNjb3BlXCIuc3BsaXQoXCIgXCIpLmZvckVhY2goZnVuY3Rpb24oYSl7elthXT1uZXcgdihhLDMsITEsYS50b0xvd2VyQ2FzZSgpLG51bGwsITEsITEpfSk7XG5bXCJjaGVja2VkXCIsXCJtdWx0aXBsZVwiLFwibXV0ZWRcIixcInNlbGVjdGVkXCJdLmZvckVhY2goZnVuY3Rpb24oYSl7elthXT1uZXcgdihhLDMsITAsYSxudWxsLCExLCExKX0pO1tcImNhcHR1cmVcIixcImRvd25sb2FkXCJdLmZvckVhY2goZnVuY3Rpb24oYSl7elthXT1uZXcgdihhLDQsITEsYSxudWxsLCExLCExKX0pO1tcImNvbHNcIixcInJvd3NcIixcInNpemVcIixcInNwYW5cIl0uZm9yRWFjaChmdW5jdGlvbihhKXt6W2FdPW5ldyB2KGEsNiwhMSxhLG51bGwsITEsITEpfSk7W1wicm93U3BhblwiLFwic3RhcnRcIl0uZm9yRWFjaChmdW5jdGlvbihhKXt6W2FdPW5ldyB2KGEsNSwhMSxhLnRvTG93ZXJDYXNlKCksbnVsbCwhMSwhMSl9KTt2YXIgcmE9L1tcXC06XShbYS16XSkvZztmdW5jdGlvbiBzYShhKXtyZXR1cm4gYVsxXS50b1VwcGVyQ2FzZSgpfVxuXCJhY2NlbnQtaGVpZ2h0IGFsaWdubWVudC1iYXNlbGluZSBhcmFiaWMtZm9ybSBiYXNlbGluZS1zaGlmdCBjYXAtaGVpZ2h0IGNsaXAtcGF0aCBjbGlwLXJ1bGUgY29sb3ItaW50ZXJwb2xhdGlvbiBjb2xvci1pbnRlcnBvbGF0aW9uLWZpbHRlcnMgY29sb3ItcHJvZmlsZSBjb2xvci1yZW5kZXJpbmcgZG9taW5hbnQtYmFzZWxpbmUgZW5hYmxlLWJhY2tncm91bmQgZmlsbC1vcGFjaXR5IGZpbGwtcnVsZSBmbG9vZC1jb2xvciBmbG9vZC1vcGFjaXR5IGZvbnQtZmFtaWx5IGZvbnQtc2l6ZSBmb250LXNpemUtYWRqdXN0IGZvbnQtc3RyZXRjaCBmb250LXN0eWxlIGZvbnQtdmFyaWFudCBmb250LXdlaWdodCBnbHlwaC1uYW1lIGdseXBoLW9yaWVudGF0aW9uLWhvcml6b250YWwgZ2x5cGgtb3JpZW50YXRpb24tdmVydGljYWwgaG9yaXotYWR2LXggaG9yaXotb3JpZ2luLXggaW1hZ2UtcmVuZGVyaW5nIGxldHRlci1zcGFjaW5nIGxpZ2h0aW5nLWNvbG9yIG1hcmtlci1lbmQgbWFya2VyLW1pZCBtYXJrZXItc3RhcnQgb3ZlcmxpbmUtcG9zaXRpb24gb3ZlcmxpbmUtdGhpY2tuZXNzIHBhaW50LW9yZGVyIHBhbm9zZS0xIHBvaW50ZXItZXZlbnRzIHJlbmRlcmluZy1pbnRlbnQgc2hhcGUtcmVuZGVyaW5nIHN0b3AtY29sb3Igc3RvcC1vcGFjaXR5IHN0cmlrZXRocm91Z2gtcG9zaXRpb24gc3RyaWtldGhyb3VnaC10aGlja25lc3Mgc3Ryb2tlLWRhc2hhcnJheSBzdHJva2UtZGFzaG9mZnNldCBzdHJva2UtbGluZWNhcCBzdHJva2UtbGluZWpvaW4gc3Ryb2tlLW1pdGVybGltaXQgc3Ryb2tlLW9wYWNpdHkgc3Ryb2tlLXdpZHRoIHRleHQtYW5jaG9yIHRleHQtZGVjb3JhdGlvbiB0ZXh0LXJlbmRlcmluZyB1bmRlcmxpbmUtcG9zaXRpb24gdW5kZXJsaW5lLXRoaWNrbmVzcyB1bmljb2RlLWJpZGkgdW5pY29kZS1yYW5nZSB1bml0cy1wZXItZW0gdi1hbHBoYWJldGljIHYtaGFuZ2luZyB2LWlkZW9ncmFwaGljIHYtbWF0aGVtYXRpY2FsIHZlY3Rvci1lZmZlY3QgdmVydC1hZHYteSB2ZXJ0LW9yaWdpbi14IHZlcnQtb3JpZ2luLXkgd29yZC1zcGFjaW5nIHdyaXRpbmctbW9kZSB4bWxuczp4bGluayB4LWhlaWdodFwiLnNwbGl0KFwiIFwiKS5mb3JFYWNoKGZ1bmN0aW9uKGEpe3ZhciBiPWEucmVwbGFjZShyYSxcbnNhKTt6W2JdPW5ldyB2KGIsMSwhMSxhLG51bGwsITEsITEpfSk7XCJ4bGluazphY3R1YXRlIHhsaW5rOmFyY3JvbGUgeGxpbms6cm9sZSB4bGluazpzaG93IHhsaW5rOnRpdGxlIHhsaW5rOnR5cGVcIi5zcGxpdChcIiBcIikuZm9yRWFjaChmdW5jdGlvbihhKXt2YXIgYj1hLnJlcGxhY2UocmEsc2EpO3pbYl09bmV3IHYoYiwxLCExLGEsXCJodHRwOi8vd3d3LnczLm9yZy8xOTk5L3hsaW5rXCIsITEsITEpfSk7W1wieG1sOmJhc2VcIixcInhtbDpsYW5nXCIsXCJ4bWw6c3BhY2VcIl0uZm9yRWFjaChmdW5jdGlvbihhKXt2YXIgYj1hLnJlcGxhY2UocmEsc2EpO3pbYl09bmV3IHYoYiwxLCExLGEsXCJodHRwOi8vd3d3LnczLm9yZy9YTUwvMTk5OC9uYW1lc3BhY2VcIiwhMSwhMSl9KTtbXCJ0YWJJbmRleFwiLFwiY3Jvc3NPcmlnaW5cIl0uZm9yRWFjaChmdW5jdGlvbihhKXt6W2FdPW5ldyB2KGEsMSwhMSxhLnRvTG93ZXJDYXNlKCksbnVsbCwhMSwhMSl9KTtcbnoueGxpbmtIcmVmPW5ldyB2KFwieGxpbmtIcmVmXCIsMSwhMSxcInhsaW5rOmhyZWZcIixcImh0dHA6Ly93d3cudzMub3JnLzE5OTkveGxpbmtcIiwhMCwhMSk7W1wic3JjXCIsXCJocmVmXCIsXCJhY3Rpb25cIixcImZvcm1BY3Rpb25cIl0uZm9yRWFjaChmdW5jdGlvbihhKXt6W2FdPW5ldyB2KGEsMSwhMSxhLnRvTG93ZXJDYXNlKCksbnVsbCwhMCwhMCl9KTtcbmZ1bmN0aW9uIHRhKGEsYixjLGQpe3ZhciBlPXouaGFzT3duUHJvcGVydHkoYik/eltiXTpudWxsO2lmKG51bGwhPT1lPzAhPT1lLnR5cGU6ZHx8ISgyPGIubGVuZ3RoKXx8XCJvXCIhPT1iWzBdJiZcIk9cIiE9PWJbMF18fFwiblwiIT09YlsxXSYmXCJOXCIhPT1iWzFdKXFhKGIsYyxlLGQpJiYoYz1udWxsKSxkfHxudWxsPT09ZT9vYShiKSYmKG51bGw9PT1jP2EucmVtb3ZlQXR0cmlidXRlKGIpOmEuc2V0QXR0cmlidXRlKGIsXCJcIitjKSk6ZS5tdXN0VXNlUHJvcGVydHk/YVtlLnByb3BlcnR5TmFtZV09bnVsbD09PWM/Mz09PWUudHlwZT8hMTpcIlwiOmM6KGI9ZS5hdHRyaWJ1dGVOYW1lLGQ9ZS5hdHRyaWJ1dGVOYW1lc3BhY2UsbnVsbD09PWM/YS5yZW1vdmVBdHRyaWJ1dGUoYik6KGU9ZS50eXBlLGM9Mz09PWV8fDQ9PT1lJiYhMD09PWM/XCJcIjpcIlwiK2MsZD9hLnNldEF0dHJpYnV0ZU5TKGQsYixjKTphLnNldEF0dHJpYnV0ZShiLGMpKSl9XG52YXIgdWE9YWEuX19TRUNSRVRfSU5URVJOQUxTX0RPX05PVF9VU0VfT1JfWU9VX1dJTExfQkVfRklSRUQsdmE9U3ltYm9sLmZvcihcInJlYWN0LmVsZW1lbnRcIiksd2E9U3ltYm9sLmZvcihcInJlYWN0LnBvcnRhbFwiKSx5YT1TeW1ib2wuZm9yKFwicmVhY3QuZnJhZ21lbnRcIiksemE9U3ltYm9sLmZvcihcInJlYWN0LnN0cmljdF9tb2RlXCIpLEFhPVN5bWJvbC5mb3IoXCJyZWFjdC5wcm9maWxlclwiKSxCYT1TeW1ib2wuZm9yKFwicmVhY3QucHJvdmlkZXJcIiksQ2E9U3ltYm9sLmZvcihcInJlYWN0LmNvbnRleHRcIiksRGE9U3ltYm9sLmZvcihcInJlYWN0LmZvcndhcmRfcmVmXCIpLEVhPVN5bWJvbC5mb3IoXCJyZWFjdC5zdXNwZW5zZVwiKSxGYT1TeW1ib2wuZm9yKFwicmVhY3Quc3VzcGVuc2VfbGlzdFwiKSxHYT1TeW1ib2wuZm9yKFwicmVhY3QubWVtb1wiKSxIYT1TeW1ib2wuZm9yKFwicmVhY3QubGF6eVwiKTtTeW1ib2wuZm9yKFwicmVhY3Quc2NvcGVcIik7U3ltYm9sLmZvcihcInJlYWN0LmRlYnVnX3RyYWNlX21vZGVcIik7XG52YXIgSWE9U3ltYm9sLmZvcihcInJlYWN0Lm9mZnNjcmVlblwiKTtTeW1ib2wuZm9yKFwicmVhY3QubGVnYWN5X2hpZGRlblwiKTtTeW1ib2wuZm9yKFwicmVhY3QuY2FjaGVcIik7U3ltYm9sLmZvcihcInJlYWN0LnRyYWNpbmdfbWFya2VyXCIpO3ZhciBKYT1TeW1ib2wuaXRlcmF0b3I7ZnVuY3Rpb24gS2EoYSl7aWYobnVsbD09PWF8fFwib2JqZWN0XCIhPT10eXBlb2YgYSlyZXR1cm4gbnVsbDthPUphJiZhW0phXXx8YVtcIkBAaXRlcmF0b3JcIl07cmV0dXJuXCJmdW5jdGlvblwiPT09dHlwZW9mIGE/YTpudWxsfXZhciBBPU9iamVjdC5hc3NpZ24sTGE7ZnVuY3Rpb24gTWEoYSl7aWYodm9pZCAwPT09TGEpdHJ5e3Rocm93IEVycm9yKCk7fWNhdGNoKGMpe3ZhciBiPWMuc3RhY2sudHJpbSgpLm1hdGNoKC9cXG4oICooYXQgKT8pLyk7TGE9YiYmYlsxXXx8XCJcIn1yZXR1cm5cIlxcblwiK0xhK2F9dmFyIE5hPSExO1xuZnVuY3Rpb24gT2EoYSxiKXtpZighYXx8TmEpcmV0dXJuXCJcIjtOYT0hMDt2YXIgYz1FcnJvci5wcmVwYXJlU3RhY2tUcmFjZTtFcnJvci5wcmVwYXJlU3RhY2tUcmFjZT12b2lkIDA7dHJ5e2lmKGIpaWYoYj1mdW5jdGlvbigpe3Rocm93IEVycm9yKCk7fSxPYmplY3QuZGVmaW5lUHJvcGVydHkoYi5wcm90b3R5cGUsXCJwcm9wc1wiLHtzZXQ6ZnVuY3Rpb24oKXt0aHJvdyBFcnJvcigpO319KSxcIm9iamVjdFwiPT09dHlwZW9mIFJlZmxlY3QmJlJlZmxlY3QuY29uc3RydWN0KXt0cnl7UmVmbGVjdC5jb25zdHJ1Y3QoYixbXSl9Y2F0Y2gobCl7dmFyIGQ9bH1SZWZsZWN0LmNvbnN0cnVjdChhLFtdLGIpfWVsc2V7dHJ5e2IuY2FsbCgpfWNhdGNoKGwpe2Q9bH1hLmNhbGwoYi5wcm90b3R5cGUpfWVsc2V7dHJ5e3Rocm93IEVycm9yKCk7fWNhdGNoKGwpe2Q9bH1hKCl9fWNhdGNoKGwpe2lmKGwmJmQmJlwic3RyaW5nXCI9PT10eXBlb2YgbC5zdGFjayl7Zm9yKHZhciBlPWwuc3RhY2suc3BsaXQoXCJcXG5cIiksXG5mPWQuc3RhY2suc3BsaXQoXCJcXG5cIiksZz1lLmxlbmd0aC0xLGg9Zi5sZW5ndGgtMTsxPD1nJiYwPD1oJiZlW2ddIT09ZltoXTspaC0tO2Zvcig7MTw9ZyYmMDw9aDtnLS0saC0tKWlmKGVbZ10hPT1mW2hdKXtpZigxIT09Z3x8MSE9PWgpe2RvIGlmKGctLSxoLS0sMD5ofHxlW2ddIT09ZltoXSl7dmFyIGs9XCJcXG5cIitlW2ddLnJlcGxhY2UoXCIgYXQgbmV3IFwiLFwiIGF0IFwiKTthLmRpc3BsYXlOYW1lJiZrLmluY2x1ZGVzKFwiPGFub255bW91cz5cIikmJihrPWsucmVwbGFjZShcIjxhbm9ueW1vdXM+XCIsYS5kaXNwbGF5TmFtZSkpO3JldHVybiBrfXdoaWxlKDE8PWcmJjA8PWgpfWJyZWFrfX19ZmluYWxseXtOYT0hMSxFcnJvci5wcmVwYXJlU3RhY2tUcmFjZT1jfXJldHVybihhPWE/YS5kaXNwbGF5TmFtZXx8YS5uYW1lOlwiXCIpP01hKGEpOlwiXCJ9XG5mdW5jdGlvbiBQYShhKXtzd2l0Y2goYS50YWcpe2Nhc2UgNTpyZXR1cm4gTWEoYS50eXBlKTtjYXNlIDE2OnJldHVybiBNYShcIkxhenlcIik7Y2FzZSAxMzpyZXR1cm4gTWEoXCJTdXNwZW5zZVwiKTtjYXNlIDE5OnJldHVybiBNYShcIlN1c3BlbnNlTGlzdFwiKTtjYXNlIDA6Y2FzZSAyOmNhc2UgMTU6cmV0dXJuIGE9T2EoYS50eXBlLCExKSxhO2Nhc2UgMTE6cmV0dXJuIGE9T2EoYS50eXBlLnJlbmRlciwhMSksYTtjYXNlIDE6cmV0dXJuIGE9T2EoYS50eXBlLCEwKSxhO2RlZmF1bHQ6cmV0dXJuXCJcIn19XG5mdW5jdGlvbiBRYShhKXtpZihudWxsPT1hKXJldHVybiBudWxsO2lmKFwiZnVuY3Rpb25cIj09PXR5cGVvZiBhKXJldHVybiBhLmRpc3BsYXlOYW1lfHxhLm5hbWV8fG51bGw7aWYoXCJzdHJpbmdcIj09PXR5cGVvZiBhKXJldHVybiBhO3N3aXRjaChhKXtjYXNlIHlhOnJldHVyblwiRnJhZ21lbnRcIjtjYXNlIHdhOnJldHVyblwiUG9ydGFsXCI7Y2FzZSBBYTpyZXR1cm5cIlByb2ZpbGVyXCI7Y2FzZSB6YTpyZXR1cm5cIlN0cmljdE1vZGVcIjtjYXNlIEVhOnJldHVyblwiU3VzcGVuc2VcIjtjYXNlIEZhOnJldHVyblwiU3VzcGVuc2VMaXN0XCJ9aWYoXCJvYmplY3RcIj09PXR5cGVvZiBhKXN3aXRjaChhLiQkdHlwZW9mKXtjYXNlIENhOnJldHVybihhLmRpc3BsYXlOYW1lfHxcIkNvbnRleHRcIikrXCIuQ29uc3VtZXJcIjtjYXNlIEJhOnJldHVybihhLl9jb250ZXh0LmRpc3BsYXlOYW1lfHxcIkNvbnRleHRcIikrXCIuUHJvdmlkZXJcIjtjYXNlIERhOnZhciBiPWEucmVuZGVyO2E9YS5kaXNwbGF5TmFtZTthfHwoYT1iLmRpc3BsYXlOYW1lfHxcbmIubmFtZXx8XCJcIixhPVwiXCIhPT1hP1wiRm9yd2FyZFJlZihcIithK1wiKVwiOlwiRm9yd2FyZFJlZlwiKTtyZXR1cm4gYTtjYXNlIEdhOnJldHVybiBiPWEuZGlzcGxheU5hbWV8fG51bGwsbnVsbCE9PWI/YjpRYShhLnR5cGUpfHxcIk1lbW9cIjtjYXNlIEhhOmI9YS5fcGF5bG9hZDthPWEuX2luaXQ7dHJ5e3JldHVybiBRYShhKGIpKX1jYXRjaChjKXt9fXJldHVybiBudWxsfVxuZnVuY3Rpb24gUmEoYSl7dmFyIGI9YS50eXBlO3N3aXRjaChhLnRhZyl7Y2FzZSAyNDpyZXR1cm5cIkNhY2hlXCI7Y2FzZSA5OnJldHVybihiLmRpc3BsYXlOYW1lfHxcIkNvbnRleHRcIikrXCIuQ29uc3VtZXJcIjtjYXNlIDEwOnJldHVybihiLl9jb250ZXh0LmRpc3BsYXlOYW1lfHxcIkNvbnRleHRcIikrXCIuUHJvdmlkZXJcIjtjYXNlIDE4OnJldHVyblwiRGVoeWRyYXRlZEZyYWdtZW50XCI7Y2FzZSAxMTpyZXR1cm4gYT1iLnJlbmRlcixhPWEuZGlzcGxheU5hbWV8fGEubmFtZXx8XCJcIixiLmRpc3BsYXlOYW1lfHwoXCJcIiE9PWE/XCJGb3J3YXJkUmVmKFwiK2ErXCIpXCI6XCJGb3J3YXJkUmVmXCIpO2Nhc2UgNzpyZXR1cm5cIkZyYWdtZW50XCI7Y2FzZSA1OnJldHVybiBiO2Nhc2UgNDpyZXR1cm5cIlBvcnRhbFwiO2Nhc2UgMzpyZXR1cm5cIlJvb3RcIjtjYXNlIDY6cmV0dXJuXCJUZXh0XCI7Y2FzZSAxNjpyZXR1cm4gUWEoYik7Y2FzZSA4OnJldHVybiBiPT09emE/XCJTdHJpY3RNb2RlXCI6XCJNb2RlXCI7Y2FzZSAyMjpyZXR1cm5cIk9mZnNjcmVlblwiO1xuY2FzZSAxMjpyZXR1cm5cIlByb2ZpbGVyXCI7Y2FzZSAyMTpyZXR1cm5cIlNjb3BlXCI7Y2FzZSAxMzpyZXR1cm5cIlN1c3BlbnNlXCI7Y2FzZSAxOTpyZXR1cm5cIlN1c3BlbnNlTGlzdFwiO2Nhc2UgMjU6cmV0dXJuXCJUcmFjaW5nTWFya2VyXCI7Y2FzZSAxOmNhc2UgMDpjYXNlIDE3OmNhc2UgMjpjYXNlIDE0OmNhc2UgMTU6aWYoXCJmdW5jdGlvblwiPT09dHlwZW9mIGIpcmV0dXJuIGIuZGlzcGxheU5hbWV8fGIubmFtZXx8bnVsbDtpZihcInN0cmluZ1wiPT09dHlwZW9mIGIpcmV0dXJuIGJ9cmV0dXJuIG51bGx9ZnVuY3Rpb24gU2EoYSl7c3dpdGNoKHR5cGVvZiBhKXtjYXNlIFwiYm9vbGVhblwiOmNhc2UgXCJudW1iZXJcIjpjYXNlIFwic3RyaW5nXCI6Y2FzZSBcInVuZGVmaW5lZFwiOnJldHVybiBhO2Nhc2UgXCJvYmplY3RcIjpyZXR1cm4gYTtkZWZhdWx0OnJldHVyblwiXCJ9fVxuZnVuY3Rpb24gVGEoYSl7dmFyIGI9YS50eXBlO3JldHVybihhPWEubm9kZU5hbWUpJiZcImlucHV0XCI9PT1hLnRvTG93ZXJDYXNlKCkmJihcImNoZWNrYm94XCI9PT1ifHxcInJhZGlvXCI9PT1iKX1cbmZ1bmN0aW9uIFVhKGEpe3ZhciBiPVRhKGEpP1wiY2hlY2tlZFwiOlwidmFsdWVcIixjPU9iamVjdC5nZXRPd25Qcm9wZXJ0eURlc2NyaXB0b3IoYS5jb25zdHJ1Y3Rvci5wcm90b3R5cGUsYiksZD1cIlwiK2FbYl07aWYoIWEuaGFzT3duUHJvcGVydHkoYikmJlwidW5kZWZpbmVkXCIhPT10eXBlb2YgYyYmXCJmdW5jdGlvblwiPT09dHlwZW9mIGMuZ2V0JiZcImZ1bmN0aW9uXCI9PT10eXBlb2YgYy5zZXQpe3ZhciBlPWMuZ2V0LGY9Yy5zZXQ7T2JqZWN0LmRlZmluZVByb3BlcnR5KGEsYix7Y29uZmlndXJhYmxlOiEwLGdldDpmdW5jdGlvbigpe3JldHVybiBlLmNhbGwodGhpcyl9LHNldDpmdW5jdGlvbihhKXtkPVwiXCIrYTtmLmNhbGwodGhpcyxhKX19KTtPYmplY3QuZGVmaW5lUHJvcGVydHkoYSxiLHtlbnVtZXJhYmxlOmMuZW51bWVyYWJsZX0pO3JldHVybntnZXRWYWx1ZTpmdW5jdGlvbigpe3JldHVybiBkfSxzZXRWYWx1ZTpmdW5jdGlvbihhKXtkPVwiXCIrYX0sc3RvcFRyYWNraW5nOmZ1bmN0aW9uKCl7YS5fdmFsdWVUcmFja2VyPVxubnVsbDtkZWxldGUgYVtiXX19fX1mdW5jdGlvbiBWYShhKXthLl92YWx1ZVRyYWNrZXJ8fChhLl92YWx1ZVRyYWNrZXI9VWEoYSkpfWZ1bmN0aW9uIFdhKGEpe2lmKCFhKXJldHVybiExO3ZhciBiPWEuX3ZhbHVlVHJhY2tlcjtpZighYilyZXR1cm4hMDt2YXIgYz1iLmdldFZhbHVlKCk7dmFyIGQ9XCJcIjthJiYoZD1UYShhKT9hLmNoZWNrZWQ/XCJ0cnVlXCI6XCJmYWxzZVwiOmEudmFsdWUpO2E9ZDtyZXR1cm4gYSE9PWM/KGIuc2V0VmFsdWUoYSksITApOiExfWZ1bmN0aW9uIFhhKGEpe2E9YXx8KFwidW5kZWZpbmVkXCIhPT10eXBlb2YgZG9jdW1lbnQ/ZG9jdW1lbnQ6dm9pZCAwKTtpZihcInVuZGVmaW5lZFwiPT09dHlwZW9mIGEpcmV0dXJuIG51bGw7dHJ5e3JldHVybiBhLmFjdGl2ZUVsZW1lbnR8fGEuYm9keX1jYXRjaChiKXtyZXR1cm4gYS5ib2R5fX1cbmZ1bmN0aW9uIFlhKGEsYil7dmFyIGM9Yi5jaGVja2VkO3JldHVybiBBKHt9LGIse2RlZmF1bHRDaGVja2VkOnZvaWQgMCxkZWZhdWx0VmFsdWU6dm9pZCAwLHZhbHVlOnZvaWQgMCxjaGVja2VkOm51bGwhPWM/YzphLl93cmFwcGVyU3RhdGUuaW5pdGlhbENoZWNrZWR9KX1mdW5jdGlvbiBaYShhLGIpe3ZhciBjPW51bGw9PWIuZGVmYXVsdFZhbHVlP1wiXCI6Yi5kZWZhdWx0VmFsdWUsZD1udWxsIT1iLmNoZWNrZWQ/Yi5jaGVja2VkOmIuZGVmYXVsdENoZWNrZWQ7Yz1TYShudWxsIT1iLnZhbHVlP2IudmFsdWU6Yyk7YS5fd3JhcHBlclN0YXRlPXtpbml0aWFsQ2hlY2tlZDpkLGluaXRpYWxWYWx1ZTpjLGNvbnRyb2xsZWQ6XCJjaGVja2JveFwiPT09Yi50eXBlfHxcInJhZGlvXCI9PT1iLnR5cGU/bnVsbCE9Yi5jaGVja2VkOm51bGwhPWIudmFsdWV9fWZ1bmN0aW9uIGFiKGEsYil7Yj1iLmNoZWNrZWQ7bnVsbCE9YiYmdGEoYSxcImNoZWNrZWRcIixiLCExKX1cbmZ1bmN0aW9uIGJiKGEsYil7YWIoYSxiKTt2YXIgYz1TYShiLnZhbHVlKSxkPWIudHlwZTtpZihudWxsIT1jKWlmKFwibnVtYmVyXCI9PT1kKXtpZigwPT09YyYmXCJcIj09PWEudmFsdWV8fGEudmFsdWUhPWMpYS52YWx1ZT1cIlwiK2N9ZWxzZSBhLnZhbHVlIT09XCJcIitjJiYoYS52YWx1ZT1cIlwiK2MpO2Vsc2UgaWYoXCJzdWJtaXRcIj09PWR8fFwicmVzZXRcIj09PWQpe2EucmVtb3ZlQXR0cmlidXRlKFwidmFsdWVcIik7cmV0dXJufWIuaGFzT3duUHJvcGVydHkoXCJ2YWx1ZVwiKT9jYihhLGIudHlwZSxjKTpiLmhhc093blByb3BlcnR5KFwiZGVmYXVsdFZhbHVlXCIpJiZjYihhLGIudHlwZSxTYShiLmRlZmF1bHRWYWx1ZSkpO251bGw9PWIuY2hlY2tlZCYmbnVsbCE9Yi5kZWZhdWx0Q2hlY2tlZCYmKGEuZGVmYXVsdENoZWNrZWQ9ISFiLmRlZmF1bHRDaGVja2VkKX1cbmZ1bmN0aW9uIGRiKGEsYixjKXtpZihiLmhhc093blByb3BlcnR5KFwidmFsdWVcIil8fGIuaGFzT3duUHJvcGVydHkoXCJkZWZhdWx0VmFsdWVcIikpe3ZhciBkPWIudHlwZTtpZighKFwic3VibWl0XCIhPT1kJiZcInJlc2V0XCIhPT1kfHx2b2lkIDAhPT1iLnZhbHVlJiZudWxsIT09Yi52YWx1ZSkpcmV0dXJuO2I9XCJcIithLl93cmFwcGVyU3RhdGUuaW5pdGlhbFZhbHVlO2N8fGI9PT1hLnZhbHVlfHwoYS52YWx1ZT1iKTthLmRlZmF1bHRWYWx1ZT1ifWM9YS5uYW1lO1wiXCIhPT1jJiYoYS5uYW1lPVwiXCIpO2EuZGVmYXVsdENoZWNrZWQ9ISFhLl93cmFwcGVyU3RhdGUuaW5pdGlhbENoZWNrZWQ7XCJcIiE9PWMmJihhLm5hbWU9Yyl9XG5mdW5jdGlvbiBjYihhLGIsYyl7aWYoXCJudW1iZXJcIiE9PWJ8fFhhKGEub3duZXJEb2N1bWVudCkhPT1hKW51bGw9PWM/YS5kZWZhdWx0VmFsdWU9XCJcIithLl93cmFwcGVyU3RhdGUuaW5pdGlhbFZhbHVlOmEuZGVmYXVsdFZhbHVlIT09XCJcIitjJiYoYS5kZWZhdWx0VmFsdWU9XCJcIitjKX12YXIgZWI9QXJyYXkuaXNBcnJheTtcbmZ1bmN0aW9uIGZiKGEsYixjLGQpe2E9YS5vcHRpb25zO2lmKGIpe2I9e307Zm9yKHZhciBlPTA7ZTxjLmxlbmd0aDtlKyspYltcIiRcIitjW2VdXT0hMDtmb3IoYz0wO2M8YS5sZW5ndGg7YysrKWU9Yi5oYXNPd25Qcm9wZXJ0eShcIiRcIithW2NdLnZhbHVlKSxhW2NdLnNlbGVjdGVkIT09ZSYmKGFbY10uc2VsZWN0ZWQ9ZSksZSYmZCYmKGFbY10uZGVmYXVsdFNlbGVjdGVkPSEwKX1lbHNle2M9XCJcIitTYShjKTtiPW51bGw7Zm9yKGU9MDtlPGEubGVuZ3RoO2UrKyl7aWYoYVtlXS52YWx1ZT09PWMpe2FbZV0uc2VsZWN0ZWQ9ITA7ZCYmKGFbZV0uZGVmYXVsdFNlbGVjdGVkPSEwKTtyZXR1cm59bnVsbCE9PWJ8fGFbZV0uZGlzYWJsZWR8fChiPWFbZV0pfW51bGwhPT1iJiYoYi5zZWxlY3RlZD0hMCl9fVxuZnVuY3Rpb24gZ2IoYSxiKXtpZihudWxsIT1iLmRhbmdlcm91c2x5U2V0SW5uZXJIVE1MKXRocm93IEVycm9yKHAoOTEpKTtyZXR1cm4gQSh7fSxiLHt2YWx1ZTp2b2lkIDAsZGVmYXVsdFZhbHVlOnZvaWQgMCxjaGlsZHJlbjpcIlwiK2EuX3dyYXBwZXJTdGF0ZS5pbml0aWFsVmFsdWV9KX1mdW5jdGlvbiBoYihhLGIpe3ZhciBjPWIudmFsdWU7aWYobnVsbD09Yyl7Yz1iLmNoaWxkcmVuO2I9Yi5kZWZhdWx0VmFsdWU7aWYobnVsbCE9Yyl7aWYobnVsbCE9Yil0aHJvdyBFcnJvcihwKDkyKSk7aWYoZWIoYykpe2lmKDE8Yy5sZW5ndGgpdGhyb3cgRXJyb3IocCg5MykpO2M9Y1swXX1iPWN9bnVsbD09YiYmKGI9XCJcIik7Yz1ifWEuX3dyYXBwZXJTdGF0ZT17aW5pdGlhbFZhbHVlOlNhKGMpfX1cbmZ1bmN0aW9uIGliKGEsYil7dmFyIGM9U2EoYi52YWx1ZSksZD1TYShiLmRlZmF1bHRWYWx1ZSk7bnVsbCE9YyYmKGM9XCJcIitjLGMhPT1hLnZhbHVlJiYoYS52YWx1ZT1jKSxudWxsPT1iLmRlZmF1bHRWYWx1ZSYmYS5kZWZhdWx0VmFsdWUhPT1jJiYoYS5kZWZhdWx0VmFsdWU9YykpO251bGwhPWQmJihhLmRlZmF1bHRWYWx1ZT1cIlwiK2QpfWZ1bmN0aW9uIGpiKGEpe3ZhciBiPWEudGV4dENvbnRlbnQ7Yj09PWEuX3dyYXBwZXJTdGF0ZS5pbml0aWFsVmFsdWUmJlwiXCIhPT1iJiZudWxsIT09YiYmKGEudmFsdWU9Yil9ZnVuY3Rpb24ga2IoYSl7c3dpdGNoKGEpe2Nhc2UgXCJzdmdcIjpyZXR1cm5cImh0dHA6Ly93d3cudzMub3JnLzIwMDAvc3ZnXCI7Y2FzZSBcIm1hdGhcIjpyZXR1cm5cImh0dHA6Ly93d3cudzMub3JnLzE5OTgvTWF0aC9NYXRoTUxcIjtkZWZhdWx0OnJldHVyblwiaHR0cDovL3d3dy53My5vcmcvMTk5OS94aHRtbFwifX1cbmZ1bmN0aW9uIGxiKGEsYil7cmV0dXJuIG51bGw9PWF8fFwiaHR0cDovL3d3dy53My5vcmcvMTk5OS94aHRtbFwiPT09YT9rYihiKTpcImh0dHA6Ly93d3cudzMub3JnLzIwMDAvc3ZnXCI9PT1hJiZcImZvcmVpZ25PYmplY3RcIj09PWI/XCJodHRwOi8vd3d3LnczLm9yZy8xOTk5L3hodG1sXCI6YX1cbnZhciBtYixuYj1mdW5jdGlvbihhKXtyZXR1cm5cInVuZGVmaW5lZFwiIT09dHlwZW9mIE1TQXBwJiZNU0FwcC5leGVjVW5zYWZlTG9jYWxGdW5jdGlvbj9mdW5jdGlvbihiLGMsZCxlKXtNU0FwcC5leGVjVW5zYWZlTG9jYWxGdW5jdGlvbihmdW5jdGlvbigpe3JldHVybiBhKGIsYyxkLGUpfSl9OmF9KGZ1bmN0aW9uKGEsYil7aWYoXCJodHRwOi8vd3d3LnczLm9yZy8yMDAwL3N2Z1wiIT09YS5uYW1lc3BhY2VVUkl8fFwiaW5uZXJIVE1MXCJpbiBhKWEuaW5uZXJIVE1MPWI7ZWxzZXttYj1tYnx8ZG9jdW1lbnQuY3JlYXRlRWxlbWVudChcImRpdlwiKTttYi5pbm5lckhUTUw9XCI8c3ZnPlwiK2IudmFsdWVPZigpLnRvU3RyaW5nKCkrXCI8L3N2Zz5cIjtmb3IoYj1tYi5maXJzdENoaWxkO2EuZmlyc3RDaGlsZDspYS5yZW1vdmVDaGlsZChhLmZpcnN0Q2hpbGQpO2Zvcig7Yi5maXJzdENoaWxkOylhLmFwcGVuZENoaWxkKGIuZmlyc3RDaGlsZCl9fSk7XG5mdW5jdGlvbiBvYihhLGIpe2lmKGIpe3ZhciBjPWEuZmlyc3RDaGlsZDtpZihjJiZjPT09YS5sYXN0Q2hpbGQmJjM9PT1jLm5vZGVUeXBlKXtjLm5vZGVWYWx1ZT1iO3JldHVybn19YS50ZXh0Q29udGVudD1ifVxudmFyIHBiPXthbmltYXRpb25JdGVyYXRpb25Db3VudDohMCxhc3BlY3RSYXRpbzohMCxib3JkZXJJbWFnZU91dHNldDohMCxib3JkZXJJbWFnZVNsaWNlOiEwLGJvcmRlckltYWdlV2lkdGg6ITAsYm94RmxleDohMCxib3hGbGV4R3JvdXA6ITAsYm94T3JkaW5hbEdyb3VwOiEwLGNvbHVtbkNvdW50OiEwLGNvbHVtbnM6ITAsZmxleDohMCxmbGV4R3JvdzohMCxmbGV4UG9zaXRpdmU6ITAsZmxleFNocmluazohMCxmbGV4TmVnYXRpdmU6ITAsZmxleE9yZGVyOiEwLGdyaWRBcmVhOiEwLGdyaWRSb3c6ITAsZ3JpZFJvd0VuZDohMCxncmlkUm93U3BhbjohMCxncmlkUm93U3RhcnQ6ITAsZ3JpZENvbHVtbjohMCxncmlkQ29sdW1uRW5kOiEwLGdyaWRDb2x1bW5TcGFuOiEwLGdyaWRDb2x1bW5TdGFydDohMCxmb250V2VpZ2h0OiEwLGxpbmVDbGFtcDohMCxsaW5lSGVpZ2h0OiEwLG9wYWNpdHk6ITAsb3JkZXI6ITAsb3JwaGFuczohMCx0YWJTaXplOiEwLHdpZG93czohMCx6SW5kZXg6ITAsXG56b29tOiEwLGZpbGxPcGFjaXR5OiEwLGZsb29kT3BhY2l0eTohMCxzdG9wT3BhY2l0eTohMCxzdHJva2VEYXNoYXJyYXk6ITAsc3Ryb2tlRGFzaG9mZnNldDohMCxzdHJva2VNaXRlcmxpbWl0OiEwLHN0cm9rZU9wYWNpdHk6ITAsc3Ryb2tlV2lkdGg6ITB9LHFiPVtcIldlYmtpdFwiLFwibXNcIixcIk1velwiLFwiT1wiXTtPYmplY3Qua2V5cyhwYikuZm9yRWFjaChmdW5jdGlvbihhKXtxYi5mb3JFYWNoKGZ1bmN0aW9uKGIpe2I9YithLmNoYXJBdCgwKS50b1VwcGVyQ2FzZSgpK2Euc3Vic3RyaW5nKDEpO3BiW2JdPXBiW2FdfSl9KTtmdW5jdGlvbiByYihhLGIsYyl7cmV0dXJuIG51bGw9PWJ8fFwiYm9vbGVhblwiPT09dHlwZW9mIGJ8fFwiXCI9PT1iP1wiXCI6Y3x8XCJudW1iZXJcIiE9PXR5cGVvZiBifHwwPT09Ynx8cGIuaGFzT3duUHJvcGVydHkoYSkmJnBiW2FdPyhcIlwiK2IpLnRyaW0oKTpiK1wicHhcIn1cbmZ1bmN0aW9uIHNiKGEsYil7YT1hLnN0eWxlO2Zvcih2YXIgYyBpbiBiKWlmKGIuaGFzT3duUHJvcGVydHkoYykpe3ZhciBkPTA9PT1jLmluZGV4T2YoXCItLVwiKSxlPXJiKGMsYltjXSxkKTtcImZsb2F0XCI9PT1jJiYoYz1cImNzc0Zsb2F0XCIpO2Q/YS5zZXRQcm9wZXJ0eShjLGUpOmFbY109ZX19dmFyIHRiPUEoe21lbnVpdGVtOiEwfSx7YXJlYTohMCxiYXNlOiEwLGJyOiEwLGNvbDohMCxlbWJlZDohMCxocjohMCxpbWc6ITAsaW5wdXQ6ITAsa2V5Z2VuOiEwLGxpbms6ITAsbWV0YTohMCxwYXJhbTohMCxzb3VyY2U6ITAsdHJhY2s6ITAsd2JyOiEwfSk7XG5mdW5jdGlvbiB1YihhLGIpe2lmKGIpe2lmKHRiW2FdJiYobnVsbCE9Yi5jaGlsZHJlbnx8bnVsbCE9Yi5kYW5nZXJvdXNseVNldElubmVySFRNTCkpdGhyb3cgRXJyb3IocCgxMzcsYSkpO2lmKG51bGwhPWIuZGFuZ2Vyb3VzbHlTZXRJbm5lckhUTUwpe2lmKG51bGwhPWIuY2hpbGRyZW4pdGhyb3cgRXJyb3IocCg2MCkpO2lmKFwib2JqZWN0XCIhPT10eXBlb2YgYi5kYW5nZXJvdXNseVNldElubmVySFRNTHx8IShcIl9faHRtbFwiaW4gYi5kYW5nZXJvdXNseVNldElubmVySFRNTCkpdGhyb3cgRXJyb3IocCg2MSkpO31pZihudWxsIT1iLnN0eWxlJiZcIm9iamVjdFwiIT09dHlwZW9mIGIuc3R5bGUpdGhyb3cgRXJyb3IocCg2MikpO319XG5mdW5jdGlvbiB2YihhLGIpe2lmKC0xPT09YS5pbmRleE9mKFwiLVwiKSlyZXR1cm5cInN0cmluZ1wiPT09dHlwZW9mIGIuaXM7c3dpdGNoKGEpe2Nhc2UgXCJhbm5vdGF0aW9uLXhtbFwiOmNhc2UgXCJjb2xvci1wcm9maWxlXCI6Y2FzZSBcImZvbnQtZmFjZVwiOmNhc2UgXCJmb250LWZhY2Utc3JjXCI6Y2FzZSBcImZvbnQtZmFjZS11cmlcIjpjYXNlIFwiZm9udC1mYWNlLWZvcm1hdFwiOmNhc2UgXCJmb250LWZhY2UtbmFtZVwiOmNhc2UgXCJtaXNzaW5nLWdseXBoXCI6cmV0dXJuITE7ZGVmYXVsdDpyZXR1cm4hMH19dmFyIHdiPW51bGw7ZnVuY3Rpb24geGIoYSl7YT1hLnRhcmdldHx8YS5zcmNFbGVtZW50fHx3aW5kb3c7YS5jb3JyZXNwb25kaW5nVXNlRWxlbWVudCYmKGE9YS5jb3JyZXNwb25kaW5nVXNlRWxlbWVudCk7cmV0dXJuIDM9PT1hLm5vZGVUeXBlP2EucGFyZW50Tm9kZTphfXZhciB5Yj1udWxsLHpiPW51bGwsQWI9bnVsbDtcbmZ1bmN0aW9uIEJiKGEpe2lmKGE9Q2IoYSkpe2lmKFwiZnVuY3Rpb25cIiE9PXR5cGVvZiB5Yil0aHJvdyBFcnJvcihwKDI4MCkpO3ZhciBiPWEuc3RhdGVOb2RlO2ImJihiPURiKGIpLHliKGEuc3RhdGVOb2RlLGEudHlwZSxiKSl9fWZ1bmN0aW9uIEViKGEpe3piP0FiP0FiLnB1c2goYSk6QWI9W2FdOnpiPWF9ZnVuY3Rpb24gRmIoKXtpZih6Yil7dmFyIGE9emIsYj1BYjtBYj16Yj1udWxsO0JiKGEpO2lmKGIpZm9yKGE9MDthPGIubGVuZ3RoO2ErKylCYihiW2FdKX19ZnVuY3Rpb24gR2IoYSxiKXtyZXR1cm4gYShiKX1mdW5jdGlvbiBIYigpe312YXIgSWI9ITE7ZnVuY3Rpb24gSmIoYSxiLGMpe2lmKEliKXJldHVybiBhKGIsYyk7SWI9ITA7dHJ5e3JldHVybiBHYihhLGIsYyl9ZmluYWxseXtpZihJYj0hMSxudWxsIT09emJ8fG51bGwhPT1BYilIYigpLEZiKCl9fVxuZnVuY3Rpb24gS2IoYSxiKXt2YXIgYz1hLnN0YXRlTm9kZTtpZihudWxsPT09YylyZXR1cm4gbnVsbDt2YXIgZD1EYihjKTtpZihudWxsPT09ZClyZXR1cm4gbnVsbDtjPWRbYl07YTpzd2l0Y2goYil7Y2FzZSBcIm9uQ2xpY2tcIjpjYXNlIFwib25DbGlja0NhcHR1cmVcIjpjYXNlIFwib25Eb3VibGVDbGlja1wiOmNhc2UgXCJvbkRvdWJsZUNsaWNrQ2FwdHVyZVwiOmNhc2UgXCJvbk1vdXNlRG93blwiOmNhc2UgXCJvbk1vdXNlRG93bkNhcHR1cmVcIjpjYXNlIFwib25Nb3VzZU1vdmVcIjpjYXNlIFwib25Nb3VzZU1vdmVDYXB0dXJlXCI6Y2FzZSBcIm9uTW91c2VVcFwiOmNhc2UgXCJvbk1vdXNlVXBDYXB0dXJlXCI6Y2FzZSBcIm9uTW91c2VFbnRlclwiOihkPSFkLmRpc2FibGVkKXx8KGE9YS50eXBlLGQ9IShcImJ1dHRvblwiPT09YXx8XCJpbnB1dFwiPT09YXx8XCJzZWxlY3RcIj09PWF8fFwidGV4dGFyZWFcIj09PWEpKTthPSFkO2JyZWFrIGE7ZGVmYXVsdDphPSExfWlmKGEpcmV0dXJuIG51bGw7aWYoYyYmXCJmdW5jdGlvblwiIT09XG50eXBlb2YgYyl0aHJvdyBFcnJvcihwKDIzMSxiLHR5cGVvZiBjKSk7cmV0dXJuIGN9dmFyIExiPSExO2lmKGlhKXRyeXt2YXIgTWI9e307T2JqZWN0LmRlZmluZVByb3BlcnR5KE1iLFwicGFzc2l2ZVwiLHtnZXQ6ZnVuY3Rpb24oKXtMYj0hMH19KTt3aW5kb3cuYWRkRXZlbnRMaXN0ZW5lcihcInRlc3RcIixNYixNYik7d2luZG93LnJlbW92ZUV2ZW50TGlzdGVuZXIoXCJ0ZXN0XCIsTWIsTWIpfWNhdGNoKGEpe0xiPSExfWZ1bmN0aW9uIE5iKGEsYixjLGQsZSxmLGcsaCxrKXt2YXIgbD1BcnJheS5wcm90b3R5cGUuc2xpY2UuY2FsbChhcmd1bWVudHMsMyk7dHJ5e2IuYXBwbHkoYyxsKX1jYXRjaChtKXt0aGlzLm9uRXJyb3IobSl9fXZhciBPYj0hMSxQYj1udWxsLFFiPSExLFJiPW51bGwsU2I9e29uRXJyb3I6ZnVuY3Rpb24oYSl7T2I9ITA7UGI9YX19O2Z1bmN0aW9uIFRiKGEsYixjLGQsZSxmLGcsaCxrKXtPYj0hMTtQYj1udWxsO05iLmFwcGx5KFNiLGFyZ3VtZW50cyl9XG5mdW5jdGlvbiBVYihhLGIsYyxkLGUsZixnLGgsayl7VGIuYXBwbHkodGhpcyxhcmd1bWVudHMpO2lmKE9iKXtpZihPYil7dmFyIGw9UGI7T2I9ITE7UGI9bnVsbH1lbHNlIHRocm93IEVycm9yKHAoMTk4KSk7UWJ8fChRYj0hMCxSYj1sKX19ZnVuY3Rpb24gVmIoYSl7dmFyIGI9YSxjPWE7aWYoYS5hbHRlcm5hdGUpZm9yKDtiLnJldHVybjspYj1iLnJldHVybjtlbHNle2E9YjtkbyBiPWEsMCE9PShiLmZsYWdzJjQwOTgpJiYoYz1iLnJldHVybiksYT1iLnJldHVybjt3aGlsZShhKX1yZXR1cm4gMz09PWIudGFnP2M6bnVsbH1mdW5jdGlvbiBXYihhKXtpZigxMz09PWEudGFnKXt2YXIgYj1hLm1lbW9pemVkU3RhdGU7bnVsbD09PWImJihhPWEuYWx0ZXJuYXRlLG51bGwhPT1hJiYoYj1hLm1lbW9pemVkU3RhdGUpKTtpZihudWxsIT09YilyZXR1cm4gYi5kZWh5ZHJhdGVkfXJldHVybiBudWxsfWZ1bmN0aW9uIFhiKGEpe2lmKFZiKGEpIT09YSl0aHJvdyBFcnJvcihwKDE4OCkpO31cbmZ1bmN0aW9uIFliKGEpe3ZhciBiPWEuYWx0ZXJuYXRlO2lmKCFiKXtiPVZiKGEpO2lmKG51bGw9PT1iKXRocm93IEVycm9yKHAoMTg4KSk7cmV0dXJuIGIhPT1hP251bGw6YX1mb3IodmFyIGM9YSxkPWI7Oyl7dmFyIGU9Yy5yZXR1cm47aWYobnVsbD09PWUpYnJlYWs7dmFyIGY9ZS5hbHRlcm5hdGU7aWYobnVsbD09PWYpe2Q9ZS5yZXR1cm47aWYobnVsbCE9PWQpe2M9ZDtjb250aW51ZX1icmVha31pZihlLmNoaWxkPT09Zi5jaGlsZCl7Zm9yKGY9ZS5jaGlsZDtmOyl7aWYoZj09PWMpcmV0dXJuIFhiKGUpLGE7aWYoZj09PWQpcmV0dXJuIFhiKGUpLGI7Zj1mLnNpYmxpbmd9dGhyb3cgRXJyb3IocCgxODgpKTt9aWYoYy5yZXR1cm4hPT1kLnJldHVybiljPWUsZD1mO2Vsc2V7Zm9yKHZhciBnPSExLGg9ZS5jaGlsZDtoOyl7aWYoaD09PWMpe2c9ITA7Yz1lO2Q9ZjticmVha31pZihoPT09ZCl7Zz0hMDtkPWU7Yz1mO2JyZWFrfWg9aC5zaWJsaW5nfWlmKCFnKXtmb3IoaD1mLmNoaWxkO2g7KXtpZihoPT09XG5jKXtnPSEwO2M9ZjtkPWU7YnJlYWt9aWYoaD09PWQpe2c9ITA7ZD1mO2M9ZTticmVha31oPWguc2libGluZ31pZighZyl0aHJvdyBFcnJvcihwKDE4OSkpO319aWYoYy5hbHRlcm5hdGUhPT1kKXRocm93IEVycm9yKHAoMTkwKSk7fWlmKDMhPT1jLnRhZyl0aHJvdyBFcnJvcihwKDE4OCkpO3JldHVybiBjLnN0YXRlTm9kZS5jdXJyZW50PT09Yz9hOmJ9ZnVuY3Rpb24gWmIoYSl7YT1ZYihhKTtyZXR1cm4gbnVsbCE9PWE/JGIoYSk6bnVsbH1mdW5jdGlvbiAkYihhKXtpZig1PT09YS50YWd8fDY9PT1hLnRhZylyZXR1cm4gYTtmb3IoYT1hLmNoaWxkO251bGwhPT1hOyl7dmFyIGI9JGIoYSk7aWYobnVsbCE9PWIpcmV0dXJuIGI7YT1hLnNpYmxpbmd9cmV0dXJuIG51bGx9XG52YXIgYWM9Y2EudW5zdGFibGVfc2NoZWR1bGVDYWxsYmFjayxiYz1jYS51bnN0YWJsZV9jYW5jZWxDYWxsYmFjayxjYz1jYS51bnN0YWJsZV9zaG91bGRZaWVsZCxkYz1jYS51bnN0YWJsZV9yZXF1ZXN0UGFpbnQsQj1jYS51bnN0YWJsZV9ub3csZWM9Y2EudW5zdGFibGVfZ2V0Q3VycmVudFByaW9yaXR5TGV2ZWwsZmM9Y2EudW5zdGFibGVfSW1tZWRpYXRlUHJpb3JpdHksZ2M9Y2EudW5zdGFibGVfVXNlckJsb2NraW5nUHJpb3JpdHksaGM9Y2EudW5zdGFibGVfTm9ybWFsUHJpb3JpdHksaWM9Y2EudW5zdGFibGVfTG93UHJpb3JpdHksamM9Y2EudW5zdGFibGVfSWRsZVByaW9yaXR5LGtjPW51bGwsbGM9bnVsbDtmdW5jdGlvbiBtYyhhKXtpZihsYyYmXCJmdW5jdGlvblwiPT09dHlwZW9mIGxjLm9uQ29tbWl0RmliZXJSb290KXRyeXtsYy5vbkNvbW1pdEZpYmVyUm9vdChrYyxhLHZvaWQgMCwxMjg9PT0oYS5jdXJyZW50LmZsYWdzJjEyOCkpfWNhdGNoKGIpe319XG52YXIgb2M9TWF0aC5jbHozMj9NYXRoLmNsejMyOm5jLHBjPU1hdGgubG9nLHFjPU1hdGguTE4yO2Z1bmN0aW9uIG5jKGEpe2E+Pj49MDtyZXR1cm4gMD09PWE/MzI6MzEtKHBjKGEpL3FjfDApfDB9dmFyIHJjPTY0LHNjPTQxOTQzMDQ7XG5mdW5jdGlvbiB0YyhhKXtzd2l0Y2goYSYtYSl7Y2FzZSAxOnJldHVybiAxO2Nhc2UgMjpyZXR1cm4gMjtjYXNlIDQ6cmV0dXJuIDQ7Y2FzZSA4OnJldHVybiA4O2Nhc2UgMTY6cmV0dXJuIDE2O2Nhc2UgMzI6cmV0dXJuIDMyO2Nhc2UgNjQ6Y2FzZSAxMjg6Y2FzZSAyNTY6Y2FzZSA1MTI6Y2FzZSAxMDI0OmNhc2UgMjA0ODpjYXNlIDQwOTY6Y2FzZSA4MTkyOmNhc2UgMTYzODQ6Y2FzZSAzMjc2ODpjYXNlIDY1NTM2OmNhc2UgMTMxMDcyOmNhc2UgMjYyMTQ0OmNhc2UgNTI0Mjg4OmNhc2UgMTA0ODU3NjpjYXNlIDIwOTcxNTI6cmV0dXJuIGEmNDE5NDI0MDtjYXNlIDQxOTQzMDQ6Y2FzZSA4Mzg4NjA4OmNhc2UgMTY3NzcyMTY6Y2FzZSAzMzU1NDQzMjpjYXNlIDY3MTA4ODY0OnJldHVybiBhJjEzMDAyMzQyNDtjYXNlIDEzNDIxNzcyODpyZXR1cm4gMTM0MjE3NzI4O2Nhc2UgMjY4NDM1NDU2OnJldHVybiAyNjg0MzU0NTY7Y2FzZSA1MzY4NzA5MTI6cmV0dXJuIDUzNjg3MDkxMjtjYXNlIDEwNzM3NDE4MjQ6cmV0dXJuIDEwNzM3NDE4MjQ7XG5kZWZhdWx0OnJldHVybiBhfX1mdW5jdGlvbiB1YyhhLGIpe3ZhciBjPWEucGVuZGluZ0xhbmVzO2lmKDA9PT1jKXJldHVybiAwO3ZhciBkPTAsZT1hLnN1c3BlbmRlZExhbmVzLGY9YS5waW5nZWRMYW5lcyxnPWMmMjY4NDM1NDU1O2lmKDAhPT1nKXt2YXIgaD1nJn5lOzAhPT1oP2Q9dGMoaCk6KGYmPWcsMCE9PWYmJihkPXRjKGYpKSl9ZWxzZSBnPWMmfmUsMCE9PWc/ZD10YyhnKTowIT09ZiYmKGQ9dGMoZikpO2lmKDA9PT1kKXJldHVybiAwO2lmKDAhPT1iJiZiIT09ZCYmMD09PShiJmUpJiYoZT1kJi1kLGY9YiYtYixlPj1mfHwxNj09PWUmJjAhPT0oZiY0MTk0MjQwKSkpcmV0dXJuIGI7MCE9PShkJjQpJiYoZHw9YyYxNik7Yj1hLmVudGFuZ2xlZExhbmVzO2lmKDAhPT1iKWZvcihhPWEuZW50YW5nbGVtZW50cyxiJj1kOzA8YjspYz0zMS1vYyhiKSxlPTE8PGMsZHw9YVtjXSxiJj1+ZTtyZXR1cm4gZH1cbmZ1bmN0aW9uIHZjKGEsYil7c3dpdGNoKGEpe2Nhc2UgMTpjYXNlIDI6Y2FzZSA0OnJldHVybiBiKzI1MDtjYXNlIDg6Y2FzZSAxNjpjYXNlIDMyOmNhc2UgNjQ6Y2FzZSAxMjg6Y2FzZSAyNTY6Y2FzZSA1MTI6Y2FzZSAxMDI0OmNhc2UgMjA0ODpjYXNlIDQwOTY6Y2FzZSA4MTkyOmNhc2UgMTYzODQ6Y2FzZSAzMjc2ODpjYXNlIDY1NTM2OmNhc2UgMTMxMDcyOmNhc2UgMjYyMTQ0OmNhc2UgNTI0Mjg4OmNhc2UgMTA0ODU3NjpjYXNlIDIwOTcxNTI6cmV0dXJuIGIrNUUzO2Nhc2UgNDE5NDMwNDpjYXNlIDgzODg2MDg6Y2FzZSAxNjc3NzIxNjpjYXNlIDMzNTU0NDMyOmNhc2UgNjcxMDg4NjQ6cmV0dXJuLTE7Y2FzZSAxMzQyMTc3Mjg6Y2FzZSAyNjg0MzU0NTY6Y2FzZSA1MzY4NzA5MTI6Y2FzZSAxMDczNzQxODI0OnJldHVybi0xO2RlZmF1bHQ6cmV0dXJuLTF9fVxuZnVuY3Rpb24gd2MoYSxiKXtmb3IodmFyIGM9YS5zdXNwZW5kZWRMYW5lcyxkPWEucGluZ2VkTGFuZXMsZT1hLmV4cGlyYXRpb25UaW1lcyxmPWEucGVuZGluZ0xhbmVzOzA8Zjspe3ZhciBnPTMxLW9jKGYpLGg9MTw8ZyxrPWVbZ107aWYoLTE9PT1rKXtpZigwPT09KGgmYyl8fDAhPT0oaCZkKSllW2ddPXZjKGgsYil9ZWxzZSBrPD1iJiYoYS5leHBpcmVkTGFuZXN8PWgpO2YmPX5ofX1mdW5jdGlvbiB4YyhhKXthPWEucGVuZGluZ0xhbmVzJi0xMDczNzQxODI1O3JldHVybiAwIT09YT9hOmEmMTA3Mzc0MTgyND8xMDczNzQxODI0OjB9ZnVuY3Rpb24geWMoKXt2YXIgYT1yYztyYzw8PTE7MD09PShyYyY0MTk0MjQwKSYmKHJjPTY0KTtyZXR1cm4gYX1mdW5jdGlvbiB6YyhhKXtmb3IodmFyIGI9W10sYz0wOzMxPmM7YysrKWIucHVzaChhKTtyZXR1cm4gYn1cbmZ1bmN0aW9uIEFjKGEsYixjKXthLnBlbmRpbmdMYW5lc3w9Yjs1MzY4NzA5MTIhPT1iJiYoYS5zdXNwZW5kZWRMYW5lcz0wLGEucGluZ2VkTGFuZXM9MCk7YT1hLmV2ZW50VGltZXM7Yj0zMS1vYyhiKTthW2JdPWN9ZnVuY3Rpb24gQmMoYSxiKXt2YXIgYz1hLnBlbmRpbmdMYW5lcyZ+YjthLnBlbmRpbmdMYW5lcz1iO2Euc3VzcGVuZGVkTGFuZXM9MDthLnBpbmdlZExhbmVzPTA7YS5leHBpcmVkTGFuZXMmPWI7YS5tdXRhYmxlUmVhZExhbmVzJj1iO2EuZW50YW5nbGVkTGFuZXMmPWI7Yj1hLmVudGFuZ2xlbWVudHM7dmFyIGQ9YS5ldmVudFRpbWVzO2ZvcihhPWEuZXhwaXJhdGlvblRpbWVzOzA8Yzspe3ZhciBlPTMxLW9jKGMpLGY9MTw8ZTtiW2VdPTA7ZFtlXT0tMTthW2VdPS0xO2MmPX5mfX1cbmZ1bmN0aW9uIENjKGEsYil7dmFyIGM9YS5lbnRhbmdsZWRMYW5lc3w9Yjtmb3IoYT1hLmVudGFuZ2xlbWVudHM7Yzspe3ZhciBkPTMxLW9jKGMpLGU9MTw8ZDtlJmJ8YVtkXSZiJiYoYVtkXXw9Yik7YyY9fmV9fXZhciBDPTA7ZnVuY3Rpb24gRGMoYSl7YSY9LWE7cmV0dXJuIDE8YT80PGE/MCE9PShhJjI2ODQzNTQ1NSk/MTY6NTM2ODcwOTEyOjQ6MX12YXIgRWMsRmMsR2MsSGMsSWMsSmM9ITEsS2M9W10sTGM9bnVsbCxNYz1udWxsLE5jPW51bGwsT2M9bmV3IE1hcCxQYz1uZXcgTWFwLFFjPVtdLFJjPVwibW91c2Vkb3duIG1vdXNldXAgdG91Y2hjYW5jZWwgdG91Y2hlbmQgdG91Y2hzdGFydCBhdXhjbGljayBkYmxjbGljayBwb2ludGVyY2FuY2VsIHBvaW50ZXJkb3duIHBvaW50ZXJ1cCBkcmFnZW5kIGRyYWdzdGFydCBkcm9wIGNvbXBvc2l0aW9uZW5kIGNvbXBvc2l0aW9uc3RhcnQga2V5ZG93biBrZXlwcmVzcyBrZXl1cCBpbnB1dCB0ZXh0SW5wdXQgY29weSBjdXQgcGFzdGUgY2xpY2sgY2hhbmdlIGNvbnRleHRtZW51IHJlc2V0IHN1Ym1pdFwiLnNwbGl0KFwiIFwiKTtcbmZ1bmN0aW9uIFNjKGEsYil7c3dpdGNoKGEpe2Nhc2UgXCJmb2N1c2luXCI6Y2FzZSBcImZvY3Vzb3V0XCI6TGM9bnVsbDticmVhaztjYXNlIFwiZHJhZ2VudGVyXCI6Y2FzZSBcImRyYWdsZWF2ZVwiOk1jPW51bGw7YnJlYWs7Y2FzZSBcIm1vdXNlb3ZlclwiOmNhc2UgXCJtb3VzZW91dFwiOk5jPW51bGw7YnJlYWs7Y2FzZSBcInBvaW50ZXJvdmVyXCI6Y2FzZSBcInBvaW50ZXJvdXRcIjpPYy5kZWxldGUoYi5wb2ludGVySWQpO2JyZWFrO2Nhc2UgXCJnb3Rwb2ludGVyY2FwdHVyZVwiOmNhc2UgXCJsb3N0cG9pbnRlcmNhcHR1cmVcIjpQYy5kZWxldGUoYi5wb2ludGVySWQpfX1cbmZ1bmN0aW9uIFRjKGEsYixjLGQsZSxmKXtpZihudWxsPT09YXx8YS5uYXRpdmVFdmVudCE9PWYpcmV0dXJuIGE9e2Jsb2NrZWRPbjpiLGRvbUV2ZW50TmFtZTpjLGV2ZW50U3lzdGVtRmxhZ3M6ZCxuYXRpdmVFdmVudDpmLHRhcmdldENvbnRhaW5lcnM6W2VdfSxudWxsIT09YiYmKGI9Q2IoYiksbnVsbCE9PWImJkZjKGIpKSxhO2EuZXZlbnRTeXN0ZW1GbGFnc3w9ZDtiPWEudGFyZ2V0Q29udGFpbmVycztudWxsIT09ZSYmLTE9PT1iLmluZGV4T2YoZSkmJmIucHVzaChlKTtyZXR1cm4gYX1cbmZ1bmN0aW9uIFVjKGEsYixjLGQsZSl7c3dpdGNoKGIpe2Nhc2UgXCJmb2N1c2luXCI6cmV0dXJuIExjPVRjKExjLGEsYixjLGQsZSksITA7Y2FzZSBcImRyYWdlbnRlclwiOnJldHVybiBNYz1UYyhNYyxhLGIsYyxkLGUpLCEwO2Nhc2UgXCJtb3VzZW92ZXJcIjpyZXR1cm4gTmM9VGMoTmMsYSxiLGMsZCxlKSwhMDtjYXNlIFwicG9pbnRlcm92ZXJcIjp2YXIgZj1lLnBvaW50ZXJJZDtPYy5zZXQoZixUYyhPYy5nZXQoZil8fG51bGwsYSxiLGMsZCxlKSk7cmV0dXJuITA7Y2FzZSBcImdvdHBvaW50ZXJjYXB0dXJlXCI6cmV0dXJuIGY9ZS5wb2ludGVySWQsUGMuc2V0KGYsVGMoUGMuZ2V0KGYpfHxudWxsLGEsYixjLGQsZSkpLCEwfXJldHVybiExfVxuZnVuY3Rpb24gVmMoYSl7dmFyIGI9V2MoYS50YXJnZXQpO2lmKG51bGwhPT1iKXt2YXIgYz1WYihiKTtpZihudWxsIT09YylpZihiPWMudGFnLDEzPT09Yil7aWYoYj1XYihjKSxudWxsIT09Yil7YS5ibG9ja2VkT249YjtJYyhhLnByaW9yaXR5LGZ1bmN0aW9uKCl7R2MoYyl9KTtyZXR1cm59fWVsc2UgaWYoMz09PWImJmMuc3RhdGVOb2RlLmN1cnJlbnQubWVtb2l6ZWRTdGF0ZS5pc0RlaHlkcmF0ZWQpe2EuYmxvY2tlZE9uPTM9PT1jLnRhZz9jLnN0YXRlTm9kZS5jb250YWluZXJJbmZvOm51bGw7cmV0dXJufX1hLmJsb2NrZWRPbj1udWxsfVxuZnVuY3Rpb24gWGMoYSl7aWYobnVsbCE9PWEuYmxvY2tlZE9uKXJldHVybiExO2Zvcih2YXIgYj1hLnRhcmdldENvbnRhaW5lcnM7MDxiLmxlbmd0aDspe3ZhciBjPVljKGEuZG9tRXZlbnROYW1lLGEuZXZlbnRTeXN0ZW1GbGFncyxiWzBdLGEubmF0aXZlRXZlbnQpO2lmKG51bGw9PT1jKXtjPWEubmF0aXZlRXZlbnQ7dmFyIGQ9bmV3IGMuY29uc3RydWN0b3IoYy50eXBlLGMpO3diPWQ7Yy50YXJnZXQuZGlzcGF0Y2hFdmVudChkKTt3Yj1udWxsfWVsc2UgcmV0dXJuIGI9Q2IoYyksbnVsbCE9PWImJkZjKGIpLGEuYmxvY2tlZE9uPWMsITE7Yi5zaGlmdCgpfXJldHVybiEwfWZ1bmN0aW9uIFpjKGEsYixjKXtYYyhhKSYmYy5kZWxldGUoYil9ZnVuY3Rpb24gJGMoKXtKYz0hMTtudWxsIT09TGMmJlhjKExjKSYmKExjPW51bGwpO251bGwhPT1NYyYmWGMoTWMpJiYoTWM9bnVsbCk7bnVsbCE9PU5jJiZYYyhOYykmJihOYz1udWxsKTtPYy5mb3JFYWNoKFpjKTtQYy5mb3JFYWNoKFpjKX1cbmZ1bmN0aW9uIGFkKGEsYil7YS5ibG9ja2VkT249PT1iJiYoYS5ibG9ja2VkT249bnVsbCxKY3x8KEpjPSEwLGNhLnVuc3RhYmxlX3NjaGVkdWxlQ2FsbGJhY2soY2EudW5zdGFibGVfTm9ybWFsUHJpb3JpdHksJGMpKSl9XG5mdW5jdGlvbiBiZChhKXtmdW5jdGlvbiBiKGIpe3JldHVybiBhZChiLGEpfWlmKDA8S2MubGVuZ3RoKXthZChLY1swXSxhKTtmb3IodmFyIGM9MTtjPEtjLmxlbmd0aDtjKyspe3ZhciBkPUtjW2NdO2QuYmxvY2tlZE9uPT09YSYmKGQuYmxvY2tlZE9uPW51bGwpfX1udWxsIT09TGMmJmFkKExjLGEpO251bGwhPT1NYyYmYWQoTWMsYSk7bnVsbCE9PU5jJiZhZChOYyxhKTtPYy5mb3JFYWNoKGIpO1BjLmZvckVhY2goYik7Zm9yKGM9MDtjPFFjLmxlbmd0aDtjKyspZD1RY1tjXSxkLmJsb2NrZWRPbj09PWEmJihkLmJsb2NrZWRPbj1udWxsKTtmb3IoOzA8UWMubGVuZ3RoJiYoYz1RY1swXSxudWxsPT09Yy5ibG9ja2VkT24pOylWYyhjKSxudWxsPT09Yy5ibG9ja2VkT24mJlFjLnNoaWZ0KCl9dmFyIGNkPXVhLlJlYWN0Q3VycmVudEJhdGNoQ29uZmlnLGRkPSEwO1xuZnVuY3Rpb24gZWQoYSxiLGMsZCl7dmFyIGU9QyxmPWNkLnRyYW5zaXRpb247Y2QudHJhbnNpdGlvbj1udWxsO3RyeXtDPTEsZmQoYSxiLGMsZCl9ZmluYWxseXtDPWUsY2QudHJhbnNpdGlvbj1mfX1mdW5jdGlvbiBnZChhLGIsYyxkKXt2YXIgZT1DLGY9Y2QudHJhbnNpdGlvbjtjZC50cmFuc2l0aW9uPW51bGw7dHJ5e0M9NCxmZChhLGIsYyxkKX1maW5hbGx5e0M9ZSxjZC50cmFuc2l0aW9uPWZ9fVxuZnVuY3Rpb24gZmQoYSxiLGMsZCl7aWYoZGQpe3ZhciBlPVljKGEsYixjLGQpO2lmKG51bGw9PT1lKWhkKGEsYixkLGlkLGMpLFNjKGEsZCk7ZWxzZSBpZihVYyhlLGEsYixjLGQpKWQuc3RvcFByb3BhZ2F0aW9uKCk7ZWxzZSBpZihTYyhhLGQpLGImNCYmLTE8UmMuaW5kZXhPZihhKSl7Zm9yKDtudWxsIT09ZTspe3ZhciBmPUNiKGUpO251bGwhPT1mJiZFYyhmKTtmPVljKGEsYixjLGQpO251bGw9PT1mJiZoZChhLGIsZCxpZCxjKTtpZihmPT09ZSlicmVhaztlPWZ9bnVsbCE9PWUmJmQuc3RvcFByb3BhZ2F0aW9uKCl9ZWxzZSBoZChhLGIsZCxudWxsLGMpfX12YXIgaWQ9bnVsbDtcbmZ1bmN0aW9uIFljKGEsYixjLGQpe2lkPW51bGw7YT14YihkKTthPVdjKGEpO2lmKG51bGwhPT1hKWlmKGI9VmIoYSksbnVsbD09PWIpYT1udWxsO2Vsc2UgaWYoYz1iLnRhZywxMz09PWMpe2E9V2IoYik7aWYobnVsbCE9PWEpcmV0dXJuIGE7YT1udWxsfWVsc2UgaWYoMz09PWMpe2lmKGIuc3RhdGVOb2RlLmN1cnJlbnQubWVtb2l6ZWRTdGF0ZS5pc0RlaHlkcmF0ZWQpcmV0dXJuIDM9PT1iLnRhZz9iLnN0YXRlTm9kZS5jb250YWluZXJJbmZvOm51bGw7YT1udWxsfWVsc2UgYiE9PWEmJihhPW51bGwpO2lkPWE7cmV0dXJuIG51bGx9XG5mdW5jdGlvbiBqZChhKXtzd2l0Y2goYSl7Y2FzZSBcImNhbmNlbFwiOmNhc2UgXCJjbGlja1wiOmNhc2UgXCJjbG9zZVwiOmNhc2UgXCJjb250ZXh0bWVudVwiOmNhc2UgXCJjb3B5XCI6Y2FzZSBcImN1dFwiOmNhc2UgXCJhdXhjbGlja1wiOmNhc2UgXCJkYmxjbGlja1wiOmNhc2UgXCJkcmFnZW5kXCI6Y2FzZSBcImRyYWdzdGFydFwiOmNhc2UgXCJkcm9wXCI6Y2FzZSBcImZvY3VzaW5cIjpjYXNlIFwiZm9jdXNvdXRcIjpjYXNlIFwiaW5wdXRcIjpjYXNlIFwiaW52YWxpZFwiOmNhc2UgXCJrZXlkb3duXCI6Y2FzZSBcImtleXByZXNzXCI6Y2FzZSBcImtleXVwXCI6Y2FzZSBcIm1vdXNlZG93blwiOmNhc2UgXCJtb3VzZXVwXCI6Y2FzZSBcInBhc3RlXCI6Y2FzZSBcInBhdXNlXCI6Y2FzZSBcInBsYXlcIjpjYXNlIFwicG9pbnRlcmNhbmNlbFwiOmNhc2UgXCJwb2ludGVyZG93blwiOmNhc2UgXCJwb2ludGVydXBcIjpjYXNlIFwicmF0ZWNoYW5nZVwiOmNhc2UgXCJyZXNldFwiOmNhc2UgXCJyZXNpemVcIjpjYXNlIFwic2Vla2VkXCI6Y2FzZSBcInN1Ym1pdFwiOmNhc2UgXCJ0b3VjaGNhbmNlbFwiOmNhc2UgXCJ0b3VjaGVuZFwiOmNhc2UgXCJ0b3VjaHN0YXJ0XCI6Y2FzZSBcInZvbHVtZWNoYW5nZVwiOmNhc2UgXCJjaGFuZ2VcIjpjYXNlIFwic2VsZWN0aW9uY2hhbmdlXCI6Y2FzZSBcInRleHRJbnB1dFwiOmNhc2UgXCJjb21wb3NpdGlvbnN0YXJ0XCI6Y2FzZSBcImNvbXBvc2l0aW9uZW5kXCI6Y2FzZSBcImNvbXBvc2l0aW9udXBkYXRlXCI6Y2FzZSBcImJlZm9yZWJsdXJcIjpjYXNlIFwiYWZ0ZXJibHVyXCI6Y2FzZSBcImJlZm9yZWlucHV0XCI6Y2FzZSBcImJsdXJcIjpjYXNlIFwiZnVsbHNjcmVlbmNoYW5nZVwiOmNhc2UgXCJmb2N1c1wiOmNhc2UgXCJoYXNoY2hhbmdlXCI6Y2FzZSBcInBvcHN0YXRlXCI6Y2FzZSBcInNlbGVjdFwiOmNhc2UgXCJzZWxlY3RzdGFydFwiOnJldHVybiAxO2Nhc2UgXCJkcmFnXCI6Y2FzZSBcImRyYWdlbnRlclwiOmNhc2UgXCJkcmFnZXhpdFwiOmNhc2UgXCJkcmFnbGVhdmVcIjpjYXNlIFwiZHJhZ292ZXJcIjpjYXNlIFwibW91c2Vtb3ZlXCI6Y2FzZSBcIm1vdXNlb3V0XCI6Y2FzZSBcIm1vdXNlb3ZlclwiOmNhc2UgXCJwb2ludGVybW92ZVwiOmNhc2UgXCJwb2ludGVyb3V0XCI6Y2FzZSBcInBvaW50ZXJvdmVyXCI6Y2FzZSBcInNjcm9sbFwiOmNhc2UgXCJ0b2dnbGVcIjpjYXNlIFwidG91Y2htb3ZlXCI6Y2FzZSBcIndoZWVsXCI6Y2FzZSBcIm1vdXNlZW50ZXJcIjpjYXNlIFwibW91c2VsZWF2ZVwiOmNhc2UgXCJwb2ludGVyZW50ZXJcIjpjYXNlIFwicG9pbnRlcmxlYXZlXCI6cmV0dXJuIDQ7XG5jYXNlIFwibWVzc2FnZVwiOnN3aXRjaChlYygpKXtjYXNlIGZjOnJldHVybiAxO2Nhc2UgZ2M6cmV0dXJuIDQ7Y2FzZSBoYzpjYXNlIGljOnJldHVybiAxNjtjYXNlIGpjOnJldHVybiA1MzY4NzA5MTI7ZGVmYXVsdDpyZXR1cm4gMTZ9ZGVmYXVsdDpyZXR1cm4gMTZ9fXZhciBrZD1udWxsLGxkPW51bGwsbWQ9bnVsbDtmdW5jdGlvbiBuZCgpe2lmKG1kKXJldHVybiBtZDt2YXIgYSxiPWxkLGM9Yi5sZW5ndGgsZCxlPVwidmFsdWVcImluIGtkP2tkLnZhbHVlOmtkLnRleHRDb250ZW50LGY9ZS5sZW5ndGg7Zm9yKGE9MDthPGMmJmJbYV09PT1lW2FdO2ErKyk7dmFyIGc9Yy1hO2ZvcihkPTE7ZDw9ZyYmYltjLWRdPT09ZVtmLWRdO2QrKyk7cmV0dXJuIG1kPWUuc2xpY2UoYSwxPGQ/MS1kOnZvaWQgMCl9XG5mdW5jdGlvbiBvZChhKXt2YXIgYj1hLmtleUNvZGU7XCJjaGFyQ29kZVwiaW4gYT8oYT1hLmNoYXJDb2RlLDA9PT1hJiYxMz09PWImJihhPTEzKSk6YT1iOzEwPT09YSYmKGE9MTMpO3JldHVybiAzMjw9YXx8MTM9PT1hP2E6MH1mdW5jdGlvbiBwZCgpe3JldHVybiEwfWZ1bmN0aW9uIHFkKCl7cmV0dXJuITF9XG5mdW5jdGlvbiByZChhKXtmdW5jdGlvbiBiKGIsZCxlLGYsZyl7dGhpcy5fcmVhY3ROYW1lPWI7dGhpcy5fdGFyZ2V0SW5zdD1lO3RoaXMudHlwZT1kO3RoaXMubmF0aXZlRXZlbnQ9Zjt0aGlzLnRhcmdldD1nO3RoaXMuY3VycmVudFRhcmdldD1udWxsO2Zvcih2YXIgYyBpbiBhKWEuaGFzT3duUHJvcGVydHkoYykmJihiPWFbY10sdGhpc1tjXT1iP2IoZik6ZltjXSk7dGhpcy5pc0RlZmF1bHRQcmV2ZW50ZWQ9KG51bGwhPWYuZGVmYXVsdFByZXZlbnRlZD9mLmRlZmF1bHRQcmV2ZW50ZWQ6ITE9PT1mLnJldHVyblZhbHVlKT9wZDpxZDt0aGlzLmlzUHJvcGFnYXRpb25TdG9wcGVkPXFkO3JldHVybiB0aGlzfUEoYi5wcm90b3R5cGUse3ByZXZlbnREZWZhdWx0OmZ1bmN0aW9uKCl7dGhpcy5kZWZhdWx0UHJldmVudGVkPSEwO3ZhciBhPXRoaXMubmF0aXZlRXZlbnQ7YSYmKGEucHJldmVudERlZmF1bHQ/YS5wcmV2ZW50RGVmYXVsdCgpOlwidW5rbm93blwiIT09dHlwZW9mIGEucmV0dXJuVmFsdWUmJlxuKGEucmV0dXJuVmFsdWU9ITEpLHRoaXMuaXNEZWZhdWx0UHJldmVudGVkPXBkKX0sc3RvcFByb3BhZ2F0aW9uOmZ1bmN0aW9uKCl7dmFyIGE9dGhpcy5uYXRpdmVFdmVudDthJiYoYS5zdG9wUHJvcGFnYXRpb24/YS5zdG9wUHJvcGFnYXRpb24oKTpcInVua25vd25cIiE9PXR5cGVvZiBhLmNhbmNlbEJ1YmJsZSYmKGEuY2FuY2VsQnViYmxlPSEwKSx0aGlzLmlzUHJvcGFnYXRpb25TdG9wcGVkPXBkKX0scGVyc2lzdDpmdW5jdGlvbigpe30saXNQZXJzaXN0ZW50OnBkfSk7cmV0dXJuIGJ9XG52YXIgc2Q9e2V2ZW50UGhhc2U6MCxidWJibGVzOjAsY2FuY2VsYWJsZTowLHRpbWVTdGFtcDpmdW5jdGlvbihhKXtyZXR1cm4gYS50aW1lU3RhbXB8fERhdGUubm93KCl9LGRlZmF1bHRQcmV2ZW50ZWQ6MCxpc1RydXN0ZWQ6MH0sdGQ9cmQoc2QpLHVkPUEoe30sc2Qse3ZpZXc6MCxkZXRhaWw6MH0pLHZkPXJkKHVkKSx3ZCx4ZCx5ZCxBZD1BKHt9LHVkLHtzY3JlZW5YOjAsc2NyZWVuWTowLGNsaWVudFg6MCxjbGllbnRZOjAscGFnZVg6MCxwYWdlWTowLGN0cmxLZXk6MCxzaGlmdEtleTowLGFsdEtleTowLG1ldGFLZXk6MCxnZXRNb2RpZmllclN0YXRlOnpkLGJ1dHRvbjowLGJ1dHRvbnM6MCxyZWxhdGVkVGFyZ2V0OmZ1bmN0aW9uKGEpe3JldHVybiB2b2lkIDA9PT1hLnJlbGF0ZWRUYXJnZXQ/YS5mcm9tRWxlbWVudD09PWEuc3JjRWxlbWVudD9hLnRvRWxlbWVudDphLmZyb21FbGVtZW50OmEucmVsYXRlZFRhcmdldH0sbW92ZW1lbnRYOmZ1bmN0aW9uKGEpe2lmKFwibW92ZW1lbnRYXCJpblxuYSlyZXR1cm4gYS5tb3ZlbWVudFg7YSE9PXlkJiYoeWQmJlwibW91c2Vtb3ZlXCI9PT1hLnR5cGU/KHdkPWEuc2NyZWVuWC15ZC5zY3JlZW5YLHhkPWEuc2NyZWVuWS15ZC5zY3JlZW5ZKTp4ZD13ZD0wLHlkPWEpO3JldHVybiB3ZH0sbW92ZW1lbnRZOmZ1bmN0aW9uKGEpe3JldHVyblwibW92ZW1lbnRZXCJpbiBhP2EubW92ZW1lbnRZOnhkfX0pLEJkPXJkKEFkKSxDZD1BKHt9LEFkLHtkYXRhVHJhbnNmZXI6MH0pLERkPXJkKENkKSxFZD1BKHt9LHVkLHtyZWxhdGVkVGFyZ2V0OjB9KSxGZD1yZChFZCksR2Q9QSh7fSxzZCx7YW5pbWF0aW9uTmFtZTowLGVsYXBzZWRUaW1lOjAscHNldWRvRWxlbWVudDowfSksSGQ9cmQoR2QpLElkPUEoe30sc2Qse2NsaXBib2FyZERhdGE6ZnVuY3Rpb24oYSl7cmV0dXJuXCJjbGlwYm9hcmREYXRhXCJpbiBhP2EuY2xpcGJvYXJkRGF0YTp3aW5kb3cuY2xpcGJvYXJkRGF0YX19KSxKZD1yZChJZCksS2Q9QSh7fSxzZCx7ZGF0YTowfSksTGQ9cmQoS2QpLE1kPXtFc2M6XCJFc2NhcGVcIixcblNwYWNlYmFyOlwiIFwiLExlZnQ6XCJBcnJvd0xlZnRcIixVcDpcIkFycm93VXBcIixSaWdodDpcIkFycm93UmlnaHRcIixEb3duOlwiQXJyb3dEb3duXCIsRGVsOlwiRGVsZXRlXCIsV2luOlwiT1NcIixNZW51OlwiQ29udGV4dE1lbnVcIixBcHBzOlwiQ29udGV4dE1lbnVcIixTY3JvbGw6XCJTY3JvbGxMb2NrXCIsTW96UHJpbnRhYmxlS2V5OlwiVW5pZGVudGlmaWVkXCJ9LE5kPXs4OlwiQmFja3NwYWNlXCIsOTpcIlRhYlwiLDEyOlwiQ2xlYXJcIiwxMzpcIkVudGVyXCIsMTY6XCJTaGlmdFwiLDE3OlwiQ29udHJvbFwiLDE4OlwiQWx0XCIsMTk6XCJQYXVzZVwiLDIwOlwiQ2Fwc0xvY2tcIiwyNzpcIkVzY2FwZVwiLDMyOlwiIFwiLDMzOlwiUGFnZVVwXCIsMzQ6XCJQYWdlRG93blwiLDM1OlwiRW5kXCIsMzY6XCJIb21lXCIsMzc6XCJBcnJvd0xlZnRcIiwzODpcIkFycm93VXBcIiwzOTpcIkFycm93UmlnaHRcIiw0MDpcIkFycm93RG93blwiLDQ1OlwiSW5zZXJ0XCIsNDY6XCJEZWxldGVcIiwxMTI6XCJGMVwiLDExMzpcIkYyXCIsMTE0OlwiRjNcIiwxMTU6XCJGNFwiLDExNjpcIkY1XCIsMTE3OlwiRjZcIiwxMTg6XCJGN1wiLFxuMTE5OlwiRjhcIiwxMjA6XCJGOVwiLDEyMTpcIkYxMFwiLDEyMjpcIkYxMVwiLDEyMzpcIkYxMlwiLDE0NDpcIk51bUxvY2tcIiwxNDU6XCJTY3JvbGxMb2NrXCIsMjI0OlwiTWV0YVwifSxPZD17QWx0OlwiYWx0S2V5XCIsQ29udHJvbDpcImN0cmxLZXlcIixNZXRhOlwibWV0YUtleVwiLFNoaWZ0Olwic2hpZnRLZXlcIn07ZnVuY3Rpb24gUGQoYSl7dmFyIGI9dGhpcy5uYXRpdmVFdmVudDtyZXR1cm4gYi5nZXRNb2RpZmllclN0YXRlP2IuZ2V0TW9kaWZpZXJTdGF0ZShhKTooYT1PZFthXSk/ISFiW2FdOiExfWZ1bmN0aW9uIHpkKCl7cmV0dXJuIFBkfVxudmFyIFFkPUEoe30sdWQse2tleTpmdW5jdGlvbihhKXtpZihhLmtleSl7dmFyIGI9TWRbYS5rZXldfHxhLmtleTtpZihcIlVuaWRlbnRpZmllZFwiIT09YilyZXR1cm4gYn1yZXR1cm5cImtleXByZXNzXCI9PT1hLnR5cGU/KGE9b2QoYSksMTM9PT1hP1wiRW50ZXJcIjpTdHJpbmcuZnJvbUNoYXJDb2RlKGEpKTpcImtleWRvd25cIj09PWEudHlwZXx8XCJrZXl1cFwiPT09YS50eXBlP05kW2Eua2V5Q29kZV18fFwiVW5pZGVudGlmaWVkXCI6XCJcIn0sY29kZTowLGxvY2F0aW9uOjAsY3RybEtleTowLHNoaWZ0S2V5OjAsYWx0S2V5OjAsbWV0YUtleTowLHJlcGVhdDowLGxvY2FsZTowLGdldE1vZGlmaWVyU3RhdGU6emQsY2hhckNvZGU6ZnVuY3Rpb24oYSl7cmV0dXJuXCJrZXlwcmVzc1wiPT09YS50eXBlP29kKGEpOjB9LGtleUNvZGU6ZnVuY3Rpb24oYSl7cmV0dXJuXCJrZXlkb3duXCI9PT1hLnR5cGV8fFwia2V5dXBcIj09PWEudHlwZT9hLmtleUNvZGU6MH0sd2hpY2g6ZnVuY3Rpb24oYSl7cmV0dXJuXCJrZXlwcmVzc1wiPT09XG5hLnR5cGU/b2QoYSk6XCJrZXlkb3duXCI9PT1hLnR5cGV8fFwia2V5dXBcIj09PWEudHlwZT9hLmtleUNvZGU6MH19KSxSZD1yZChRZCksU2Q9QSh7fSxBZCx7cG9pbnRlcklkOjAsd2lkdGg6MCxoZWlnaHQ6MCxwcmVzc3VyZTowLHRhbmdlbnRpYWxQcmVzc3VyZTowLHRpbHRYOjAsdGlsdFk6MCx0d2lzdDowLHBvaW50ZXJUeXBlOjAsaXNQcmltYXJ5OjB9KSxUZD1yZChTZCksVWQ9QSh7fSx1ZCx7dG91Y2hlczowLHRhcmdldFRvdWNoZXM6MCxjaGFuZ2VkVG91Y2hlczowLGFsdEtleTowLG1ldGFLZXk6MCxjdHJsS2V5OjAsc2hpZnRLZXk6MCxnZXRNb2RpZmllclN0YXRlOnpkfSksVmQ9cmQoVWQpLFdkPUEoe30sc2Qse3Byb3BlcnR5TmFtZTowLGVsYXBzZWRUaW1lOjAscHNldWRvRWxlbWVudDowfSksWGQ9cmQoV2QpLFlkPUEoe30sQWQse2RlbHRhWDpmdW5jdGlvbihhKXtyZXR1cm5cImRlbHRhWFwiaW4gYT9hLmRlbHRhWDpcIndoZWVsRGVsdGFYXCJpbiBhPy1hLndoZWVsRGVsdGFYOjB9LFxuZGVsdGFZOmZ1bmN0aW9uKGEpe3JldHVyblwiZGVsdGFZXCJpbiBhP2EuZGVsdGFZOlwid2hlZWxEZWx0YVlcImluIGE/LWEud2hlZWxEZWx0YVk6XCJ3aGVlbERlbHRhXCJpbiBhPy1hLndoZWVsRGVsdGE6MH0sZGVsdGFaOjAsZGVsdGFNb2RlOjB9KSxaZD1yZChZZCksJGQ9WzksMTMsMjcsMzJdLGFlPWlhJiZcIkNvbXBvc2l0aW9uRXZlbnRcImluIHdpbmRvdyxiZT1udWxsO2lhJiZcImRvY3VtZW50TW9kZVwiaW4gZG9jdW1lbnQmJihiZT1kb2N1bWVudC5kb2N1bWVudE1vZGUpO3ZhciBjZT1pYSYmXCJUZXh0RXZlbnRcImluIHdpbmRvdyYmIWJlLGRlPWlhJiYoIWFlfHxiZSYmODxiZSYmMTE+PWJlKSxlZT1TdHJpbmcuZnJvbUNoYXJDb2RlKDMyKSxmZT0hMTtcbmZ1bmN0aW9uIGdlKGEsYil7c3dpdGNoKGEpe2Nhc2UgXCJrZXl1cFwiOnJldHVybi0xIT09JGQuaW5kZXhPZihiLmtleUNvZGUpO2Nhc2UgXCJrZXlkb3duXCI6cmV0dXJuIDIyOSE9PWIua2V5Q29kZTtjYXNlIFwia2V5cHJlc3NcIjpjYXNlIFwibW91c2Vkb3duXCI6Y2FzZSBcImZvY3Vzb3V0XCI6cmV0dXJuITA7ZGVmYXVsdDpyZXR1cm4hMX19ZnVuY3Rpb24gaGUoYSl7YT1hLmRldGFpbDtyZXR1cm5cIm9iamVjdFwiPT09dHlwZW9mIGEmJlwiZGF0YVwiaW4gYT9hLmRhdGE6bnVsbH12YXIgaWU9ITE7ZnVuY3Rpb24gamUoYSxiKXtzd2l0Y2goYSl7Y2FzZSBcImNvbXBvc2l0aW9uZW5kXCI6cmV0dXJuIGhlKGIpO2Nhc2UgXCJrZXlwcmVzc1wiOmlmKDMyIT09Yi53aGljaClyZXR1cm4gbnVsbDtmZT0hMDtyZXR1cm4gZWU7Y2FzZSBcInRleHRJbnB1dFwiOnJldHVybiBhPWIuZGF0YSxhPT09ZWUmJmZlP251bGw6YTtkZWZhdWx0OnJldHVybiBudWxsfX1cbmZ1bmN0aW9uIGtlKGEsYil7aWYoaWUpcmV0dXJuXCJjb21wb3NpdGlvbmVuZFwiPT09YXx8IWFlJiZnZShhLGIpPyhhPW5kKCksbWQ9bGQ9a2Q9bnVsbCxpZT0hMSxhKTpudWxsO3N3aXRjaChhKXtjYXNlIFwicGFzdGVcIjpyZXR1cm4gbnVsbDtjYXNlIFwia2V5cHJlc3NcIjppZighKGIuY3RybEtleXx8Yi5hbHRLZXl8fGIubWV0YUtleSl8fGIuY3RybEtleSYmYi5hbHRLZXkpe2lmKGIuY2hhciYmMTxiLmNoYXIubGVuZ3RoKXJldHVybiBiLmNoYXI7aWYoYi53aGljaClyZXR1cm4gU3RyaW5nLmZyb21DaGFyQ29kZShiLndoaWNoKX1yZXR1cm4gbnVsbDtjYXNlIFwiY29tcG9zaXRpb25lbmRcIjpyZXR1cm4gZGUmJlwia29cIiE9PWIubG9jYWxlP251bGw6Yi5kYXRhO2RlZmF1bHQ6cmV0dXJuIG51bGx9fVxudmFyIGxlPXtjb2xvcjohMCxkYXRlOiEwLGRhdGV0aW1lOiEwLFwiZGF0ZXRpbWUtbG9jYWxcIjohMCxlbWFpbDohMCxtb250aDohMCxudW1iZXI6ITAscGFzc3dvcmQ6ITAscmFuZ2U6ITAsc2VhcmNoOiEwLHRlbDohMCx0ZXh0OiEwLHRpbWU6ITAsdXJsOiEwLHdlZWs6ITB9O2Z1bmN0aW9uIG1lKGEpe3ZhciBiPWEmJmEubm9kZU5hbWUmJmEubm9kZU5hbWUudG9Mb3dlckNhc2UoKTtyZXR1cm5cImlucHV0XCI9PT1iPyEhbGVbYS50eXBlXTpcInRleHRhcmVhXCI9PT1iPyEwOiExfWZ1bmN0aW9uIG5lKGEsYixjLGQpe0ViKGQpO2I9b2UoYixcIm9uQ2hhbmdlXCIpOzA8Yi5sZW5ndGgmJihjPW5ldyB0ZChcIm9uQ2hhbmdlXCIsXCJjaGFuZ2VcIixudWxsLGMsZCksYS5wdXNoKHtldmVudDpjLGxpc3RlbmVyczpifSkpfXZhciBwZT1udWxsLHFlPW51bGw7ZnVuY3Rpb24gcmUoYSl7c2UoYSwwKX1mdW5jdGlvbiB0ZShhKXt2YXIgYj11ZShhKTtpZihXYShiKSlyZXR1cm4gYX1cbmZ1bmN0aW9uIHZlKGEsYil7aWYoXCJjaGFuZ2VcIj09PWEpcmV0dXJuIGJ9dmFyIHdlPSExO2lmKGlhKXt2YXIgeGU7aWYoaWEpe3ZhciB5ZT1cIm9uaW5wdXRcImluIGRvY3VtZW50O2lmKCF5ZSl7dmFyIHplPWRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoXCJkaXZcIik7emUuc2V0QXR0cmlidXRlKFwib25pbnB1dFwiLFwicmV0dXJuO1wiKTt5ZT1cImZ1bmN0aW9uXCI9PT10eXBlb2YgemUub25pbnB1dH14ZT15ZX1lbHNlIHhlPSExO3dlPXhlJiYoIWRvY3VtZW50LmRvY3VtZW50TW9kZXx8OTxkb2N1bWVudC5kb2N1bWVudE1vZGUpfWZ1bmN0aW9uIEFlKCl7cGUmJihwZS5kZXRhY2hFdmVudChcIm9ucHJvcGVydHljaGFuZ2VcIixCZSkscWU9cGU9bnVsbCl9ZnVuY3Rpb24gQmUoYSl7aWYoXCJ2YWx1ZVwiPT09YS5wcm9wZXJ0eU5hbWUmJnRlKHFlKSl7dmFyIGI9W107bmUoYixxZSxhLHhiKGEpKTtKYihyZSxiKX19XG5mdW5jdGlvbiBDZShhLGIsYyl7XCJmb2N1c2luXCI9PT1hPyhBZSgpLHBlPWIscWU9YyxwZS5hdHRhY2hFdmVudChcIm9ucHJvcGVydHljaGFuZ2VcIixCZSkpOlwiZm9jdXNvdXRcIj09PWEmJkFlKCl9ZnVuY3Rpb24gRGUoYSl7aWYoXCJzZWxlY3Rpb25jaGFuZ2VcIj09PWF8fFwia2V5dXBcIj09PWF8fFwia2V5ZG93blwiPT09YSlyZXR1cm4gdGUocWUpfWZ1bmN0aW9uIEVlKGEsYil7aWYoXCJjbGlja1wiPT09YSlyZXR1cm4gdGUoYil9ZnVuY3Rpb24gRmUoYSxiKXtpZihcImlucHV0XCI9PT1hfHxcImNoYW5nZVwiPT09YSlyZXR1cm4gdGUoYil9ZnVuY3Rpb24gR2UoYSxiKXtyZXR1cm4gYT09PWImJigwIT09YXx8MS9hPT09MS9iKXx8YSE9PWEmJmIhPT1ifXZhciBIZT1cImZ1bmN0aW9uXCI9PT10eXBlb2YgT2JqZWN0LmlzP09iamVjdC5pczpHZTtcbmZ1bmN0aW9uIEllKGEsYil7aWYoSGUoYSxiKSlyZXR1cm4hMDtpZihcIm9iamVjdFwiIT09dHlwZW9mIGF8fG51bGw9PT1hfHxcIm9iamVjdFwiIT09dHlwZW9mIGJ8fG51bGw9PT1iKXJldHVybiExO3ZhciBjPU9iamVjdC5rZXlzKGEpLGQ9T2JqZWN0LmtleXMoYik7aWYoYy5sZW5ndGghPT1kLmxlbmd0aClyZXR1cm4hMTtmb3IoZD0wO2Q8Yy5sZW5ndGg7ZCsrKXt2YXIgZT1jW2RdO2lmKCFqYS5jYWxsKGIsZSl8fCFIZShhW2VdLGJbZV0pKXJldHVybiExfXJldHVybiEwfWZ1bmN0aW9uIEplKGEpe2Zvcig7YSYmYS5maXJzdENoaWxkOylhPWEuZmlyc3RDaGlsZDtyZXR1cm4gYX1cbmZ1bmN0aW9uIEtlKGEsYil7dmFyIGM9SmUoYSk7YT0wO2Zvcih2YXIgZDtjOyl7aWYoMz09PWMubm9kZVR5cGUpe2Q9YStjLnRleHRDb250ZW50Lmxlbmd0aDtpZihhPD1iJiZkPj1iKXJldHVybntub2RlOmMsb2Zmc2V0OmItYX07YT1kfWE6e2Zvcig7Yzspe2lmKGMubmV4dFNpYmxpbmcpe2M9Yy5uZXh0U2libGluZzticmVhayBhfWM9Yy5wYXJlbnROb2RlfWM9dm9pZCAwfWM9SmUoYyl9fWZ1bmN0aW9uIExlKGEsYil7cmV0dXJuIGEmJmI/YT09PWI/ITA6YSYmMz09PWEubm9kZVR5cGU/ITE6YiYmMz09PWIubm9kZVR5cGU/TGUoYSxiLnBhcmVudE5vZGUpOlwiY29udGFpbnNcImluIGE/YS5jb250YWlucyhiKTphLmNvbXBhcmVEb2N1bWVudFBvc2l0aW9uPyEhKGEuY29tcGFyZURvY3VtZW50UG9zaXRpb24oYikmMTYpOiExOiExfVxuZnVuY3Rpb24gTWUoKXtmb3IodmFyIGE9d2luZG93LGI9WGEoKTtiIGluc3RhbmNlb2YgYS5IVE1MSUZyYW1lRWxlbWVudDspe3RyeXt2YXIgYz1cInN0cmluZ1wiPT09dHlwZW9mIGIuY29udGVudFdpbmRvdy5sb2NhdGlvbi5ocmVmfWNhdGNoKGQpe2M9ITF9aWYoYylhPWIuY29udGVudFdpbmRvdztlbHNlIGJyZWFrO2I9WGEoYS5kb2N1bWVudCl9cmV0dXJuIGJ9ZnVuY3Rpb24gTmUoYSl7dmFyIGI9YSYmYS5ub2RlTmFtZSYmYS5ub2RlTmFtZS50b0xvd2VyQ2FzZSgpO3JldHVybiBiJiYoXCJpbnB1dFwiPT09YiYmKFwidGV4dFwiPT09YS50eXBlfHxcInNlYXJjaFwiPT09YS50eXBlfHxcInRlbFwiPT09YS50eXBlfHxcInVybFwiPT09YS50eXBlfHxcInBhc3N3b3JkXCI9PT1hLnR5cGUpfHxcInRleHRhcmVhXCI9PT1ifHxcInRydWVcIj09PWEuY29udGVudEVkaXRhYmxlKX1cbmZ1bmN0aW9uIE9lKGEpe3ZhciBiPU1lKCksYz1hLmZvY3VzZWRFbGVtLGQ9YS5zZWxlY3Rpb25SYW5nZTtpZihiIT09YyYmYyYmYy5vd25lckRvY3VtZW50JiZMZShjLm93bmVyRG9jdW1lbnQuZG9jdW1lbnRFbGVtZW50LGMpKXtpZihudWxsIT09ZCYmTmUoYykpaWYoYj1kLnN0YXJ0LGE9ZC5lbmQsdm9pZCAwPT09YSYmKGE9YiksXCJzZWxlY3Rpb25TdGFydFwiaW4gYyljLnNlbGVjdGlvblN0YXJ0PWIsYy5zZWxlY3Rpb25FbmQ9TWF0aC5taW4oYSxjLnZhbHVlLmxlbmd0aCk7ZWxzZSBpZihhPShiPWMub3duZXJEb2N1bWVudHx8ZG9jdW1lbnQpJiZiLmRlZmF1bHRWaWV3fHx3aW5kb3csYS5nZXRTZWxlY3Rpb24pe2E9YS5nZXRTZWxlY3Rpb24oKTt2YXIgZT1jLnRleHRDb250ZW50Lmxlbmd0aCxmPU1hdGgubWluKGQuc3RhcnQsZSk7ZD12b2lkIDA9PT1kLmVuZD9mOk1hdGgubWluKGQuZW5kLGUpOyFhLmV4dGVuZCYmZj5kJiYoZT1kLGQ9ZixmPWUpO2U9S2UoYyxmKTt2YXIgZz1LZShjLFxuZCk7ZSYmZyYmKDEhPT1hLnJhbmdlQ291bnR8fGEuYW5jaG9yTm9kZSE9PWUubm9kZXx8YS5hbmNob3JPZmZzZXQhPT1lLm9mZnNldHx8YS5mb2N1c05vZGUhPT1nLm5vZGV8fGEuZm9jdXNPZmZzZXQhPT1nLm9mZnNldCkmJihiPWIuY3JlYXRlUmFuZ2UoKSxiLnNldFN0YXJ0KGUubm9kZSxlLm9mZnNldCksYS5yZW1vdmVBbGxSYW5nZXMoKSxmPmQ/KGEuYWRkUmFuZ2UoYiksYS5leHRlbmQoZy5ub2RlLGcub2Zmc2V0KSk6KGIuc2V0RW5kKGcubm9kZSxnLm9mZnNldCksYS5hZGRSYW5nZShiKSkpfWI9W107Zm9yKGE9YzthPWEucGFyZW50Tm9kZTspMT09PWEubm9kZVR5cGUmJmIucHVzaCh7ZWxlbWVudDphLGxlZnQ6YS5zY3JvbGxMZWZ0LHRvcDphLnNjcm9sbFRvcH0pO1wiZnVuY3Rpb25cIj09PXR5cGVvZiBjLmZvY3VzJiZjLmZvY3VzKCk7Zm9yKGM9MDtjPGIubGVuZ3RoO2MrKylhPWJbY10sYS5lbGVtZW50LnNjcm9sbExlZnQ9YS5sZWZ0LGEuZWxlbWVudC5zY3JvbGxUb3A9YS50b3B9fVxudmFyIFBlPWlhJiZcImRvY3VtZW50TW9kZVwiaW4gZG9jdW1lbnQmJjExPj1kb2N1bWVudC5kb2N1bWVudE1vZGUsUWU9bnVsbCxSZT1udWxsLFNlPW51bGwsVGU9ITE7XG5mdW5jdGlvbiBVZShhLGIsYyl7dmFyIGQ9Yy53aW5kb3c9PT1jP2MuZG9jdW1lbnQ6OT09PWMubm9kZVR5cGU/YzpjLm93bmVyRG9jdW1lbnQ7VGV8fG51bGw9PVFlfHxRZSE9PVhhKGQpfHwoZD1RZSxcInNlbGVjdGlvblN0YXJ0XCJpbiBkJiZOZShkKT9kPXtzdGFydDpkLnNlbGVjdGlvblN0YXJ0LGVuZDpkLnNlbGVjdGlvbkVuZH06KGQ9KGQub3duZXJEb2N1bWVudCYmZC5vd25lckRvY3VtZW50LmRlZmF1bHRWaWV3fHx3aW5kb3cpLmdldFNlbGVjdGlvbigpLGQ9e2FuY2hvck5vZGU6ZC5hbmNob3JOb2RlLGFuY2hvck9mZnNldDpkLmFuY2hvck9mZnNldCxmb2N1c05vZGU6ZC5mb2N1c05vZGUsZm9jdXNPZmZzZXQ6ZC5mb2N1c09mZnNldH0pLFNlJiZJZShTZSxkKXx8KFNlPWQsZD1vZShSZSxcIm9uU2VsZWN0XCIpLDA8ZC5sZW5ndGgmJihiPW5ldyB0ZChcIm9uU2VsZWN0XCIsXCJzZWxlY3RcIixudWxsLGIsYyksYS5wdXNoKHtldmVudDpiLGxpc3RlbmVyczpkfSksYi50YXJnZXQ9UWUpKSl9XG5mdW5jdGlvbiBWZShhLGIpe3ZhciBjPXt9O2NbYS50b0xvd2VyQ2FzZSgpXT1iLnRvTG93ZXJDYXNlKCk7Y1tcIldlYmtpdFwiK2FdPVwid2Via2l0XCIrYjtjW1wiTW96XCIrYV09XCJtb3pcIitiO3JldHVybiBjfXZhciBXZT17YW5pbWF0aW9uZW5kOlZlKFwiQW5pbWF0aW9uXCIsXCJBbmltYXRpb25FbmRcIiksYW5pbWF0aW9uaXRlcmF0aW9uOlZlKFwiQW5pbWF0aW9uXCIsXCJBbmltYXRpb25JdGVyYXRpb25cIiksYW5pbWF0aW9uc3RhcnQ6VmUoXCJBbmltYXRpb25cIixcIkFuaW1hdGlvblN0YXJ0XCIpLHRyYW5zaXRpb25lbmQ6VmUoXCJUcmFuc2l0aW9uXCIsXCJUcmFuc2l0aW9uRW5kXCIpfSxYZT17fSxZZT17fTtcbmlhJiYoWWU9ZG9jdW1lbnQuY3JlYXRlRWxlbWVudChcImRpdlwiKS5zdHlsZSxcIkFuaW1hdGlvbkV2ZW50XCJpbiB3aW5kb3d8fChkZWxldGUgV2UuYW5pbWF0aW9uZW5kLmFuaW1hdGlvbixkZWxldGUgV2UuYW5pbWF0aW9uaXRlcmF0aW9uLmFuaW1hdGlvbixkZWxldGUgV2UuYW5pbWF0aW9uc3RhcnQuYW5pbWF0aW9uKSxcIlRyYW5zaXRpb25FdmVudFwiaW4gd2luZG93fHxkZWxldGUgV2UudHJhbnNpdGlvbmVuZC50cmFuc2l0aW9uKTtmdW5jdGlvbiBaZShhKXtpZihYZVthXSlyZXR1cm4gWGVbYV07aWYoIVdlW2FdKXJldHVybiBhO3ZhciBiPVdlW2FdLGM7Zm9yKGMgaW4gYilpZihiLmhhc093blByb3BlcnR5KGMpJiZjIGluIFllKXJldHVybiBYZVthXT1iW2NdO3JldHVybiBhfXZhciAkZT1aZShcImFuaW1hdGlvbmVuZFwiKSxhZj1aZShcImFuaW1hdGlvbml0ZXJhdGlvblwiKSxiZj1aZShcImFuaW1hdGlvbnN0YXJ0XCIpLGNmPVplKFwidHJhbnNpdGlvbmVuZFwiKSxkZj1uZXcgTWFwLGVmPVwiYWJvcnQgYXV4Q2xpY2sgY2FuY2VsIGNhblBsYXkgY2FuUGxheVRocm91Z2ggY2xpY2sgY2xvc2UgY29udGV4dE1lbnUgY29weSBjdXQgZHJhZyBkcmFnRW5kIGRyYWdFbnRlciBkcmFnRXhpdCBkcmFnTGVhdmUgZHJhZ092ZXIgZHJhZ1N0YXJ0IGRyb3AgZHVyYXRpb25DaGFuZ2UgZW1wdGllZCBlbmNyeXB0ZWQgZW5kZWQgZXJyb3IgZ290UG9pbnRlckNhcHR1cmUgaW5wdXQgaW52YWxpZCBrZXlEb3duIGtleVByZXNzIGtleVVwIGxvYWQgbG9hZGVkRGF0YSBsb2FkZWRNZXRhZGF0YSBsb2FkU3RhcnQgbG9zdFBvaW50ZXJDYXB0dXJlIG1vdXNlRG93biBtb3VzZU1vdmUgbW91c2VPdXQgbW91c2VPdmVyIG1vdXNlVXAgcGFzdGUgcGF1c2UgcGxheSBwbGF5aW5nIHBvaW50ZXJDYW5jZWwgcG9pbnRlckRvd24gcG9pbnRlck1vdmUgcG9pbnRlck91dCBwb2ludGVyT3ZlciBwb2ludGVyVXAgcHJvZ3Jlc3MgcmF0ZUNoYW5nZSByZXNldCByZXNpemUgc2Vla2VkIHNlZWtpbmcgc3RhbGxlZCBzdWJtaXQgc3VzcGVuZCB0aW1lVXBkYXRlIHRvdWNoQ2FuY2VsIHRvdWNoRW5kIHRvdWNoU3RhcnQgdm9sdW1lQ2hhbmdlIHNjcm9sbCB0b2dnbGUgdG91Y2hNb3ZlIHdhaXRpbmcgd2hlZWxcIi5zcGxpdChcIiBcIik7XG5mdW5jdGlvbiBmZihhLGIpe2RmLnNldChhLGIpO2ZhKGIsW2FdKX1mb3IodmFyIGdmPTA7Z2Y8ZWYubGVuZ3RoO2dmKyspe3ZhciBoZj1lZltnZl0samY9aGYudG9Mb3dlckNhc2UoKSxrZj1oZlswXS50b1VwcGVyQ2FzZSgpK2hmLnNsaWNlKDEpO2ZmKGpmLFwib25cIitrZil9ZmYoJGUsXCJvbkFuaW1hdGlvbkVuZFwiKTtmZihhZixcIm9uQW5pbWF0aW9uSXRlcmF0aW9uXCIpO2ZmKGJmLFwib25BbmltYXRpb25TdGFydFwiKTtmZihcImRibGNsaWNrXCIsXCJvbkRvdWJsZUNsaWNrXCIpO2ZmKFwiZm9jdXNpblwiLFwib25Gb2N1c1wiKTtmZihcImZvY3Vzb3V0XCIsXCJvbkJsdXJcIik7ZmYoY2YsXCJvblRyYW5zaXRpb25FbmRcIik7aGEoXCJvbk1vdXNlRW50ZXJcIixbXCJtb3VzZW91dFwiLFwibW91c2VvdmVyXCJdKTtoYShcIm9uTW91c2VMZWF2ZVwiLFtcIm1vdXNlb3V0XCIsXCJtb3VzZW92ZXJcIl0pO2hhKFwib25Qb2ludGVyRW50ZXJcIixbXCJwb2ludGVyb3V0XCIsXCJwb2ludGVyb3ZlclwiXSk7XG5oYShcIm9uUG9pbnRlckxlYXZlXCIsW1wicG9pbnRlcm91dFwiLFwicG9pbnRlcm92ZXJcIl0pO2ZhKFwib25DaGFuZ2VcIixcImNoYW5nZSBjbGljayBmb2N1c2luIGZvY3Vzb3V0IGlucHV0IGtleWRvd24ga2V5dXAgc2VsZWN0aW9uY2hhbmdlXCIuc3BsaXQoXCIgXCIpKTtmYShcIm9uU2VsZWN0XCIsXCJmb2N1c291dCBjb250ZXh0bWVudSBkcmFnZW5kIGZvY3VzaW4ga2V5ZG93biBrZXl1cCBtb3VzZWRvd24gbW91c2V1cCBzZWxlY3Rpb25jaGFuZ2VcIi5zcGxpdChcIiBcIikpO2ZhKFwib25CZWZvcmVJbnB1dFwiLFtcImNvbXBvc2l0aW9uZW5kXCIsXCJrZXlwcmVzc1wiLFwidGV4dElucHV0XCIsXCJwYXN0ZVwiXSk7ZmEoXCJvbkNvbXBvc2l0aW9uRW5kXCIsXCJjb21wb3NpdGlvbmVuZCBmb2N1c291dCBrZXlkb3duIGtleXByZXNzIGtleXVwIG1vdXNlZG93blwiLnNwbGl0KFwiIFwiKSk7ZmEoXCJvbkNvbXBvc2l0aW9uU3RhcnRcIixcImNvbXBvc2l0aW9uc3RhcnQgZm9jdXNvdXQga2V5ZG93biBrZXlwcmVzcyBrZXl1cCBtb3VzZWRvd25cIi5zcGxpdChcIiBcIikpO1xuZmEoXCJvbkNvbXBvc2l0aW9uVXBkYXRlXCIsXCJjb21wb3NpdGlvbnVwZGF0ZSBmb2N1c291dCBrZXlkb3duIGtleXByZXNzIGtleXVwIG1vdXNlZG93blwiLnNwbGl0KFwiIFwiKSk7dmFyIGxmPVwiYWJvcnQgY2FucGxheSBjYW5wbGF5dGhyb3VnaCBkdXJhdGlvbmNoYW5nZSBlbXB0aWVkIGVuY3J5cHRlZCBlbmRlZCBlcnJvciBsb2FkZWRkYXRhIGxvYWRlZG1ldGFkYXRhIGxvYWRzdGFydCBwYXVzZSBwbGF5IHBsYXlpbmcgcHJvZ3Jlc3MgcmF0ZWNoYW5nZSByZXNpemUgc2Vla2VkIHNlZWtpbmcgc3RhbGxlZCBzdXNwZW5kIHRpbWV1cGRhdGUgdm9sdW1lY2hhbmdlIHdhaXRpbmdcIi5zcGxpdChcIiBcIiksbWY9bmV3IFNldChcImNhbmNlbCBjbG9zZSBpbnZhbGlkIGxvYWQgc2Nyb2xsIHRvZ2dsZVwiLnNwbGl0KFwiIFwiKS5jb25jYXQobGYpKTtcbmZ1bmN0aW9uIG5mKGEsYixjKXt2YXIgZD1hLnR5cGV8fFwidW5rbm93bi1ldmVudFwiO2EuY3VycmVudFRhcmdldD1jO1ViKGQsYix2b2lkIDAsYSk7YS5jdXJyZW50VGFyZ2V0PW51bGx9XG5mdW5jdGlvbiBzZShhLGIpe2I9MCE9PShiJjQpO2Zvcih2YXIgYz0wO2M8YS5sZW5ndGg7YysrKXt2YXIgZD1hW2NdLGU9ZC5ldmVudDtkPWQubGlzdGVuZXJzO2E6e3ZhciBmPXZvaWQgMDtpZihiKWZvcih2YXIgZz1kLmxlbmd0aC0xOzA8PWc7Zy0tKXt2YXIgaD1kW2ddLGs9aC5pbnN0YW5jZSxsPWguY3VycmVudFRhcmdldDtoPWgubGlzdGVuZXI7aWYoayE9PWYmJmUuaXNQcm9wYWdhdGlvblN0b3BwZWQoKSlicmVhayBhO25mKGUsaCxsKTtmPWt9ZWxzZSBmb3IoZz0wO2c8ZC5sZW5ndGg7ZysrKXtoPWRbZ107az1oLmluc3RhbmNlO2w9aC5jdXJyZW50VGFyZ2V0O2g9aC5saXN0ZW5lcjtpZihrIT09ZiYmZS5pc1Byb3BhZ2F0aW9uU3RvcHBlZCgpKWJyZWFrIGE7bmYoZSxoLGwpO2Y9a319fWlmKFFiKXRocm93IGE9UmIsUWI9ITEsUmI9bnVsbCxhO31cbmZ1bmN0aW9uIEQoYSxiKXt2YXIgYz1iW29mXTt2b2lkIDA9PT1jJiYoYz1iW29mXT1uZXcgU2V0KTt2YXIgZD1hK1wiX19idWJibGVcIjtjLmhhcyhkKXx8KHBmKGIsYSwyLCExKSxjLmFkZChkKSl9ZnVuY3Rpb24gcWYoYSxiLGMpe3ZhciBkPTA7YiYmKGR8PTQpO3BmKGMsYSxkLGIpfXZhciByZj1cIl9yZWFjdExpc3RlbmluZ1wiK01hdGgucmFuZG9tKCkudG9TdHJpbmcoMzYpLnNsaWNlKDIpO2Z1bmN0aW9uIHNmKGEpe2lmKCFhW3JmXSl7YVtyZl09ITA7ZGEuZm9yRWFjaChmdW5jdGlvbihiKXtcInNlbGVjdGlvbmNoYW5nZVwiIT09YiYmKG1mLmhhcyhiKXx8cWYoYiwhMSxhKSxxZihiLCEwLGEpKX0pO3ZhciBiPTk9PT1hLm5vZGVUeXBlP2E6YS5vd25lckRvY3VtZW50O251bGw9PT1ifHxiW3JmXXx8KGJbcmZdPSEwLHFmKFwic2VsZWN0aW9uY2hhbmdlXCIsITEsYikpfX1cbmZ1bmN0aW9uIHBmKGEsYixjLGQpe3N3aXRjaChqZChiKSl7Y2FzZSAxOnZhciBlPWVkO2JyZWFrO2Nhc2UgNDplPWdkO2JyZWFrO2RlZmF1bHQ6ZT1mZH1jPWUuYmluZChudWxsLGIsYyxhKTtlPXZvaWQgMDshTGJ8fFwidG91Y2hzdGFydFwiIT09YiYmXCJ0b3VjaG1vdmVcIiE9PWImJlwid2hlZWxcIiE9PWJ8fChlPSEwKTtkP3ZvaWQgMCE9PWU/YS5hZGRFdmVudExpc3RlbmVyKGIsYyx7Y2FwdHVyZTohMCxwYXNzaXZlOmV9KTphLmFkZEV2ZW50TGlzdGVuZXIoYixjLCEwKTp2b2lkIDAhPT1lP2EuYWRkRXZlbnRMaXN0ZW5lcihiLGMse3Bhc3NpdmU6ZX0pOmEuYWRkRXZlbnRMaXN0ZW5lcihiLGMsITEpfVxuZnVuY3Rpb24gaGQoYSxiLGMsZCxlKXt2YXIgZj1kO2lmKDA9PT0oYiYxKSYmMD09PShiJjIpJiZudWxsIT09ZClhOmZvcig7Oyl7aWYobnVsbD09PWQpcmV0dXJuO3ZhciBnPWQudGFnO2lmKDM9PT1nfHw0PT09Zyl7dmFyIGg9ZC5zdGF0ZU5vZGUuY29udGFpbmVySW5mbztpZihoPT09ZXx8OD09PWgubm9kZVR5cGUmJmgucGFyZW50Tm9kZT09PWUpYnJlYWs7aWYoND09PWcpZm9yKGc9ZC5yZXR1cm47bnVsbCE9PWc7KXt2YXIgaz1nLnRhZztpZigzPT09a3x8ND09PWspaWYoaz1nLnN0YXRlTm9kZS5jb250YWluZXJJbmZvLGs9PT1lfHw4PT09ay5ub2RlVHlwZSYmay5wYXJlbnROb2RlPT09ZSlyZXR1cm47Zz1nLnJldHVybn1mb3IoO251bGwhPT1oOyl7Zz1XYyhoKTtpZihudWxsPT09ZylyZXR1cm47az1nLnRhZztpZig1PT09a3x8Nj09PWspe2Q9Zj1nO2NvbnRpbnVlIGF9aD1oLnBhcmVudE5vZGV9fWQ9ZC5yZXR1cm59SmIoZnVuY3Rpb24oKXt2YXIgZD1mLGU9eGIoYyksZz1bXTtcbmE6e3ZhciBoPWRmLmdldChhKTtpZih2b2lkIDAhPT1oKXt2YXIgaz10ZCxuPWE7c3dpdGNoKGEpe2Nhc2UgXCJrZXlwcmVzc1wiOmlmKDA9PT1vZChjKSlicmVhayBhO2Nhc2UgXCJrZXlkb3duXCI6Y2FzZSBcImtleXVwXCI6az1SZDticmVhaztjYXNlIFwiZm9jdXNpblwiOm49XCJmb2N1c1wiO2s9RmQ7YnJlYWs7Y2FzZSBcImZvY3Vzb3V0XCI6bj1cImJsdXJcIjtrPUZkO2JyZWFrO2Nhc2UgXCJiZWZvcmVibHVyXCI6Y2FzZSBcImFmdGVyYmx1clwiOms9RmQ7YnJlYWs7Y2FzZSBcImNsaWNrXCI6aWYoMj09PWMuYnV0dG9uKWJyZWFrIGE7Y2FzZSBcImF1eGNsaWNrXCI6Y2FzZSBcImRibGNsaWNrXCI6Y2FzZSBcIm1vdXNlZG93blwiOmNhc2UgXCJtb3VzZW1vdmVcIjpjYXNlIFwibW91c2V1cFwiOmNhc2UgXCJtb3VzZW91dFwiOmNhc2UgXCJtb3VzZW92ZXJcIjpjYXNlIFwiY29udGV4dG1lbnVcIjprPUJkO2JyZWFrO2Nhc2UgXCJkcmFnXCI6Y2FzZSBcImRyYWdlbmRcIjpjYXNlIFwiZHJhZ2VudGVyXCI6Y2FzZSBcImRyYWdleGl0XCI6Y2FzZSBcImRyYWdsZWF2ZVwiOmNhc2UgXCJkcmFnb3ZlclwiOmNhc2UgXCJkcmFnc3RhcnRcIjpjYXNlIFwiZHJvcFwiOms9XG5EZDticmVhaztjYXNlIFwidG91Y2hjYW5jZWxcIjpjYXNlIFwidG91Y2hlbmRcIjpjYXNlIFwidG91Y2htb3ZlXCI6Y2FzZSBcInRvdWNoc3RhcnRcIjprPVZkO2JyZWFrO2Nhc2UgJGU6Y2FzZSBhZjpjYXNlIGJmOms9SGQ7YnJlYWs7Y2FzZSBjZjprPVhkO2JyZWFrO2Nhc2UgXCJzY3JvbGxcIjprPXZkO2JyZWFrO2Nhc2UgXCJ3aGVlbFwiOms9WmQ7YnJlYWs7Y2FzZSBcImNvcHlcIjpjYXNlIFwiY3V0XCI6Y2FzZSBcInBhc3RlXCI6az1KZDticmVhaztjYXNlIFwiZ290cG9pbnRlcmNhcHR1cmVcIjpjYXNlIFwibG9zdHBvaW50ZXJjYXB0dXJlXCI6Y2FzZSBcInBvaW50ZXJjYW5jZWxcIjpjYXNlIFwicG9pbnRlcmRvd25cIjpjYXNlIFwicG9pbnRlcm1vdmVcIjpjYXNlIFwicG9pbnRlcm91dFwiOmNhc2UgXCJwb2ludGVyb3ZlclwiOmNhc2UgXCJwb2ludGVydXBcIjprPVRkfXZhciB0PTAhPT0oYiY0KSxKPSF0JiZcInNjcm9sbFwiPT09YSx4PXQ/bnVsbCE9PWg/aCtcIkNhcHR1cmVcIjpudWxsOmg7dD1bXTtmb3IodmFyIHc9ZCx1O251bGwhPT1cbnc7KXt1PXc7dmFyIEY9dS5zdGF0ZU5vZGU7NT09PXUudGFnJiZudWxsIT09RiYmKHU9RixudWxsIT09eCYmKEY9S2Iodyx4KSxudWxsIT1GJiZ0LnB1c2godGYodyxGLHUpKSkpO2lmKEopYnJlYWs7dz13LnJldHVybn0wPHQubGVuZ3RoJiYoaD1uZXcgayhoLG4sbnVsbCxjLGUpLGcucHVzaCh7ZXZlbnQ6aCxsaXN0ZW5lcnM6dH0pKX19aWYoMD09PShiJjcpKXthOntoPVwibW91c2VvdmVyXCI9PT1hfHxcInBvaW50ZXJvdmVyXCI9PT1hO2s9XCJtb3VzZW91dFwiPT09YXx8XCJwb2ludGVyb3V0XCI9PT1hO2lmKGgmJmMhPT13YiYmKG49Yy5yZWxhdGVkVGFyZ2V0fHxjLmZyb21FbGVtZW50KSYmKFdjKG4pfHxuW3VmXSkpYnJlYWsgYTtpZihrfHxoKXtoPWUud2luZG93PT09ZT9lOihoPWUub3duZXJEb2N1bWVudCk/aC5kZWZhdWx0Vmlld3x8aC5wYXJlbnRXaW5kb3c6d2luZG93O2lmKGspe2lmKG49Yy5yZWxhdGVkVGFyZ2V0fHxjLnRvRWxlbWVudCxrPWQsbj1uP1djKG4pOm51bGwsbnVsbCE9PVxubiYmKEo9VmIobiksbiE9PUp8fDUhPT1uLnRhZyYmNiE9PW4udGFnKSluPW51bGx9ZWxzZSBrPW51bGwsbj1kO2lmKGshPT1uKXt0PUJkO0Y9XCJvbk1vdXNlTGVhdmVcIjt4PVwib25Nb3VzZUVudGVyXCI7dz1cIm1vdXNlXCI7aWYoXCJwb2ludGVyb3V0XCI9PT1hfHxcInBvaW50ZXJvdmVyXCI9PT1hKXQ9VGQsRj1cIm9uUG9pbnRlckxlYXZlXCIseD1cIm9uUG9pbnRlckVudGVyXCIsdz1cInBvaW50ZXJcIjtKPW51bGw9PWs/aDp1ZShrKTt1PW51bGw9PW4/aDp1ZShuKTtoPW5ldyB0KEYsdytcImxlYXZlXCIsayxjLGUpO2gudGFyZ2V0PUo7aC5yZWxhdGVkVGFyZ2V0PXU7Rj1udWxsO1djKGUpPT09ZCYmKHQ9bmV3IHQoeCx3K1wiZW50ZXJcIixuLGMsZSksdC50YXJnZXQ9dSx0LnJlbGF0ZWRUYXJnZXQ9SixGPXQpO0o9RjtpZihrJiZuKWI6e3Q9azt4PW47dz0wO2Zvcih1PXQ7dTt1PXZmKHUpKXcrKzt1PTA7Zm9yKEY9eDtGO0Y9dmYoRikpdSsrO2Zvcig7MDx3LXU7KXQ9dmYodCksdy0tO2Zvcig7MDx1LXc7KXg9XG52Zih4KSx1LS07Zm9yKDt3LS07KXtpZih0PT09eHx8bnVsbCE9PXgmJnQ9PT14LmFsdGVybmF0ZSlicmVhayBiO3Q9dmYodCk7eD12Zih4KX10PW51bGx9ZWxzZSB0PW51bGw7bnVsbCE9PWsmJndmKGcsaCxrLHQsITEpO251bGwhPT1uJiZudWxsIT09SiYmd2YoZyxKLG4sdCwhMCl9fX1hOntoPWQ/dWUoZCk6d2luZG93O2s9aC5ub2RlTmFtZSYmaC5ub2RlTmFtZS50b0xvd2VyQ2FzZSgpO2lmKFwic2VsZWN0XCI9PT1rfHxcImlucHV0XCI9PT1rJiZcImZpbGVcIj09PWgudHlwZSl2YXIgbmE9dmU7ZWxzZSBpZihtZShoKSlpZih3ZSluYT1GZTtlbHNle25hPURlO3ZhciB4YT1DZX1lbHNlKGs9aC5ub2RlTmFtZSkmJlwiaW5wdXRcIj09PWsudG9Mb3dlckNhc2UoKSYmKFwiY2hlY2tib3hcIj09PWgudHlwZXx8XCJyYWRpb1wiPT09aC50eXBlKSYmKG5hPUVlKTtpZihuYSYmKG5hPW5hKGEsZCkpKXtuZShnLG5hLGMsZSk7YnJlYWsgYX14YSYmeGEoYSxoLGQpO1wiZm9jdXNvdXRcIj09PWEmJih4YT1oLl93cmFwcGVyU3RhdGUpJiZcbnhhLmNvbnRyb2xsZWQmJlwibnVtYmVyXCI9PT1oLnR5cGUmJmNiKGgsXCJudW1iZXJcIixoLnZhbHVlKX14YT1kP3VlKGQpOndpbmRvdztzd2l0Y2goYSl7Y2FzZSBcImZvY3VzaW5cIjppZihtZSh4YSl8fFwidHJ1ZVwiPT09eGEuY29udGVudEVkaXRhYmxlKVFlPXhhLFJlPWQsU2U9bnVsbDticmVhaztjYXNlIFwiZm9jdXNvdXRcIjpTZT1SZT1RZT1udWxsO2JyZWFrO2Nhc2UgXCJtb3VzZWRvd25cIjpUZT0hMDticmVhaztjYXNlIFwiY29udGV4dG1lbnVcIjpjYXNlIFwibW91c2V1cFwiOmNhc2UgXCJkcmFnZW5kXCI6VGU9ITE7VWUoZyxjLGUpO2JyZWFrO2Nhc2UgXCJzZWxlY3Rpb25jaGFuZ2VcIjppZihQZSlicmVhaztjYXNlIFwia2V5ZG93blwiOmNhc2UgXCJrZXl1cFwiOlVlKGcsYyxlKX12YXIgJGE7aWYoYWUpYjp7c3dpdGNoKGEpe2Nhc2UgXCJjb21wb3NpdGlvbnN0YXJ0XCI6dmFyIGJhPVwib25Db21wb3NpdGlvblN0YXJ0XCI7YnJlYWsgYjtjYXNlIFwiY29tcG9zaXRpb25lbmRcIjpiYT1cIm9uQ29tcG9zaXRpb25FbmRcIjtcbmJyZWFrIGI7Y2FzZSBcImNvbXBvc2l0aW9udXBkYXRlXCI6YmE9XCJvbkNvbXBvc2l0aW9uVXBkYXRlXCI7YnJlYWsgYn1iYT12b2lkIDB9ZWxzZSBpZT9nZShhLGMpJiYoYmE9XCJvbkNvbXBvc2l0aW9uRW5kXCIpOlwia2V5ZG93blwiPT09YSYmMjI5PT09Yy5rZXlDb2RlJiYoYmE9XCJvbkNvbXBvc2l0aW9uU3RhcnRcIik7YmEmJihkZSYmXCJrb1wiIT09Yy5sb2NhbGUmJihpZXx8XCJvbkNvbXBvc2l0aW9uU3RhcnRcIiE9PWJhP1wib25Db21wb3NpdGlvbkVuZFwiPT09YmEmJmllJiYoJGE9bmQoKSk6KGtkPWUsbGQ9XCJ2YWx1ZVwiaW4ga2Q/a2QudmFsdWU6a2QudGV4dENvbnRlbnQsaWU9ITApKSx4YT1vZShkLGJhKSwwPHhhLmxlbmd0aCYmKGJhPW5ldyBMZChiYSxhLG51bGwsYyxlKSxnLnB1c2goe2V2ZW50OmJhLGxpc3RlbmVyczp4YX0pLCRhP2JhLmRhdGE9JGE6KCRhPWhlKGMpLG51bGwhPT0kYSYmKGJhLmRhdGE9JGEpKSkpO2lmKCRhPWNlP2plKGEsYyk6a2UoYSxjKSlkPW9lKGQsXCJvbkJlZm9yZUlucHV0XCIpLFxuMDxkLmxlbmd0aCYmKGU9bmV3IExkKFwib25CZWZvcmVJbnB1dFwiLFwiYmVmb3JlaW5wdXRcIixudWxsLGMsZSksZy5wdXNoKHtldmVudDplLGxpc3RlbmVyczpkfSksZS5kYXRhPSRhKX1zZShnLGIpfSl9ZnVuY3Rpb24gdGYoYSxiLGMpe3JldHVybntpbnN0YW5jZTphLGxpc3RlbmVyOmIsY3VycmVudFRhcmdldDpjfX1mdW5jdGlvbiBvZShhLGIpe2Zvcih2YXIgYz1iK1wiQ2FwdHVyZVwiLGQ9W107bnVsbCE9PWE7KXt2YXIgZT1hLGY9ZS5zdGF0ZU5vZGU7NT09PWUudGFnJiZudWxsIT09ZiYmKGU9ZixmPUtiKGEsYyksbnVsbCE9ZiYmZC51bnNoaWZ0KHRmKGEsZixlKSksZj1LYihhLGIpLG51bGwhPWYmJmQucHVzaCh0ZihhLGYsZSkpKTthPWEucmV0dXJufXJldHVybiBkfWZ1bmN0aW9uIHZmKGEpe2lmKG51bGw9PT1hKXJldHVybiBudWxsO2RvIGE9YS5yZXR1cm47d2hpbGUoYSYmNSE9PWEudGFnKTtyZXR1cm4gYT9hOm51bGx9XG5mdW5jdGlvbiB3ZihhLGIsYyxkLGUpe2Zvcih2YXIgZj1iLl9yZWFjdE5hbWUsZz1bXTtudWxsIT09YyYmYyE9PWQ7KXt2YXIgaD1jLGs9aC5hbHRlcm5hdGUsbD1oLnN0YXRlTm9kZTtpZihudWxsIT09ayYmaz09PWQpYnJlYWs7NT09PWgudGFnJiZudWxsIT09bCYmKGg9bCxlPyhrPUtiKGMsZiksbnVsbCE9ayYmZy51bnNoaWZ0KHRmKGMsayxoKSkpOmV8fChrPUtiKGMsZiksbnVsbCE9ayYmZy5wdXNoKHRmKGMsayxoKSkpKTtjPWMucmV0dXJufTAhPT1nLmxlbmd0aCYmYS5wdXNoKHtldmVudDpiLGxpc3RlbmVyczpnfSl9dmFyIHhmPS9cXHJcXG4/L2cseWY9L1xcdTAwMDB8XFx1RkZGRC9nO2Z1bmN0aW9uIHpmKGEpe3JldHVybihcInN0cmluZ1wiPT09dHlwZW9mIGE/YTpcIlwiK2EpLnJlcGxhY2UoeGYsXCJcXG5cIikucmVwbGFjZSh5ZixcIlwiKX1mdW5jdGlvbiBBZihhLGIsYyl7Yj16ZihiKTtpZih6ZihhKSE9PWImJmMpdGhyb3cgRXJyb3IocCg0MjUpKTt9ZnVuY3Rpb24gQmYoKXt9XG52YXIgQ2Y9bnVsbCxEZj1udWxsO2Z1bmN0aW9uIEVmKGEsYil7cmV0dXJuXCJ0ZXh0YXJlYVwiPT09YXx8XCJub3NjcmlwdFwiPT09YXx8XCJzdHJpbmdcIj09PXR5cGVvZiBiLmNoaWxkcmVufHxcIm51bWJlclwiPT09dHlwZW9mIGIuY2hpbGRyZW58fFwib2JqZWN0XCI9PT10eXBlb2YgYi5kYW5nZXJvdXNseVNldElubmVySFRNTCYmbnVsbCE9PWIuZGFuZ2Vyb3VzbHlTZXRJbm5lckhUTUwmJm51bGwhPWIuZGFuZ2Vyb3VzbHlTZXRJbm5lckhUTUwuX19odG1sfVxudmFyIEZmPVwiZnVuY3Rpb25cIj09PXR5cGVvZiBzZXRUaW1lb3V0P3NldFRpbWVvdXQ6dm9pZCAwLEdmPVwiZnVuY3Rpb25cIj09PXR5cGVvZiBjbGVhclRpbWVvdXQ/Y2xlYXJUaW1lb3V0OnZvaWQgMCxIZj1cImZ1bmN0aW9uXCI9PT10eXBlb2YgUHJvbWlzZT9Qcm9taXNlOnZvaWQgMCxKZj1cImZ1bmN0aW9uXCI9PT10eXBlb2YgcXVldWVNaWNyb3Rhc2s/cXVldWVNaWNyb3Rhc2s6XCJ1bmRlZmluZWRcIiE9PXR5cGVvZiBIZj9mdW5jdGlvbihhKXtyZXR1cm4gSGYucmVzb2x2ZShudWxsKS50aGVuKGEpLmNhdGNoKElmKX06RmY7ZnVuY3Rpb24gSWYoYSl7c2V0VGltZW91dChmdW5jdGlvbigpe3Rocm93IGE7fSl9XG5mdW5jdGlvbiBLZihhLGIpe3ZhciBjPWIsZD0wO2Rve3ZhciBlPWMubmV4dFNpYmxpbmc7YS5yZW1vdmVDaGlsZChjKTtpZihlJiY4PT09ZS5ub2RlVHlwZSlpZihjPWUuZGF0YSxcIi8kXCI9PT1jKXtpZigwPT09ZCl7YS5yZW1vdmVDaGlsZChlKTtiZChiKTtyZXR1cm59ZC0tfWVsc2VcIiRcIiE9PWMmJlwiJD9cIiE9PWMmJlwiJCFcIiE9PWN8fGQrKztjPWV9d2hpbGUoYyk7YmQoYil9ZnVuY3Rpb24gTGYoYSl7Zm9yKDtudWxsIT1hO2E9YS5uZXh0U2libGluZyl7dmFyIGI9YS5ub2RlVHlwZTtpZigxPT09Ynx8Mz09PWIpYnJlYWs7aWYoOD09PWIpe2I9YS5kYXRhO2lmKFwiJFwiPT09Ynx8XCIkIVwiPT09Ynx8XCIkP1wiPT09YilicmVhaztpZihcIi8kXCI9PT1iKXJldHVybiBudWxsfX1yZXR1cm4gYX1cbmZ1bmN0aW9uIE1mKGEpe2E9YS5wcmV2aW91c1NpYmxpbmc7Zm9yKHZhciBiPTA7YTspe2lmKDg9PT1hLm5vZGVUeXBlKXt2YXIgYz1hLmRhdGE7aWYoXCIkXCI9PT1jfHxcIiQhXCI9PT1jfHxcIiQ/XCI9PT1jKXtpZigwPT09YilyZXR1cm4gYTtiLS19ZWxzZVwiLyRcIj09PWMmJmIrK31hPWEucHJldmlvdXNTaWJsaW5nfXJldHVybiBudWxsfXZhciBOZj1NYXRoLnJhbmRvbSgpLnRvU3RyaW5nKDM2KS5zbGljZSgyKSxPZj1cIl9fcmVhY3RGaWJlciRcIitOZixQZj1cIl9fcmVhY3RQcm9wcyRcIitOZix1Zj1cIl9fcmVhY3RDb250YWluZXIkXCIrTmYsb2Y9XCJfX3JlYWN0RXZlbnRzJFwiK05mLFFmPVwiX19yZWFjdExpc3RlbmVycyRcIitOZixSZj1cIl9fcmVhY3RIYW5kbGVzJFwiK05mO1xuZnVuY3Rpb24gV2MoYSl7dmFyIGI9YVtPZl07aWYoYilyZXR1cm4gYjtmb3IodmFyIGM9YS5wYXJlbnROb2RlO2M7KXtpZihiPWNbdWZdfHxjW09mXSl7Yz1iLmFsdGVybmF0ZTtpZihudWxsIT09Yi5jaGlsZHx8bnVsbCE9PWMmJm51bGwhPT1jLmNoaWxkKWZvcihhPU1mKGEpO251bGwhPT1hOyl7aWYoYz1hW09mXSlyZXR1cm4gYzthPU1mKGEpfXJldHVybiBifWE9YztjPWEucGFyZW50Tm9kZX1yZXR1cm4gbnVsbH1mdW5jdGlvbiBDYihhKXthPWFbT2ZdfHxhW3VmXTtyZXR1cm4hYXx8NSE9PWEudGFnJiY2IT09YS50YWcmJjEzIT09YS50YWcmJjMhPT1hLnRhZz9udWxsOmF9ZnVuY3Rpb24gdWUoYSl7aWYoNT09PWEudGFnfHw2PT09YS50YWcpcmV0dXJuIGEuc3RhdGVOb2RlO3Rocm93IEVycm9yKHAoMzMpKTt9ZnVuY3Rpb24gRGIoYSl7cmV0dXJuIGFbUGZdfHxudWxsfXZhciBTZj1bXSxUZj0tMTtmdW5jdGlvbiBVZihhKXtyZXR1cm57Y3VycmVudDphfX1cbmZ1bmN0aW9uIEUoYSl7MD5UZnx8KGEuY3VycmVudD1TZltUZl0sU2ZbVGZdPW51bGwsVGYtLSl9ZnVuY3Rpb24gRyhhLGIpe1RmKys7U2ZbVGZdPWEuY3VycmVudDthLmN1cnJlbnQ9Yn12YXIgVmY9e30sSD1VZihWZiksV2Y9VWYoITEpLFhmPVZmO2Z1bmN0aW9uIFlmKGEsYil7dmFyIGM9YS50eXBlLmNvbnRleHRUeXBlcztpZighYylyZXR1cm4gVmY7dmFyIGQ9YS5zdGF0ZU5vZGU7aWYoZCYmZC5fX3JlYWN0SW50ZXJuYWxNZW1vaXplZFVubWFza2VkQ2hpbGRDb250ZXh0PT09YilyZXR1cm4gZC5fX3JlYWN0SW50ZXJuYWxNZW1vaXplZE1hc2tlZENoaWxkQ29udGV4dDt2YXIgZT17fSxmO2ZvcihmIGluIGMpZVtmXT1iW2ZdO2QmJihhPWEuc3RhdGVOb2RlLGEuX19yZWFjdEludGVybmFsTWVtb2l6ZWRVbm1hc2tlZENoaWxkQ29udGV4dD1iLGEuX19yZWFjdEludGVybmFsTWVtb2l6ZWRNYXNrZWRDaGlsZENvbnRleHQ9ZSk7cmV0dXJuIGV9XG5mdW5jdGlvbiBaZihhKXthPWEuY2hpbGRDb250ZXh0VHlwZXM7cmV0dXJuIG51bGwhPT1hJiZ2b2lkIDAhPT1hfWZ1bmN0aW9uICRmKCl7RShXZik7RShIKX1mdW5jdGlvbiBhZyhhLGIsYyl7aWYoSC5jdXJyZW50IT09VmYpdGhyb3cgRXJyb3IocCgxNjgpKTtHKEgsYik7RyhXZixjKX1mdW5jdGlvbiBiZyhhLGIsYyl7dmFyIGQ9YS5zdGF0ZU5vZGU7Yj1iLmNoaWxkQ29udGV4dFR5cGVzO2lmKFwiZnVuY3Rpb25cIiE9PXR5cGVvZiBkLmdldENoaWxkQ29udGV4dClyZXR1cm4gYztkPWQuZ2V0Q2hpbGRDb250ZXh0KCk7Zm9yKHZhciBlIGluIGQpaWYoIShlIGluIGIpKXRocm93IEVycm9yKHAoMTA4LFJhKGEpfHxcIlVua25vd25cIixlKSk7cmV0dXJuIEEoe30sYyxkKX1cbmZ1bmN0aW9uIGNnKGEpe2E9KGE9YS5zdGF0ZU5vZGUpJiZhLl9fcmVhY3RJbnRlcm5hbE1lbW9pemVkTWVyZ2VkQ2hpbGRDb250ZXh0fHxWZjtYZj1ILmN1cnJlbnQ7RyhILGEpO0coV2YsV2YuY3VycmVudCk7cmV0dXJuITB9ZnVuY3Rpb24gZGcoYSxiLGMpe3ZhciBkPWEuc3RhdGVOb2RlO2lmKCFkKXRocm93IEVycm9yKHAoMTY5KSk7Yz8oYT1iZyhhLGIsWGYpLGQuX19yZWFjdEludGVybmFsTWVtb2l6ZWRNZXJnZWRDaGlsZENvbnRleHQ9YSxFKFdmKSxFKEgpLEcoSCxhKSk6RShXZik7RyhXZixjKX12YXIgZWc9bnVsbCxmZz0hMSxnZz0hMTtmdW5jdGlvbiBoZyhhKXtudWxsPT09ZWc/ZWc9W2FdOmVnLnB1c2goYSl9ZnVuY3Rpb24gaWcoYSl7Zmc9ITA7aGcoYSl9XG5mdW5jdGlvbiBqZygpe2lmKCFnZyYmbnVsbCE9PWVnKXtnZz0hMDt2YXIgYT0wLGI9Qzt0cnl7dmFyIGM9ZWc7Zm9yKEM9MTthPGMubGVuZ3RoO2ErKyl7dmFyIGQ9Y1thXTtkbyBkPWQoITApO3doaWxlKG51bGwhPT1kKX1lZz1udWxsO2ZnPSExfWNhdGNoKGUpe3Rocm93IG51bGwhPT1lZyYmKGVnPWVnLnNsaWNlKGErMSkpLGFjKGZjLGpnKSxlO31maW5hbGx5e0M9YixnZz0hMX19cmV0dXJuIG51bGx9dmFyIGtnPVtdLGxnPTAsbWc9bnVsbCxuZz0wLG9nPVtdLHBnPTAscWc9bnVsbCxyZz0xLHNnPVwiXCI7ZnVuY3Rpb24gdGcoYSxiKXtrZ1tsZysrXT1uZztrZ1tsZysrXT1tZzttZz1hO25nPWJ9XG5mdW5jdGlvbiB1ZyhhLGIsYyl7b2dbcGcrK109cmc7b2dbcGcrK109c2c7b2dbcGcrK109cWc7cWc9YTt2YXIgZD1yZzthPXNnO3ZhciBlPTMyLW9jKGQpLTE7ZCY9figxPDxlKTtjKz0xO3ZhciBmPTMyLW9jKGIpK2U7aWYoMzA8Zil7dmFyIGc9ZS1lJTU7Zj0oZCYoMTw8ZyktMSkudG9TdHJpbmcoMzIpO2Q+Pj1nO2UtPWc7cmc9MTw8MzItb2MoYikrZXxjPDxlfGQ7c2c9ZithfWVsc2Ugcmc9MTw8ZnxjPDxlfGQsc2c9YX1mdW5jdGlvbiB2ZyhhKXtudWxsIT09YS5yZXR1cm4mJih0ZyhhLDEpLHVnKGEsMSwwKSl9ZnVuY3Rpb24gd2coYSl7Zm9yKDthPT09bWc7KW1nPWtnWy0tbGddLGtnW2xnXT1udWxsLG5nPWtnWy0tbGddLGtnW2xnXT1udWxsO2Zvcig7YT09PXFnOylxZz1vZ1stLXBnXSxvZ1twZ109bnVsbCxzZz1vZ1stLXBnXSxvZ1twZ109bnVsbCxyZz1vZ1stLXBnXSxvZ1twZ109bnVsbH12YXIgeGc9bnVsbCx5Zz1udWxsLEk9ITEsemc9bnVsbDtcbmZ1bmN0aW9uIEFnKGEsYil7dmFyIGM9QmcoNSxudWxsLG51bGwsMCk7Yy5lbGVtZW50VHlwZT1cIkRFTEVURURcIjtjLnN0YXRlTm9kZT1iO2MucmV0dXJuPWE7Yj1hLmRlbGV0aW9ucztudWxsPT09Yj8oYS5kZWxldGlvbnM9W2NdLGEuZmxhZ3N8PTE2KTpiLnB1c2goYyl9XG5mdW5jdGlvbiBDZyhhLGIpe3N3aXRjaChhLnRhZyl7Y2FzZSA1OnZhciBjPWEudHlwZTtiPTEhPT1iLm5vZGVUeXBlfHxjLnRvTG93ZXJDYXNlKCkhPT1iLm5vZGVOYW1lLnRvTG93ZXJDYXNlKCk/bnVsbDpiO3JldHVybiBudWxsIT09Yj8oYS5zdGF0ZU5vZGU9Yix4Zz1hLHlnPUxmKGIuZmlyc3RDaGlsZCksITApOiExO2Nhc2UgNjpyZXR1cm4gYj1cIlwiPT09YS5wZW5kaW5nUHJvcHN8fDMhPT1iLm5vZGVUeXBlP251bGw6YixudWxsIT09Yj8oYS5zdGF0ZU5vZGU9Yix4Zz1hLHlnPW51bGwsITApOiExO2Nhc2UgMTM6cmV0dXJuIGI9OCE9PWIubm9kZVR5cGU/bnVsbDpiLG51bGwhPT1iPyhjPW51bGwhPT1xZz97aWQ6cmcsb3ZlcmZsb3c6c2d9Om51bGwsYS5tZW1vaXplZFN0YXRlPXtkZWh5ZHJhdGVkOmIsdHJlZUNvbnRleHQ6YyxyZXRyeUxhbmU6MTA3Mzc0MTgyNH0sYz1CZygxOCxudWxsLG51bGwsMCksYy5zdGF0ZU5vZGU9YixjLnJldHVybj1hLGEuY2hpbGQ9Yyx4Zz1hLHlnPVxubnVsbCwhMCk6ITE7ZGVmYXVsdDpyZXR1cm4hMX19ZnVuY3Rpb24gRGcoYSl7cmV0dXJuIDAhPT0oYS5tb2RlJjEpJiYwPT09KGEuZmxhZ3MmMTI4KX1mdW5jdGlvbiBFZyhhKXtpZihJKXt2YXIgYj15ZztpZihiKXt2YXIgYz1iO2lmKCFDZyhhLGIpKXtpZihEZyhhKSl0aHJvdyBFcnJvcihwKDQxOCkpO2I9TGYoYy5uZXh0U2libGluZyk7dmFyIGQ9eGc7YiYmQ2coYSxiKT9BZyhkLGMpOihhLmZsYWdzPWEuZmxhZ3MmLTQwOTd8MixJPSExLHhnPWEpfX1lbHNle2lmKERnKGEpKXRocm93IEVycm9yKHAoNDE4KSk7YS5mbGFncz1hLmZsYWdzJi00MDk3fDI7ST0hMTt4Zz1hfX19ZnVuY3Rpb24gRmcoYSl7Zm9yKGE9YS5yZXR1cm47bnVsbCE9PWEmJjUhPT1hLnRhZyYmMyE9PWEudGFnJiYxMyE9PWEudGFnOylhPWEucmV0dXJuO3hnPWF9XG5mdW5jdGlvbiBHZyhhKXtpZihhIT09eGcpcmV0dXJuITE7aWYoIUkpcmV0dXJuIEZnKGEpLEk9ITAsITE7dmFyIGI7KGI9MyE9PWEudGFnKSYmIShiPTUhPT1hLnRhZykmJihiPWEudHlwZSxiPVwiaGVhZFwiIT09YiYmXCJib2R5XCIhPT1iJiYhRWYoYS50eXBlLGEubWVtb2l6ZWRQcm9wcykpO2lmKGImJihiPXlnKSl7aWYoRGcoYSkpdGhyb3cgSGcoKSxFcnJvcihwKDQxOCkpO2Zvcig7YjspQWcoYSxiKSxiPUxmKGIubmV4dFNpYmxpbmcpfUZnKGEpO2lmKDEzPT09YS50YWcpe2E9YS5tZW1vaXplZFN0YXRlO2E9bnVsbCE9PWE/YS5kZWh5ZHJhdGVkOm51bGw7aWYoIWEpdGhyb3cgRXJyb3IocCgzMTcpKTthOnthPWEubmV4dFNpYmxpbmc7Zm9yKGI9MDthOyl7aWYoOD09PWEubm9kZVR5cGUpe3ZhciBjPWEuZGF0YTtpZihcIi8kXCI9PT1jKXtpZigwPT09Yil7eWc9TGYoYS5uZXh0U2libGluZyk7YnJlYWsgYX1iLS19ZWxzZVwiJFwiIT09YyYmXCIkIVwiIT09YyYmXCIkP1wiIT09Y3x8YisrfWE9YS5uZXh0U2libGluZ315Zz1cbm51bGx9fWVsc2UgeWc9eGc/TGYoYS5zdGF0ZU5vZGUubmV4dFNpYmxpbmcpOm51bGw7cmV0dXJuITB9ZnVuY3Rpb24gSGcoKXtmb3IodmFyIGE9eWc7YTspYT1MZihhLm5leHRTaWJsaW5nKX1mdW5jdGlvbiBJZygpe3lnPXhnPW51bGw7ST0hMX1mdW5jdGlvbiBKZyhhKXtudWxsPT09emc/emc9W2FdOnpnLnB1c2goYSl9dmFyIEtnPXVhLlJlYWN0Q3VycmVudEJhdGNoQ29uZmlnO2Z1bmN0aW9uIExnKGEsYil7aWYoYSYmYS5kZWZhdWx0UHJvcHMpe2I9QSh7fSxiKTthPWEuZGVmYXVsdFByb3BzO2Zvcih2YXIgYyBpbiBhKXZvaWQgMD09PWJbY10mJihiW2NdPWFbY10pO3JldHVybiBifXJldHVybiBifXZhciBNZz1VZihudWxsKSxOZz1udWxsLE9nPW51bGwsUGc9bnVsbDtmdW5jdGlvbiBRZygpe1BnPU9nPU5nPW51bGx9ZnVuY3Rpb24gUmcoYSl7dmFyIGI9TWcuY3VycmVudDtFKE1nKTthLl9jdXJyZW50VmFsdWU9Yn1cbmZ1bmN0aW9uIFNnKGEsYixjKXtmb3IoO251bGwhPT1hOyl7dmFyIGQ9YS5hbHRlcm5hdGU7KGEuY2hpbGRMYW5lcyZiKSE9PWI/KGEuY2hpbGRMYW5lc3w9YixudWxsIT09ZCYmKGQuY2hpbGRMYW5lc3w9YikpOm51bGwhPT1kJiYoZC5jaGlsZExhbmVzJmIpIT09YiYmKGQuY2hpbGRMYW5lc3w9Yik7aWYoYT09PWMpYnJlYWs7YT1hLnJldHVybn19ZnVuY3Rpb24gVGcoYSxiKXtOZz1hO1BnPU9nPW51bGw7YT1hLmRlcGVuZGVuY2llcztudWxsIT09YSYmbnVsbCE9PWEuZmlyc3RDb250ZXh0JiYoMCE9PShhLmxhbmVzJmIpJiYoVWc9ITApLGEuZmlyc3RDb250ZXh0PW51bGwpfVxuZnVuY3Rpb24gVmcoYSl7dmFyIGI9YS5fY3VycmVudFZhbHVlO2lmKFBnIT09YSlpZihhPXtjb250ZXh0OmEsbWVtb2l6ZWRWYWx1ZTpiLG5leHQ6bnVsbH0sbnVsbD09PU9nKXtpZihudWxsPT09TmcpdGhyb3cgRXJyb3IocCgzMDgpKTtPZz1hO05nLmRlcGVuZGVuY2llcz17bGFuZXM6MCxmaXJzdENvbnRleHQ6YX19ZWxzZSBPZz1PZy5uZXh0PWE7cmV0dXJuIGJ9dmFyIFdnPW51bGw7ZnVuY3Rpb24gWGcoYSl7bnVsbD09PVdnP1dnPVthXTpXZy5wdXNoKGEpfWZ1bmN0aW9uIFlnKGEsYixjLGQpe3ZhciBlPWIuaW50ZXJsZWF2ZWQ7bnVsbD09PWU/KGMubmV4dD1jLFhnKGIpKTooYy5uZXh0PWUubmV4dCxlLm5leHQ9Yyk7Yi5pbnRlcmxlYXZlZD1jO3JldHVybiBaZyhhLGQpfVxuZnVuY3Rpb24gWmcoYSxiKXthLmxhbmVzfD1iO3ZhciBjPWEuYWx0ZXJuYXRlO251bGwhPT1jJiYoYy5sYW5lc3w9Yik7Yz1hO2ZvcihhPWEucmV0dXJuO251bGwhPT1hOylhLmNoaWxkTGFuZXN8PWIsYz1hLmFsdGVybmF0ZSxudWxsIT09YyYmKGMuY2hpbGRMYW5lc3w9YiksYz1hLGE9YS5yZXR1cm47cmV0dXJuIDM9PT1jLnRhZz9jLnN0YXRlTm9kZTpudWxsfXZhciAkZz0hMTtmdW5jdGlvbiBhaChhKXthLnVwZGF0ZVF1ZXVlPXtiYXNlU3RhdGU6YS5tZW1vaXplZFN0YXRlLGZpcnN0QmFzZVVwZGF0ZTpudWxsLGxhc3RCYXNlVXBkYXRlOm51bGwsc2hhcmVkOntwZW5kaW5nOm51bGwsaW50ZXJsZWF2ZWQ6bnVsbCxsYW5lczowfSxlZmZlY3RzOm51bGx9fVxuZnVuY3Rpb24gYmgoYSxiKXthPWEudXBkYXRlUXVldWU7Yi51cGRhdGVRdWV1ZT09PWEmJihiLnVwZGF0ZVF1ZXVlPXtiYXNlU3RhdGU6YS5iYXNlU3RhdGUsZmlyc3RCYXNlVXBkYXRlOmEuZmlyc3RCYXNlVXBkYXRlLGxhc3RCYXNlVXBkYXRlOmEubGFzdEJhc2VVcGRhdGUsc2hhcmVkOmEuc2hhcmVkLGVmZmVjdHM6YS5lZmZlY3RzfSl9ZnVuY3Rpb24gY2goYSxiKXtyZXR1cm57ZXZlbnRUaW1lOmEsbGFuZTpiLHRhZzowLHBheWxvYWQ6bnVsbCxjYWxsYmFjazpudWxsLG5leHQ6bnVsbH19XG5mdW5jdGlvbiBkaChhLGIsYyl7dmFyIGQ9YS51cGRhdGVRdWV1ZTtpZihudWxsPT09ZClyZXR1cm4gbnVsbDtkPWQuc2hhcmVkO2lmKDAhPT0oSyYyKSl7dmFyIGU9ZC5wZW5kaW5nO251bGw9PT1lP2IubmV4dD1iOihiLm5leHQ9ZS5uZXh0LGUubmV4dD1iKTtkLnBlbmRpbmc9YjtyZXR1cm4gWmcoYSxjKX1lPWQuaW50ZXJsZWF2ZWQ7bnVsbD09PWU/KGIubmV4dD1iLFhnKGQpKTooYi5uZXh0PWUubmV4dCxlLm5leHQ9Yik7ZC5pbnRlcmxlYXZlZD1iO3JldHVybiBaZyhhLGMpfWZ1bmN0aW9uIGVoKGEsYixjKXtiPWIudXBkYXRlUXVldWU7aWYobnVsbCE9PWImJihiPWIuc2hhcmVkLDAhPT0oYyY0MTk0MjQwKSkpe3ZhciBkPWIubGFuZXM7ZCY9YS5wZW5kaW5nTGFuZXM7Y3w9ZDtiLmxhbmVzPWM7Q2MoYSxjKX19XG5mdW5jdGlvbiBmaChhLGIpe3ZhciBjPWEudXBkYXRlUXVldWUsZD1hLmFsdGVybmF0ZTtpZihudWxsIT09ZCYmKGQ9ZC51cGRhdGVRdWV1ZSxjPT09ZCkpe3ZhciBlPW51bGwsZj1udWxsO2M9Yy5maXJzdEJhc2VVcGRhdGU7aWYobnVsbCE9PWMpe2Rve3ZhciBnPXtldmVudFRpbWU6Yy5ldmVudFRpbWUsbGFuZTpjLmxhbmUsdGFnOmMudGFnLHBheWxvYWQ6Yy5wYXlsb2FkLGNhbGxiYWNrOmMuY2FsbGJhY2ssbmV4dDpudWxsfTtudWxsPT09Zj9lPWY9ZzpmPWYubmV4dD1nO2M9Yy5uZXh0fXdoaWxlKG51bGwhPT1jKTtudWxsPT09Zj9lPWY9YjpmPWYubmV4dD1ifWVsc2UgZT1mPWI7Yz17YmFzZVN0YXRlOmQuYmFzZVN0YXRlLGZpcnN0QmFzZVVwZGF0ZTplLGxhc3RCYXNlVXBkYXRlOmYsc2hhcmVkOmQuc2hhcmVkLGVmZmVjdHM6ZC5lZmZlY3RzfTthLnVwZGF0ZVF1ZXVlPWM7cmV0dXJufWE9Yy5sYXN0QmFzZVVwZGF0ZTtudWxsPT09YT9jLmZpcnN0QmFzZVVwZGF0ZT1iOmEubmV4dD1cbmI7Yy5sYXN0QmFzZVVwZGF0ZT1ifVxuZnVuY3Rpb24gZ2goYSxiLGMsZCl7dmFyIGU9YS51cGRhdGVRdWV1ZTskZz0hMTt2YXIgZj1lLmZpcnN0QmFzZVVwZGF0ZSxnPWUubGFzdEJhc2VVcGRhdGUsaD1lLnNoYXJlZC5wZW5kaW5nO2lmKG51bGwhPT1oKXtlLnNoYXJlZC5wZW5kaW5nPW51bGw7dmFyIGs9aCxsPWsubmV4dDtrLm5leHQ9bnVsbDtudWxsPT09Zz9mPWw6Zy5uZXh0PWw7Zz1rO3ZhciBtPWEuYWx0ZXJuYXRlO251bGwhPT1tJiYobT1tLnVwZGF0ZVF1ZXVlLGg9bS5sYXN0QmFzZVVwZGF0ZSxoIT09ZyYmKG51bGw9PT1oP20uZmlyc3RCYXNlVXBkYXRlPWw6aC5uZXh0PWwsbS5sYXN0QmFzZVVwZGF0ZT1rKSl9aWYobnVsbCE9PWYpe3ZhciBxPWUuYmFzZVN0YXRlO2c9MDttPWw9az1udWxsO2g9Zjtkb3t2YXIgcj1oLmxhbmUseT1oLmV2ZW50VGltZTtpZigoZCZyKT09PXIpe251bGwhPT1tJiYobT1tLm5leHQ9e2V2ZW50VGltZTp5LGxhbmU6MCx0YWc6aC50YWcscGF5bG9hZDpoLnBheWxvYWQsY2FsbGJhY2s6aC5jYWxsYmFjayxcbm5leHQ6bnVsbH0pO2E6e3ZhciBuPWEsdD1oO3I9Yjt5PWM7c3dpdGNoKHQudGFnKXtjYXNlIDE6bj10LnBheWxvYWQ7aWYoXCJmdW5jdGlvblwiPT09dHlwZW9mIG4pe3E9bi5jYWxsKHkscSxyKTticmVhayBhfXE9bjticmVhayBhO2Nhc2UgMzpuLmZsYWdzPW4uZmxhZ3MmLTY1NTM3fDEyODtjYXNlIDA6bj10LnBheWxvYWQ7cj1cImZ1bmN0aW9uXCI9PT10eXBlb2Ygbj9uLmNhbGwoeSxxLHIpOm47aWYobnVsbD09PXJ8fHZvaWQgMD09PXIpYnJlYWsgYTtxPUEoe30scSxyKTticmVhayBhO2Nhc2UgMjokZz0hMH19bnVsbCE9PWguY2FsbGJhY2smJjAhPT1oLmxhbmUmJihhLmZsYWdzfD02NCxyPWUuZWZmZWN0cyxudWxsPT09cj9lLmVmZmVjdHM9W2hdOnIucHVzaChoKSl9ZWxzZSB5PXtldmVudFRpbWU6eSxsYW5lOnIsdGFnOmgudGFnLHBheWxvYWQ6aC5wYXlsb2FkLGNhbGxiYWNrOmguY2FsbGJhY2ssbmV4dDpudWxsfSxudWxsPT09bT8obD1tPXksaz1xKTptPW0ubmV4dD15LGd8PXI7XG5oPWgubmV4dDtpZihudWxsPT09aClpZihoPWUuc2hhcmVkLnBlbmRpbmcsbnVsbD09PWgpYnJlYWs7ZWxzZSByPWgsaD1yLm5leHQsci5uZXh0PW51bGwsZS5sYXN0QmFzZVVwZGF0ZT1yLGUuc2hhcmVkLnBlbmRpbmc9bnVsbH13aGlsZSgxKTtudWxsPT09bSYmKGs9cSk7ZS5iYXNlU3RhdGU9aztlLmZpcnN0QmFzZVVwZGF0ZT1sO2UubGFzdEJhc2VVcGRhdGU9bTtiPWUuc2hhcmVkLmludGVybGVhdmVkO2lmKG51bGwhPT1iKXtlPWI7ZG8gZ3w9ZS5sYW5lLGU9ZS5uZXh0O3doaWxlKGUhPT1iKX1lbHNlIG51bGw9PT1mJiYoZS5zaGFyZWQubGFuZXM9MCk7aGh8PWc7YS5sYW5lcz1nO2EubWVtb2l6ZWRTdGF0ZT1xfX1cbmZ1bmN0aW9uIGloKGEsYixjKXthPWIuZWZmZWN0cztiLmVmZmVjdHM9bnVsbDtpZihudWxsIT09YSlmb3IoYj0wO2I8YS5sZW5ndGg7YisrKXt2YXIgZD1hW2JdLGU9ZC5jYWxsYmFjaztpZihudWxsIT09ZSl7ZC5jYWxsYmFjaz1udWxsO2Q9YztpZihcImZ1bmN0aW9uXCIhPT10eXBlb2YgZSl0aHJvdyBFcnJvcihwKDE5MSxlKSk7ZS5jYWxsKGQpfX19dmFyIGpoPShuZXcgYWEuQ29tcG9uZW50KS5yZWZzO2Z1bmN0aW9uIGtoKGEsYixjLGQpe2I9YS5tZW1vaXplZFN0YXRlO2M9YyhkLGIpO2M9bnVsbD09PWN8fHZvaWQgMD09PWM/YjpBKHt9LGIsYyk7YS5tZW1vaXplZFN0YXRlPWM7MD09PWEubGFuZXMmJihhLnVwZGF0ZVF1ZXVlLmJhc2VTdGF0ZT1jKX1cbnZhciBuaD17aXNNb3VudGVkOmZ1bmN0aW9uKGEpe3JldHVybihhPWEuX3JlYWN0SW50ZXJuYWxzKT9WYihhKT09PWE6ITF9LGVucXVldWVTZXRTdGF0ZTpmdW5jdGlvbihhLGIsYyl7YT1hLl9yZWFjdEludGVybmFsczt2YXIgZD1MKCksZT1saChhKSxmPWNoKGQsZSk7Zi5wYXlsb2FkPWI7dm9pZCAwIT09YyYmbnVsbCE9PWMmJihmLmNhbGxiYWNrPWMpO2I9ZGgoYSxmLGUpO251bGwhPT1iJiYobWgoYixhLGUsZCksZWgoYixhLGUpKX0sZW5xdWV1ZVJlcGxhY2VTdGF0ZTpmdW5jdGlvbihhLGIsYyl7YT1hLl9yZWFjdEludGVybmFsczt2YXIgZD1MKCksZT1saChhKSxmPWNoKGQsZSk7Zi50YWc9MTtmLnBheWxvYWQ9Yjt2b2lkIDAhPT1jJiZudWxsIT09YyYmKGYuY2FsbGJhY2s9Yyk7Yj1kaChhLGYsZSk7bnVsbCE9PWImJihtaChiLGEsZSxkKSxlaChiLGEsZSkpfSxlbnF1ZXVlRm9yY2VVcGRhdGU6ZnVuY3Rpb24oYSxiKXthPWEuX3JlYWN0SW50ZXJuYWxzO3ZhciBjPUwoKSxkPVxubGgoYSksZT1jaChjLGQpO2UudGFnPTI7dm9pZCAwIT09YiYmbnVsbCE9PWImJihlLmNhbGxiYWNrPWIpO2I9ZGgoYSxlLGQpO251bGwhPT1iJiYobWgoYixhLGQsYyksZWgoYixhLGQpKX19O2Z1bmN0aW9uIG9oKGEsYixjLGQsZSxmLGcpe2E9YS5zdGF0ZU5vZGU7cmV0dXJuXCJmdW5jdGlvblwiPT09dHlwZW9mIGEuc2hvdWxkQ29tcG9uZW50VXBkYXRlP2Euc2hvdWxkQ29tcG9uZW50VXBkYXRlKGQsZixnKTpiLnByb3RvdHlwZSYmYi5wcm90b3R5cGUuaXNQdXJlUmVhY3RDb21wb25lbnQ/IUllKGMsZCl8fCFJZShlLGYpOiEwfVxuZnVuY3Rpb24gcGgoYSxiLGMpe3ZhciBkPSExLGU9VmY7dmFyIGY9Yi5jb250ZXh0VHlwZTtcIm9iamVjdFwiPT09dHlwZW9mIGYmJm51bGwhPT1mP2Y9VmcoZik6KGU9WmYoYik/WGY6SC5jdXJyZW50LGQ9Yi5jb250ZXh0VHlwZXMsZj0oZD1udWxsIT09ZCYmdm9pZCAwIT09ZCk/WWYoYSxlKTpWZik7Yj1uZXcgYihjLGYpO2EubWVtb2l6ZWRTdGF0ZT1udWxsIT09Yi5zdGF0ZSYmdm9pZCAwIT09Yi5zdGF0ZT9iLnN0YXRlOm51bGw7Yi51cGRhdGVyPW5oO2Euc3RhdGVOb2RlPWI7Yi5fcmVhY3RJbnRlcm5hbHM9YTtkJiYoYT1hLnN0YXRlTm9kZSxhLl9fcmVhY3RJbnRlcm5hbE1lbW9pemVkVW5tYXNrZWRDaGlsZENvbnRleHQ9ZSxhLl9fcmVhY3RJbnRlcm5hbE1lbW9pemVkTWFza2VkQ2hpbGRDb250ZXh0PWYpO3JldHVybiBifVxuZnVuY3Rpb24gcWgoYSxiLGMsZCl7YT1iLnN0YXRlO1wiZnVuY3Rpb25cIj09PXR5cGVvZiBiLmNvbXBvbmVudFdpbGxSZWNlaXZlUHJvcHMmJmIuY29tcG9uZW50V2lsbFJlY2VpdmVQcm9wcyhjLGQpO1wiZnVuY3Rpb25cIj09PXR5cGVvZiBiLlVOU0FGRV9jb21wb25lbnRXaWxsUmVjZWl2ZVByb3BzJiZiLlVOU0FGRV9jb21wb25lbnRXaWxsUmVjZWl2ZVByb3BzKGMsZCk7Yi5zdGF0ZSE9PWEmJm5oLmVucXVldWVSZXBsYWNlU3RhdGUoYixiLnN0YXRlLG51bGwpfVxuZnVuY3Rpb24gcmgoYSxiLGMsZCl7dmFyIGU9YS5zdGF0ZU5vZGU7ZS5wcm9wcz1jO2Uuc3RhdGU9YS5tZW1vaXplZFN0YXRlO2UucmVmcz1qaDthaChhKTt2YXIgZj1iLmNvbnRleHRUeXBlO1wib2JqZWN0XCI9PT10eXBlb2YgZiYmbnVsbCE9PWY/ZS5jb250ZXh0PVZnKGYpOihmPVpmKGIpP1hmOkguY3VycmVudCxlLmNvbnRleHQ9WWYoYSxmKSk7ZS5zdGF0ZT1hLm1lbW9pemVkU3RhdGU7Zj1iLmdldERlcml2ZWRTdGF0ZUZyb21Qcm9wcztcImZ1bmN0aW9uXCI9PT10eXBlb2YgZiYmKGtoKGEsYixmLGMpLGUuc3RhdGU9YS5tZW1vaXplZFN0YXRlKTtcImZ1bmN0aW9uXCI9PT10eXBlb2YgYi5nZXREZXJpdmVkU3RhdGVGcm9tUHJvcHN8fFwiZnVuY3Rpb25cIj09PXR5cGVvZiBlLmdldFNuYXBzaG90QmVmb3JlVXBkYXRlfHxcImZ1bmN0aW9uXCIhPT10eXBlb2YgZS5VTlNBRkVfY29tcG9uZW50V2lsbE1vdW50JiZcImZ1bmN0aW9uXCIhPT10eXBlb2YgZS5jb21wb25lbnRXaWxsTW91bnR8fChiPWUuc3RhdGUsXG5cImZ1bmN0aW9uXCI9PT10eXBlb2YgZS5jb21wb25lbnRXaWxsTW91bnQmJmUuY29tcG9uZW50V2lsbE1vdW50KCksXCJmdW5jdGlvblwiPT09dHlwZW9mIGUuVU5TQUZFX2NvbXBvbmVudFdpbGxNb3VudCYmZS5VTlNBRkVfY29tcG9uZW50V2lsbE1vdW50KCksYiE9PWUuc3RhdGUmJm5oLmVucXVldWVSZXBsYWNlU3RhdGUoZSxlLnN0YXRlLG51bGwpLGdoKGEsYyxlLGQpLGUuc3RhdGU9YS5tZW1vaXplZFN0YXRlKTtcImZ1bmN0aW9uXCI9PT10eXBlb2YgZS5jb21wb25lbnREaWRNb3VudCYmKGEuZmxhZ3N8PTQxOTQzMDgpfVxuZnVuY3Rpb24gc2goYSxiLGMpe2E9Yy5yZWY7aWYobnVsbCE9PWEmJlwiZnVuY3Rpb25cIiE9PXR5cGVvZiBhJiZcIm9iamVjdFwiIT09dHlwZW9mIGEpe2lmKGMuX293bmVyKXtjPWMuX293bmVyO2lmKGMpe2lmKDEhPT1jLnRhZyl0aHJvdyBFcnJvcihwKDMwOSkpO3ZhciBkPWMuc3RhdGVOb2RlfWlmKCFkKXRocm93IEVycm9yKHAoMTQ3LGEpKTt2YXIgZT1kLGY9XCJcIithO2lmKG51bGwhPT1iJiZudWxsIT09Yi5yZWYmJlwiZnVuY3Rpb25cIj09PXR5cGVvZiBiLnJlZiYmYi5yZWYuX3N0cmluZ1JlZj09PWYpcmV0dXJuIGIucmVmO2I9ZnVuY3Rpb24oYSl7dmFyIGI9ZS5yZWZzO2I9PT1qaCYmKGI9ZS5yZWZzPXt9KTtudWxsPT09YT9kZWxldGUgYltmXTpiW2ZdPWF9O2IuX3N0cmluZ1JlZj1mO3JldHVybiBifWlmKFwic3RyaW5nXCIhPT10eXBlb2YgYSl0aHJvdyBFcnJvcihwKDI4NCkpO2lmKCFjLl9vd25lcil0aHJvdyBFcnJvcihwKDI5MCxhKSk7fXJldHVybiBhfVxuZnVuY3Rpb24gdGgoYSxiKXthPU9iamVjdC5wcm90b3R5cGUudG9TdHJpbmcuY2FsbChiKTt0aHJvdyBFcnJvcihwKDMxLFwiW29iamVjdCBPYmplY3RdXCI9PT1hP1wib2JqZWN0IHdpdGgga2V5cyB7XCIrT2JqZWN0LmtleXMoYikuam9pbihcIiwgXCIpK1wifVwiOmEpKTt9ZnVuY3Rpb24gdWgoYSl7dmFyIGI9YS5faW5pdDtyZXR1cm4gYihhLl9wYXlsb2FkKX1cbmZ1bmN0aW9uIHZoKGEpe2Z1bmN0aW9uIGIoYixjKXtpZihhKXt2YXIgZD1iLmRlbGV0aW9ucztudWxsPT09ZD8oYi5kZWxldGlvbnM9W2NdLGIuZmxhZ3N8PTE2KTpkLnB1c2goYyl9fWZ1bmN0aW9uIGMoYyxkKXtpZighYSlyZXR1cm4gbnVsbDtmb3IoO251bGwhPT1kOyliKGMsZCksZD1kLnNpYmxpbmc7cmV0dXJuIG51bGx9ZnVuY3Rpb24gZChhLGIpe2ZvcihhPW5ldyBNYXA7bnVsbCE9PWI7KW51bGwhPT1iLmtleT9hLnNldChiLmtleSxiKTphLnNldChiLmluZGV4LGIpLGI9Yi5zaWJsaW5nO3JldHVybiBhfWZ1bmN0aW9uIGUoYSxiKXthPXdoKGEsYik7YS5pbmRleD0wO2Euc2libGluZz1udWxsO3JldHVybiBhfWZ1bmN0aW9uIGYoYixjLGQpe2IuaW5kZXg9ZDtpZighYSlyZXR1cm4gYi5mbGFnc3w9MTA0ODU3NixjO2Q9Yi5hbHRlcm5hdGU7aWYobnVsbCE9PWQpcmV0dXJuIGQ9ZC5pbmRleCxkPGM/KGIuZmxhZ3N8PTIsYyk6ZDtiLmZsYWdzfD0yO3JldHVybiBjfWZ1bmN0aW9uIGcoYil7YSYmXG5udWxsPT09Yi5hbHRlcm5hdGUmJihiLmZsYWdzfD0yKTtyZXR1cm4gYn1mdW5jdGlvbiBoKGEsYixjLGQpe2lmKG51bGw9PT1ifHw2IT09Yi50YWcpcmV0dXJuIGI9eGgoYyxhLm1vZGUsZCksYi5yZXR1cm49YSxiO2I9ZShiLGMpO2IucmV0dXJuPWE7cmV0dXJuIGJ9ZnVuY3Rpb24gayhhLGIsYyxkKXt2YXIgZj1jLnR5cGU7aWYoZj09PXlhKXJldHVybiBtKGEsYixjLnByb3BzLmNoaWxkcmVuLGQsYy5rZXkpO2lmKG51bGwhPT1iJiYoYi5lbGVtZW50VHlwZT09PWZ8fFwib2JqZWN0XCI9PT10eXBlb2YgZiYmbnVsbCE9PWYmJmYuJCR0eXBlb2Y9PT1IYSYmdWgoZik9PT1iLnR5cGUpKXJldHVybiBkPWUoYixjLnByb3BzKSxkLnJlZj1zaChhLGIsYyksZC5yZXR1cm49YSxkO2Q9eWgoYy50eXBlLGMua2V5LGMucHJvcHMsbnVsbCxhLm1vZGUsZCk7ZC5yZWY9c2goYSxiLGMpO2QucmV0dXJuPWE7cmV0dXJuIGR9ZnVuY3Rpb24gbChhLGIsYyxkKXtpZihudWxsPT09Ynx8NCE9PWIudGFnfHxcbmIuc3RhdGVOb2RlLmNvbnRhaW5lckluZm8hPT1jLmNvbnRhaW5lckluZm98fGIuc3RhdGVOb2RlLmltcGxlbWVudGF0aW9uIT09Yy5pbXBsZW1lbnRhdGlvbilyZXR1cm4gYj16aChjLGEubW9kZSxkKSxiLnJldHVybj1hLGI7Yj1lKGIsYy5jaGlsZHJlbnx8W10pO2IucmV0dXJuPWE7cmV0dXJuIGJ9ZnVuY3Rpb24gbShhLGIsYyxkLGYpe2lmKG51bGw9PT1ifHw3IT09Yi50YWcpcmV0dXJuIGI9QWgoYyxhLm1vZGUsZCxmKSxiLnJldHVybj1hLGI7Yj1lKGIsYyk7Yi5yZXR1cm49YTtyZXR1cm4gYn1mdW5jdGlvbiBxKGEsYixjKXtpZihcInN0cmluZ1wiPT09dHlwZW9mIGImJlwiXCIhPT1ifHxcIm51bWJlclwiPT09dHlwZW9mIGIpcmV0dXJuIGI9eGgoXCJcIitiLGEubW9kZSxjKSxiLnJldHVybj1hLGI7aWYoXCJvYmplY3RcIj09PXR5cGVvZiBiJiZudWxsIT09Yil7c3dpdGNoKGIuJCR0eXBlb2Ype2Nhc2UgdmE6cmV0dXJuIGM9eWgoYi50eXBlLGIua2V5LGIucHJvcHMsbnVsbCxhLm1vZGUsYyksXG5jLnJlZj1zaChhLG51bGwsYiksYy5yZXR1cm49YSxjO2Nhc2Ugd2E6cmV0dXJuIGI9emgoYixhLm1vZGUsYyksYi5yZXR1cm49YSxiO2Nhc2UgSGE6dmFyIGQ9Yi5faW5pdDtyZXR1cm4gcShhLGQoYi5fcGF5bG9hZCksYyl9aWYoZWIoYil8fEthKGIpKXJldHVybiBiPUFoKGIsYS5tb2RlLGMsbnVsbCksYi5yZXR1cm49YSxiO3RoKGEsYil9cmV0dXJuIG51bGx9ZnVuY3Rpb24gcihhLGIsYyxkKXt2YXIgZT1udWxsIT09Yj9iLmtleTpudWxsO2lmKFwic3RyaW5nXCI9PT10eXBlb2YgYyYmXCJcIiE9PWN8fFwibnVtYmVyXCI9PT10eXBlb2YgYylyZXR1cm4gbnVsbCE9PWU/bnVsbDpoKGEsYixcIlwiK2MsZCk7aWYoXCJvYmplY3RcIj09PXR5cGVvZiBjJiZudWxsIT09Yyl7c3dpdGNoKGMuJCR0eXBlb2Ype2Nhc2UgdmE6cmV0dXJuIGMua2V5PT09ZT9rKGEsYixjLGQpOm51bGw7Y2FzZSB3YTpyZXR1cm4gYy5rZXk9PT1lP2woYSxiLGMsZCk6bnVsbDtjYXNlIEhhOnJldHVybiBlPWMuX2luaXQscihhLFxuYixlKGMuX3BheWxvYWQpLGQpfWlmKGViKGMpfHxLYShjKSlyZXR1cm4gbnVsbCE9PWU/bnVsbDptKGEsYixjLGQsbnVsbCk7dGgoYSxjKX1yZXR1cm4gbnVsbH1mdW5jdGlvbiB5KGEsYixjLGQsZSl7aWYoXCJzdHJpbmdcIj09PXR5cGVvZiBkJiZcIlwiIT09ZHx8XCJudW1iZXJcIj09PXR5cGVvZiBkKXJldHVybiBhPWEuZ2V0KGMpfHxudWxsLGgoYixhLFwiXCIrZCxlKTtpZihcIm9iamVjdFwiPT09dHlwZW9mIGQmJm51bGwhPT1kKXtzd2l0Y2goZC4kJHR5cGVvZil7Y2FzZSB2YTpyZXR1cm4gYT1hLmdldChudWxsPT09ZC5rZXk/YzpkLmtleSl8fG51bGwsayhiLGEsZCxlKTtjYXNlIHdhOnJldHVybiBhPWEuZ2V0KG51bGw9PT1kLmtleT9jOmQua2V5KXx8bnVsbCxsKGIsYSxkLGUpO2Nhc2UgSGE6dmFyIGY9ZC5faW5pdDtyZXR1cm4geShhLGIsYyxmKGQuX3BheWxvYWQpLGUpfWlmKGViKGQpfHxLYShkKSlyZXR1cm4gYT1hLmdldChjKXx8bnVsbCxtKGIsYSxkLGUsbnVsbCk7dGgoYixkKX1yZXR1cm4gbnVsbH1cbmZ1bmN0aW9uIG4oZSxnLGgsayl7Zm9yKHZhciBsPW51bGwsbT1udWxsLHU9Zyx3PWc9MCx4PW51bGw7bnVsbCE9PXUmJnc8aC5sZW5ndGg7dysrKXt1LmluZGV4Pnc/KHg9dSx1PW51bGwpOng9dS5zaWJsaW5nO3ZhciBuPXIoZSx1LGhbd10sayk7aWYobnVsbD09PW4pe251bGw9PT11JiYodT14KTticmVha31hJiZ1JiZudWxsPT09bi5hbHRlcm5hdGUmJmIoZSx1KTtnPWYobixnLHcpO251bGw9PT1tP2w9bjptLnNpYmxpbmc9bjttPW47dT14fWlmKHc9PT1oLmxlbmd0aClyZXR1cm4gYyhlLHUpLEkmJnRnKGUsdyksbDtpZihudWxsPT09dSl7Zm9yKDt3PGgubGVuZ3RoO3crKyl1PXEoZSxoW3ddLGspLG51bGwhPT11JiYoZz1mKHUsZyx3KSxudWxsPT09bT9sPXU6bS5zaWJsaW5nPXUsbT11KTtJJiZ0ZyhlLHcpO3JldHVybiBsfWZvcih1PWQoZSx1KTt3PGgubGVuZ3RoO3crKyl4PXkodSxlLHcsaFt3XSxrKSxudWxsIT09eCYmKGEmJm51bGwhPT14LmFsdGVybmF0ZSYmdS5kZWxldGUobnVsbD09PVxueC5rZXk/dzp4LmtleSksZz1mKHgsZyx3KSxudWxsPT09bT9sPXg6bS5zaWJsaW5nPXgsbT14KTthJiZ1LmZvckVhY2goZnVuY3Rpb24oYSl7cmV0dXJuIGIoZSxhKX0pO0kmJnRnKGUsdyk7cmV0dXJuIGx9ZnVuY3Rpb24gdChlLGcsaCxrKXt2YXIgbD1LYShoKTtpZihcImZ1bmN0aW9uXCIhPT10eXBlb2YgbCl0aHJvdyBFcnJvcihwKDE1MCkpO2g9bC5jYWxsKGgpO2lmKG51bGw9PWgpdGhyb3cgRXJyb3IocCgxNTEpKTtmb3IodmFyIHU9bD1udWxsLG09Zyx3PWc9MCx4PW51bGwsbj1oLm5leHQoKTtudWxsIT09bSYmIW4uZG9uZTt3Kyssbj1oLm5leHQoKSl7bS5pbmRleD53Pyh4PW0sbT1udWxsKTp4PW0uc2libGluZzt2YXIgdD1yKGUsbSxuLnZhbHVlLGspO2lmKG51bGw9PT10KXtudWxsPT09bSYmKG09eCk7YnJlYWt9YSYmbSYmbnVsbD09PXQuYWx0ZXJuYXRlJiZiKGUsbSk7Zz1mKHQsZyx3KTtudWxsPT09dT9sPXQ6dS5zaWJsaW5nPXQ7dT10O209eH1pZihuLmRvbmUpcmV0dXJuIGMoZSxcbm0pLEkmJnRnKGUsdyksbDtpZihudWxsPT09bSl7Zm9yKDshbi5kb25lO3crKyxuPWgubmV4dCgpKW49cShlLG4udmFsdWUsayksbnVsbCE9PW4mJihnPWYobixnLHcpLG51bGw9PT11P2w9bjp1LnNpYmxpbmc9bix1PW4pO0kmJnRnKGUsdyk7cmV0dXJuIGx9Zm9yKG09ZChlLG0pOyFuLmRvbmU7dysrLG49aC5uZXh0KCkpbj15KG0sZSx3LG4udmFsdWUsayksbnVsbCE9PW4mJihhJiZudWxsIT09bi5hbHRlcm5hdGUmJm0uZGVsZXRlKG51bGw9PT1uLmtleT93Om4ua2V5KSxnPWYobixnLHcpLG51bGw9PT11P2w9bjp1LnNpYmxpbmc9bix1PW4pO2EmJm0uZm9yRWFjaChmdW5jdGlvbihhKXtyZXR1cm4gYihlLGEpfSk7SSYmdGcoZSx3KTtyZXR1cm4gbH1mdW5jdGlvbiBKKGEsZCxmLGgpe1wib2JqZWN0XCI9PT10eXBlb2YgZiYmbnVsbCE9PWYmJmYudHlwZT09PXlhJiZudWxsPT09Zi5rZXkmJihmPWYucHJvcHMuY2hpbGRyZW4pO2lmKFwib2JqZWN0XCI9PT10eXBlb2YgZiYmbnVsbCE9PWYpe3N3aXRjaChmLiQkdHlwZW9mKXtjYXNlIHZhOmE6e2Zvcih2YXIgaz1cbmYua2V5LGw9ZDtudWxsIT09bDspe2lmKGwua2V5PT09ayl7az1mLnR5cGU7aWYoaz09PXlhKXtpZig3PT09bC50YWcpe2MoYSxsLnNpYmxpbmcpO2Q9ZShsLGYucHJvcHMuY2hpbGRyZW4pO2QucmV0dXJuPWE7YT1kO2JyZWFrIGF9fWVsc2UgaWYobC5lbGVtZW50VHlwZT09PWt8fFwib2JqZWN0XCI9PT10eXBlb2YgayYmbnVsbCE9PWsmJmsuJCR0eXBlb2Y9PT1IYSYmdWgoayk9PT1sLnR5cGUpe2MoYSxsLnNpYmxpbmcpO2Q9ZShsLGYucHJvcHMpO2QucmVmPXNoKGEsbCxmKTtkLnJldHVybj1hO2E9ZDticmVhayBhfWMoYSxsKTticmVha31lbHNlIGIoYSxsKTtsPWwuc2libGluZ31mLnR5cGU9PT15YT8oZD1BaChmLnByb3BzLmNoaWxkcmVuLGEubW9kZSxoLGYua2V5KSxkLnJldHVybj1hLGE9ZCk6KGg9eWgoZi50eXBlLGYua2V5LGYucHJvcHMsbnVsbCxhLm1vZGUsaCksaC5yZWY9c2goYSxkLGYpLGgucmV0dXJuPWEsYT1oKX1yZXR1cm4gZyhhKTtjYXNlIHdhOmE6e2ZvcihsPWYua2V5O251bGwhPT1cbmQ7KXtpZihkLmtleT09PWwpaWYoND09PWQudGFnJiZkLnN0YXRlTm9kZS5jb250YWluZXJJbmZvPT09Zi5jb250YWluZXJJbmZvJiZkLnN0YXRlTm9kZS5pbXBsZW1lbnRhdGlvbj09PWYuaW1wbGVtZW50YXRpb24pe2MoYSxkLnNpYmxpbmcpO2Q9ZShkLGYuY2hpbGRyZW58fFtdKTtkLnJldHVybj1hO2E9ZDticmVhayBhfWVsc2V7YyhhLGQpO2JyZWFrfWVsc2UgYihhLGQpO2Q9ZC5zaWJsaW5nfWQ9emgoZixhLm1vZGUsaCk7ZC5yZXR1cm49YTthPWR9cmV0dXJuIGcoYSk7Y2FzZSBIYTpyZXR1cm4gbD1mLl9pbml0LEooYSxkLGwoZi5fcGF5bG9hZCksaCl9aWYoZWIoZikpcmV0dXJuIG4oYSxkLGYsaCk7aWYoS2EoZikpcmV0dXJuIHQoYSxkLGYsaCk7dGgoYSxmKX1yZXR1cm5cInN0cmluZ1wiPT09dHlwZW9mIGYmJlwiXCIhPT1mfHxcIm51bWJlclwiPT09dHlwZW9mIGY/KGY9XCJcIitmLG51bGwhPT1kJiY2PT09ZC50YWc/KGMoYSxkLnNpYmxpbmcpLGQ9ZShkLGYpLGQucmV0dXJuPWEsYT1kKTpcbihjKGEsZCksZD14aChmLGEubW9kZSxoKSxkLnJldHVybj1hLGE9ZCksZyhhKSk6YyhhLGQpfXJldHVybiBKfXZhciBCaD12aCghMCksQ2g9dmgoITEpLERoPXt9LEVoPVVmKERoKSxGaD1VZihEaCksR2g9VWYoRGgpO2Z1bmN0aW9uIEhoKGEpe2lmKGE9PT1EaCl0aHJvdyBFcnJvcihwKDE3NCkpO3JldHVybiBhfWZ1bmN0aW9uIEloKGEsYil7RyhHaCxiKTtHKEZoLGEpO0coRWgsRGgpO2E9Yi5ub2RlVHlwZTtzd2l0Y2goYSl7Y2FzZSA5OmNhc2UgMTE6Yj0oYj1iLmRvY3VtZW50RWxlbWVudCk/Yi5uYW1lc3BhY2VVUkk6bGIobnVsbCxcIlwiKTticmVhaztkZWZhdWx0OmE9OD09PWE/Yi5wYXJlbnROb2RlOmIsYj1hLm5hbWVzcGFjZVVSSXx8bnVsbCxhPWEudGFnTmFtZSxiPWxiKGIsYSl9RShFaCk7RyhFaCxiKX1mdW5jdGlvbiBKaCgpe0UoRWgpO0UoRmgpO0UoR2gpfVxuZnVuY3Rpb24gS2goYSl7SGgoR2guY3VycmVudCk7dmFyIGI9SGgoRWguY3VycmVudCk7dmFyIGM9bGIoYixhLnR5cGUpO2IhPT1jJiYoRyhGaCxhKSxHKEVoLGMpKX1mdW5jdGlvbiBMaChhKXtGaC5jdXJyZW50PT09YSYmKEUoRWgpLEUoRmgpKX12YXIgTT1VZigwKTtcbmZ1bmN0aW9uIE1oKGEpe2Zvcih2YXIgYj1hO251bGwhPT1iOyl7aWYoMTM9PT1iLnRhZyl7dmFyIGM9Yi5tZW1vaXplZFN0YXRlO2lmKG51bGwhPT1jJiYoYz1jLmRlaHlkcmF0ZWQsbnVsbD09PWN8fFwiJD9cIj09PWMuZGF0YXx8XCIkIVwiPT09Yy5kYXRhKSlyZXR1cm4gYn1lbHNlIGlmKDE5PT09Yi50YWcmJnZvaWQgMCE9PWIubWVtb2l6ZWRQcm9wcy5yZXZlYWxPcmRlcil7aWYoMCE9PShiLmZsYWdzJjEyOCkpcmV0dXJuIGJ9ZWxzZSBpZihudWxsIT09Yi5jaGlsZCl7Yi5jaGlsZC5yZXR1cm49YjtiPWIuY2hpbGQ7Y29udGludWV9aWYoYj09PWEpYnJlYWs7Zm9yKDtudWxsPT09Yi5zaWJsaW5nOyl7aWYobnVsbD09PWIucmV0dXJufHxiLnJldHVybj09PWEpcmV0dXJuIG51bGw7Yj1iLnJldHVybn1iLnNpYmxpbmcucmV0dXJuPWIucmV0dXJuO2I9Yi5zaWJsaW5nfXJldHVybiBudWxsfXZhciBOaD1bXTtcbmZ1bmN0aW9uIE9oKCl7Zm9yKHZhciBhPTA7YTxOaC5sZW5ndGg7YSsrKU5oW2FdLl93b3JrSW5Qcm9ncmVzc1ZlcnNpb25QcmltYXJ5PW51bGw7TmgubGVuZ3RoPTB9dmFyIFBoPXVhLlJlYWN0Q3VycmVudERpc3BhdGNoZXIsUWg9dWEuUmVhY3RDdXJyZW50QmF0Y2hDb25maWcsUmg9MCxOPW51bGwsTz1udWxsLFA9bnVsbCxTaD0hMSxUaD0hMSxVaD0wLFZoPTA7ZnVuY3Rpb24gUSgpe3Rocm93IEVycm9yKHAoMzIxKSk7fWZ1bmN0aW9uIFdoKGEsYil7aWYobnVsbD09PWIpcmV0dXJuITE7Zm9yKHZhciBjPTA7YzxiLmxlbmd0aCYmYzxhLmxlbmd0aDtjKyspaWYoIUhlKGFbY10sYltjXSkpcmV0dXJuITE7cmV0dXJuITB9XG5mdW5jdGlvbiBYaChhLGIsYyxkLGUsZil7Umg9ZjtOPWI7Yi5tZW1vaXplZFN0YXRlPW51bGw7Yi51cGRhdGVRdWV1ZT1udWxsO2IubGFuZXM9MDtQaC5jdXJyZW50PW51bGw9PT1hfHxudWxsPT09YS5tZW1vaXplZFN0YXRlP1loOlpoO2E9YyhkLGUpO2lmKFRoKXtmPTA7ZG97VGg9ITE7VWg9MDtpZigyNTw9Zil0aHJvdyBFcnJvcihwKDMwMSkpO2YrPTE7UD1PPW51bGw7Yi51cGRhdGVRdWV1ZT1udWxsO1BoLmN1cnJlbnQ9JGg7YT1jKGQsZSl9d2hpbGUoVGgpfVBoLmN1cnJlbnQ9YWk7Yj1udWxsIT09TyYmbnVsbCE9PU8ubmV4dDtSaD0wO1A9Tz1OPW51bGw7U2g9ITE7aWYoYil0aHJvdyBFcnJvcihwKDMwMCkpO3JldHVybiBhfWZ1bmN0aW9uIGJpKCl7dmFyIGE9MCE9PVVoO1VoPTA7cmV0dXJuIGF9XG5mdW5jdGlvbiBjaSgpe3ZhciBhPXttZW1vaXplZFN0YXRlOm51bGwsYmFzZVN0YXRlOm51bGwsYmFzZVF1ZXVlOm51bGwscXVldWU6bnVsbCxuZXh0Om51bGx9O251bGw9PT1QP04ubWVtb2l6ZWRTdGF0ZT1QPWE6UD1QLm5leHQ9YTtyZXR1cm4gUH1mdW5jdGlvbiBkaSgpe2lmKG51bGw9PT1PKXt2YXIgYT1OLmFsdGVybmF0ZTthPW51bGwhPT1hP2EubWVtb2l6ZWRTdGF0ZTpudWxsfWVsc2UgYT1PLm5leHQ7dmFyIGI9bnVsbD09PVA/Ti5tZW1vaXplZFN0YXRlOlAubmV4dDtpZihudWxsIT09YilQPWIsTz1hO2Vsc2V7aWYobnVsbD09PWEpdGhyb3cgRXJyb3IocCgzMTApKTtPPWE7YT17bWVtb2l6ZWRTdGF0ZTpPLm1lbW9pemVkU3RhdGUsYmFzZVN0YXRlOk8uYmFzZVN0YXRlLGJhc2VRdWV1ZTpPLmJhc2VRdWV1ZSxxdWV1ZTpPLnF1ZXVlLG5leHQ6bnVsbH07bnVsbD09PVA/Ti5tZW1vaXplZFN0YXRlPVA9YTpQPVAubmV4dD1hfXJldHVybiBQfVxuZnVuY3Rpb24gZWkoYSxiKXtyZXR1cm5cImZ1bmN0aW9uXCI9PT10eXBlb2YgYj9iKGEpOmJ9XG5mdW5jdGlvbiBmaShhKXt2YXIgYj1kaSgpLGM9Yi5xdWV1ZTtpZihudWxsPT09Yyl0aHJvdyBFcnJvcihwKDMxMSkpO2MubGFzdFJlbmRlcmVkUmVkdWNlcj1hO3ZhciBkPU8sZT1kLmJhc2VRdWV1ZSxmPWMucGVuZGluZztpZihudWxsIT09Zil7aWYobnVsbCE9PWUpe3ZhciBnPWUubmV4dDtlLm5leHQ9Zi5uZXh0O2YubmV4dD1nfWQuYmFzZVF1ZXVlPWU9ZjtjLnBlbmRpbmc9bnVsbH1pZihudWxsIT09ZSl7Zj1lLm5leHQ7ZD1kLmJhc2VTdGF0ZTt2YXIgaD1nPW51bGwsaz1udWxsLGw9Zjtkb3t2YXIgbT1sLmxhbmU7aWYoKFJoJm0pPT09bSludWxsIT09ayYmKGs9ay5uZXh0PXtsYW5lOjAsYWN0aW9uOmwuYWN0aW9uLGhhc0VhZ2VyU3RhdGU6bC5oYXNFYWdlclN0YXRlLGVhZ2VyU3RhdGU6bC5lYWdlclN0YXRlLG5leHQ6bnVsbH0pLGQ9bC5oYXNFYWdlclN0YXRlP2wuZWFnZXJTdGF0ZTphKGQsbC5hY3Rpb24pO2Vsc2V7dmFyIHE9e2xhbmU6bSxhY3Rpb246bC5hY3Rpb24saGFzRWFnZXJTdGF0ZTpsLmhhc0VhZ2VyU3RhdGUsXG5lYWdlclN0YXRlOmwuZWFnZXJTdGF0ZSxuZXh0Om51bGx9O251bGw9PT1rPyhoPWs9cSxnPWQpOms9ay5uZXh0PXE7Ti5sYW5lc3w9bTtoaHw9bX1sPWwubmV4dH13aGlsZShudWxsIT09bCYmbCE9PWYpO251bGw9PT1rP2c9ZDprLm5leHQ9aDtIZShkLGIubWVtb2l6ZWRTdGF0ZSl8fChVZz0hMCk7Yi5tZW1vaXplZFN0YXRlPWQ7Yi5iYXNlU3RhdGU9ZztiLmJhc2VRdWV1ZT1rO2MubGFzdFJlbmRlcmVkU3RhdGU9ZH1hPWMuaW50ZXJsZWF2ZWQ7aWYobnVsbCE9PWEpe2U9YTtkbyBmPWUubGFuZSxOLmxhbmVzfD1mLGhofD1mLGU9ZS5uZXh0O3doaWxlKGUhPT1hKX1lbHNlIG51bGw9PT1lJiYoYy5sYW5lcz0wKTtyZXR1cm5bYi5tZW1vaXplZFN0YXRlLGMuZGlzcGF0Y2hdfVxuZnVuY3Rpb24gZ2koYSl7dmFyIGI9ZGkoKSxjPWIucXVldWU7aWYobnVsbD09PWMpdGhyb3cgRXJyb3IocCgzMTEpKTtjLmxhc3RSZW5kZXJlZFJlZHVjZXI9YTt2YXIgZD1jLmRpc3BhdGNoLGU9Yy5wZW5kaW5nLGY9Yi5tZW1vaXplZFN0YXRlO2lmKG51bGwhPT1lKXtjLnBlbmRpbmc9bnVsbDt2YXIgZz1lPWUubmV4dDtkbyBmPWEoZixnLmFjdGlvbiksZz1nLm5leHQ7d2hpbGUoZyE9PWUpO0hlKGYsYi5tZW1vaXplZFN0YXRlKXx8KFVnPSEwKTtiLm1lbW9pemVkU3RhdGU9ZjtudWxsPT09Yi5iYXNlUXVldWUmJihiLmJhc2VTdGF0ZT1mKTtjLmxhc3RSZW5kZXJlZFN0YXRlPWZ9cmV0dXJuW2YsZF19ZnVuY3Rpb24gaGkoKXt9XG5mdW5jdGlvbiBpaShhLGIpe3ZhciBjPU4sZD1kaSgpLGU9YigpLGY9IUhlKGQubWVtb2l6ZWRTdGF0ZSxlKTtmJiYoZC5tZW1vaXplZFN0YXRlPWUsVWc9ITApO2Q9ZC5xdWV1ZTtqaShraS5iaW5kKG51bGwsYyxkLGEpLFthXSk7aWYoZC5nZXRTbmFwc2hvdCE9PWJ8fGZ8fG51bGwhPT1QJiZQLm1lbW9pemVkU3RhdGUudGFnJjEpe2MuZmxhZ3N8PTIwNDg7bGkoOSxtaS5iaW5kKG51bGwsYyxkLGUsYiksdm9pZCAwLG51bGwpO2lmKG51bGw9PT1SKXRocm93IEVycm9yKHAoMzQ5KSk7MCE9PShSaCYzMCl8fG5pKGMsYixlKX1yZXR1cm4gZX1mdW5jdGlvbiBuaShhLGIsYyl7YS5mbGFnc3w9MTYzODQ7YT17Z2V0U25hcHNob3Q6Yix2YWx1ZTpjfTtiPU4udXBkYXRlUXVldWU7bnVsbD09PWI/KGI9e2xhc3RFZmZlY3Q6bnVsbCxzdG9yZXM6bnVsbH0sTi51cGRhdGVRdWV1ZT1iLGIuc3RvcmVzPVthXSk6KGM9Yi5zdG9yZXMsbnVsbD09PWM/Yi5zdG9yZXM9W2FdOmMucHVzaChhKSl9XG5mdW5jdGlvbiBtaShhLGIsYyxkKXtiLnZhbHVlPWM7Yi5nZXRTbmFwc2hvdD1kO29pKGIpJiZwaShhKX1mdW5jdGlvbiBraShhLGIsYyl7cmV0dXJuIGMoZnVuY3Rpb24oKXtvaShiKSYmcGkoYSl9KX1mdW5jdGlvbiBvaShhKXt2YXIgYj1hLmdldFNuYXBzaG90O2E9YS52YWx1ZTt0cnl7dmFyIGM9YigpO3JldHVybiFIZShhLGMpfWNhdGNoKGQpe3JldHVybiEwfX1mdW5jdGlvbiBwaShhKXt2YXIgYj1aZyhhLDEpO251bGwhPT1iJiZtaChiLGEsMSwtMSl9XG5mdW5jdGlvbiBxaShhKXt2YXIgYj1jaSgpO1wiZnVuY3Rpb25cIj09PXR5cGVvZiBhJiYoYT1hKCkpO2IubWVtb2l6ZWRTdGF0ZT1iLmJhc2VTdGF0ZT1hO2E9e3BlbmRpbmc6bnVsbCxpbnRlcmxlYXZlZDpudWxsLGxhbmVzOjAsZGlzcGF0Y2g6bnVsbCxsYXN0UmVuZGVyZWRSZWR1Y2VyOmVpLGxhc3RSZW5kZXJlZFN0YXRlOmF9O2IucXVldWU9YTthPWEuZGlzcGF0Y2g9cmkuYmluZChudWxsLE4sYSk7cmV0dXJuW2IubWVtb2l6ZWRTdGF0ZSxhXX1cbmZ1bmN0aW9uIGxpKGEsYixjLGQpe2E9e3RhZzphLGNyZWF0ZTpiLGRlc3Ryb3k6YyxkZXBzOmQsbmV4dDpudWxsfTtiPU4udXBkYXRlUXVldWU7bnVsbD09PWI/KGI9e2xhc3RFZmZlY3Q6bnVsbCxzdG9yZXM6bnVsbH0sTi51cGRhdGVRdWV1ZT1iLGIubGFzdEVmZmVjdD1hLm5leHQ9YSk6KGM9Yi5sYXN0RWZmZWN0LG51bGw9PT1jP2IubGFzdEVmZmVjdD1hLm5leHQ9YTooZD1jLm5leHQsYy5uZXh0PWEsYS5uZXh0PWQsYi5sYXN0RWZmZWN0PWEpKTtyZXR1cm4gYX1mdW5jdGlvbiBzaSgpe3JldHVybiBkaSgpLm1lbW9pemVkU3RhdGV9ZnVuY3Rpb24gdGkoYSxiLGMsZCl7dmFyIGU9Y2koKTtOLmZsYWdzfD1hO2UubWVtb2l6ZWRTdGF0ZT1saSgxfGIsYyx2b2lkIDAsdm9pZCAwPT09ZD9udWxsOmQpfVxuZnVuY3Rpb24gdWkoYSxiLGMsZCl7dmFyIGU9ZGkoKTtkPXZvaWQgMD09PWQ/bnVsbDpkO3ZhciBmPXZvaWQgMDtpZihudWxsIT09Tyl7dmFyIGc9Ty5tZW1vaXplZFN0YXRlO2Y9Zy5kZXN0cm95O2lmKG51bGwhPT1kJiZXaChkLGcuZGVwcykpe2UubWVtb2l6ZWRTdGF0ZT1saShiLGMsZixkKTtyZXR1cm59fU4uZmxhZ3N8PWE7ZS5tZW1vaXplZFN0YXRlPWxpKDF8YixjLGYsZCl9ZnVuY3Rpb24gdmkoYSxiKXtyZXR1cm4gdGkoODM5MDY1Niw4LGEsYil9ZnVuY3Rpb24gamkoYSxiKXtyZXR1cm4gdWkoMjA0OCw4LGEsYil9ZnVuY3Rpb24gd2koYSxiKXtyZXR1cm4gdWkoNCwyLGEsYil9ZnVuY3Rpb24geGkoYSxiKXtyZXR1cm4gdWkoNCw0LGEsYil9XG5mdW5jdGlvbiB5aShhLGIpe2lmKFwiZnVuY3Rpb25cIj09PXR5cGVvZiBiKXJldHVybiBhPWEoKSxiKGEpLGZ1bmN0aW9uKCl7YihudWxsKX07aWYobnVsbCE9PWImJnZvaWQgMCE9PWIpcmV0dXJuIGE9YSgpLGIuY3VycmVudD1hLGZ1bmN0aW9uKCl7Yi5jdXJyZW50PW51bGx9fWZ1bmN0aW9uIHppKGEsYixjKXtjPW51bGwhPT1jJiZ2b2lkIDAhPT1jP2MuY29uY2F0KFthXSk6bnVsbDtyZXR1cm4gdWkoNCw0LHlpLmJpbmQobnVsbCxiLGEpLGMpfWZ1bmN0aW9uIEFpKCl7fWZ1bmN0aW9uIEJpKGEsYil7dmFyIGM9ZGkoKTtiPXZvaWQgMD09PWI/bnVsbDpiO3ZhciBkPWMubWVtb2l6ZWRTdGF0ZTtpZihudWxsIT09ZCYmbnVsbCE9PWImJldoKGIsZFsxXSkpcmV0dXJuIGRbMF07Yy5tZW1vaXplZFN0YXRlPVthLGJdO3JldHVybiBhfVxuZnVuY3Rpb24gQ2koYSxiKXt2YXIgYz1kaSgpO2I9dm9pZCAwPT09Yj9udWxsOmI7dmFyIGQ9Yy5tZW1vaXplZFN0YXRlO2lmKG51bGwhPT1kJiZudWxsIT09YiYmV2goYixkWzFdKSlyZXR1cm4gZFswXTthPWEoKTtjLm1lbW9pemVkU3RhdGU9W2EsYl07cmV0dXJuIGF9ZnVuY3Rpb24gRGkoYSxiLGMpe2lmKDA9PT0oUmgmMjEpKXJldHVybiBhLmJhc2VTdGF0ZSYmKGEuYmFzZVN0YXRlPSExLFVnPSEwKSxhLm1lbW9pemVkU3RhdGU9YztIZShjLGIpfHwoYz15YygpLE4ubGFuZXN8PWMsaGh8PWMsYS5iYXNlU3RhdGU9ITApO3JldHVybiBifWZ1bmN0aW9uIEVpKGEsYil7dmFyIGM9QztDPTAhPT1jJiY0PmM/Yzo0O2EoITApO3ZhciBkPVFoLnRyYW5zaXRpb247UWgudHJhbnNpdGlvbj17fTt0cnl7YSghMSksYigpfWZpbmFsbHl7Qz1jLFFoLnRyYW5zaXRpb249ZH19ZnVuY3Rpb24gRmkoKXtyZXR1cm4gZGkoKS5tZW1vaXplZFN0YXRlfVxuZnVuY3Rpb24gR2koYSxiLGMpe3ZhciBkPWxoKGEpO2M9e2xhbmU6ZCxhY3Rpb246YyxoYXNFYWdlclN0YXRlOiExLGVhZ2VyU3RhdGU6bnVsbCxuZXh0Om51bGx9O2lmKEhpKGEpKUlpKGIsYyk7ZWxzZSBpZihjPVlnKGEsYixjLGQpLG51bGwhPT1jKXt2YXIgZT1MKCk7bWgoYyxhLGQsZSk7SmkoYyxiLGQpfX1cbmZ1bmN0aW9uIHJpKGEsYixjKXt2YXIgZD1saChhKSxlPXtsYW5lOmQsYWN0aW9uOmMsaGFzRWFnZXJTdGF0ZTohMSxlYWdlclN0YXRlOm51bGwsbmV4dDpudWxsfTtpZihIaShhKSlJaShiLGUpO2Vsc2V7dmFyIGY9YS5hbHRlcm5hdGU7aWYoMD09PWEubGFuZXMmJihudWxsPT09Znx8MD09PWYubGFuZXMpJiYoZj1iLmxhc3RSZW5kZXJlZFJlZHVjZXIsbnVsbCE9PWYpKXRyeXt2YXIgZz1iLmxhc3RSZW5kZXJlZFN0YXRlLGg9ZihnLGMpO2UuaGFzRWFnZXJTdGF0ZT0hMDtlLmVhZ2VyU3RhdGU9aDtpZihIZShoLGcpKXt2YXIgaz1iLmludGVybGVhdmVkO251bGw9PT1rPyhlLm5leHQ9ZSxYZyhiKSk6KGUubmV4dD1rLm5leHQsay5uZXh0PWUpO2IuaW50ZXJsZWF2ZWQ9ZTtyZXR1cm59fWNhdGNoKGwpe31maW5hbGx5e31jPVlnKGEsYixlLGQpO251bGwhPT1jJiYoZT1MKCksbWgoYyxhLGQsZSksSmkoYyxiLGQpKX19XG5mdW5jdGlvbiBIaShhKXt2YXIgYj1hLmFsdGVybmF0ZTtyZXR1cm4gYT09PU58fG51bGwhPT1iJiZiPT09Tn1mdW5jdGlvbiBJaShhLGIpe1RoPVNoPSEwO3ZhciBjPWEucGVuZGluZztudWxsPT09Yz9iLm5leHQ9YjooYi5uZXh0PWMubmV4dCxjLm5leHQ9Yik7YS5wZW5kaW5nPWJ9ZnVuY3Rpb24gSmkoYSxiLGMpe2lmKDAhPT0oYyY0MTk0MjQwKSl7dmFyIGQ9Yi5sYW5lcztkJj1hLnBlbmRpbmdMYW5lcztjfD1kO2IubGFuZXM9YztDYyhhLGMpfX1cbnZhciBhaT17cmVhZENvbnRleHQ6VmcsdXNlQ2FsbGJhY2s6USx1c2VDb250ZXh0OlEsdXNlRWZmZWN0OlEsdXNlSW1wZXJhdGl2ZUhhbmRsZTpRLHVzZUluc2VydGlvbkVmZmVjdDpRLHVzZUxheW91dEVmZmVjdDpRLHVzZU1lbW86USx1c2VSZWR1Y2VyOlEsdXNlUmVmOlEsdXNlU3RhdGU6USx1c2VEZWJ1Z1ZhbHVlOlEsdXNlRGVmZXJyZWRWYWx1ZTpRLHVzZVRyYW5zaXRpb246USx1c2VNdXRhYmxlU291cmNlOlEsdXNlU3luY0V4dGVybmFsU3RvcmU6USx1c2VJZDpRLHVuc3RhYmxlX2lzTmV3UmVjb25jaWxlcjohMX0sWWg9e3JlYWRDb250ZXh0OlZnLHVzZUNhbGxiYWNrOmZ1bmN0aW9uKGEsYil7Y2koKS5tZW1vaXplZFN0YXRlPVthLHZvaWQgMD09PWI/bnVsbDpiXTtyZXR1cm4gYX0sdXNlQ29udGV4dDpWZyx1c2VFZmZlY3Q6dmksdXNlSW1wZXJhdGl2ZUhhbmRsZTpmdW5jdGlvbihhLGIsYyl7Yz1udWxsIT09YyYmdm9pZCAwIT09Yz9jLmNvbmNhdChbYV0pOm51bGw7cmV0dXJuIHRpKDQxOTQzMDgsXG40LHlpLmJpbmQobnVsbCxiLGEpLGMpfSx1c2VMYXlvdXRFZmZlY3Q6ZnVuY3Rpb24oYSxiKXtyZXR1cm4gdGkoNDE5NDMwOCw0LGEsYil9LHVzZUluc2VydGlvbkVmZmVjdDpmdW5jdGlvbihhLGIpe3JldHVybiB0aSg0LDIsYSxiKX0sdXNlTWVtbzpmdW5jdGlvbihhLGIpe3ZhciBjPWNpKCk7Yj12b2lkIDA9PT1iP251bGw6YjthPWEoKTtjLm1lbW9pemVkU3RhdGU9W2EsYl07cmV0dXJuIGF9LHVzZVJlZHVjZXI6ZnVuY3Rpb24oYSxiLGMpe3ZhciBkPWNpKCk7Yj12b2lkIDAhPT1jP2MoYik6YjtkLm1lbW9pemVkU3RhdGU9ZC5iYXNlU3RhdGU9YjthPXtwZW5kaW5nOm51bGwsaW50ZXJsZWF2ZWQ6bnVsbCxsYW5lczowLGRpc3BhdGNoOm51bGwsbGFzdFJlbmRlcmVkUmVkdWNlcjphLGxhc3RSZW5kZXJlZFN0YXRlOmJ9O2QucXVldWU9YTthPWEuZGlzcGF0Y2g9R2kuYmluZChudWxsLE4sYSk7cmV0dXJuW2QubWVtb2l6ZWRTdGF0ZSxhXX0sdXNlUmVmOmZ1bmN0aW9uKGEpe3ZhciBiPVxuY2koKTthPXtjdXJyZW50OmF9O3JldHVybiBiLm1lbW9pemVkU3RhdGU9YX0sdXNlU3RhdGU6cWksdXNlRGVidWdWYWx1ZTpBaSx1c2VEZWZlcnJlZFZhbHVlOmZ1bmN0aW9uKGEpe3JldHVybiBjaSgpLm1lbW9pemVkU3RhdGU9YX0sdXNlVHJhbnNpdGlvbjpmdW5jdGlvbigpe3ZhciBhPXFpKCExKSxiPWFbMF07YT1FaS5iaW5kKG51bGwsYVsxXSk7Y2koKS5tZW1vaXplZFN0YXRlPWE7cmV0dXJuW2IsYV19LHVzZU11dGFibGVTb3VyY2U6ZnVuY3Rpb24oKXt9LHVzZVN5bmNFeHRlcm5hbFN0b3JlOmZ1bmN0aW9uKGEsYixjKXt2YXIgZD1OLGU9Y2koKTtpZihJKXtpZih2b2lkIDA9PT1jKXRocm93IEVycm9yKHAoNDA3KSk7Yz1jKCl9ZWxzZXtjPWIoKTtpZihudWxsPT09Uil0aHJvdyBFcnJvcihwKDM0OSkpOzAhPT0oUmgmMzApfHxuaShkLGIsYyl9ZS5tZW1vaXplZFN0YXRlPWM7dmFyIGY9e3ZhbHVlOmMsZ2V0U25hcHNob3Q6Yn07ZS5xdWV1ZT1mO3ZpKGtpLmJpbmQobnVsbCxkLFxuZixhKSxbYV0pO2QuZmxhZ3N8PTIwNDg7bGkoOSxtaS5iaW5kKG51bGwsZCxmLGMsYiksdm9pZCAwLG51bGwpO3JldHVybiBjfSx1c2VJZDpmdW5jdGlvbigpe3ZhciBhPWNpKCksYj1SLmlkZW50aWZpZXJQcmVmaXg7aWYoSSl7dmFyIGM9c2c7dmFyIGQ9cmc7Yz0oZCZ+KDE8PDMyLW9jKGQpLTEpKS50b1N0cmluZygzMikrYztiPVwiOlwiK2IrXCJSXCIrYztjPVVoKys7MDxjJiYoYis9XCJIXCIrYy50b1N0cmluZygzMikpO2IrPVwiOlwifWVsc2UgYz1WaCsrLGI9XCI6XCIrYitcInJcIitjLnRvU3RyaW5nKDMyKStcIjpcIjtyZXR1cm4gYS5tZW1vaXplZFN0YXRlPWJ9LHVuc3RhYmxlX2lzTmV3UmVjb25jaWxlcjohMX0sWmg9e3JlYWRDb250ZXh0OlZnLHVzZUNhbGxiYWNrOkJpLHVzZUNvbnRleHQ6VmcsdXNlRWZmZWN0OmppLHVzZUltcGVyYXRpdmVIYW5kbGU6emksdXNlSW5zZXJ0aW9uRWZmZWN0OndpLHVzZUxheW91dEVmZmVjdDp4aSx1c2VNZW1vOkNpLHVzZVJlZHVjZXI6ZmksdXNlUmVmOnNpLHVzZVN0YXRlOmZ1bmN0aW9uKCl7cmV0dXJuIGZpKGVpKX0sXG51c2VEZWJ1Z1ZhbHVlOkFpLHVzZURlZmVycmVkVmFsdWU6ZnVuY3Rpb24oYSl7dmFyIGI9ZGkoKTtyZXR1cm4gRGkoYixPLm1lbW9pemVkU3RhdGUsYSl9LHVzZVRyYW5zaXRpb246ZnVuY3Rpb24oKXt2YXIgYT1maShlaSlbMF0sYj1kaSgpLm1lbW9pemVkU3RhdGU7cmV0dXJuW2EsYl19LHVzZU11dGFibGVTb3VyY2U6aGksdXNlU3luY0V4dGVybmFsU3RvcmU6aWksdXNlSWQ6RmksdW5zdGFibGVfaXNOZXdSZWNvbmNpbGVyOiExfSwkaD17cmVhZENvbnRleHQ6VmcsdXNlQ2FsbGJhY2s6QmksdXNlQ29udGV4dDpWZyx1c2VFZmZlY3Q6amksdXNlSW1wZXJhdGl2ZUhhbmRsZTp6aSx1c2VJbnNlcnRpb25FZmZlY3Q6d2ksdXNlTGF5b3V0RWZmZWN0OnhpLHVzZU1lbW86Q2ksdXNlUmVkdWNlcjpnaSx1c2VSZWY6c2ksdXNlU3RhdGU6ZnVuY3Rpb24oKXtyZXR1cm4gZ2koZWkpfSx1c2VEZWJ1Z1ZhbHVlOkFpLHVzZURlZmVycmVkVmFsdWU6ZnVuY3Rpb24oYSl7dmFyIGI9ZGkoKTtyZXR1cm4gbnVsbD09PVxuTz9iLm1lbW9pemVkU3RhdGU9YTpEaShiLE8ubWVtb2l6ZWRTdGF0ZSxhKX0sdXNlVHJhbnNpdGlvbjpmdW5jdGlvbigpe3ZhciBhPWdpKGVpKVswXSxiPWRpKCkubWVtb2l6ZWRTdGF0ZTtyZXR1cm5bYSxiXX0sdXNlTXV0YWJsZVNvdXJjZTpoaSx1c2VTeW5jRXh0ZXJuYWxTdG9yZTppaSx1c2VJZDpGaSx1bnN0YWJsZV9pc05ld1JlY29uY2lsZXI6ITF9O2Z1bmN0aW9uIEtpKGEsYil7dHJ5e3ZhciBjPVwiXCIsZD1iO2RvIGMrPVBhKGQpLGQ9ZC5yZXR1cm47d2hpbGUoZCk7dmFyIGU9Y31jYXRjaChmKXtlPVwiXFxuRXJyb3IgZ2VuZXJhdGluZyBzdGFjazogXCIrZi5tZXNzYWdlK1wiXFxuXCIrZi5zdGFja31yZXR1cm57dmFsdWU6YSxzb3VyY2U6YixzdGFjazplLGRpZ2VzdDpudWxsfX1mdW5jdGlvbiBMaShhLGIsYyl7cmV0dXJue3ZhbHVlOmEsc291cmNlOm51bGwsc3RhY2s6bnVsbCE9Yz9jOm51bGwsZGlnZXN0Om51bGwhPWI/YjpudWxsfX1cbmZ1bmN0aW9uIE1pKGEsYil7dHJ5e2NvbnNvbGUuZXJyb3IoYi52YWx1ZSl9Y2F0Y2goYyl7c2V0VGltZW91dChmdW5jdGlvbigpe3Rocm93IGM7fSl9fXZhciBOaT1cImZ1bmN0aW9uXCI9PT10eXBlb2YgV2Vha01hcD9XZWFrTWFwOk1hcDtmdW5jdGlvbiBPaShhLGIsYyl7Yz1jaCgtMSxjKTtjLnRhZz0zO2MucGF5bG9hZD17ZWxlbWVudDpudWxsfTt2YXIgZD1iLnZhbHVlO2MuY2FsbGJhY2s9ZnVuY3Rpb24oKXtQaXx8KFBpPSEwLFFpPWQpO01pKGEsYil9O3JldHVybiBjfVxuZnVuY3Rpb24gUmkoYSxiLGMpe2M9Y2goLTEsYyk7Yy50YWc9Mzt2YXIgZD1hLnR5cGUuZ2V0RGVyaXZlZFN0YXRlRnJvbUVycm9yO2lmKFwiZnVuY3Rpb25cIj09PXR5cGVvZiBkKXt2YXIgZT1iLnZhbHVlO2MucGF5bG9hZD1mdW5jdGlvbigpe3JldHVybiBkKGUpfTtjLmNhbGxiYWNrPWZ1bmN0aW9uKCl7TWkoYSxiKX19dmFyIGY9YS5zdGF0ZU5vZGU7bnVsbCE9PWYmJlwiZnVuY3Rpb25cIj09PXR5cGVvZiBmLmNvbXBvbmVudERpZENhdGNoJiYoYy5jYWxsYmFjaz1mdW5jdGlvbigpe01pKGEsYik7XCJmdW5jdGlvblwiIT09dHlwZW9mIGQmJihudWxsPT09U2k/U2k9bmV3IFNldChbdGhpc10pOlNpLmFkZCh0aGlzKSk7dmFyIGM9Yi5zdGFjazt0aGlzLmNvbXBvbmVudERpZENhdGNoKGIudmFsdWUse2NvbXBvbmVudFN0YWNrOm51bGwhPT1jP2M6XCJcIn0pfSk7cmV0dXJuIGN9XG5mdW5jdGlvbiBUaShhLGIsYyl7dmFyIGQ9YS5waW5nQ2FjaGU7aWYobnVsbD09PWQpe2Q9YS5waW5nQ2FjaGU9bmV3IE5pO3ZhciBlPW5ldyBTZXQ7ZC5zZXQoYixlKX1lbHNlIGU9ZC5nZXQoYiksdm9pZCAwPT09ZSYmKGU9bmV3IFNldCxkLnNldChiLGUpKTtlLmhhcyhjKXx8KGUuYWRkKGMpLGE9VWkuYmluZChudWxsLGEsYixjKSxiLnRoZW4oYSxhKSl9ZnVuY3Rpb24gVmkoYSl7ZG97dmFyIGI7aWYoYj0xMz09PWEudGFnKWI9YS5tZW1vaXplZFN0YXRlLGI9bnVsbCE9PWI/bnVsbCE9PWIuZGVoeWRyYXRlZD8hMDohMTohMDtpZihiKXJldHVybiBhO2E9YS5yZXR1cm59d2hpbGUobnVsbCE9PWEpO3JldHVybiBudWxsfVxuZnVuY3Rpb24gV2koYSxiLGMsZCxlKXtpZigwPT09KGEubW9kZSYxKSlyZXR1cm4gYT09PWI/YS5mbGFnc3w9NjU1MzY6KGEuZmxhZ3N8PTEyOCxjLmZsYWdzfD0xMzEwNzIsYy5mbGFncyY9LTUyODA1LDE9PT1jLnRhZyYmKG51bGw9PT1jLmFsdGVybmF0ZT9jLnRhZz0xNzooYj1jaCgtMSwxKSxiLnRhZz0yLGRoKGMsYiwxKSkpLGMubGFuZXN8PTEpLGE7YS5mbGFnc3w9NjU1MzY7YS5sYW5lcz1lO3JldHVybiBhfXZhciBYaT11YS5SZWFjdEN1cnJlbnRPd25lcixVZz0hMTtmdW5jdGlvbiBZaShhLGIsYyxkKXtiLmNoaWxkPW51bGw9PT1hP0NoKGIsbnVsbCxjLGQpOkJoKGIsYS5jaGlsZCxjLGQpfVxuZnVuY3Rpb24gWmkoYSxiLGMsZCxlKXtjPWMucmVuZGVyO3ZhciBmPWIucmVmO1RnKGIsZSk7ZD1YaChhLGIsYyxkLGYsZSk7Yz1iaSgpO2lmKG51bGwhPT1hJiYhVWcpcmV0dXJuIGIudXBkYXRlUXVldWU9YS51cGRhdGVRdWV1ZSxiLmZsYWdzJj0tMjA1MyxhLmxhbmVzJj1+ZSwkaShhLGIsZSk7SSYmYyYmdmcoYik7Yi5mbGFnc3w9MTtZaShhLGIsZCxlKTtyZXR1cm4gYi5jaGlsZH1cbmZ1bmN0aW9uIGFqKGEsYixjLGQsZSl7aWYobnVsbD09PWEpe3ZhciBmPWMudHlwZTtpZihcImZ1bmN0aW9uXCI9PT10eXBlb2YgZiYmIWJqKGYpJiZ2b2lkIDA9PT1mLmRlZmF1bHRQcm9wcyYmbnVsbD09PWMuY29tcGFyZSYmdm9pZCAwPT09Yy5kZWZhdWx0UHJvcHMpcmV0dXJuIGIudGFnPTE1LGIudHlwZT1mLGNqKGEsYixmLGQsZSk7YT15aChjLnR5cGUsbnVsbCxkLGIsYi5tb2RlLGUpO2EucmVmPWIucmVmO2EucmV0dXJuPWI7cmV0dXJuIGIuY2hpbGQ9YX1mPWEuY2hpbGQ7aWYoMD09PShhLmxhbmVzJmUpKXt2YXIgZz1mLm1lbW9pemVkUHJvcHM7Yz1jLmNvbXBhcmU7Yz1udWxsIT09Yz9jOkllO2lmKGMoZyxkKSYmYS5yZWY9PT1iLnJlZilyZXR1cm4gJGkoYSxiLGUpfWIuZmxhZ3N8PTE7YT13aChmLGQpO2EucmVmPWIucmVmO2EucmV0dXJuPWI7cmV0dXJuIGIuY2hpbGQ9YX1cbmZ1bmN0aW9uIGNqKGEsYixjLGQsZSl7aWYobnVsbCE9PWEpe3ZhciBmPWEubWVtb2l6ZWRQcm9wcztpZihJZShmLGQpJiZhLnJlZj09PWIucmVmKWlmKFVnPSExLGIucGVuZGluZ1Byb3BzPWQ9ZiwwIT09KGEubGFuZXMmZSkpMCE9PShhLmZsYWdzJjEzMTA3MikmJihVZz0hMCk7ZWxzZSByZXR1cm4gYi5sYW5lcz1hLmxhbmVzLCRpKGEsYixlKX1yZXR1cm4gZGooYSxiLGMsZCxlKX1cbmZ1bmN0aW9uIGVqKGEsYixjKXt2YXIgZD1iLnBlbmRpbmdQcm9wcyxlPWQuY2hpbGRyZW4sZj1udWxsIT09YT9hLm1lbW9pemVkU3RhdGU6bnVsbDtpZihcImhpZGRlblwiPT09ZC5tb2RlKWlmKDA9PT0oYi5tb2RlJjEpKWIubWVtb2l6ZWRTdGF0ZT17YmFzZUxhbmVzOjAsY2FjaGVQb29sOm51bGwsdHJhbnNpdGlvbnM6bnVsbH0sRyhmaixnaiksZ2p8PWM7ZWxzZXtpZigwPT09KGMmMTA3Mzc0MTgyNCkpcmV0dXJuIGE9bnVsbCE9PWY/Zi5iYXNlTGFuZXN8YzpjLGIubGFuZXM9Yi5jaGlsZExhbmVzPTEwNzM3NDE4MjQsYi5tZW1vaXplZFN0YXRlPXtiYXNlTGFuZXM6YSxjYWNoZVBvb2w6bnVsbCx0cmFuc2l0aW9uczpudWxsfSxiLnVwZGF0ZVF1ZXVlPW51bGwsRyhmaixnaiksZ2p8PWEsbnVsbDtiLm1lbW9pemVkU3RhdGU9e2Jhc2VMYW5lczowLGNhY2hlUG9vbDpudWxsLHRyYW5zaXRpb25zOm51bGx9O2Q9bnVsbCE9PWY/Zi5iYXNlTGFuZXM6YztHKGZqLGdqKTtnanw9ZH1lbHNlIG51bGwhPT1cbmY/KGQ9Zi5iYXNlTGFuZXN8YyxiLm1lbW9pemVkU3RhdGU9bnVsbCk6ZD1jLEcoZmosZ2opLGdqfD1kO1lpKGEsYixlLGMpO3JldHVybiBiLmNoaWxkfWZ1bmN0aW9uIGhqKGEsYil7dmFyIGM9Yi5yZWY7aWYobnVsbD09PWEmJm51bGwhPT1jfHxudWxsIT09YSYmYS5yZWYhPT1jKWIuZmxhZ3N8PTUxMixiLmZsYWdzfD0yMDk3MTUyfWZ1bmN0aW9uIGRqKGEsYixjLGQsZSl7dmFyIGY9WmYoYyk/WGY6SC5jdXJyZW50O2Y9WWYoYixmKTtUZyhiLGUpO2M9WGgoYSxiLGMsZCxmLGUpO2Q9YmkoKTtpZihudWxsIT09YSYmIVVnKXJldHVybiBiLnVwZGF0ZVF1ZXVlPWEudXBkYXRlUXVldWUsYi5mbGFncyY9LTIwNTMsYS5sYW5lcyY9fmUsJGkoYSxiLGUpO0kmJmQmJnZnKGIpO2IuZmxhZ3N8PTE7WWkoYSxiLGMsZSk7cmV0dXJuIGIuY2hpbGR9XG5mdW5jdGlvbiBpaihhLGIsYyxkLGUpe2lmKFpmKGMpKXt2YXIgZj0hMDtjZyhiKX1lbHNlIGY9ITE7VGcoYixlKTtpZihudWxsPT09Yi5zdGF0ZU5vZGUpamooYSxiKSxwaChiLGMsZCkscmgoYixjLGQsZSksZD0hMDtlbHNlIGlmKG51bGw9PT1hKXt2YXIgZz1iLnN0YXRlTm9kZSxoPWIubWVtb2l6ZWRQcm9wcztnLnByb3BzPWg7dmFyIGs9Zy5jb250ZXh0LGw9Yy5jb250ZXh0VHlwZTtcIm9iamVjdFwiPT09dHlwZW9mIGwmJm51bGwhPT1sP2w9VmcobCk6KGw9WmYoYyk/WGY6SC5jdXJyZW50LGw9WWYoYixsKSk7dmFyIG09Yy5nZXREZXJpdmVkU3RhdGVGcm9tUHJvcHMscT1cImZ1bmN0aW9uXCI9PT10eXBlb2YgbXx8XCJmdW5jdGlvblwiPT09dHlwZW9mIGcuZ2V0U25hcHNob3RCZWZvcmVVcGRhdGU7cXx8XCJmdW5jdGlvblwiIT09dHlwZW9mIGcuVU5TQUZFX2NvbXBvbmVudFdpbGxSZWNlaXZlUHJvcHMmJlwiZnVuY3Rpb25cIiE9PXR5cGVvZiBnLmNvbXBvbmVudFdpbGxSZWNlaXZlUHJvcHN8fFxuKGghPT1kfHxrIT09bCkmJnFoKGIsZyxkLGwpOyRnPSExO3ZhciByPWIubWVtb2l6ZWRTdGF0ZTtnLnN0YXRlPXI7Z2goYixkLGcsZSk7az1iLm1lbW9pemVkU3RhdGU7aCE9PWR8fHIhPT1rfHxXZi5jdXJyZW50fHwkZz8oXCJmdW5jdGlvblwiPT09dHlwZW9mIG0mJihraChiLGMsbSxkKSxrPWIubWVtb2l6ZWRTdGF0ZSksKGg9JGd8fG9oKGIsYyxoLGQscixrLGwpKT8ocXx8XCJmdW5jdGlvblwiIT09dHlwZW9mIGcuVU5TQUZFX2NvbXBvbmVudFdpbGxNb3VudCYmXCJmdW5jdGlvblwiIT09dHlwZW9mIGcuY29tcG9uZW50V2lsbE1vdW50fHwoXCJmdW5jdGlvblwiPT09dHlwZW9mIGcuY29tcG9uZW50V2lsbE1vdW50JiZnLmNvbXBvbmVudFdpbGxNb3VudCgpLFwiZnVuY3Rpb25cIj09PXR5cGVvZiBnLlVOU0FGRV9jb21wb25lbnRXaWxsTW91bnQmJmcuVU5TQUZFX2NvbXBvbmVudFdpbGxNb3VudCgpKSxcImZ1bmN0aW9uXCI9PT10eXBlb2YgZy5jb21wb25lbnREaWRNb3VudCYmKGIuZmxhZ3N8PTQxOTQzMDgpKTpcbihcImZ1bmN0aW9uXCI9PT10eXBlb2YgZy5jb21wb25lbnREaWRNb3VudCYmKGIuZmxhZ3N8PTQxOTQzMDgpLGIubWVtb2l6ZWRQcm9wcz1kLGIubWVtb2l6ZWRTdGF0ZT1rKSxnLnByb3BzPWQsZy5zdGF0ZT1rLGcuY29udGV4dD1sLGQ9aCk6KFwiZnVuY3Rpb25cIj09PXR5cGVvZiBnLmNvbXBvbmVudERpZE1vdW50JiYoYi5mbGFnc3w9NDE5NDMwOCksZD0hMSl9ZWxzZXtnPWIuc3RhdGVOb2RlO2JoKGEsYik7aD1iLm1lbW9pemVkUHJvcHM7bD1iLnR5cGU9PT1iLmVsZW1lbnRUeXBlP2g6TGcoYi50eXBlLGgpO2cucHJvcHM9bDtxPWIucGVuZGluZ1Byb3BzO3I9Zy5jb250ZXh0O2s9Yy5jb250ZXh0VHlwZTtcIm9iamVjdFwiPT09dHlwZW9mIGsmJm51bGwhPT1rP2s9Vmcoayk6KGs9WmYoYyk/WGY6SC5jdXJyZW50LGs9WWYoYixrKSk7dmFyIHk9Yy5nZXREZXJpdmVkU3RhdGVGcm9tUHJvcHM7KG09XCJmdW5jdGlvblwiPT09dHlwZW9mIHl8fFwiZnVuY3Rpb25cIj09PXR5cGVvZiBnLmdldFNuYXBzaG90QmVmb3JlVXBkYXRlKXx8XG5cImZ1bmN0aW9uXCIhPT10eXBlb2YgZy5VTlNBRkVfY29tcG9uZW50V2lsbFJlY2VpdmVQcm9wcyYmXCJmdW5jdGlvblwiIT09dHlwZW9mIGcuY29tcG9uZW50V2lsbFJlY2VpdmVQcm9wc3x8KGghPT1xfHxyIT09aykmJnFoKGIsZyxkLGspOyRnPSExO3I9Yi5tZW1vaXplZFN0YXRlO2cuc3RhdGU9cjtnaChiLGQsZyxlKTt2YXIgbj1iLm1lbW9pemVkU3RhdGU7aCE9PXF8fHIhPT1ufHxXZi5jdXJyZW50fHwkZz8oXCJmdW5jdGlvblwiPT09dHlwZW9mIHkmJihraChiLGMseSxkKSxuPWIubWVtb2l6ZWRTdGF0ZSksKGw9JGd8fG9oKGIsYyxsLGQscixuLGspfHwhMSk/KG18fFwiZnVuY3Rpb25cIiE9PXR5cGVvZiBnLlVOU0FGRV9jb21wb25lbnRXaWxsVXBkYXRlJiZcImZ1bmN0aW9uXCIhPT10eXBlb2YgZy5jb21wb25lbnRXaWxsVXBkYXRlfHwoXCJmdW5jdGlvblwiPT09dHlwZW9mIGcuY29tcG9uZW50V2lsbFVwZGF0ZSYmZy5jb21wb25lbnRXaWxsVXBkYXRlKGQsbixrKSxcImZ1bmN0aW9uXCI9PT10eXBlb2YgZy5VTlNBRkVfY29tcG9uZW50V2lsbFVwZGF0ZSYmXG5nLlVOU0FGRV9jb21wb25lbnRXaWxsVXBkYXRlKGQsbixrKSksXCJmdW5jdGlvblwiPT09dHlwZW9mIGcuY29tcG9uZW50RGlkVXBkYXRlJiYoYi5mbGFnc3w9NCksXCJmdW5jdGlvblwiPT09dHlwZW9mIGcuZ2V0U25hcHNob3RCZWZvcmVVcGRhdGUmJihiLmZsYWdzfD0xMDI0KSk6KFwiZnVuY3Rpb25cIiE9PXR5cGVvZiBnLmNvbXBvbmVudERpZFVwZGF0ZXx8aD09PWEubWVtb2l6ZWRQcm9wcyYmcj09PWEubWVtb2l6ZWRTdGF0ZXx8KGIuZmxhZ3N8PTQpLFwiZnVuY3Rpb25cIiE9PXR5cGVvZiBnLmdldFNuYXBzaG90QmVmb3JlVXBkYXRlfHxoPT09YS5tZW1vaXplZFByb3BzJiZyPT09YS5tZW1vaXplZFN0YXRlfHwoYi5mbGFnc3w9MTAyNCksYi5tZW1vaXplZFByb3BzPWQsYi5tZW1vaXplZFN0YXRlPW4pLGcucHJvcHM9ZCxnLnN0YXRlPW4sZy5jb250ZXh0PWssZD1sKTooXCJmdW5jdGlvblwiIT09dHlwZW9mIGcuY29tcG9uZW50RGlkVXBkYXRlfHxoPT09YS5tZW1vaXplZFByb3BzJiZyPT09XG5hLm1lbW9pemVkU3RhdGV8fChiLmZsYWdzfD00KSxcImZ1bmN0aW9uXCIhPT10eXBlb2YgZy5nZXRTbmFwc2hvdEJlZm9yZVVwZGF0ZXx8aD09PWEubWVtb2l6ZWRQcm9wcyYmcj09PWEubWVtb2l6ZWRTdGF0ZXx8KGIuZmxhZ3N8PTEwMjQpLGQ9ITEpfXJldHVybiBraihhLGIsYyxkLGYsZSl9XG5mdW5jdGlvbiBraihhLGIsYyxkLGUsZil7aGooYSxiKTt2YXIgZz0wIT09KGIuZmxhZ3MmMTI4KTtpZighZCYmIWcpcmV0dXJuIGUmJmRnKGIsYywhMSksJGkoYSxiLGYpO2Q9Yi5zdGF0ZU5vZGU7WGkuY3VycmVudD1iO3ZhciBoPWcmJlwiZnVuY3Rpb25cIiE9PXR5cGVvZiBjLmdldERlcml2ZWRTdGF0ZUZyb21FcnJvcj9udWxsOmQucmVuZGVyKCk7Yi5mbGFnc3w9MTtudWxsIT09YSYmZz8oYi5jaGlsZD1CaChiLGEuY2hpbGQsbnVsbCxmKSxiLmNoaWxkPUJoKGIsbnVsbCxoLGYpKTpZaShhLGIsaCxmKTtiLm1lbW9pemVkU3RhdGU9ZC5zdGF0ZTtlJiZkZyhiLGMsITApO3JldHVybiBiLmNoaWxkfWZ1bmN0aW9uIGxqKGEpe3ZhciBiPWEuc3RhdGVOb2RlO2IucGVuZGluZ0NvbnRleHQ/YWcoYSxiLnBlbmRpbmdDb250ZXh0LGIucGVuZGluZ0NvbnRleHQhPT1iLmNvbnRleHQpOmIuY29udGV4dCYmYWcoYSxiLmNvbnRleHQsITEpO0loKGEsYi5jb250YWluZXJJbmZvKX1cbmZ1bmN0aW9uIG1qKGEsYixjLGQsZSl7SWcoKTtKZyhlKTtiLmZsYWdzfD0yNTY7WWkoYSxiLGMsZCk7cmV0dXJuIGIuY2hpbGR9dmFyIG5qPXtkZWh5ZHJhdGVkOm51bGwsdHJlZUNvbnRleHQ6bnVsbCxyZXRyeUxhbmU6MH07ZnVuY3Rpb24gb2ooYSl7cmV0dXJue2Jhc2VMYW5lczphLGNhY2hlUG9vbDpudWxsLHRyYW5zaXRpb25zOm51bGx9fVxuZnVuY3Rpb24gcGooYSxiLGMpe3ZhciBkPWIucGVuZGluZ1Byb3BzLGU9TS5jdXJyZW50LGY9ITEsZz0wIT09KGIuZmxhZ3MmMTI4KSxoOyhoPWcpfHwoaD1udWxsIT09YSYmbnVsbD09PWEubWVtb2l6ZWRTdGF0ZT8hMTowIT09KGUmMikpO2lmKGgpZj0hMCxiLmZsYWdzJj0tMTI5O2Vsc2UgaWYobnVsbD09PWF8fG51bGwhPT1hLm1lbW9pemVkU3RhdGUpZXw9MTtHKE0sZSYxKTtpZihudWxsPT09YSl7RWcoYik7YT1iLm1lbW9pemVkU3RhdGU7aWYobnVsbCE9PWEmJihhPWEuZGVoeWRyYXRlZCxudWxsIT09YSkpcmV0dXJuIDA9PT0oYi5tb2RlJjEpP2IubGFuZXM9MTpcIiQhXCI9PT1hLmRhdGE/Yi5sYW5lcz04OmIubGFuZXM9MTA3Mzc0MTgyNCxudWxsO2c9ZC5jaGlsZHJlbjthPWQuZmFsbGJhY2s7cmV0dXJuIGY/KGQ9Yi5tb2RlLGY9Yi5jaGlsZCxnPXttb2RlOlwiaGlkZGVuXCIsY2hpbGRyZW46Z30sMD09PShkJjEpJiZudWxsIT09Zj8oZi5jaGlsZExhbmVzPTAsZi5wZW5kaW5nUHJvcHM9XG5nKTpmPXFqKGcsZCwwLG51bGwpLGE9QWgoYSxkLGMsbnVsbCksZi5yZXR1cm49YixhLnJldHVybj1iLGYuc2libGluZz1hLGIuY2hpbGQ9ZixiLmNoaWxkLm1lbW9pemVkU3RhdGU9b2ooYyksYi5tZW1vaXplZFN0YXRlPW5qLGEpOnJqKGIsZyl9ZT1hLm1lbW9pemVkU3RhdGU7aWYobnVsbCE9PWUmJihoPWUuZGVoeWRyYXRlZCxudWxsIT09aCkpcmV0dXJuIHNqKGEsYixnLGQsaCxlLGMpO2lmKGYpe2Y9ZC5mYWxsYmFjaztnPWIubW9kZTtlPWEuY2hpbGQ7aD1lLnNpYmxpbmc7dmFyIGs9e21vZGU6XCJoaWRkZW5cIixjaGlsZHJlbjpkLmNoaWxkcmVufTswPT09KGcmMSkmJmIuY2hpbGQhPT1lPyhkPWIuY2hpbGQsZC5jaGlsZExhbmVzPTAsZC5wZW5kaW5nUHJvcHM9ayxiLmRlbGV0aW9ucz1udWxsKTooZD13aChlLGspLGQuc3VidHJlZUZsYWdzPWUuc3VidHJlZUZsYWdzJjE0NjgwMDY0KTtudWxsIT09aD9mPXdoKGgsZik6KGY9QWgoZixnLGMsbnVsbCksZi5mbGFnc3w9Mik7Zi5yZXR1cm49XG5iO2QucmV0dXJuPWI7ZC5zaWJsaW5nPWY7Yi5jaGlsZD1kO2Q9ZjtmPWIuY2hpbGQ7Zz1hLmNoaWxkLm1lbW9pemVkU3RhdGU7Zz1udWxsPT09Zz9vaihjKTp7YmFzZUxhbmVzOmcuYmFzZUxhbmVzfGMsY2FjaGVQb29sOm51bGwsdHJhbnNpdGlvbnM6Zy50cmFuc2l0aW9uc307Zi5tZW1vaXplZFN0YXRlPWc7Zi5jaGlsZExhbmVzPWEuY2hpbGRMYW5lcyZ+YztiLm1lbW9pemVkU3RhdGU9bmo7cmV0dXJuIGR9Zj1hLmNoaWxkO2E9Zi5zaWJsaW5nO2Q9d2goZix7bW9kZTpcInZpc2libGVcIixjaGlsZHJlbjpkLmNoaWxkcmVufSk7MD09PShiLm1vZGUmMSkmJihkLmxhbmVzPWMpO2QucmV0dXJuPWI7ZC5zaWJsaW5nPW51bGw7bnVsbCE9PWEmJihjPWIuZGVsZXRpb25zLG51bGw9PT1jPyhiLmRlbGV0aW9ucz1bYV0sYi5mbGFnc3w9MTYpOmMucHVzaChhKSk7Yi5jaGlsZD1kO2IubWVtb2l6ZWRTdGF0ZT1udWxsO3JldHVybiBkfVxuZnVuY3Rpb24gcmooYSxiKXtiPXFqKHttb2RlOlwidmlzaWJsZVwiLGNoaWxkcmVuOmJ9LGEubW9kZSwwLG51bGwpO2IucmV0dXJuPWE7cmV0dXJuIGEuY2hpbGQ9Yn1mdW5jdGlvbiB0aihhLGIsYyxkKXtudWxsIT09ZCYmSmcoZCk7QmgoYixhLmNoaWxkLG51bGwsYyk7YT1yaihiLGIucGVuZGluZ1Byb3BzLmNoaWxkcmVuKTthLmZsYWdzfD0yO2IubWVtb2l6ZWRTdGF0ZT1udWxsO3JldHVybiBhfVxuZnVuY3Rpb24gc2ooYSxiLGMsZCxlLGYsZyl7aWYoYyl7aWYoYi5mbGFncyYyNTYpcmV0dXJuIGIuZmxhZ3MmPS0yNTcsZD1MaShFcnJvcihwKDQyMikpKSx0aihhLGIsZyxkKTtpZihudWxsIT09Yi5tZW1vaXplZFN0YXRlKXJldHVybiBiLmNoaWxkPWEuY2hpbGQsYi5mbGFnc3w9MTI4LG51bGw7Zj1kLmZhbGxiYWNrO2U9Yi5tb2RlO2Q9cWooe21vZGU6XCJ2aXNpYmxlXCIsY2hpbGRyZW46ZC5jaGlsZHJlbn0sZSwwLG51bGwpO2Y9QWgoZixlLGcsbnVsbCk7Zi5mbGFnc3w9MjtkLnJldHVybj1iO2YucmV0dXJuPWI7ZC5zaWJsaW5nPWY7Yi5jaGlsZD1kOzAhPT0oYi5tb2RlJjEpJiZCaChiLGEuY2hpbGQsbnVsbCxnKTtiLmNoaWxkLm1lbW9pemVkU3RhdGU9b2ooZyk7Yi5tZW1vaXplZFN0YXRlPW5qO3JldHVybiBmfWlmKDA9PT0oYi5tb2RlJjEpKXJldHVybiB0aihhLGIsZyxudWxsKTtpZihcIiQhXCI9PT1lLmRhdGEpe2Q9ZS5uZXh0U2libGluZyYmZS5uZXh0U2libGluZy5kYXRhc2V0O1xuaWYoZCl2YXIgaD1kLmRnc3Q7ZD1oO2Y9RXJyb3IocCg0MTkpKTtkPUxpKGYsZCx2b2lkIDApO3JldHVybiB0aihhLGIsZyxkKX1oPTAhPT0oZyZhLmNoaWxkTGFuZXMpO2lmKFVnfHxoKXtkPVI7aWYobnVsbCE9PWQpe3N3aXRjaChnJi1nKXtjYXNlIDQ6ZT0yO2JyZWFrO2Nhc2UgMTY6ZT04O2JyZWFrO2Nhc2UgNjQ6Y2FzZSAxMjg6Y2FzZSAyNTY6Y2FzZSA1MTI6Y2FzZSAxMDI0OmNhc2UgMjA0ODpjYXNlIDQwOTY6Y2FzZSA4MTkyOmNhc2UgMTYzODQ6Y2FzZSAzMjc2ODpjYXNlIDY1NTM2OmNhc2UgMTMxMDcyOmNhc2UgMjYyMTQ0OmNhc2UgNTI0Mjg4OmNhc2UgMTA0ODU3NjpjYXNlIDIwOTcxNTI6Y2FzZSA0MTk0MzA0OmNhc2UgODM4ODYwODpjYXNlIDE2Nzc3MjE2OmNhc2UgMzM1NTQ0MzI6Y2FzZSA2NzEwODg2NDplPTMyO2JyZWFrO2Nhc2UgNTM2ODcwOTEyOmU9MjY4NDM1NDU2O2JyZWFrO2RlZmF1bHQ6ZT0wfWU9MCE9PShlJihkLnN1c3BlbmRlZExhbmVzfGcpKT8wOmU7XG4wIT09ZSYmZSE9PWYucmV0cnlMYW5lJiYoZi5yZXRyeUxhbmU9ZSxaZyhhLGUpLG1oKGQsYSxlLC0xKSl9dWooKTtkPUxpKEVycm9yKHAoNDIxKSkpO3JldHVybiB0aihhLGIsZyxkKX1pZihcIiQ/XCI9PT1lLmRhdGEpcmV0dXJuIGIuZmxhZ3N8PTEyOCxiLmNoaWxkPWEuY2hpbGQsYj12ai5iaW5kKG51bGwsYSksZS5fcmVhY3RSZXRyeT1iLG51bGw7YT1mLnRyZWVDb250ZXh0O3lnPUxmKGUubmV4dFNpYmxpbmcpO3hnPWI7ST0hMDt6Zz1udWxsO251bGwhPT1hJiYob2dbcGcrK109cmcsb2dbcGcrK109c2csb2dbcGcrK109cWcscmc9YS5pZCxzZz1hLm92ZXJmbG93LHFnPWIpO2I9cmooYixkLmNoaWxkcmVuKTtiLmZsYWdzfD00MDk2O3JldHVybiBifWZ1bmN0aW9uIHdqKGEsYixjKXthLmxhbmVzfD1iO3ZhciBkPWEuYWx0ZXJuYXRlO251bGwhPT1kJiYoZC5sYW5lc3w9Yik7U2coYS5yZXR1cm4sYixjKX1cbmZ1bmN0aW9uIHhqKGEsYixjLGQsZSl7dmFyIGY9YS5tZW1vaXplZFN0YXRlO251bGw9PT1mP2EubWVtb2l6ZWRTdGF0ZT17aXNCYWNrd2FyZHM6YixyZW5kZXJpbmc6bnVsbCxyZW5kZXJpbmdTdGFydFRpbWU6MCxsYXN0OmQsdGFpbDpjLHRhaWxNb2RlOmV9OihmLmlzQmFja3dhcmRzPWIsZi5yZW5kZXJpbmc9bnVsbCxmLnJlbmRlcmluZ1N0YXJ0VGltZT0wLGYubGFzdD1kLGYudGFpbD1jLGYudGFpbE1vZGU9ZSl9XG5mdW5jdGlvbiB5aihhLGIsYyl7dmFyIGQ9Yi5wZW5kaW5nUHJvcHMsZT1kLnJldmVhbE9yZGVyLGY9ZC50YWlsO1lpKGEsYixkLmNoaWxkcmVuLGMpO2Q9TS5jdXJyZW50O2lmKDAhPT0oZCYyKSlkPWQmMXwyLGIuZmxhZ3N8PTEyODtlbHNle2lmKG51bGwhPT1hJiYwIT09KGEuZmxhZ3MmMTI4KSlhOmZvcihhPWIuY2hpbGQ7bnVsbCE9PWE7KXtpZigxMz09PWEudGFnKW51bGwhPT1hLm1lbW9pemVkU3RhdGUmJndqKGEsYyxiKTtlbHNlIGlmKDE5PT09YS50YWcpd2ooYSxjLGIpO2Vsc2UgaWYobnVsbCE9PWEuY2hpbGQpe2EuY2hpbGQucmV0dXJuPWE7YT1hLmNoaWxkO2NvbnRpbnVlfWlmKGE9PT1iKWJyZWFrIGE7Zm9yKDtudWxsPT09YS5zaWJsaW5nOyl7aWYobnVsbD09PWEucmV0dXJufHxhLnJldHVybj09PWIpYnJlYWsgYTthPWEucmV0dXJufWEuc2libGluZy5yZXR1cm49YS5yZXR1cm47YT1hLnNpYmxpbmd9ZCY9MX1HKE0sZCk7aWYoMD09PShiLm1vZGUmMSkpYi5tZW1vaXplZFN0YXRlPVxubnVsbDtlbHNlIHN3aXRjaChlKXtjYXNlIFwiZm9yd2FyZHNcIjpjPWIuY2hpbGQ7Zm9yKGU9bnVsbDtudWxsIT09YzspYT1jLmFsdGVybmF0ZSxudWxsIT09YSYmbnVsbD09PU1oKGEpJiYoZT1jKSxjPWMuc2libGluZztjPWU7bnVsbD09PWM/KGU9Yi5jaGlsZCxiLmNoaWxkPW51bGwpOihlPWMuc2libGluZyxjLnNpYmxpbmc9bnVsbCk7eGooYiwhMSxlLGMsZik7YnJlYWs7Y2FzZSBcImJhY2t3YXJkc1wiOmM9bnVsbDtlPWIuY2hpbGQ7Zm9yKGIuY2hpbGQ9bnVsbDtudWxsIT09ZTspe2E9ZS5hbHRlcm5hdGU7aWYobnVsbCE9PWEmJm51bGw9PT1NaChhKSl7Yi5jaGlsZD1lO2JyZWFrfWE9ZS5zaWJsaW5nO2Uuc2libGluZz1jO2M9ZTtlPWF9eGooYiwhMCxjLG51bGwsZik7YnJlYWs7Y2FzZSBcInRvZ2V0aGVyXCI6eGooYiwhMSxudWxsLG51bGwsdm9pZCAwKTticmVhaztkZWZhdWx0OmIubWVtb2l6ZWRTdGF0ZT1udWxsfXJldHVybiBiLmNoaWxkfVxuZnVuY3Rpb24gamooYSxiKXswPT09KGIubW9kZSYxKSYmbnVsbCE9PWEmJihhLmFsdGVybmF0ZT1udWxsLGIuYWx0ZXJuYXRlPW51bGwsYi5mbGFnc3w9Mil9ZnVuY3Rpb24gJGkoYSxiLGMpe251bGwhPT1hJiYoYi5kZXBlbmRlbmNpZXM9YS5kZXBlbmRlbmNpZXMpO2hofD1iLmxhbmVzO2lmKDA9PT0oYyZiLmNoaWxkTGFuZXMpKXJldHVybiBudWxsO2lmKG51bGwhPT1hJiZiLmNoaWxkIT09YS5jaGlsZCl0aHJvdyBFcnJvcihwKDE1MykpO2lmKG51bGwhPT1iLmNoaWxkKXthPWIuY2hpbGQ7Yz13aChhLGEucGVuZGluZ1Byb3BzKTtiLmNoaWxkPWM7Zm9yKGMucmV0dXJuPWI7bnVsbCE9PWEuc2libGluZzspYT1hLnNpYmxpbmcsYz1jLnNpYmxpbmc9d2goYSxhLnBlbmRpbmdQcm9wcyksYy5yZXR1cm49YjtjLnNpYmxpbmc9bnVsbH1yZXR1cm4gYi5jaGlsZH1cbmZ1bmN0aW9uIHpqKGEsYixjKXtzd2l0Y2goYi50YWcpe2Nhc2UgMzpsaihiKTtJZygpO2JyZWFrO2Nhc2UgNTpLaChiKTticmVhaztjYXNlIDE6WmYoYi50eXBlKSYmY2coYik7YnJlYWs7Y2FzZSA0OkloKGIsYi5zdGF0ZU5vZGUuY29udGFpbmVySW5mbyk7YnJlYWs7Y2FzZSAxMDp2YXIgZD1iLnR5cGUuX2NvbnRleHQsZT1iLm1lbW9pemVkUHJvcHMudmFsdWU7RyhNZyxkLl9jdXJyZW50VmFsdWUpO2QuX2N1cnJlbnRWYWx1ZT1lO2JyZWFrO2Nhc2UgMTM6ZD1iLm1lbW9pemVkU3RhdGU7aWYobnVsbCE9PWQpe2lmKG51bGwhPT1kLmRlaHlkcmF0ZWQpcmV0dXJuIEcoTSxNLmN1cnJlbnQmMSksYi5mbGFnc3w9MTI4LG51bGw7aWYoMCE9PShjJmIuY2hpbGQuY2hpbGRMYW5lcykpcmV0dXJuIHBqKGEsYixjKTtHKE0sTS5jdXJyZW50JjEpO2E9JGkoYSxiLGMpO3JldHVybiBudWxsIT09YT9hLnNpYmxpbmc6bnVsbH1HKE0sTS5jdXJyZW50JjEpO2JyZWFrO2Nhc2UgMTk6ZD0wIT09KGMmXG5iLmNoaWxkTGFuZXMpO2lmKDAhPT0oYS5mbGFncyYxMjgpKXtpZihkKXJldHVybiB5aihhLGIsYyk7Yi5mbGFnc3w9MTI4fWU9Yi5tZW1vaXplZFN0YXRlO251bGwhPT1lJiYoZS5yZW5kZXJpbmc9bnVsbCxlLnRhaWw9bnVsbCxlLmxhc3RFZmZlY3Q9bnVsbCk7RyhNLE0uY3VycmVudCk7aWYoZClicmVhaztlbHNlIHJldHVybiBudWxsO2Nhc2UgMjI6Y2FzZSAyMzpyZXR1cm4gYi5sYW5lcz0wLGVqKGEsYixjKX1yZXR1cm4gJGkoYSxiLGMpfXZhciBBaixCaixDaixEajtcbkFqPWZ1bmN0aW9uKGEsYil7Zm9yKHZhciBjPWIuY2hpbGQ7bnVsbCE9PWM7KXtpZig1PT09Yy50YWd8fDY9PT1jLnRhZylhLmFwcGVuZENoaWxkKGMuc3RhdGVOb2RlKTtlbHNlIGlmKDQhPT1jLnRhZyYmbnVsbCE9PWMuY2hpbGQpe2MuY2hpbGQucmV0dXJuPWM7Yz1jLmNoaWxkO2NvbnRpbnVlfWlmKGM9PT1iKWJyZWFrO2Zvcig7bnVsbD09PWMuc2libGluZzspe2lmKG51bGw9PT1jLnJldHVybnx8Yy5yZXR1cm49PT1iKXJldHVybjtjPWMucmV0dXJufWMuc2libGluZy5yZXR1cm49Yy5yZXR1cm47Yz1jLnNpYmxpbmd9fTtCaj1mdW5jdGlvbigpe307XG5Daj1mdW5jdGlvbihhLGIsYyxkKXt2YXIgZT1hLm1lbW9pemVkUHJvcHM7aWYoZSE9PWQpe2E9Yi5zdGF0ZU5vZGU7SGgoRWguY3VycmVudCk7dmFyIGY9bnVsbDtzd2l0Y2goYyl7Y2FzZSBcImlucHV0XCI6ZT1ZYShhLGUpO2Q9WWEoYSxkKTtmPVtdO2JyZWFrO2Nhc2UgXCJzZWxlY3RcIjplPUEoe30sZSx7dmFsdWU6dm9pZCAwfSk7ZD1BKHt9LGQse3ZhbHVlOnZvaWQgMH0pO2Y9W107YnJlYWs7Y2FzZSBcInRleHRhcmVhXCI6ZT1nYihhLGUpO2Q9Z2IoYSxkKTtmPVtdO2JyZWFrO2RlZmF1bHQ6XCJmdW5jdGlvblwiIT09dHlwZW9mIGUub25DbGljayYmXCJmdW5jdGlvblwiPT09dHlwZW9mIGQub25DbGljayYmKGEub25jbGljaz1CZil9dWIoYyxkKTt2YXIgZztjPW51bGw7Zm9yKGwgaW4gZSlpZighZC5oYXNPd25Qcm9wZXJ0eShsKSYmZS5oYXNPd25Qcm9wZXJ0eShsKSYmbnVsbCE9ZVtsXSlpZihcInN0eWxlXCI9PT1sKXt2YXIgaD1lW2xdO2ZvcihnIGluIGgpaC5oYXNPd25Qcm9wZXJ0eShnKSYmXG4oY3x8KGM9e30pLGNbZ109XCJcIil9ZWxzZVwiZGFuZ2Vyb3VzbHlTZXRJbm5lckhUTUxcIiE9PWwmJlwiY2hpbGRyZW5cIiE9PWwmJlwic3VwcHJlc3NDb250ZW50RWRpdGFibGVXYXJuaW5nXCIhPT1sJiZcInN1cHByZXNzSHlkcmF0aW9uV2FybmluZ1wiIT09bCYmXCJhdXRvRm9jdXNcIiE9PWwmJihlYS5oYXNPd25Qcm9wZXJ0eShsKT9mfHwoZj1bXSk6KGY9Znx8W10pLnB1c2gobCxudWxsKSk7Zm9yKGwgaW4gZCl7dmFyIGs9ZFtsXTtoPW51bGwhPWU/ZVtsXTp2b2lkIDA7aWYoZC5oYXNPd25Qcm9wZXJ0eShsKSYmayE9PWgmJihudWxsIT1rfHxudWxsIT1oKSlpZihcInN0eWxlXCI9PT1sKWlmKGgpe2ZvcihnIGluIGgpIWguaGFzT3duUHJvcGVydHkoZyl8fGsmJmsuaGFzT3duUHJvcGVydHkoZyl8fChjfHwoYz17fSksY1tnXT1cIlwiKTtmb3IoZyBpbiBrKWsuaGFzT3duUHJvcGVydHkoZykmJmhbZ10hPT1rW2ddJiYoY3x8KGM9e30pLGNbZ109a1tnXSl9ZWxzZSBjfHwoZnx8KGY9W10pLGYucHVzaChsLFxuYykpLGM9aztlbHNlXCJkYW5nZXJvdXNseVNldElubmVySFRNTFwiPT09bD8oaz1rP2suX19odG1sOnZvaWQgMCxoPWg/aC5fX2h0bWw6dm9pZCAwLG51bGwhPWsmJmghPT1rJiYoZj1mfHxbXSkucHVzaChsLGspKTpcImNoaWxkcmVuXCI9PT1sP1wic3RyaW5nXCIhPT10eXBlb2YgayYmXCJudW1iZXJcIiE9PXR5cGVvZiBrfHwoZj1mfHxbXSkucHVzaChsLFwiXCIrayk6XCJzdXBwcmVzc0NvbnRlbnRFZGl0YWJsZVdhcm5pbmdcIiE9PWwmJlwic3VwcHJlc3NIeWRyYXRpb25XYXJuaW5nXCIhPT1sJiYoZWEuaGFzT3duUHJvcGVydHkobCk/KG51bGwhPWsmJlwib25TY3JvbGxcIj09PWwmJkQoXCJzY3JvbGxcIixhKSxmfHxoPT09a3x8KGY9W10pKTooZj1mfHxbXSkucHVzaChsLGspKX1jJiYoZj1mfHxbXSkucHVzaChcInN0eWxlXCIsYyk7dmFyIGw9ZjtpZihiLnVwZGF0ZVF1ZXVlPWwpYi5mbGFnc3w9NH19O0RqPWZ1bmN0aW9uKGEsYixjLGQpe2MhPT1kJiYoYi5mbGFnc3w9NCl9O1xuZnVuY3Rpb24gRWooYSxiKXtpZighSSlzd2l0Y2goYS50YWlsTW9kZSl7Y2FzZSBcImhpZGRlblwiOmI9YS50YWlsO2Zvcih2YXIgYz1udWxsO251bGwhPT1iOyludWxsIT09Yi5hbHRlcm5hdGUmJihjPWIpLGI9Yi5zaWJsaW5nO251bGw9PT1jP2EudGFpbD1udWxsOmMuc2libGluZz1udWxsO2JyZWFrO2Nhc2UgXCJjb2xsYXBzZWRcIjpjPWEudGFpbDtmb3IodmFyIGQ9bnVsbDtudWxsIT09YzspbnVsbCE9PWMuYWx0ZXJuYXRlJiYoZD1jKSxjPWMuc2libGluZztudWxsPT09ZD9ifHxudWxsPT09YS50YWlsP2EudGFpbD1udWxsOmEudGFpbC5zaWJsaW5nPW51bGw6ZC5zaWJsaW5nPW51bGx9fVxuZnVuY3Rpb24gUyhhKXt2YXIgYj1udWxsIT09YS5hbHRlcm5hdGUmJmEuYWx0ZXJuYXRlLmNoaWxkPT09YS5jaGlsZCxjPTAsZD0wO2lmKGIpZm9yKHZhciBlPWEuY2hpbGQ7bnVsbCE9PWU7KWN8PWUubGFuZXN8ZS5jaGlsZExhbmVzLGR8PWUuc3VidHJlZUZsYWdzJjE0NjgwMDY0LGR8PWUuZmxhZ3MmMTQ2ODAwNjQsZS5yZXR1cm49YSxlPWUuc2libGluZztlbHNlIGZvcihlPWEuY2hpbGQ7bnVsbCE9PWU7KWN8PWUubGFuZXN8ZS5jaGlsZExhbmVzLGR8PWUuc3VidHJlZUZsYWdzLGR8PWUuZmxhZ3MsZS5yZXR1cm49YSxlPWUuc2libGluZzthLnN1YnRyZWVGbGFnc3w9ZDthLmNoaWxkTGFuZXM9YztyZXR1cm4gYn1cbmZ1bmN0aW9uIEZqKGEsYixjKXt2YXIgZD1iLnBlbmRpbmdQcm9wczt3ZyhiKTtzd2l0Y2goYi50YWcpe2Nhc2UgMjpjYXNlIDE2OmNhc2UgMTU6Y2FzZSAwOmNhc2UgMTE6Y2FzZSA3OmNhc2UgODpjYXNlIDEyOmNhc2UgOTpjYXNlIDE0OnJldHVybiBTKGIpLG51bGw7Y2FzZSAxOnJldHVybiBaZihiLnR5cGUpJiYkZigpLFMoYiksbnVsbDtjYXNlIDM6ZD1iLnN0YXRlTm9kZTtKaCgpO0UoV2YpO0UoSCk7T2goKTtkLnBlbmRpbmdDb250ZXh0JiYoZC5jb250ZXh0PWQucGVuZGluZ0NvbnRleHQsZC5wZW5kaW5nQ29udGV4dD1udWxsKTtpZihudWxsPT09YXx8bnVsbD09PWEuY2hpbGQpR2coYik/Yi5mbGFnc3w9NDpudWxsPT09YXx8YS5tZW1vaXplZFN0YXRlLmlzRGVoeWRyYXRlZCYmMD09PShiLmZsYWdzJjI1Nil8fChiLmZsYWdzfD0xMDI0LG51bGwhPT16ZyYmKEdqKHpnKSx6Zz1udWxsKSk7QmooYSxiKTtTKGIpO3JldHVybiBudWxsO2Nhc2UgNTpMaChiKTt2YXIgZT1IaChHaC5jdXJyZW50KTtcbmM9Yi50eXBlO2lmKG51bGwhPT1hJiZudWxsIT1iLnN0YXRlTm9kZSlDaihhLGIsYyxkLGUpLGEucmVmIT09Yi5yZWYmJihiLmZsYWdzfD01MTIsYi5mbGFnc3w9MjA5NzE1Mik7ZWxzZXtpZighZCl7aWYobnVsbD09PWIuc3RhdGVOb2RlKXRocm93IEVycm9yKHAoMTY2KSk7UyhiKTtyZXR1cm4gbnVsbH1hPUhoKEVoLmN1cnJlbnQpO2lmKEdnKGIpKXtkPWIuc3RhdGVOb2RlO2M9Yi50eXBlO3ZhciBmPWIubWVtb2l6ZWRQcm9wcztkW09mXT1iO2RbUGZdPWY7YT0wIT09KGIubW9kZSYxKTtzd2l0Y2goYyl7Y2FzZSBcImRpYWxvZ1wiOkQoXCJjYW5jZWxcIixkKTtEKFwiY2xvc2VcIixkKTticmVhaztjYXNlIFwiaWZyYW1lXCI6Y2FzZSBcIm9iamVjdFwiOmNhc2UgXCJlbWJlZFwiOkQoXCJsb2FkXCIsZCk7YnJlYWs7Y2FzZSBcInZpZGVvXCI6Y2FzZSBcImF1ZGlvXCI6Zm9yKGU9MDtlPGxmLmxlbmd0aDtlKyspRChsZltlXSxkKTticmVhaztjYXNlIFwic291cmNlXCI6RChcImVycm9yXCIsZCk7YnJlYWs7Y2FzZSBcImltZ1wiOmNhc2UgXCJpbWFnZVwiOmNhc2UgXCJsaW5rXCI6RChcImVycm9yXCIsXG5kKTtEKFwibG9hZFwiLGQpO2JyZWFrO2Nhc2UgXCJkZXRhaWxzXCI6RChcInRvZ2dsZVwiLGQpO2JyZWFrO2Nhc2UgXCJpbnB1dFwiOlphKGQsZik7RChcImludmFsaWRcIixkKTticmVhaztjYXNlIFwic2VsZWN0XCI6ZC5fd3JhcHBlclN0YXRlPXt3YXNNdWx0aXBsZTohIWYubXVsdGlwbGV9O0QoXCJpbnZhbGlkXCIsZCk7YnJlYWs7Y2FzZSBcInRleHRhcmVhXCI6aGIoZCxmKSxEKFwiaW52YWxpZFwiLGQpfXViKGMsZik7ZT1udWxsO2Zvcih2YXIgZyBpbiBmKWlmKGYuaGFzT3duUHJvcGVydHkoZykpe3ZhciBoPWZbZ107XCJjaGlsZHJlblwiPT09Zz9cInN0cmluZ1wiPT09dHlwZW9mIGg/ZC50ZXh0Q29udGVudCE9PWgmJighMCE9PWYuc3VwcHJlc3NIeWRyYXRpb25XYXJuaW5nJiZBZihkLnRleHRDb250ZW50LGgsYSksZT1bXCJjaGlsZHJlblwiLGhdKTpcIm51bWJlclwiPT09dHlwZW9mIGgmJmQudGV4dENvbnRlbnQhPT1cIlwiK2gmJighMCE9PWYuc3VwcHJlc3NIeWRyYXRpb25XYXJuaW5nJiZBZihkLnRleHRDb250ZW50LFxuaCxhKSxlPVtcImNoaWxkcmVuXCIsXCJcIitoXSk6ZWEuaGFzT3duUHJvcGVydHkoZykmJm51bGwhPWgmJlwib25TY3JvbGxcIj09PWcmJkQoXCJzY3JvbGxcIixkKX1zd2l0Y2goYyl7Y2FzZSBcImlucHV0XCI6VmEoZCk7ZGIoZCxmLCEwKTticmVhaztjYXNlIFwidGV4dGFyZWFcIjpWYShkKTtqYihkKTticmVhaztjYXNlIFwic2VsZWN0XCI6Y2FzZSBcIm9wdGlvblwiOmJyZWFrO2RlZmF1bHQ6XCJmdW5jdGlvblwiPT09dHlwZW9mIGYub25DbGljayYmKGQub25jbGljaz1CZil9ZD1lO2IudXBkYXRlUXVldWU9ZDtudWxsIT09ZCYmKGIuZmxhZ3N8PTQpfWVsc2V7Zz05PT09ZS5ub2RlVHlwZT9lOmUub3duZXJEb2N1bWVudDtcImh0dHA6Ly93d3cudzMub3JnLzE5OTkveGh0bWxcIj09PWEmJihhPWtiKGMpKTtcImh0dHA6Ly93d3cudzMub3JnLzE5OTkveGh0bWxcIj09PWE/XCJzY3JpcHRcIj09PWM/KGE9Zy5jcmVhdGVFbGVtZW50KFwiZGl2XCIpLGEuaW5uZXJIVE1MPVwiPHNjcmlwdD5cXHgzYy9zY3JpcHQ+XCIsYT1hLnJlbW92ZUNoaWxkKGEuZmlyc3RDaGlsZCkpOlxuXCJzdHJpbmdcIj09PXR5cGVvZiBkLmlzP2E9Zy5jcmVhdGVFbGVtZW50KGMse2lzOmQuaXN9KTooYT1nLmNyZWF0ZUVsZW1lbnQoYyksXCJzZWxlY3RcIj09PWMmJihnPWEsZC5tdWx0aXBsZT9nLm11bHRpcGxlPSEwOmQuc2l6ZSYmKGcuc2l6ZT1kLnNpemUpKSk6YT1nLmNyZWF0ZUVsZW1lbnROUyhhLGMpO2FbT2ZdPWI7YVtQZl09ZDtBaihhLGIsITEsITEpO2Iuc3RhdGVOb2RlPWE7YTp7Zz12YihjLGQpO3N3aXRjaChjKXtjYXNlIFwiZGlhbG9nXCI6RChcImNhbmNlbFwiLGEpO0QoXCJjbG9zZVwiLGEpO2U9ZDticmVhaztjYXNlIFwiaWZyYW1lXCI6Y2FzZSBcIm9iamVjdFwiOmNhc2UgXCJlbWJlZFwiOkQoXCJsb2FkXCIsYSk7ZT1kO2JyZWFrO2Nhc2UgXCJ2aWRlb1wiOmNhc2UgXCJhdWRpb1wiOmZvcihlPTA7ZTxsZi5sZW5ndGg7ZSsrKUQobGZbZV0sYSk7ZT1kO2JyZWFrO2Nhc2UgXCJzb3VyY2VcIjpEKFwiZXJyb3JcIixhKTtlPWQ7YnJlYWs7Y2FzZSBcImltZ1wiOmNhc2UgXCJpbWFnZVwiOmNhc2UgXCJsaW5rXCI6RChcImVycm9yXCIsXG5hKTtEKFwibG9hZFwiLGEpO2U9ZDticmVhaztjYXNlIFwiZGV0YWlsc1wiOkQoXCJ0b2dnbGVcIixhKTtlPWQ7YnJlYWs7Y2FzZSBcImlucHV0XCI6WmEoYSxkKTtlPVlhKGEsZCk7RChcImludmFsaWRcIixhKTticmVhaztjYXNlIFwib3B0aW9uXCI6ZT1kO2JyZWFrO2Nhc2UgXCJzZWxlY3RcIjphLl93cmFwcGVyU3RhdGU9e3dhc011bHRpcGxlOiEhZC5tdWx0aXBsZX07ZT1BKHt9LGQse3ZhbHVlOnZvaWQgMH0pO0QoXCJpbnZhbGlkXCIsYSk7YnJlYWs7Y2FzZSBcInRleHRhcmVhXCI6aGIoYSxkKTtlPWdiKGEsZCk7RChcImludmFsaWRcIixhKTticmVhaztkZWZhdWx0OmU9ZH11YihjLGUpO2g9ZTtmb3IoZiBpbiBoKWlmKGguaGFzT3duUHJvcGVydHkoZikpe3ZhciBrPWhbZl07XCJzdHlsZVwiPT09Zj9zYihhLGspOlwiZGFuZ2Vyb3VzbHlTZXRJbm5lckhUTUxcIj09PWY/KGs9az9rLl9faHRtbDp2b2lkIDAsbnVsbCE9ayYmbmIoYSxrKSk6XCJjaGlsZHJlblwiPT09Zj9cInN0cmluZ1wiPT09dHlwZW9mIGs/KFwidGV4dGFyZWFcIiE9PVxuY3x8XCJcIiE9PWspJiZvYihhLGspOlwibnVtYmVyXCI9PT10eXBlb2YgayYmb2IoYSxcIlwiK2spOlwic3VwcHJlc3NDb250ZW50RWRpdGFibGVXYXJuaW5nXCIhPT1mJiZcInN1cHByZXNzSHlkcmF0aW9uV2FybmluZ1wiIT09ZiYmXCJhdXRvRm9jdXNcIiE9PWYmJihlYS5oYXNPd25Qcm9wZXJ0eShmKT9udWxsIT1rJiZcIm9uU2Nyb2xsXCI9PT1mJiZEKFwic2Nyb2xsXCIsYSk6bnVsbCE9ayYmdGEoYSxmLGssZykpfXN3aXRjaChjKXtjYXNlIFwiaW5wdXRcIjpWYShhKTtkYihhLGQsITEpO2JyZWFrO2Nhc2UgXCJ0ZXh0YXJlYVwiOlZhKGEpO2piKGEpO2JyZWFrO2Nhc2UgXCJvcHRpb25cIjpudWxsIT1kLnZhbHVlJiZhLnNldEF0dHJpYnV0ZShcInZhbHVlXCIsXCJcIitTYShkLnZhbHVlKSk7YnJlYWs7Y2FzZSBcInNlbGVjdFwiOmEubXVsdGlwbGU9ISFkLm11bHRpcGxlO2Y9ZC52YWx1ZTtudWxsIT1mP2ZiKGEsISFkLm11bHRpcGxlLGYsITEpOm51bGwhPWQuZGVmYXVsdFZhbHVlJiZmYihhLCEhZC5tdWx0aXBsZSxkLmRlZmF1bHRWYWx1ZSxcbiEwKTticmVhaztkZWZhdWx0OlwiZnVuY3Rpb25cIj09PXR5cGVvZiBlLm9uQ2xpY2smJihhLm9uY2xpY2s9QmYpfXN3aXRjaChjKXtjYXNlIFwiYnV0dG9uXCI6Y2FzZSBcImlucHV0XCI6Y2FzZSBcInNlbGVjdFwiOmNhc2UgXCJ0ZXh0YXJlYVwiOmQ9ISFkLmF1dG9Gb2N1czticmVhayBhO2Nhc2UgXCJpbWdcIjpkPSEwO2JyZWFrIGE7ZGVmYXVsdDpkPSExfX1kJiYoYi5mbGFnc3w9NCl9bnVsbCE9PWIucmVmJiYoYi5mbGFnc3w9NTEyLGIuZmxhZ3N8PTIwOTcxNTIpfVMoYik7cmV0dXJuIG51bGw7Y2FzZSA2OmlmKGEmJm51bGwhPWIuc3RhdGVOb2RlKURqKGEsYixhLm1lbW9pemVkUHJvcHMsZCk7ZWxzZXtpZihcInN0cmluZ1wiIT09dHlwZW9mIGQmJm51bGw9PT1iLnN0YXRlTm9kZSl0aHJvdyBFcnJvcihwKDE2NikpO2M9SGgoR2guY3VycmVudCk7SGgoRWguY3VycmVudCk7aWYoR2coYikpe2Q9Yi5zdGF0ZU5vZGU7Yz1iLm1lbW9pemVkUHJvcHM7ZFtPZl09YjtpZihmPWQubm9kZVZhbHVlIT09YylpZihhPVxueGcsbnVsbCE9PWEpc3dpdGNoKGEudGFnKXtjYXNlIDM6QWYoZC5ub2RlVmFsdWUsYywwIT09KGEubW9kZSYxKSk7YnJlYWs7Y2FzZSA1OiEwIT09YS5tZW1vaXplZFByb3BzLnN1cHByZXNzSHlkcmF0aW9uV2FybmluZyYmQWYoZC5ub2RlVmFsdWUsYywwIT09KGEubW9kZSYxKSl9ZiYmKGIuZmxhZ3N8PTQpfWVsc2UgZD0oOT09PWMubm9kZVR5cGU/YzpjLm93bmVyRG9jdW1lbnQpLmNyZWF0ZVRleHROb2RlKGQpLGRbT2ZdPWIsYi5zdGF0ZU5vZGU9ZH1TKGIpO3JldHVybiBudWxsO2Nhc2UgMTM6RShNKTtkPWIubWVtb2l6ZWRTdGF0ZTtpZihudWxsPT09YXx8bnVsbCE9PWEubWVtb2l6ZWRTdGF0ZSYmbnVsbCE9PWEubWVtb2l6ZWRTdGF0ZS5kZWh5ZHJhdGVkKXtpZihJJiZudWxsIT09eWcmJjAhPT0oYi5tb2RlJjEpJiYwPT09KGIuZmxhZ3MmMTI4KSlIZygpLElnKCksYi5mbGFnc3w9OTg1NjAsZj0hMTtlbHNlIGlmKGY9R2coYiksbnVsbCE9PWQmJm51bGwhPT1kLmRlaHlkcmF0ZWQpe2lmKG51bGw9PT1cbmEpe2lmKCFmKXRocm93IEVycm9yKHAoMzE4KSk7Zj1iLm1lbW9pemVkU3RhdGU7Zj1udWxsIT09Zj9mLmRlaHlkcmF0ZWQ6bnVsbDtpZighZil0aHJvdyBFcnJvcihwKDMxNykpO2ZbT2ZdPWJ9ZWxzZSBJZygpLDA9PT0oYi5mbGFncyYxMjgpJiYoYi5tZW1vaXplZFN0YXRlPW51bGwpLGIuZmxhZ3N8PTQ7UyhiKTtmPSExfWVsc2UgbnVsbCE9PXpnJiYoR2ooemcpLHpnPW51bGwpLGY9ITA7aWYoIWYpcmV0dXJuIGIuZmxhZ3MmNjU1MzY/YjpudWxsfWlmKDAhPT0oYi5mbGFncyYxMjgpKXJldHVybiBiLmxhbmVzPWMsYjtkPW51bGwhPT1kO2QhPT0obnVsbCE9PWEmJm51bGwhPT1hLm1lbW9pemVkU3RhdGUpJiZkJiYoYi5jaGlsZC5mbGFnc3w9ODE5MiwwIT09KGIubW9kZSYxKSYmKG51bGw9PT1hfHwwIT09KE0uY3VycmVudCYxKT8wPT09VCYmKFQ9Myk6dWooKSkpO251bGwhPT1iLnVwZGF0ZVF1ZXVlJiYoYi5mbGFnc3w9NCk7UyhiKTtyZXR1cm4gbnVsbDtjYXNlIDQ6cmV0dXJuIEpoKCksXG5CaihhLGIpLG51bGw9PT1hJiZzZihiLnN0YXRlTm9kZS5jb250YWluZXJJbmZvKSxTKGIpLG51bGw7Y2FzZSAxMDpyZXR1cm4gUmcoYi50eXBlLl9jb250ZXh0KSxTKGIpLG51bGw7Y2FzZSAxNzpyZXR1cm4gWmYoYi50eXBlKSYmJGYoKSxTKGIpLG51bGw7Y2FzZSAxOTpFKE0pO2Y9Yi5tZW1vaXplZFN0YXRlO2lmKG51bGw9PT1mKXJldHVybiBTKGIpLG51bGw7ZD0wIT09KGIuZmxhZ3MmMTI4KTtnPWYucmVuZGVyaW5nO2lmKG51bGw9PT1nKWlmKGQpRWooZiwhMSk7ZWxzZXtpZigwIT09VHx8bnVsbCE9PWEmJjAhPT0oYS5mbGFncyYxMjgpKWZvcihhPWIuY2hpbGQ7bnVsbCE9PWE7KXtnPU1oKGEpO2lmKG51bGwhPT1nKXtiLmZsYWdzfD0xMjg7RWooZiwhMSk7ZD1nLnVwZGF0ZVF1ZXVlO251bGwhPT1kJiYoYi51cGRhdGVRdWV1ZT1kLGIuZmxhZ3N8PTQpO2Iuc3VidHJlZUZsYWdzPTA7ZD1jO2ZvcihjPWIuY2hpbGQ7bnVsbCE9PWM7KWY9YyxhPWQsZi5mbGFncyY9MTQ2ODAwNjYsXG5nPWYuYWx0ZXJuYXRlLG51bGw9PT1nPyhmLmNoaWxkTGFuZXM9MCxmLmxhbmVzPWEsZi5jaGlsZD1udWxsLGYuc3VidHJlZUZsYWdzPTAsZi5tZW1vaXplZFByb3BzPW51bGwsZi5tZW1vaXplZFN0YXRlPW51bGwsZi51cGRhdGVRdWV1ZT1udWxsLGYuZGVwZW5kZW5jaWVzPW51bGwsZi5zdGF0ZU5vZGU9bnVsbCk6KGYuY2hpbGRMYW5lcz1nLmNoaWxkTGFuZXMsZi5sYW5lcz1nLmxhbmVzLGYuY2hpbGQ9Zy5jaGlsZCxmLnN1YnRyZWVGbGFncz0wLGYuZGVsZXRpb25zPW51bGwsZi5tZW1vaXplZFByb3BzPWcubWVtb2l6ZWRQcm9wcyxmLm1lbW9pemVkU3RhdGU9Zy5tZW1vaXplZFN0YXRlLGYudXBkYXRlUXVldWU9Zy51cGRhdGVRdWV1ZSxmLnR5cGU9Zy50eXBlLGE9Zy5kZXBlbmRlbmNpZXMsZi5kZXBlbmRlbmNpZXM9bnVsbD09PWE/bnVsbDp7bGFuZXM6YS5sYW5lcyxmaXJzdENvbnRleHQ6YS5maXJzdENvbnRleHR9KSxjPWMuc2libGluZztHKE0sTS5jdXJyZW50JjF8Mik7cmV0dXJuIGIuY2hpbGR9YT1cbmEuc2libGluZ31udWxsIT09Zi50YWlsJiZCKCk+SGomJihiLmZsYWdzfD0xMjgsZD0hMCxFaihmLCExKSxiLmxhbmVzPTQxOTQzMDQpfWVsc2V7aWYoIWQpaWYoYT1NaChnKSxudWxsIT09YSl7aWYoYi5mbGFnc3w9MTI4LGQ9ITAsYz1hLnVwZGF0ZVF1ZXVlLG51bGwhPT1jJiYoYi51cGRhdGVRdWV1ZT1jLGIuZmxhZ3N8PTQpLEVqKGYsITApLG51bGw9PT1mLnRhaWwmJlwiaGlkZGVuXCI9PT1mLnRhaWxNb2RlJiYhZy5hbHRlcm5hdGUmJiFJKXJldHVybiBTKGIpLG51bGx9ZWxzZSAyKkIoKS1mLnJlbmRlcmluZ1N0YXJ0VGltZT5IaiYmMTA3Mzc0MTgyNCE9PWMmJihiLmZsYWdzfD0xMjgsZD0hMCxFaihmLCExKSxiLmxhbmVzPTQxOTQzMDQpO2YuaXNCYWNrd2FyZHM/KGcuc2libGluZz1iLmNoaWxkLGIuY2hpbGQ9Zyk6KGM9Zi5sYXN0LG51bGwhPT1jP2Muc2libGluZz1nOmIuY2hpbGQ9ZyxmLmxhc3Q9Zyl9aWYobnVsbCE9PWYudGFpbClyZXR1cm4gYj1mLnRhaWwsZi5yZW5kZXJpbmc9XG5iLGYudGFpbD1iLnNpYmxpbmcsZi5yZW5kZXJpbmdTdGFydFRpbWU9QigpLGIuc2libGluZz1udWxsLGM9TS5jdXJyZW50LEcoTSxkP2MmMXwyOmMmMSksYjtTKGIpO3JldHVybiBudWxsO2Nhc2UgMjI6Y2FzZSAyMzpyZXR1cm4gSWooKSxkPW51bGwhPT1iLm1lbW9pemVkU3RhdGUsbnVsbCE9PWEmJm51bGwhPT1hLm1lbW9pemVkU3RhdGUhPT1kJiYoYi5mbGFnc3w9ODE5MiksZCYmMCE9PShiLm1vZGUmMSk/MCE9PShnaiYxMDczNzQxODI0KSYmKFMoYiksYi5zdWJ0cmVlRmxhZ3MmNiYmKGIuZmxhZ3N8PTgxOTIpKTpTKGIpLG51bGw7Y2FzZSAyNDpyZXR1cm4gbnVsbDtjYXNlIDI1OnJldHVybiBudWxsfXRocm93IEVycm9yKHAoMTU2LGIudGFnKSk7fVxuZnVuY3Rpb24gSmooYSxiKXt3ZyhiKTtzd2l0Y2goYi50YWcpe2Nhc2UgMTpyZXR1cm4gWmYoYi50eXBlKSYmJGYoKSxhPWIuZmxhZ3MsYSY2NTUzNj8oYi5mbGFncz1hJi02NTUzN3wxMjgsYik6bnVsbDtjYXNlIDM6cmV0dXJuIEpoKCksRShXZiksRShIKSxPaCgpLGE9Yi5mbGFncywwIT09KGEmNjU1MzYpJiYwPT09KGEmMTI4KT8oYi5mbGFncz1hJi02NTUzN3wxMjgsYik6bnVsbDtjYXNlIDU6cmV0dXJuIExoKGIpLG51bGw7Y2FzZSAxMzpFKE0pO2E9Yi5tZW1vaXplZFN0YXRlO2lmKG51bGwhPT1hJiZudWxsIT09YS5kZWh5ZHJhdGVkKXtpZihudWxsPT09Yi5hbHRlcm5hdGUpdGhyb3cgRXJyb3IocCgzNDApKTtJZygpfWE9Yi5mbGFncztyZXR1cm4gYSY2NTUzNj8oYi5mbGFncz1hJi02NTUzN3wxMjgsYik6bnVsbDtjYXNlIDE5OnJldHVybiBFKE0pLG51bGw7Y2FzZSA0OnJldHVybiBKaCgpLG51bGw7Y2FzZSAxMDpyZXR1cm4gUmcoYi50eXBlLl9jb250ZXh0KSxudWxsO2Nhc2UgMjI6Y2FzZSAyMzpyZXR1cm4gSWooKSxcbm51bGw7Y2FzZSAyNDpyZXR1cm4gbnVsbDtkZWZhdWx0OnJldHVybiBudWxsfX12YXIgS2o9ITEsVT0hMSxMaj1cImZ1bmN0aW9uXCI9PT10eXBlb2YgV2Vha1NldD9XZWFrU2V0OlNldCxWPW51bGw7ZnVuY3Rpb24gTWooYSxiKXt2YXIgYz1hLnJlZjtpZihudWxsIT09YylpZihcImZ1bmN0aW9uXCI9PT10eXBlb2YgYyl0cnl7YyhudWxsKX1jYXRjaChkKXtXKGEsYixkKX1lbHNlIGMuY3VycmVudD1udWxsfWZ1bmN0aW9uIE5qKGEsYixjKXt0cnl7YygpfWNhdGNoKGQpe1coYSxiLGQpfX12YXIgT2o9ITE7XG5mdW5jdGlvbiBQaihhLGIpe0NmPWRkO2E9TWUoKTtpZihOZShhKSl7aWYoXCJzZWxlY3Rpb25TdGFydFwiaW4gYSl2YXIgYz17c3RhcnQ6YS5zZWxlY3Rpb25TdGFydCxlbmQ6YS5zZWxlY3Rpb25FbmR9O2Vsc2UgYTp7Yz0oYz1hLm93bmVyRG9jdW1lbnQpJiZjLmRlZmF1bHRWaWV3fHx3aW5kb3c7dmFyIGQ9Yy5nZXRTZWxlY3Rpb24mJmMuZ2V0U2VsZWN0aW9uKCk7aWYoZCYmMCE9PWQucmFuZ2VDb3VudCl7Yz1kLmFuY2hvck5vZGU7dmFyIGU9ZC5hbmNob3JPZmZzZXQsZj1kLmZvY3VzTm9kZTtkPWQuZm9jdXNPZmZzZXQ7dHJ5e2Mubm9kZVR5cGUsZi5ub2RlVHlwZX1jYXRjaChGKXtjPW51bGw7YnJlYWsgYX12YXIgZz0wLGg9LTEsaz0tMSxsPTAsbT0wLHE9YSxyPW51bGw7Yjpmb3IoOzspe2Zvcih2YXIgeTs7KXtxIT09Y3x8MCE9PWUmJjMhPT1xLm5vZGVUeXBlfHwoaD1nK2UpO3EhPT1mfHwwIT09ZCYmMyE9PXEubm9kZVR5cGV8fChrPWcrZCk7Mz09PXEubm9kZVR5cGUmJihnKz1cbnEubm9kZVZhbHVlLmxlbmd0aCk7aWYobnVsbD09PSh5PXEuZmlyc3RDaGlsZCkpYnJlYWs7cj1xO3E9eX1mb3IoOzspe2lmKHE9PT1hKWJyZWFrIGI7cj09PWMmJisrbD09PWUmJihoPWcpO3I9PT1mJiYrK209PT1kJiYoaz1nKTtpZihudWxsIT09KHk9cS5uZXh0U2libGluZykpYnJlYWs7cT1yO3I9cS5wYXJlbnROb2RlfXE9eX1jPS0xPT09aHx8LTE9PT1rP251bGw6e3N0YXJ0OmgsZW5kOmt9fWVsc2UgYz1udWxsfWM9Y3x8e3N0YXJ0OjAsZW5kOjB9fWVsc2UgYz1udWxsO0RmPXtmb2N1c2VkRWxlbTphLHNlbGVjdGlvblJhbmdlOmN9O2RkPSExO2ZvcihWPWI7bnVsbCE9PVY7KWlmKGI9VixhPWIuY2hpbGQsMCE9PShiLnN1YnRyZWVGbGFncyYxMDI4KSYmbnVsbCE9PWEpYS5yZXR1cm49YixWPWE7ZWxzZSBmb3IoO251bGwhPT1WOyl7Yj1WO3RyeXt2YXIgbj1iLmFsdGVybmF0ZTtpZigwIT09KGIuZmxhZ3MmMTAyNCkpc3dpdGNoKGIudGFnKXtjYXNlIDA6Y2FzZSAxMTpjYXNlIDE1OmJyZWFrO1xuY2FzZSAxOmlmKG51bGwhPT1uKXt2YXIgdD1uLm1lbW9pemVkUHJvcHMsSj1uLm1lbW9pemVkU3RhdGUseD1iLnN0YXRlTm9kZSx3PXguZ2V0U25hcHNob3RCZWZvcmVVcGRhdGUoYi5lbGVtZW50VHlwZT09PWIudHlwZT90OkxnKGIudHlwZSx0KSxKKTt4Ll9fcmVhY3RJbnRlcm5hbFNuYXBzaG90QmVmb3JlVXBkYXRlPXd9YnJlYWs7Y2FzZSAzOnZhciB1PWIuc3RhdGVOb2RlLmNvbnRhaW5lckluZm87MT09PXUubm9kZVR5cGU/dS50ZXh0Q29udGVudD1cIlwiOjk9PT11Lm5vZGVUeXBlJiZ1LmRvY3VtZW50RWxlbWVudCYmdS5yZW1vdmVDaGlsZCh1LmRvY3VtZW50RWxlbWVudCk7YnJlYWs7Y2FzZSA1OmNhc2UgNjpjYXNlIDQ6Y2FzZSAxNzpicmVhaztkZWZhdWx0OnRocm93IEVycm9yKHAoMTYzKSk7fX1jYXRjaChGKXtXKGIsYi5yZXR1cm4sRil9YT1iLnNpYmxpbmc7aWYobnVsbCE9PWEpe2EucmV0dXJuPWIucmV0dXJuO1Y9YTticmVha31WPWIucmV0dXJufW49T2o7T2o9ITE7cmV0dXJuIG59XG5mdW5jdGlvbiBRaihhLGIsYyl7dmFyIGQ9Yi51cGRhdGVRdWV1ZTtkPW51bGwhPT1kP2QubGFzdEVmZmVjdDpudWxsO2lmKG51bGwhPT1kKXt2YXIgZT1kPWQubmV4dDtkb3tpZigoZS50YWcmYSk9PT1hKXt2YXIgZj1lLmRlc3Ryb3k7ZS5kZXN0cm95PXZvaWQgMDt2b2lkIDAhPT1mJiZOaihiLGMsZil9ZT1lLm5leHR9d2hpbGUoZSE9PWQpfX1mdW5jdGlvbiBSaihhLGIpe2I9Yi51cGRhdGVRdWV1ZTtiPW51bGwhPT1iP2IubGFzdEVmZmVjdDpudWxsO2lmKG51bGwhPT1iKXt2YXIgYz1iPWIubmV4dDtkb3tpZigoYy50YWcmYSk9PT1hKXt2YXIgZD1jLmNyZWF0ZTtjLmRlc3Ryb3k9ZCgpfWM9Yy5uZXh0fXdoaWxlKGMhPT1iKX19ZnVuY3Rpb24gU2ooYSl7dmFyIGI9YS5yZWY7aWYobnVsbCE9PWIpe3ZhciBjPWEuc3RhdGVOb2RlO3N3aXRjaChhLnRhZyl7Y2FzZSA1OmE9YzticmVhaztkZWZhdWx0OmE9Y31cImZ1bmN0aW9uXCI9PT10eXBlb2YgYj9iKGEpOmIuY3VycmVudD1hfX1cbmZ1bmN0aW9uIFRqKGEpe3ZhciBiPWEuYWx0ZXJuYXRlO251bGwhPT1iJiYoYS5hbHRlcm5hdGU9bnVsbCxUaihiKSk7YS5jaGlsZD1udWxsO2EuZGVsZXRpb25zPW51bGw7YS5zaWJsaW5nPW51bGw7NT09PWEudGFnJiYoYj1hLnN0YXRlTm9kZSxudWxsIT09YiYmKGRlbGV0ZSBiW09mXSxkZWxldGUgYltQZl0sZGVsZXRlIGJbb2ZdLGRlbGV0ZSBiW1FmXSxkZWxldGUgYltSZl0pKTthLnN0YXRlTm9kZT1udWxsO2EucmV0dXJuPW51bGw7YS5kZXBlbmRlbmNpZXM9bnVsbDthLm1lbW9pemVkUHJvcHM9bnVsbDthLm1lbW9pemVkU3RhdGU9bnVsbDthLnBlbmRpbmdQcm9wcz1udWxsO2Euc3RhdGVOb2RlPW51bGw7YS51cGRhdGVRdWV1ZT1udWxsfWZ1bmN0aW9uIFVqKGEpe3JldHVybiA1PT09YS50YWd8fDM9PT1hLnRhZ3x8ND09PWEudGFnfVxuZnVuY3Rpb24gVmooYSl7YTpmb3IoOzspe2Zvcig7bnVsbD09PWEuc2libGluZzspe2lmKG51bGw9PT1hLnJldHVybnx8VWooYS5yZXR1cm4pKXJldHVybiBudWxsO2E9YS5yZXR1cm59YS5zaWJsaW5nLnJldHVybj1hLnJldHVybjtmb3IoYT1hLnNpYmxpbmc7NSE9PWEudGFnJiY2IT09YS50YWcmJjE4IT09YS50YWc7KXtpZihhLmZsYWdzJjIpY29udGludWUgYTtpZihudWxsPT09YS5jaGlsZHx8ND09PWEudGFnKWNvbnRpbnVlIGE7ZWxzZSBhLmNoaWxkLnJldHVybj1hLGE9YS5jaGlsZH1pZighKGEuZmxhZ3MmMikpcmV0dXJuIGEuc3RhdGVOb2RlfX1cbmZ1bmN0aW9uIFdqKGEsYixjKXt2YXIgZD1hLnRhZztpZig1PT09ZHx8Nj09PWQpYT1hLnN0YXRlTm9kZSxiPzg9PT1jLm5vZGVUeXBlP2MucGFyZW50Tm9kZS5pbnNlcnRCZWZvcmUoYSxiKTpjLmluc2VydEJlZm9yZShhLGIpOig4PT09Yy5ub2RlVHlwZT8oYj1jLnBhcmVudE5vZGUsYi5pbnNlcnRCZWZvcmUoYSxjKSk6KGI9YyxiLmFwcGVuZENoaWxkKGEpKSxjPWMuX3JlYWN0Um9vdENvbnRhaW5lcixudWxsIT09YyYmdm9pZCAwIT09Y3x8bnVsbCE9PWIub25jbGlja3x8KGIub25jbGljaz1CZikpO2Vsc2UgaWYoNCE9PWQmJihhPWEuY2hpbGQsbnVsbCE9PWEpKWZvcihXaihhLGIsYyksYT1hLnNpYmxpbmc7bnVsbCE9PWE7KVdqKGEsYixjKSxhPWEuc2libGluZ31cbmZ1bmN0aW9uIFhqKGEsYixjKXt2YXIgZD1hLnRhZztpZig1PT09ZHx8Nj09PWQpYT1hLnN0YXRlTm9kZSxiP2MuaW5zZXJ0QmVmb3JlKGEsYik6Yy5hcHBlbmRDaGlsZChhKTtlbHNlIGlmKDQhPT1kJiYoYT1hLmNoaWxkLG51bGwhPT1hKSlmb3IoWGooYSxiLGMpLGE9YS5zaWJsaW5nO251bGwhPT1hOylYaihhLGIsYyksYT1hLnNpYmxpbmd9dmFyIFg9bnVsbCxZaj0hMTtmdW5jdGlvbiBaaihhLGIsYyl7Zm9yKGM9Yy5jaGlsZDtudWxsIT09YzspYWsoYSxiLGMpLGM9Yy5zaWJsaW5nfVxuZnVuY3Rpb24gYWsoYSxiLGMpe2lmKGxjJiZcImZ1bmN0aW9uXCI9PT10eXBlb2YgbGMub25Db21taXRGaWJlclVubW91bnQpdHJ5e2xjLm9uQ29tbWl0RmliZXJVbm1vdW50KGtjLGMpfWNhdGNoKGgpe31zd2l0Y2goYy50YWcpe2Nhc2UgNTpVfHxNaihjLGIpO2Nhc2UgNjp2YXIgZD1YLGU9WWo7WD1udWxsO1pqKGEsYixjKTtYPWQ7WWo9ZTtudWxsIT09WCYmKFlqPyhhPVgsYz1jLnN0YXRlTm9kZSw4PT09YS5ub2RlVHlwZT9hLnBhcmVudE5vZGUucmVtb3ZlQ2hpbGQoYyk6YS5yZW1vdmVDaGlsZChjKSk6WC5yZW1vdmVDaGlsZChjLnN0YXRlTm9kZSkpO2JyZWFrO2Nhc2UgMTg6bnVsbCE9PVgmJihZaj8oYT1YLGM9Yy5zdGF0ZU5vZGUsOD09PWEubm9kZVR5cGU/S2YoYS5wYXJlbnROb2RlLGMpOjE9PT1hLm5vZGVUeXBlJiZLZihhLGMpLGJkKGEpKTpLZihYLGMuc3RhdGVOb2RlKSk7YnJlYWs7Y2FzZSA0OmQ9WDtlPVlqO1g9Yy5zdGF0ZU5vZGUuY29udGFpbmVySW5mbztZaj0hMDtcblpqKGEsYixjKTtYPWQ7WWo9ZTticmVhaztjYXNlIDA6Y2FzZSAxMTpjYXNlIDE0OmNhc2UgMTU6aWYoIVUmJihkPWMudXBkYXRlUXVldWUsbnVsbCE9PWQmJihkPWQubGFzdEVmZmVjdCxudWxsIT09ZCkpKXtlPWQ9ZC5uZXh0O2Rve3ZhciBmPWUsZz1mLmRlc3Ryb3k7Zj1mLnRhZzt2b2lkIDAhPT1nJiYoMCE9PShmJjIpP05qKGMsYixnKTowIT09KGYmNCkmJk5qKGMsYixnKSk7ZT1lLm5leHR9d2hpbGUoZSE9PWQpfVpqKGEsYixjKTticmVhaztjYXNlIDE6aWYoIVUmJihNaihjLGIpLGQ9Yy5zdGF0ZU5vZGUsXCJmdW5jdGlvblwiPT09dHlwZW9mIGQuY29tcG9uZW50V2lsbFVubW91bnQpKXRyeXtkLnByb3BzPWMubWVtb2l6ZWRQcm9wcyxkLnN0YXRlPWMubWVtb2l6ZWRTdGF0ZSxkLmNvbXBvbmVudFdpbGxVbm1vdW50KCl9Y2F0Y2goaCl7VyhjLGIsaCl9WmooYSxiLGMpO2JyZWFrO2Nhc2UgMjE6WmooYSxiLGMpO2JyZWFrO2Nhc2UgMjI6Yy5tb2RlJjE/KFU9KGQ9VSl8fG51bGwhPT1cbmMubWVtb2l6ZWRTdGF0ZSxaaihhLGIsYyksVT1kKTpaaihhLGIsYyk7YnJlYWs7ZGVmYXVsdDpaaihhLGIsYyl9fWZ1bmN0aW9uIGJrKGEpe3ZhciBiPWEudXBkYXRlUXVldWU7aWYobnVsbCE9PWIpe2EudXBkYXRlUXVldWU9bnVsbDt2YXIgYz1hLnN0YXRlTm9kZTtudWxsPT09YyYmKGM9YS5zdGF0ZU5vZGU9bmV3IExqKTtiLmZvckVhY2goZnVuY3Rpb24oYil7dmFyIGQ9Y2suYmluZChudWxsLGEsYik7Yy5oYXMoYil8fChjLmFkZChiKSxiLnRoZW4oZCxkKSl9KX19XG5mdW5jdGlvbiBkayhhLGIpe3ZhciBjPWIuZGVsZXRpb25zO2lmKG51bGwhPT1jKWZvcih2YXIgZD0wO2Q8Yy5sZW5ndGg7ZCsrKXt2YXIgZT1jW2RdO3RyeXt2YXIgZj1hLGc9YixoPWc7YTpmb3IoO251bGwhPT1oOyl7c3dpdGNoKGgudGFnKXtjYXNlIDU6WD1oLnN0YXRlTm9kZTtZaj0hMTticmVhayBhO2Nhc2UgMzpYPWguc3RhdGVOb2RlLmNvbnRhaW5lckluZm87WWo9ITA7YnJlYWsgYTtjYXNlIDQ6WD1oLnN0YXRlTm9kZS5jb250YWluZXJJbmZvO1lqPSEwO2JyZWFrIGF9aD1oLnJldHVybn1pZihudWxsPT09WCl0aHJvdyBFcnJvcihwKDE2MCkpO2FrKGYsZyxlKTtYPW51bGw7WWo9ITE7dmFyIGs9ZS5hbHRlcm5hdGU7bnVsbCE9PWsmJihrLnJldHVybj1udWxsKTtlLnJldHVybj1udWxsfWNhdGNoKGwpe1coZSxiLGwpfX1pZihiLnN1YnRyZWVGbGFncyYxMjg1NClmb3IoYj1iLmNoaWxkO251bGwhPT1iOyllayhiLGEpLGI9Yi5zaWJsaW5nfVxuZnVuY3Rpb24gZWsoYSxiKXt2YXIgYz1hLmFsdGVybmF0ZSxkPWEuZmxhZ3M7c3dpdGNoKGEudGFnKXtjYXNlIDA6Y2FzZSAxMTpjYXNlIDE0OmNhc2UgMTU6ZGsoYixhKTtmayhhKTtpZihkJjQpe3RyeXtRaigzLGEsYS5yZXR1cm4pLFJqKDMsYSl9Y2F0Y2godCl7VyhhLGEucmV0dXJuLHQpfXRyeXtRaig1LGEsYS5yZXR1cm4pfWNhdGNoKHQpe1coYSxhLnJldHVybix0KX19YnJlYWs7Y2FzZSAxOmRrKGIsYSk7ZmsoYSk7ZCY1MTImJm51bGwhPT1jJiZNaihjLGMucmV0dXJuKTticmVhaztjYXNlIDU6ZGsoYixhKTtmayhhKTtkJjUxMiYmbnVsbCE9PWMmJk1qKGMsYy5yZXR1cm4pO2lmKGEuZmxhZ3MmMzIpe3ZhciBlPWEuc3RhdGVOb2RlO3RyeXtvYihlLFwiXCIpfWNhdGNoKHQpe1coYSxhLnJldHVybix0KX19aWYoZCY0JiYoZT1hLnN0YXRlTm9kZSxudWxsIT1lKSl7dmFyIGY9YS5tZW1vaXplZFByb3BzLGc9bnVsbCE9PWM/Yy5tZW1vaXplZFByb3BzOmYsaD1hLnR5cGUsaz1hLnVwZGF0ZVF1ZXVlO1xuYS51cGRhdGVRdWV1ZT1udWxsO2lmKG51bGwhPT1rKXRyeXtcImlucHV0XCI9PT1oJiZcInJhZGlvXCI9PT1mLnR5cGUmJm51bGwhPWYubmFtZSYmYWIoZSxmKTt2YihoLGcpO3ZhciBsPXZiKGgsZik7Zm9yKGc9MDtnPGsubGVuZ3RoO2crPTIpe3ZhciBtPWtbZ10scT1rW2crMV07XCJzdHlsZVwiPT09bT9zYihlLHEpOlwiZGFuZ2Vyb3VzbHlTZXRJbm5lckhUTUxcIj09PW0/bmIoZSxxKTpcImNoaWxkcmVuXCI9PT1tP29iKGUscSk6dGEoZSxtLHEsbCl9c3dpdGNoKGgpe2Nhc2UgXCJpbnB1dFwiOmJiKGUsZik7YnJlYWs7Y2FzZSBcInRleHRhcmVhXCI6aWIoZSxmKTticmVhaztjYXNlIFwic2VsZWN0XCI6dmFyIHI9ZS5fd3JhcHBlclN0YXRlLndhc011bHRpcGxlO2UuX3dyYXBwZXJTdGF0ZS53YXNNdWx0aXBsZT0hIWYubXVsdGlwbGU7dmFyIHk9Zi52YWx1ZTtudWxsIT15P2ZiKGUsISFmLm11bHRpcGxlLHksITEpOnIhPT0hIWYubXVsdGlwbGUmJihudWxsIT1mLmRlZmF1bHRWYWx1ZT9mYihlLCEhZi5tdWx0aXBsZSxcbmYuZGVmYXVsdFZhbHVlLCEwKTpmYihlLCEhZi5tdWx0aXBsZSxmLm11bHRpcGxlP1tdOlwiXCIsITEpKX1lW1BmXT1mfWNhdGNoKHQpe1coYSxhLnJldHVybix0KX19YnJlYWs7Y2FzZSA2OmRrKGIsYSk7ZmsoYSk7aWYoZCY0KXtpZihudWxsPT09YS5zdGF0ZU5vZGUpdGhyb3cgRXJyb3IocCgxNjIpKTtlPWEuc3RhdGVOb2RlO2Y9YS5tZW1vaXplZFByb3BzO3RyeXtlLm5vZGVWYWx1ZT1mfWNhdGNoKHQpe1coYSxhLnJldHVybix0KX19YnJlYWs7Y2FzZSAzOmRrKGIsYSk7ZmsoYSk7aWYoZCY0JiZudWxsIT09YyYmYy5tZW1vaXplZFN0YXRlLmlzRGVoeWRyYXRlZCl0cnl7YmQoYi5jb250YWluZXJJbmZvKX1jYXRjaCh0KXtXKGEsYS5yZXR1cm4sdCl9YnJlYWs7Y2FzZSA0OmRrKGIsYSk7ZmsoYSk7YnJlYWs7Y2FzZSAxMzpkayhiLGEpO2ZrKGEpO2U9YS5jaGlsZDtlLmZsYWdzJjgxOTImJihmPW51bGwhPT1lLm1lbW9pemVkU3RhdGUsZS5zdGF0ZU5vZGUuaXNIaWRkZW49ZiwhZnx8XG5udWxsIT09ZS5hbHRlcm5hdGUmJm51bGwhPT1lLmFsdGVybmF0ZS5tZW1vaXplZFN0YXRlfHwoZ2s9QigpKSk7ZCY0JiZiayhhKTticmVhaztjYXNlIDIyOm09bnVsbCE9PWMmJm51bGwhPT1jLm1lbW9pemVkU3RhdGU7YS5tb2RlJjE/KFU9KGw9VSl8fG0sZGsoYixhKSxVPWwpOmRrKGIsYSk7ZmsoYSk7aWYoZCY4MTkyKXtsPW51bGwhPT1hLm1lbW9pemVkU3RhdGU7aWYoKGEuc3RhdGVOb2RlLmlzSGlkZGVuPWwpJiYhbSYmMCE9PShhLm1vZGUmMSkpZm9yKFY9YSxtPWEuY2hpbGQ7bnVsbCE9PW07KXtmb3IocT1WPW07bnVsbCE9PVY7KXtyPVY7eT1yLmNoaWxkO3N3aXRjaChyLnRhZyl7Y2FzZSAwOmNhc2UgMTE6Y2FzZSAxNDpjYXNlIDE1OlFqKDQscixyLnJldHVybik7YnJlYWs7Y2FzZSAxOk1qKHIsci5yZXR1cm4pO3ZhciBuPXIuc3RhdGVOb2RlO2lmKFwiZnVuY3Rpb25cIj09PXR5cGVvZiBuLmNvbXBvbmVudFdpbGxVbm1vdW50KXtkPXI7Yz1yLnJldHVybjt0cnl7Yj1kLG4ucHJvcHM9XG5iLm1lbW9pemVkUHJvcHMsbi5zdGF0ZT1iLm1lbW9pemVkU3RhdGUsbi5jb21wb25lbnRXaWxsVW5tb3VudCgpfWNhdGNoKHQpe1coZCxjLHQpfX1icmVhaztjYXNlIDU6TWoocixyLnJldHVybik7YnJlYWs7Y2FzZSAyMjppZihudWxsIT09ci5tZW1vaXplZFN0YXRlKXtoayhxKTtjb250aW51ZX19bnVsbCE9PXk/KHkucmV0dXJuPXIsVj15KTpoayhxKX1tPW0uc2libGluZ31hOmZvcihtPW51bGwscT1hOzspe2lmKDU9PT1xLnRhZyl7aWYobnVsbD09PW0pe209cTt0cnl7ZT1xLnN0YXRlTm9kZSxsPyhmPWUuc3R5bGUsXCJmdW5jdGlvblwiPT09dHlwZW9mIGYuc2V0UHJvcGVydHk/Zi5zZXRQcm9wZXJ0eShcImRpc3BsYXlcIixcIm5vbmVcIixcImltcG9ydGFudFwiKTpmLmRpc3BsYXk9XCJub25lXCIpOihoPXEuc3RhdGVOb2RlLGs9cS5tZW1vaXplZFByb3BzLnN0eWxlLGc9dm9pZCAwIT09ayYmbnVsbCE9PWsmJmsuaGFzT3duUHJvcGVydHkoXCJkaXNwbGF5XCIpP2suZGlzcGxheTpudWxsLGguc3R5bGUuZGlzcGxheT1cbnJiKFwiZGlzcGxheVwiLGcpKX1jYXRjaCh0KXtXKGEsYS5yZXR1cm4sdCl9fX1lbHNlIGlmKDY9PT1xLnRhZyl7aWYobnVsbD09PW0pdHJ5e3Euc3RhdGVOb2RlLm5vZGVWYWx1ZT1sP1wiXCI6cS5tZW1vaXplZFByb3BzfWNhdGNoKHQpe1coYSxhLnJldHVybix0KX19ZWxzZSBpZigoMjIhPT1xLnRhZyYmMjMhPT1xLnRhZ3x8bnVsbD09PXEubWVtb2l6ZWRTdGF0ZXx8cT09PWEpJiZudWxsIT09cS5jaGlsZCl7cS5jaGlsZC5yZXR1cm49cTtxPXEuY2hpbGQ7Y29udGludWV9aWYocT09PWEpYnJlYWsgYTtmb3IoO251bGw9PT1xLnNpYmxpbmc7KXtpZihudWxsPT09cS5yZXR1cm58fHEucmV0dXJuPT09YSlicmVhayBhO209PT1xJiYobT1udWxsKTtxPXEucmV0dXJufW09PT1xJiYobT1udWxsKTtxLnNpYmxpbmcucmV0dXJuPXEucmV0dXJuO3E9cS5zaWJsaW5nfX1icmVhaztjYXNlIDE5OmRrKGIsYSk7ZmsoYSk7ZCY0JiZiayhhKTticmVhaztjYXNlIDIxOmJyZWFrO2RlZmF1bHQ6ZGsoYixcbmEpLGZrKGEpfX1mdW5jdGlvbiBmayhhKXt2YXIgYj1hLmZsYWdzO2lmKGImMil7dHJ5e2E6e2Zvcih2YXIgYz1hLnJldHVybjtudWxsIT09Yzspe2lmKFVqKGMpKXt2YXIgZD1jO2JyZWFrIGF9Yz1jLnJldHVybn10aHJvdyBFcnJvcihwKDE2MCkpO31zd2l0Y2goZC50YWcpe2Nhc2UgNTp2YXIgZT1kLnN0YXRlTm9kZTtkLmZsYWdzJjMyJiYob2IoZSxcIlwiKSxkLmZsYWdzJj0tMzMpO3ZhciBmPVZqKGEpO1hqKGEsZixlKTticmVhaztjYXNlIDM6Y2FzZSA0OnZhciBnPWQuc3RhdGVOb2RlLmNvbnRhaW5lckluZm8saD1WaihhKTtXaihhLGgsZyk7YnJlYWs7ZGVmYXVsdDp0aHJvdyBFcnJvcihwKDE2MSkpO319Y2F0Y2goayl7VyhhLGEucmV0dXJuLGspfWEuZmxhZ3MmPS0zfWImNDA5NiYmKGEuZmxhZ3MmPS00MDk3KX1mdW5jdGlvbiBpayhhLGIsYyl7Vj1hO2prKGEsYixjKX1cbmZ1bmN0aW9uIGprKGEsYixjKXtmb3IodmFyIGQ9MCE9PShhLm1vZGUmMSk7bnVsbCE9PVY7KXt2YXIgZT1WLGY9ZS5jaGlsZDtpZigyMj09PWUudGFnJiZkKXt2YXIgZz1udWxsIT09ZS5tZW1vaXplZFN0YXRlfHxLajtpZighZyl7dmFyIGg9ZS5hbHRlcm5hdGUsaz1udWxsIT09aCYmbnVsbCE9PWgubWVtb2l6ZWRTdGF0ZXx8VTtoPUtqO3ZhciBsPVU7S2o9ZztpZigoVT1rKSYmIWwpZm9yKFY9ZTtudWxsIT09VjspZz1WLGs9Zy5jaGlsZCwyMj09PWcudGFnJiZudWxsIT09Zy5tZW1vaXplZFN0YXRlP2trKGUpOm51bGwhPT1rPyhrLnJldHVybj1nLFY9ayk6a2soZSk7Zm9yKDtudWxsIT09ZjspVj1mLGprKGYsYixjKSxmPWYuc2libGluZztWPWU7S2o9aDtVPWx9bGsoYSxiLGMpfWVsc2UgMCE9PShlLnN1YnRyZWVGbGFncyY4NzcyKSYmbnVsbCE9PWY/KGYucmV0dXJuPWUsVj1mKTpsayhhLGIsYyl9fVxuZnVuY3Rpb24gbGsoYSl7Zm9yKDtudWxsIT09Vjspe3ZhciBiPVY7aWYoMCE9PShiLmZsYWdzJjg3NzIpKXt2YXIgYz1iLmFsdGVybmF0ZTt0cnl7aWYoMCE9PShiLmZsYWdzJjg3NzIpKXN3aXRjaChiLnRhZyl7Y2FzZSAwOmNhc2UgMTE6Y2FzZSAxNTpVfHxSaig1LGIpO2JyZWFrO2Nhc2UgMTp2YXIgZD1iLnN0YXRlTm9kZTtpZihiLmZsYWdzJjQmJiFVKWlmKG51bGw9PT1jKWQuY29tcG9uZW50RGlkTW91bnQoKTtlbHNle3ZhciBlPWIuZWxlbWVudFR5cGU9PT1iLnR5cGU/Yy5tZW1vaXplZFByb3BzOkxnKGIudHlwZSxjLm1lbW9pemVkUHJvcHMpO2QuY29tcG9uZW50RGlkVXBkYXRlKGUsYy5tZW1vaXplZFN0YXRlLGQuX19yZWFjdEludGVybmFsU25hcHNob3RCZWZvcmVVcGRhdGUpfXZhciBmPWIudXBkYXRlUXVldWU7bnVsbCE9PWYmJmloKGIsZixkKTticmVhaztjYXNlIDM6dmFyIGc9Yi51cGRhdGVRdWV1ZTtpZihudWxsIT09Zyl7Yz1udWxsO2lmKG51bGwhPT1iLmNoaWxkKXN3aXRjaChiLmNoaWxkLnRhZyl7Y2FzZSA1OmM9XG5iLmNoaWxkLnN0YXRlTm9kZTticmVhaztjYXNlIDE6Yz1iLmNoaWxkLnN0YXRlTm9kZX1paChiLGcsYyl9YnJlYWs7Y2FzZSA1OnZhciBoPWIuc3RhdGVOb2RlO2lmKG51bGw9PT1jJiZiLmZsYWdzJjQpe2M9aDt2YXIgaz1iLm1lbW9pemVkUHJvcHM7c3dpdGNoKGIudHlwZSl7Y2FzZSBcImJ1dHRvblwiOmNhc2UgXCJpbnB1dFwiOmNhc2UgXCJzZWxlY3RcIjpjYXNlIFwidGV4dGFyZWFcIjprLmF1dG9Gb2N1cyYmYy5mb2N1cygpO2JyZWFrO2Nhc2UgXCJpbWdcIjprLnNyYyYmKGMuc3JjPWsuc3JjKX19YnJlYWs7Y2FzZSA2OmJyZWFrO2Nhc2UgNDpicmVhaztjYXNlIDEyOmJyZWFrO2Nhc2UgMTM6aWYobnVsbD09PWIubWVtb2l6ZWRTdGF0ZSl7dmFyIGw9Yi5hbHRlcm5hdGU7aWYobnVsbCE9PWwpe3ZhciBtPWwubWVtb2l6ZWRTdGF0ZTtpZihudWxsIT09bSl7dmFyIHE9bS5kZWh5ZHJhdGVkO251bGwhPT1xJiZiZChxKX19fWJyZWFrO2Nhc2UgMTk6Y2FzZSAxNzpjYXNlIDIxOmNhc2UgMjI6Y2FzZSAyMzpjYXNlIDI1OmJyZWFrO1xuZGVmYXVsdDp0aHJvdyBFcnJvcihwKDE2MykpO31VfHxiLmZsYWdzJjUxMiYmU2ooYil9Y2F0Y2gocil7VyhiLGIucmV0dXJuLHIpfX1pZihiPT09YSl7Vj1udWxsO2JyZWFrfWM9Yi5zaWJsaW5nO2lmKG51bGwhPT1jKXtjLnJldHVybj1iLnJldHVybjtWPWM7YnJlYWt9Vj1iLnJldHVybn19ZnVuY3Rpb24gaGsoYSl7Zm9yKDtudWxsIT09Vjspe3ZhciBiPVY7aWYoYj09PWEpe1Y9bnVsbDticmVha312YXIgYz1iLnNpYmxpbmc7aWYobnVsbCE9PWMpe2MucmV0dXJuPWIucmV0dXJuO1Y9YzticmVha31WPWIucmV0dXJufX1cbmZ1bmN0aW9uIGtrKGEpe2Zvcig7bnVsbCE9PVY7KXt2YXIgYj1WO3RyeXtzd2l0Y2goYi50YWcpe2Nhc2UgMDpjYXNlIDExOmNhc2UgMTU6dmFyIGM9Yi5yZXR1cm47dHJ5e1JqKDQsYil9Y2F0Y2goayl7VyhiLGMsayl9YnJlYWs7Y2FzZSAxOnZhciBkPWIuc3RhdGVOb2RlO2lmKFwiZnVuY3Rpb25cIj09PXR5cGVvZiBkLmNvbXBvbmVudERpZE1vdW50KXt2YXIgZT1iLnJldHVybjt0cnl7ZC5jb21wb25lbnREaWRNb3VudCgpfWNhdGNoKGspe1coYixlLGspfX12YXIgZj1iLnJldHVybjt0cnl7U2ooYil9Y2F0Y2goayl7VyhiLGYsayl9YnJlYWs7Y2FzZSA1OnZhciBnPWIucmV0dXJuO3RyeXtTaihiKX1jYXRjaChrKXtXKGIsZyxrKX19fWNhdGNoKGspe1coYixiLnJldHVybixrKX1pZihiPT09YSl7Vj1udWxsO2JyZWFrfXZhciBoPWIuc2libGluZztpZihudWxsIT09aCl7aC5yZXR1cm49Yi5yZXR1cm47Vj1oO2JyZWFrfVY9Yi5yZXR1cm59fVxudmFyIG1rPU1hdGguY2VpbCxuaz11YS5SZWFjdEN1cnJlbnREaXNwYXRjaGVyLG9rPXVhLlJlYWN0Q3VycmVudE93bmVyLHBrPXVhLlJlYWN0Q3VycmVudEJhdGNoQ29uZmlnLEs9MCxSPW51bGwsWT1udWxsLFo9MCxnaj0wLGZqPVVmKDApLFQ9MCxxaz1udWxsLGhoPTAscms9MCxzaz0wLHRrPW51bGwsdWs9bnVsbCxnaz0wLEhqPUluZmluaXR5LHZrPW51bGwsUGk9ITEsUWk9bnVsbCxTaT1udWxsLHdrPSExLHhrPW51bGwseWs9MCx6az0wLEFrPW51bGwsQms9LTEsQ2s9MDtmdW5jdGlvbiBMKCl7cmV0dXJuIDAhPT0oSyY2KT9CKCk6LTEhPT1Caz9CazpCaz1CKCl9XG5mdW5jdGlvbiBsaChhKXtpZigwPT09KGEubW9kZSYxKSlyZXR1cm4gMTtpZigwIT09KEsmMikmJjAhPT1aKXJldHVybiBaJi1aO2lmKG51bGwhPT1LZy50cmFuc2l0aW9uKXJldHVybiAwPT09Q2smJihDaz15YygpKSxDazthPUM7aWYoMCE9PWEpcmV0dXJuIGE7YT13aW5kb3cuZXZlbnQ7YT12b2lkIDA9PT1hPzE2OmpkKGEudHlwZSk7cmV0dXJuIGF9ZnVuY3Rpb24gbWgoYSxiLGMsZCl7aWYoNTA8emspdGhyb3cgems9MCxBaz1udWxsLEVycm9yKHAoMTg1KSk7QWMoYSxjLGQpO2lmKDA9PT0oSyYyKXx8YSE9PVIpYT09PVImJigwPT09KEsmMikmJihya3w9YyksND09PVQmJkRrKGEsWikpLEVrKGEsZCksMT09PWMmJjA9PT1LJiYwPT09KGIubW9kZSYxKSYmKEhqPUIoKSs1MDAsZmcmJmpnKCkpfVxuZnVuY3Rpb24gRWsoYSxiKXt2YXIgYz1hLmNhbGxiYWNrTm9kZTt3YyhhLGIpO3ZhciBkPXVjKGEsYT09PVI/WjowKTtpZigwPT09ZCludWxsIT09YyYmYmMoYyksYS5jYWxsYmFja05vZGU9bnVsbCxhLmNhbGxiYWNrUHJpb3JpdHk9MDtlbHNlIGlmKGI9ZCYtZCxhLmNhbGxiYWNrUHJpb3JpdHkhPT1iKXtudWxsIT1jJiZiYyhjKTtpZigxPT09YikwPT09YS50YWc/aWcoRmsuYmluZChudWxsLGEpKTpoZyhGay5iaW5kKG51bGwsYSkpLEpmKGZ1bmN0aW9uKCl7MD09PShLJjYpJiZqZygpfSksYz1udWxsO2Vsc2V7c3dpdGNoKERjKGQpKXtjYXNlIDE6Yz1mYzticmVhaztjYXNlIDQ6Yz1nYzticmVhaztjYXNlIDE2OmM9aGM7YnJlYWs7Y2FzZSA1MzY4NzA5MTI6Yz1qYzticmVhaztkZWZhdWx0OmM9aGN9Yz1HayhjLEhrLmJpbmQobnVsbCxhKSl9YS5jYWxsYmFja1ByaW9yaXR5PWI7YS5jYWxsYmFja05vZGU9Y319XG5mdW5jdGlvbiBIayhhLGIpe0JrPS0xO0NrPTA7aWYoMCE9PShLJjYpKXRocm93IEVycm9yKHAoMzI3KSk7dmFyIGM9YS5jYWxsYmFja05vZGU7aWYoSWsoKSYmYS5jYWxsYmFja05vZGUhPT1jKXJldHVybiBudWxsO3ZhciBkPXVjKGEsYT09PVI/WjowKTtpZigwPT09ZClyZXR1cm4gbnVsbDtpZigwIT09KGQmMzApfHwwIT09KGQmYS5leHBpcmVkTGFuZXMpfHxiKWI9SmsoYSxkKTtlbHNle2I9ZDt2YXIgZT1LO0t8PTI7dmFyIGY9S2soKTtpZihSIT09YXx8WiE9PWIpdms9bnVsbCxIaj1CKCkrNTAwLExrKGEsYik7ZG8gdHJ5e01rKCk7YnJlYWt9Y2F0Y2goaCl7TmsoYSxoKX13aGlsZSgxKTtRZygpO25rLmN1cnJlbnQ9ZjtLPWU7bnVsbCE9PVk/Yj0wOihSPW51bGwsWj0wLGI9VCl9aWYoMCE9PWIpezI9PT1iJiYoZT14YyhhKSwwIT09ZSYmKGQ9ZSxiPU9rKGEsZSkpKTtpZigxPT09Yil0aHJvdyBjPXFrLExrKGEsMCksRGsoYSxkKSxFayhhLEIoKSksYztpZig2PT09YilEayhhLGQpO1xuZWxzZXtlPWEuY3VycmVudC5hbHRlcm5hdGU7aWYoMD09PShkJjMwKSYmIVBrKGUpJiYoYj1KayhhLGQpLDI9PT1iJiYoZj14YyhhKSwwIT09ZiYmKGQ9ZixiPU9rKGEsZikpKSwxPT09YikpdGhyb3cgYz1xayxMayhhLDApLERrKGEsZCksRWsoYSxCKCkpLGM7YS5maW5pc2hlZFdvcms9ZTthLmZpbmlzaGVkTGFuZXM9ZDtzd2l0Y2goYil7Y2FzZSAwOmNhc2UgMTp0aHJvdyBFcnJvcihwKDM0NSkpO2Nhc2UgMjpRayhhLHVrLHZrKTticmVhaztjYXNlIDM6RGsoYSxkKTtpZigoZCYxMzAwMjM0MjQpPT09ZCYmKGI9Z2srNTAwLUIoKSwxMDxiKSl7aWYoMCE9PXVjKGEsMCkpYnJlYWs7ZT1hLnN1c3BlbmRlZExhbmVzO2lmKChlJmQpIT09ZCl7TCgpO2EucGluZ2VkTGFuZXN8PWEuc3VzcGVuZGVkTGFuZXMmZTticmVha31hLnRpbWVvdXRIYW5kbGU9RmYoUWsuYmluZChudWxsLGEsdWssdmspLGIpO2JyZWFrfVFrKGEsdWssdmspO2JyZWFrO2Nhc2UgNDpEayhhLGQpO2lmKChkJjQxOTQyNDApPT09XG5kKWJyZWFrO2I9YS5ldmVudFRpbWVzO2ZvcihlPS0xOzA8ZDspe3ZhciBnPTMxLW9jKGQpO2Y9MTw8ZztnPWJbZ107Zz5lJiYoZT1nKTtkJj1+Zn1kPWU7ZD1CKCktZDtkPSgxMjA+ZD8xMjA6NDgwPmQ/NDgwOjEwODA+ZD8xMDgwOjE5MjA+ZD8xOTIwOjNFMz5kPzNFMzo0MzIwPmQ/NDMyMDoxOTYwKm1rKGQvMTk2MCkpLWQ7aWYoMTA8ZCl7YS50aW1lb3V0SGFuZGxlPUZmKFFrLmJpbmQobnVsbCxhLHVrLHZrKSxkKTticmVha31RayhhLHVrLHZrKTticmVhaztjYXNlIDU6UWsoYSx1ayx2ayk7YnJlYWs7ZGVmYXVsdDp0aHJvdyBFcnJvcihwKDMyOSkpO319fUVrKGEsQigpKTtyZXR1cm4gYS5jYWxsYmFja05vZGU9PT1jP0hrLmJpbmQobnVsbCxhKTpudWxsfVxuZnVuY3Rpb24gT2soYSxiKXt2YXIgYz10azthLmN1cnJlbnQubWVtb2l6ZWRTdGF0ZS5pc0RlaHlkcmF0ZWQmJihMayhhLGIpLmZsYWdzfD0yNTYpO2E9SmsoYSxiKTsyIT09YSYmKGI9dWssdWs9YyxudWxsIT09YiYmR2ooYikpO3JldHVybiBhfWZ1bmN0aW9uIEdqKGEpe251bGw9PT11az91az1hOnVrLnB1c2guYXBwbHkodWssYSl9XG5mdW5jdGlvbiBQayhhKXtmb3IodmFyIGI9YTs7KXtpZihiLmZsYWdzJjE2Mzg0KXt2YXIgYz1iLnVwZGF0ZVF1ZXVlO2lmKG51bGwhPT1jJiYoYz1jLnN0b3JlcyxudWxsIT09YykpZm9yKHZhciBkPTA7ZDxjLmxlbmd0aDtkKyspe3ZhciBlPWNbZF0sZj1lLmdldFNuYXBzaG90O2U9ZS52YWx1ZTt0cnl7aWYoIUhlKGYoKSxlKSlyZXR1cm4hMX1jYXRjaChnKXtyZXR1cm4hMX19fWM9Yi5jaGlsZDtpZihiLnN1YnRyZWVGbGFncyYxNjM4NCYmbnVsbCE9PWMpYy5yZXR1cm49YixiPWM7ZWxzZXtpZihiPT09YSlicmVhaztmb3IoO251bGw9PT1iLnNpYmxpbmc7KXtpZihudWxsPT09Yi5yZXR1cm58fGIucmV0dXJuPT09YSlyZXR1cm4hMDtiPWIucmV0dXJufWIuc2libGluZy5yZXR1cm49Yi5yZXR1cm47Yj1iLnNpYmxpbmd9fXJldHVybiEwfVxuZnVuY3Rpb24gRGsoYSxiKXtiJj1+c2s7YiY9fnJrO2Euc3VzcGVuZGVkTGFuZXN8PWI7YS5waW5nZWRMYW5lcyY9fmI7Zm9yKGE9YS5leHBpcmF0aW9uVGltZXM7MDxiOyl7dmFyIGM9MzEtb2MoYiksZD0xPDxjO2FbY109LTE7YiY9fmR9fWZ1bmN0aW9uIEZrKGEpe2lmKDAhPT0oSyY2KSl0aHJvdyBFcnJvcihwKDMyNykpO0lrKCk7dmFyIGI9dWMoYSwwKTtpZigwPT09KGImMSkpcmV0dXJuIEVrKGEsQigpKSxudWxsO3ZhciBjPUprKGEsYik7aWYoMCE9PWEudGFnJiYyPT09Yyl7dmFyIGQ9eGMoYSk7MCE9PWQmJihiPWQsYz1PayhhLGQpKX1pZigxPT09Yyl0aHJvdyBjPXFrLExrKGEsMCksRGsoYSxiKSxFayhhLEIoKSksYztpZig2PT09Yyl0aHJvdyBFcnJvcihwKDM0NSkpO2EuZmluaXNoZWRXb3JrPWEuY3VycmVudC5hbHRlcm5hdGU7YS5maW5pc2hlZExhbmVzPWI7UWsoYSx1ayx2ayk7RWsoYSxCKCkpO3JldHVybiBudWxsfVxuZnVuY3Rpb24gUmsoYSxiKXt2YXIgYz1LO0t8PTE7dHJ5e3JldHVybiBhKGIpfWZpbmFsbHl7Sz1jLDA9PT1LJiYoSGo9QigpKzUwMCxmZyYmamcoKSl9fWZ1bmN0aW9uIFNrKGEpe251bGwhPT14ayYmMD09PXhrLnRhZyYmMD09PShLJjYpJiZJaygpO3ZhciBiPUs7S3w9MTt2YXIgYz1way50cmFuc2l0aW9uLGQ9Qzt0cnl7aWYocGsudHJhbnNpdGlvbj1udWxsLEM9MSxhKXJldHVybiBhKCl9ZmluYWxseXtDPWQscGsudHJhbnNpdGlvbj1jLEs9YiwwPT09KEsmNikmJmpnKCl9fWZ1bmN0aW9uIElqKCl7Z2o9ZmouY3VycmVudDtFKGZqKX1cbmZ1bmN0aW9uIExrKGEsYil7YS5maW5pc2hlZFdvcms9bnVsbDthLmZpbmlzaGVkTGFuZXM9MDt2YXIgYz1hLnRpbWVvdXRIYW5kbGU7LTEhPT1jJiYoYS50aW1lb3V0SGFuZGxlPS0xLEdmKGMpKTtpZihudWxsIT09WSlmb3IoYz1ZLnJldHVybjtudWxsIT09Yzspe3ZhciBkPWM7d2coZCk7c3dpdGNoKGQudGFnKXtjYXNlIDE6ZD1kLnR5cGUuY2hpbGRDb250ZXh0VHlwZXM7bnVsbCE9PWQmJnZvaWQgMCE9PWQmJiRmKCk7YnJlYWs7Y2FzZSAzOkpoKCk7RShXZik7RShIKTtPaCgpO2JyZWFrO2Nhc2UgNTpMaChkKTticmVhaztjYXNlIDQ6SmgoKTticmVhaztjYXNlIDEzOkUoTSk7YnJlYWs7Y2FzZSAxOTpFKE0pO2JyZWFrO2Nhc2UgMTA6UmcoZC50eXBlLl9jb250ZXh0KTticmVhaztjYXNlIDIyOmNhc2UgMjM6SWooKX1jPWMucmV0dXJufVI9YTtZPWE9d2goYS5jdXJyZW50LG51bGwpO1o9Z2o9YjtUPTA7cWs9bnVsbDtzaz1yaz1oaD0wO3VrPXRrPW51bGw7aWYobnVsbCE9PVdnKXtmb3IoYj1cbjA7YjxXZy5sZW5ndGg7YisrKWlmKGM9V2dbYl0sZD1jLmludGVybGVhdmVkLG51bGwhPT1kKXtjLmludGVybGVhdmVkPW51bGw7dmFyIGU9ZC5uZXh0LGY9Yy5wZW5kaW5nO2lmKG51bGwhPT1mKXt2YXIgZz1mLm5leHQ7Zi5uZXh0PWU7ZC5uZXh0PWd9Yy5wZW5kaW5nPWR9V2c9bnVsbH1yZXR1cm4gYX1cbmZ1bmN0aW9uIE5rKGEsYil7ZG97dmFyIGM9WTt0cnl7UWcoKTtQaC5jdXJyZW50PWFpO2lmKFNoKXtmb3IodmFyIGQ9Ti5tZW1vaXplZFN0YXRlO251bGwhPT1kOyl7dmFyIGU9ZC5xdWV1ZTtudWxsIT09ZSYmKGUucGVuZGluZz1udWxsKTtkPWQubmV4dH1TaD0hMX1SaD0wO1A9Tz1OPW51bGw7VGg9ITE7VWg9MDtvay5jdXJyZW50PW51bGw7aWYobnVsbD09PWN8fG51bGw9PT1jLnJldHVybil7VD0xO3FrPWI7WT1udWxsO2JyZWFrfWE6e3ZhciBmPWEsZz1jLnJldHVybixoPWMsaz1iO2I9WjtoLmZsYWdzfD0zMjc2ODtpZihudWxsIT09ayYmXCJvYmplY3RcIj09PXR5cGVvZiBrJiZcImZ1bmN0aW9uXCI9PT10eXBlb2Ygay50aGVuKXt2YXIgbD1rLG09aCxxPW0udGFnO2lmKDA9PT0obS5tb2RlJjEpJiYoMD09PXF8fDExPT09cXx8MTU9PT1xKSl7dmFyIHI9bS5hbHRlcm5hdGU7cj8obS51cGRhdGVRdWV1ZT1yLnVwZGF0ZVF1ZXVlLG0ubWVtb2l6ZWRTdGF0ZT1yLm1lbW9pemVkU3RhdGUsXG5tLmxhbmVzPXIubGFuZXMpOihtLnVwZGF0ZVF1ZXVlPW51bGwsbS5tZW1vaXplZFN0YXRlPW51bGwpfXZhciB5PVZpKGcpO2lmKG51bGwhPT15KXt5LmZsYWdzJj0tMjU3O1dpKHksZyxoLGYsYik7eS5tb2RlJjEmJlRpKGYsbCxiKTtiPXk7az1sO3ZhciBuPWIudXBkYXRlUXVldWU7aWYobnVsbD09PW4pe3ZhciB0PW5ldyBTZXQ7dC5hZGQoayk7Yi51cGRhdGVRdWV1ZT10fWVsc2Ugbi5hZGQoayk7YnJlYWsgYX1lbHNle2lmKDA9PT0oYiYxKSl7VGkoZixsLGIpO3VqKCk7YnJlYWsgYX1rPUVycm9yKHAoNDI2KSl9fWVsc2UgaWYoSSYmaC5tb2RlJjEpe3ZhciBKPVZpKGcpO2lmKG51bGwhPT1KKXswPT09KEouZmxhZ3MmNjU1MzYpJiYoSi5mbGFnc3w9MjU2KTtXaShKLGcsaCxmLGIpO0pnKEtpKGssaCkpO2JyZWFrIGF9fWY9az1LaShrLGgpOzQhPT1UJiYoVD0yKTtudWxsPT09dGs/dGs9W2ZdOnRrLnB1c2goZik7Zj1nO2Rve3N3aXRjaChmLnRhZyl7Y2FzZSAzOmYuZmxhZ3N8PTY1NTM2O1xuYiY9LWI7Zi5sYW5lc3w9Yjt2YXIgeD1PaShmLGssYik7ZmgoZix4KTticmVhayBhO2Nhc2UgMTpoPWs7dmFyIHc9Zi50eXBlLHU9Zi5zdGF0ZU5vZGU7aWYoMD09PShmLmZsYWdzJjEyOCkmJihcImZ1bmN0aW9uXCI9PT10eXBlb2Ygdy5nZXREZXJpdmVkU3RhdGVGcm9tRXJyb3J8fG51bGwhPT11JiZcImZ1bmN0aW9uXCI9PT10eXBlb2YgdS5jb21wb25lbnREaWRDYXRjaCYmKG51bGw9PT1TaXx8IVNpLmhhcyh1KSkpKXtmLmZsYWdzfD02NTUzNjtiJj0tYjtmLmxhbmVzfD1iO3ZhciBGPVJpKGYsaCxiKTtmaChmLEYpO2JyZWFrIGF9fWY9Zi5yZXR1cm59d2hpbGUobnVsbCE9PWYpfVRrKGMpfWNhdGNoKG5hKXtiPW5hO1k9PT1jJiZudWxsIT09YyYmKFk9Yz1jLnJldHVybik7Y29udGludWV9YnJlYWt9d2hpbGUoMSl9ZnVuY3Rpb24gS2soKXt2YXIgYT1uay5jdXJyZW50O25rLmN1cnJlbnQ9YWk7cmV0dXJuIG51bGw9PT1hP2FpOmF9XG5mdW5jdGlvbiB1aigpe2lmKDA9PT1UfHwzPT09VHx8Mj09PVQpVD00O251bGw9PT1SfHwwPT09KGhoJjI2ODQzNTQ1NSkmJjA9PT0ocmsmMjY4NDM1NDU1KXx8RGsoUixaKX1mdW5jdGlvbiBKayhhLGIpe3ZhciBjPUs7S3w9Mjt2YXIgZD1LaygpO2lmKFIhPT1hfHxaIT09Yil2az1udWxsLExrKGEsYik7ZG8gdHJ5e1VrKCk7YnJlYWt9Y2F0Y2goZSl7TmsoYSxlKX13aGlsZSgxKTtRZygpO0s9Yztuay5jdXJyZW50PWQ7aWYobnVsbCE9PVkpdGhyb3cgRXJyb3IocCgyNjEpKTtSPW51bGw7Wj0wO3JldHVybiBUfWZ1bmN0aW9uIFVrKCl7Zm9yKDtudWxsIT09WTspVmsoWSl9ZnVuY3Rpb24gTWsoKXtmb3IoO251bGwhPT1ZJiYhY2MoKTspVmsoWSl9ZnVuY3Rpb24gVmsoYSl7dmFyIGI9V2soYS5hbHRlcm5hdGUsYSxnaik7YS5tZW1vaXplZFByb3BzPWEucGVuZGluZ1Byb3BzO251bGw9PT1iP1RrKGEpOlk9Yjtvay5jdXJyZW50PW51bGx9XG5mdW5jdGlvbiBUayhhKXt2YXIgYj1hO2Rve3ZhciBjPWIuYWx0ZXJuYXRlO2E9Yi5yZXR1cm47aWYoMD09PShiLmZsYWdzJjMyNzY4KSl7aWYoYz1GaihjLGIsZ2opLG51bGwhPT1jKXtZPWM7cmV0dXJufX1lbHNle2M9SmooYyxiKTtpZihudWxsIT09Yyl7Yy5mbGFncyY9MzI3Njc7WT1jO3JldHVybn1pZihudWxsIT09YSlhLmZsYWdzfD0zMjc2OCxhLnN1YnRyZWVGbGFncz0wLGEuZGVsZXRpb25zPW51bGw7ZWxzZXtUPTY7WT1udWxsO3JldHVybn19Yj1iLnNpYmxpbmc7aWYobnVsbCE9PWIpe1k9YjtyZXR1cm59WT1iPWF9d2hpbGUobnVsbCE9PWIpOzA9PT1UJiYoVD01KX1mdW5jdGlvbiBRayhhLGIsYyl7dmFyIGQ9QyxlPXBrLnRyYW5zaXRpb247dHJ5e3BrLnRyYW5zaXRpb249bnVsbCxDPTEsWGsoYSxiLGMsZCl9ZmluYWxseXtway50cmFuc2l0aW9uPWUsQz1kfXJldHVybiBudWxsfVxuZnVuY3Rpb24gWGsoYSxiLGMsZCl7ZG8gSWsoKTt3aGlsZShudWxsIT09eGspO2lmKDAhPT0oSyY2KSl0aHJvdyBFcnJvcihwKDMyNykpO2M9YS5maW5pc2hlZFdvcms7dmFyIGU9YS5maW5pc2hlZExhbmVzO2lmKG51bGw9PT1jKXJldHVybiBudWxsO2EuZmluaXNoZWRXb3JrPW51bGw7YS5maW5pc2hlZExhbmVzPTA7aWYoYz09PWEuY3VycmVudCl0aHJvdyBFcnJvcihwKDE3NykpO2EuY2FsbGJhY2tOb2RlPW51bGw7YS5jYWxsYmFja1ByaW9yaXR5PTA7dmFyIGY9Yy5sYW5lc3xjLmNoaWxkTGFuZXM7QmMoYSxmKTthPT09UiYmKFk9Uj1udWxsLFo9MCk7MD09PShjLnN1YnRyZWVGbGFncyYyMDY0KSYmMD09PShjLmZsYWdzJjIwNjQpfHx3a3x8KHdrPSEwLEdrKGhjLGZ1bmN0aW9uKCl7SWsoKTtyZXR1cm4gbnVsbH0pKTtmPTAhPT0oYy5mbGFncyYxNTk5MCk7aWYoMCE9PShjLnN1YnRyZWVGbGFncyYxNTk5MCl8fGYpe2Y9cGsudHJhbnNpdGlvbjtway50cmFuc2l0aW9uPW51bGw7XG52YXIgZz1DO0M9MTt2YXIgaD1LO0t8PTQ7b2suY3VycmVudD1udWxsO1BqKGEsYyk7ZWsoYyxhKTtPZShEZik7ZGQ9ISFDZjtEZj1DZj1udWxsO2EuY3VycmVudD1jO2lrKGMsYSxlKTtkYygpO0s9aDtDPWc7cGsudHJhbnNpdGlvbj1mfWVsc2UgYS5jdXJyZW50PWM7d2smJih3az0hMSx4az1hLHlrPWUpO2Y9YS5wZW5kaW5nTGFuZXM7MD09PWYmJihTaT1udWxsKTttYyhjLnN0YXRlTm9kZSxkKTtFayhhLEIoKSk7aWYobnVsbCE9PWIpZm9yKGQ9YS5vblJlY292ZXJhYmxlRXJyb3IsYz0wO2M8Yi5sZW5ndGg7YysrKWU9YltjXSxkKGUudmFsdWUse2NvbXBvbmVudFN0YWNrOmUuc3RhY2ssZGlnZXN0OmUuZGlnZXN0fSk7aWYoUGkpdGhyb3cgUGk9ITEsYT1RaSxRaT1udWxsLGE7MCE9PSh5ayYxKSYmMCE9PWEudGFnJiZJaygpO2Y9YS5wZW5kaW5nTGFuZXM7MCE9PShmJjEpP2E9PT1Baz96aysrOih6az0wLEFrPWEpOnprPTA7amcoKTtyZXR1cm4gbnVsbH1cbmZ1bmN0aW9uIElrKCl7aWYobnVsbCE9PXhrKXt2YXIgYT1EYyh5ayksYj1way50cmFuc2l0aW9uLGM9Qzt0cnl7cGsudHJhbnNpdGlvbj1udWxsO0M9MTY+YT8xNjphO2lmKG51bGw9PT14ayl2YXIgZD0hMTtlbHNle2E9eGs7eGs9bnVsbDt5az0wO2lmKDAhPT0oSyY2KSl0aHJvdyBFcnJvcihwKDMzMSkpO3ZhciBlPUs7S3w9NDtmb3IoVj1hLmN1cnJlbnQ7bnVsbCE9PVY7KXt2YXIgZj1WLGc9Zi5jaGlsZDtpZigwIT09KFYuZmxhZ3MmMTYpKXt2YXIgaD1mLmRlbGV0aW9ucztpZihudWxsIT09aCl7Zm9yKHZhciBrPTA7azxoLmxlbmd0aDtrKyspe3ZhciBsPWhba107Zm9yKFY9bDtudWxsIT09Vjspe3ZhciBtPVY7c3dpdGNoKG0udGFnKXtjYXNlIDA6Y2FzZSAxMTpjYXNlIDE1OlFqKDgsbSxmKX12YXIgcT1tLmNoaWxkO2lmKG51bGwhPT1xKXEucmV0dXJuPW0sVj1xO2Vsc2UgZm9yKDtudWxsIT09Vjspe209Vjt2YXIgcj1tLnNpYmxpbmcseT1tLnJldHVybjtUaihtKTtpZihtPT09XG5sKXtWPW51bGw7YnJlYWt9aWYobnVsbCE9PXIpe3IucmV0dXJuPXk7Vj1yO2JyZWFrfVY9eX19fXZhciBuPWYuYWx0ZXJuYXRlO2lmKG51bGwhPT1uKXt2YXIgdD1uLmNoaWxkO2lmKG51bGwhPT10KXtuLmNoaWxkPW51bGw7ZG97dmFyIEo9dC5zaWJsaW5nO3Quc2libGluZz1udWxsO3Q9Sn13aGlsZShudWxsIT09dCl9fVY9Zn19aWYoMCE9PShmLnN1YnRyZWVGbGFncyYyMDY0KSYmbnVsbCE9PWcpZy5yZXR1cm49ZixWPWc7ZWxzZSBiOmZvcig7bnVsbCE9PVY7KXtmPVY7aWYoMCE9PShmLmZsYWdzJjIwNDgpKXN3aXRjaChmLnRhZyl7Y2FzZSAwOmNhc2UgMTE6Y2FzZSAxNTpRaig5LGYsZi5yZXR1cm4pfXZhciB4PWYuc2libGluZztpZihudWxsIT09eCl7eC5yZXR1cm49Zi5yZXR1cm47Vj14O2JyZWFrIGJ9Vj1mLnJldHVybn19dmFyIHc9YS5jdXJyZW50O2ZvcihWPXc7bnVsbCE9PVY7KXtnPVY7dmFyIHU9Zy5jaGlsZDtpZigwIT09KGcuc3VidHJlZUZsYWdzJjIwNjQpJiZudWxsIT09XG51KXUucmV0dXJuPWcsVj11O2Vsc2UgYjpmb3IoZz13O251bGwhPT1WOyl7aD1WO2lmKDAhPT0oaC5mbGFncyYyMDQ4KSl0cnl7c3dpdGNoKGgudGFnKXtjYXNlIDA6Y2FzZSAxMTpjYXNlIDE1OlJqKDksaCl9fWNhdGNoKG5hKXtXKGgsaC5yZXR1cm4sbmEpfWlmKGg9PT1nKXtWPW51bGw7YnJlYWsgYn12YXIgRj1oLnNpYmxpbmc7aWYobnVsbCE9PUYpe0YucmV0dXJuPWgucmV0dXJuO1Y9RjticmVhayBifVY9aC5yZXR1cm59fUs9ZTtqZygpO2lmKGxjJiZcImZ1bmN0aW9uXCI9PT10eXBlb2YgbGMub25Qb3N0Q29tbWl0RmliZXJSb290KXRyeXtsYy5vblBvc3RDb21taXRGaWJlclJvb3Qoa2MsYSl9Y2F0Y2gobmEpe31kPSEwfXJldHVybiBkfWZpbmFsbHl7Qz1jLHBrLnRyYW5zaXRpb249Yn19cmV0dXJuITF9ZnVuY3Rpb24gWWsoYSxiLGMpe2I9S2koYyxiKTtiPU9pKGEsYiwxKTthPWRoKGEsYiwxKTtiPUwoKTtudWxsIT09YSYmKEFjKGEsMSxiKSxFayhhLGIpKX1cbmZ1bmN0aW9uIFcoYSxiLGMpe2lmKDM9PT1hLnRhZylZayhhLGEsYyk7ZWxzZSBmb3IoO251bGwhPT1iOyl7aWYoMz09PWIudGFnKXtZayhiLGEsYyk7YnJlYWt9ZWxzZSBpZigxPT09Yi50YWcpe3ZhciBkPWIuc3RhdGVOb2RlO2lmKFwiZnVuY3Rpb25cIj09PXR5cGVvZiBiLnR5cGUuZ2V0RGVyaXZlZFN0YXRlRnJvbUVycm9yfHxcImZ1bmN0aW9uXCI9PT10eXBlb2YgZC5jb21wb25lbnREaWRDYXRjaCYmKG51bGw9PT1TaXx8IVNpLmhhcyhkKSkpe2E9S2koYyxhKTthPVJpKGIsYSwxKTtiPWRoKGIsYSwxKTthPUwoKTtudWxsIT09YiYmKEFjKGIsMSxhKSxFayhiLGEpKTticmVha319Yj1iLnJldHVybn19XG5mdW5jdGlvbiBVaShhLGIsYyl7dmFyIGQ9YS5waW5nQ2FjaGU7bnVsbCE9PWQmJmQuZGVsZXRlKGIpO2I9TCgpO2EucGluZ2VkTGFuZXN8PWEuc3VzcGVuZGVkTGFuZXMmYztSPT09YSYmKFomYyk9PT1jJiYoND09PVR8fDM9PT1UJiYoWiYxMzAwMjM0MjQpPT09WiYmNTAwPkIoKS1naz9MayhhLDApOnNrfD1jKTtFayhhLGIpfWZ1bmN0aW9uIFprKGEsYil7MD09PWImJigwPT09KGEubW9kZSYxKT9iPTE6KGI9c2Msc2M8PD0xLDA9PT0oc2MmMTMwMDIzNDI0KSYmKHNjPTQxOTQzMDQpKSk7dmFyIGM9TCgpO2E9WmcoYSxiKTtudWxsIT09YSYmKEFjKGEsYixjKSxFayhhLGMpKX1mdW5jdGlvbiB2aihhKXt2YXIgYj1hLm1lbW9pemVkU3RhdGUsYz0wO251bGwhPT1iJiYoYz1iLnJldHJ5TGFuZSk7WmsoYSxjKX1cbmZ1bmN0aW9uIGNrKGEsYil7dmFyIGM9MDtzd2l0Y2goYS50YWcpe2Nhc2UgMTM6dmFyIGQ9YS5zdGF0ZU5vZGU7dmFyIGU9YS5tZW1vaXplZFN0YXRlO251bGwhPT1lJiYoYz1lLnJldHJ5TGFuZSk7YnJlYWs7Y2FzZSAxOTpkPWEuc3RhdGVOb2RlO2JyZWFrO2RlZmF1bHQ6dGhyb3cgRXJyb3IocCgzMTQpKTt9bnVsbCE9PWQmJmQuZGVsZXRlKGIpO1prKGEsYyl9dmFyIFdrO1xuV2s9ZnVuY3Rpb24oYSxiLGMpe2lmKG51bGwhPT1hKWlmKGEubWVtb2l6ZWRQcm9wcyE9PWIucGVuZGluZ1Byb3BzfHxXZi5jdXJyZW50KVVnPSEwO2Vsc2V7aWYoMD09PShhLmxhbmVzJmMpJiYwPT09KGIuZmxhZ3MmMTI4KSlyZXR1cm4gVWc9ITEsemooYSxiLGMpO1VnPTAhPT0oYS5mbGFncyYxMzEwNzIpPyEwOiExfWVsc2UgVWc9ITEsSSYmMCE9PShiLmZsYWdzJjEwNDg1NzYpJiZ1ZyhiLG5nLGIuaW5kZXgpO2IubGFuZXM9MDtzd2l0Y2goYi50YWcpe2Nhc2UgMjp2YXIgZD1iLnR5cGU7amooYSxiKTthPWIucGVuZGluZ1Byb3BzO3ZhciBlPVlmKGIsSC5jdXJyZW50KTtUZyhiLGMpO2U9WGgobnVsbCxiLGQsYSxlLGMpO3ZhciBmPWJpKCk7Yi5mbGFnc3w9MTtcIm9iamVjdFwiPT09dHlwZW9mIGUmJm51bGwhPT1lJiZcImZ1bmN0aW9uXCI9PT10eXBlb2YgZS5yZW5kZXImJnZvaWQgMD09PWUuJCR0eXBlb2Y/KGIudGFnPTEsYi5tZW1vaXplZFN0YXRlPW51bGwsYi51cGRhdGVRdWV1ZT1cbm51bGwsWmYoZCk/KGY9ITAsY2coYikpOmY9ITEsYi5tZW1vaXplZFN0YXRlPW51bGwhPT1lLnN0YXRlJiZ2b2lkIDAhPT1lLnN0YXRlP2Uuc3RhdGU6bnVsbCxhaChiKSxlLnVwZGF0ZXI9bmgsYi5zdGF0ZU5vZGU9ZSxlLl9yZWFjdEludGVybmFscz1iLHJoKGIsZCxhLGMpLGI9a2oobnVsbCxiLGQsITAsZixjKSk6KGIudGFnPTAsSSYmZiYmdmcoYiksWWkobnVsbCxiLGUsYyksYj1iLmNoaWxkKTtyZXR1cm4gYjtjYXNlIDE2OmQ9Yi5lbGVtZW50VHlwZTthOntqaihhLGIpO2E9Yi5wZW5kaW5nUHJvcHM7ZT1kLl9pbml0O2Q9ZShkLl9wYXlsb2FkKTtiLnR5cGU9ZDtlPWIudGFnPSRrKGQpO2E9TGcoZCxhKTtzd2l0Y2goZSl7Y2FzZSAwOmI9ZGoobnVsbCxiLGQsYSxjKTticmVhayBhO2Nhc2UgMTpiPWlqKG51bGwsYixkLGEsYyk7YnJlYWsgYTtjYXNlIDExOmI9WmkobnVsbCxiLGQsYSxjKTticmVhayBhO2Nhc2UgMTQ6Yj1haihudWxsLGIsZCxMZyhkLnR5cGUsYSksYyk7YnJlYWsgYX10aHJvdyBFcnJvcihwKDMwNixcbmQsXCJcIikpO31yZXR1cm4gYjtjYXNlIDA6cmV0dXJuIGQ9Yi50eXBlLGU9Yi5wZW5kaW5nUHJvcHMsZT1iLmVsZW1lbnRUeXBlPT09ZD9lOkxnKGQsZSksZGooYSxiLGQsZSxjKTtjYXNlIDE6cmV0dXJuIGQ9Yi50eXBlLGU9Yi5wZW5kaW5nUHJvcHMsZT1iLmVsZW1lbnRUeXBlPT09ZD9lOkxnKGQsZSksaWooYSxiLGQsZSxjKTtjYXNlIDM6YTp7bGooYik7aWYobnVsbD09PWEpdGhyb3cgRXJyb3IocCgzODcpKTtkPWIucGVuZGluZ1Byb3BzO2Y9Yi5tZW1vaXplZFN0YXRlO2U9Zi5lbGVtZW50O2JoKGEsYik7Z2goYixkLG51bGwsYyk7dmFyIGc9Yi5tZW1vaXplZFN0YXRlO2Q9Zy5lbGVtZW50O2lmKGYuaXNEZWh5ZHJhdGVkKWlmKGY9e2VsZW1lbnQ6ZCxpc0RlaHlkcmF0ZWQ6ITEsY2FjaGU6Zy5jYWNoZSxwZW5kaW5nU3VzcGVuc2VCb3VuZGFyaWVzOmcucGVuZGluZ1N1c3BlbnNlQm91bmRhcmllcyx0cmFuc2l0aW9uczpnLnRyYW5zaXRpb25zfSxiLnVwZGF0ZVF1ZXVlLmJhc2VTdGF0ZT1cbmYsYi5tZW1vaXplZFN0YXRlPWYsYi5mbGFncyYyNTYpe2U9S2koRXJyb3IocCg0MjMpKSxiKTtiPW1qKGEsYixkLGMsZSk7YnJlYWsgYX1lbHNlIGlmKGQhPT1lKXtlPUtpKEVycm9yKHAoNDI0KSksYik7Yj1taihhLGIsZCxjLGUpO2JyZWFrIGF9ZWxzZSBmb3IoeWc9TGYoYi5zdGF0ZU5vZGUuY29udGFpbmVySW5mby5maXJzdENoaWxkKSx4Zz1iLEk9ITAsemc9bnVsbCxjPUNoKGIsbnVsbCxkLGMpLGIuY2hpbGQ9YztjOyljLmZsYWdzPWMuZmxhZ3MmLTN8NDA5NixjPWMuc2libGluZztlbHNle0lnKCk7aWYoZD09PWUpe2I9JGkoYSxiLGMpO2JyZWFrIGF9WWkoYSxiLGQsYyl9Yj1iLmNoaWxkfXJldHVybiBiO2Nhc2UgNTpyZXR1cm4gS2goYiksbnVsbD09PWEmJkVnKGIpLGQ9Yi50eXBlLGU9Yi5wZW5kaW5nUHJvcHMsZj1udWxsIT09YT9hLm1lbW9pemVkUHJvcHM6bnVsbCxnPWUuY2hpbGRyZW4sRWYoZCxlKT9nPW51bGw6bnVsbCE9PWYmJkVmKGQsZikmJihiLmZsYWdzfD0zMiksXG5oaihhLGIpLFlpKGEsYixnLGMpLGIuY2hpbGQ7Y2FzZSA2OnJldHVybiBudWxsPT09YSYmRWcoYiksbnVsbDtjYXNlIDEzOnJldHVybiBwaihhLGIsYyk7Y2FzZSA0OnJldHVybiBJaChiLGIuc3RhdGVOb2RlLmNvbnRhaW5lckluZm8pLGQ9Yi5wZW5kaW5nUHJvcHMsbnVsbD09PWE/Yi5jaGlsZD1CaChiLG51bGwsZCxjKTpZaShhLGIsZCxjKSxiLmNoaWxkO2Nhc2UgMTE6cmV0dXJuIGQ9Yi50eXBlLGU9Yi5wZW5kaW5nUHJvcHMsZT1iLmVsZW1lbnRUeXBlPT09ZD9lOkxnKGQsZSksWmkoYSxiLGQsZSxjKTtjYXNlIDc6cmV0dXJuIFlpKGEsYixiLnBlbmRpbmdQcm9wcyxjKSxiLmNoaWxkO2Nhc2UgODpyZXR1cm4gWWkoYSxiLGIucGVuZGluZ1Byb3BzLmNoaWxkcmVuLGMpLGIuY2hpbGQ7Y2FzZSAxMjpyZXR1cm4gWWkoYSxiLGIucGVuZGluZ1Byb3BzLmNoaWxkcmVuLGMpLGIuY2hpbGQ7Y2FzZSAxMDphOntkPWIudHlwZS5fY29udGV4dDtlPWIucGVuZGluZ1Byb3BzO2Y9Yi5tZW1vaXplZFByb3BzO1xuZz1lLnZhbHVlO0coTWcsZC5fY3VycmVudFZhbHVlKTtkLl9jdXJyZW50VmFsdWU9ZztpZihudWxsIT09ZilpZihIZShmLnZhbHVlLGcpKXtpZihmLmNoaWxkcmVuPT09ZS5jaGlsZHJlbiYmIVdmLmN1cnJlbnQpe2I9JGkoYSxiLGMpO2JyZWFrIGF9fWVsc2UgZm9yKGY9Yi5jaGlsZCxudWxsIT09ZiYmKGYucmV0dXJuPWIpO251bGwhPT1mOyl7dmFyIGg9Zi5kZXBlbmRlbmNpZXM7aWYobnVsbCE9PWgpe2c9Zi5jaGlsZDtmb3IodmFyIGs9aC5maXJzdENvbnRleHQ7bnVsbCE9PWs7KXtpZihrLmNvbnRleHQ9PT1kKXtpZigxPT09Zi50YWcpe2s9Y2goLTEsYyYtYyk7ay50YWc9Mjt2YXIgbD1mLnVwZGF0ZVF1ZXVlO2lmKG51bGwhPT1sKXtsPWwuc2hhcmVkO3ZhciBtPWwucGVuZGluZztudWxsPT09bT9rLm5leHQ9azooay5uZXh0PW0ubmV4dCxtLm5leHQ9ayk7bC5wZW5kaW5nPWt9fWYubGFuZXN8PWM7az1mLmFsdGVybmF0ZTtudWxsIT09ayYmKGsubGFuZXN8PWMpO1NnKGYucmV0dXJuLFxuYyxiKTtoLmxhbmVzfD1jO2JyZWFrfWs9ay5uZXh0fX1lbHNlIGlmKDEwPT09Zi50YWcpZz1mLnR5cGU9PT1iLnR5cGU/bnVsbDpmLmNoaWxkO2Vsc2UgaWYoMTg9PT1mLnRhZyl7Zz1mLnJldHVybjtpZihudWxsPT09Zyl0aHJvdyBFcnJvcihwKDM0MSkpO2cubGFuZXN8PWM7aD1nLmFsdGVybmF0ZTtudWxsIT09aCYmKGgubGFuZXN8PWMpO1NnKGcsYyxiKTtnPWYuc2libGluZ31lbHNlIGc9Zi5jaGlsZDtpZihudWxsIT09ZylnLnJldHVybj1mO2Vsc2UgZm9yKGc9ZjtudWxsIT09Zzspe2lmKGc9PT1iKXtnPW51bGw7YnJlYWt9Zj1nLnNpYmxpbmc7aWYobnVsbCE9PWYpe2YucmV0dXJuPWcucmV0dXJuO2c9ZjticmVha31nPWcucmV0dXJufWY9Z31ZaShhLGIsZS5jaGlsZHJlbixjKTtiPWIuY2hpbGR9cmV0dXJuIGI7Y2FzZSA5OnJldHVybiBlPWIudHlwZSxkPWIucGVuZGluZ1Byb3BzLmNoaWxkcmVuLFRnKGIsYyksZT1WZyhlKSxkPWQoZSksYi5mbGFnc3w9MSxZaShhLGIsZCxjKSxcbmIuY2hpbGQ7Y2FzZSAxNDpyZXR1cm4gZD1iLnR5cGUsZT1MZyhkLGIucGVuZGluZ1Byb3BzKSxlPUxnKGQudHlwZSxlKSxhaihhLGIsZCxlLGMpO2Nhc2UgMTU6cmV0dXJuIGNqKGEsYixiLnR5cGUsYi5wZW5kaW5nUHJvcHMsYyk7Y2FzZSAxNzpyZXR1cm4gZD1iLnR5cGUsZT1iLnBlbmRpbmdQcm9wcyxlPWIuZWxlbWVudFR5cGU9PT1kP2U6TGcoZCxlKSxqaihhLGIpLGIudGFnPTEsWmYoZCk/KGE9ITAsY2coYikpOmE9ITEsVGcoYixjKSxwaChiLGQsZSkscmgoYixkLGUsYyksa2oobnVsbCxiLGQsITAsYSxjKTtjYXNlIDE5OnJldHVybiB5aihhLGIsYyk7Y2FzZSAyMjpyZXR1cm4gZWooYSxiLGMpfXRocm93IEVycm9yKHAoMTU2LGIudGFnKSk7fTtmdW5jdGlvbiBHayhhLGIpe3JldHVybiBhYyhhLGIpfVxuZnVuY3Rpb24gYWwoYSxiLGMsZCl7dGhpcy50YWc9YTt0aGlzLmtleT1jO3RoaXMuc2libGluZz10aGlzLmNoaWxkPXRoaXMucmV0dXJuPXRoaXMuc3RhdGVOb2RlPXRoaXMudHlwZT10aGlzLmVsZW1lbnRUeXBlPW51bGw7dGhpcy5pbmRleD0wO3RoaXMucmVmPW51bGw7dGhpcy5wZW5kaW5nUHJvcHM9Yjt0aGlzLmRlcGVuZGVuY2llcz10aGlzLm1lbW9pemVkU3RhdGU9dGhpcy51cGRhdGVRdWV1ZT10aGlzLm1lbW9pemVkUHJvcHM9bnVsbDt0aGlzLm1vZGU9ZDt0aGlzLnN1YnRyZWVGbGFncz10aGlzLmZsYWdzPTA7dGhpcy5kZWxldGlvbnM9bnVsbDt0aGlzLmNoaWxkTGFuZXM9dGhpcy5sYW5lcz0wO3RoaXMuYWx0ZXJuYXRlPW51bGx9ZnVuY3Rpb24gQmcoYSxiLGMsZCl7cmV0dXJuIG5ldyBhbChhLGIsYyxkKX1mdW5jdGlvbiBiaihhKXthPWEucHJvdG90eXBlO3JldHVybiEoIWF8fCFhLmlzUmVhY3RDb21wb25lbnQpfVxuZnVuY3Rpb24gJGsoYSl7aWYoXCJmdW5jdGlvblwiPT09dHlwZW9mIGEpcmV0dXJuIGJqKGEpPzE6MDtpZih2b2lkIDAhPT1hJiZudWxsIT09YSl7YT1hLiQkdHlwZW9mO2lmKGE9PT1EYSlyZXR1cm4gMTE7aWYoYT09PUdhKXJldHVybiAxNH1yZXR1cm4gMn1cbmZ1bmN0aW9uIHdoKGEsYil7dmFyIGM9YS5hbHRlcm5hdGU7bnVsbD09PWM/KGM9QmcoYS50YWcsYixhLmtleSxhLm1vZGUpLGMuZWxlbWVudFR5cGU9YS5lbGVtZW50VHlwZSxjLnR5cGU9YS50eXBlLGMuc3RhdGVOb2RlPWEuc3RhdGVOb2RlLGMuYWx0ZXJuYXRlPWEsYS5hbHRlcm5hdGU9Yyk6KGMucGVuZGluZ1Byb3BzPWIsYy50eXBlPWEudHlwZSxjLmZsYWdzPTAsYy5zdWJ0cmVlRmxhZ3M9MCxjLmRlbGV0aW9ucz1udWxsKTtjLmZsYWdzPWEuZmxhZ3MmMTQ2ODAwNjQ7Yy5jaGlsZExhbmVzPWEuY2hpbGRMYW5lcztjLmxhbmVzPWEubGFuZXM7Yy5jaGlsZD1hLmNoaWxkO2MubWVtb2l6ZWRQcm9wcz1hLm1lbW9pemVkUHJvcHM7Yy5tZW1vaXplZFN0YXRlPWEubWVtb2l6ZWRTdGF0ZTtjLnVwZGF0ZVF1ZXVlPWEudXBkYXRlUXVldWU7Yj1hLmRlcGVuZGVuY2llcztjLmRlcGVuZGVuY2llcz1udWxsPT09Yj9udWxsOntsYW5lczpiLmxhbmVzLGZpcnN0Q29udGV4dDpiLmZpcnN0Q29udGV4dH07XG5jLnNpYmxpbmc9YS5zaWJsaW5nO2MuaW5kZXg9YS5pbmRleDtjLnJlZj1hLnJlZjtyZXR1cm4gY31cbmZ1bmN0aW9uIHloKGEsYixjLGQsZSxmKXt2YXIgZz0yO2Q9YTtpZihcImZ1bmN0aW9uXCI9PT10eXBlb2YgYSliaihhKSYmKGc9MSk7ZWxzZSBpZihcInN0cmluZ1wiPT09dHlwZW9mIGEpZz01O2Vsc2UgYTpzd2l0Y2goYSl7Y2FzZSB5YTpyZXR1cm4gQWgoYy5jaGlsZHJlbixlLGYsYik7Y2FzZSB6YTpnPTg7ZXw9ODticmVhaztjYXNlIEFhOnJldHVybiBhPUJnKDEyLGMsYixlfDIpLGEuZWxlbWVudFR5cGU9QWEsYS5sYW5lcz1mLGE7Y2FzZSBFYTpyZXR1cm4gYT1CZygxMyxjLGIsZSksYS5lbGVtZW50VHlwZT1FYSxhLmxhbmVzPWYsYTtjYXNlIEZhOnJldHVybiBhPUJnKDE5LGMsYixlKSxhLmVsZW1lbnRUeXBlPUZhLGEubGFuZXM9ZixhO2Nhc2UgSWE6cmV0dXJuIHFqKGMsZSxmLGIpO2RlZmF1bHQ6aWYoXCJvYmplY3RcIj09PXR5cGVvZiBhJiZudWxsIT09YSlzd2l0Y2goYS4kJHR5cGVvZil7Y2FzZSBCYTpnPTEwO2JyZWFrIGE7Y2FzZSBDYTpnPTk7YnJlYWsgYTtjYXNlIERhOmc9MTE7XG5icmVhayBhO2Nhc2UgR2E6Zz0xNDticmVhayBhO2Nhc2UgSGE6Zz0xNjtkPW51bGw7YnJlYWsgYX10aHJvdyBFcnJvcihwKDEzMCxudWxsPT1hP2E6dHlwZW9mIGEsXCJcIikpO31iPUJnKGcsYyxiLGUpO2IuZWxlbWVudFR5cGU9YTtiLnR5cGU9ZDtiLmxhbmVzPWY7cmV0dXJuIGJ9ZnVuY3Rpb24gQWgoYSxiLGMsZCl7YT1CZyg3LGEsZCxiKTthLmxhbmVzPWM7cmV0dXJuIGF9ZnVuY3Rpb24gcWooYSxiLGMsZCl7YT1CZygyMixhLGQsYik7YS5lbGVtZW50VHlwZT1JYTthLmxhbmVzPWM7YS5zdGF0ZU5vZGU9e2lzSGlkZGVuOiExfTtyZXR1cm4gYX1mdW5jdGlvbiB4aChhLGIsYyl7YT1CZyg2LGEsbnVsbCxiKTthLmxhbmVzPWM7cmV0dXJuIGF9XG5mdW5jdGlvbiB6aChhLGIsYyl7Yj1CZyg0LG51bGwhPT1hLmNoaWxkcmVuP2EuY2hpbGRyZW46W10sYS5rZXksYik7Yi5sYW5lcz1jO2Iuc3RhdGVOb2RlPXtjb250YWluZXJJbmZvOmEuY29udGFpbmVySW5mbyxwZW5kaW5nQ2hpbGRyZW46bnVsbCxpbXBsZW1lbnRhdGlvbjphLmltcGxlbWVudGF0aW9ufTtyZXR1cm4gYn1cbmZ1bmN0aW9uIGJsKGEsYixjLGQsZSl7dGhpcy50YWc9Yjt0aGlzLmNvbnRhaW5lckluZm89YTt0aGlzLmZpbmlzaGVkV29yaz10aGlzLnBpbmdDYWNoZT10aGlzLmN1cnJlbnQ9dGhpcy5wZW5kaW5nQ2hpbGRyZW49bnVsbDt0aGlzLnRpbWVvdXRIYW5kbGU9LTE7dGhpcy5jYWxsYmFja05vZGU9dGhpcy5wZW5kaW5nQ29udGV4dD10aGlzLmNvbnRleHQ9bnVsbDt0aGlzLmNhbGxiYWNrUHJpb3JpdHk9MDt0aGlzLmV2ZW50VGltZXM9emMoMCk7dGhpcy5leHBpcmF0aW9uVGltZXM9emMoLTEpO3RoaXMuZW50YW5nbGVkTGFuZXM9dGhpcy5maW5pc2hlZExhbmVzPXRoaXMubXV0YWJsZVJlYWRMYW5lcz10aGlzLmV4cGlyZWRMYW5lcz10aGlzLnBpbmdlZExhbmVzPXRoaXMuc3VzcGVuZGVkTGFuZXM9dGhpcy5wZW5kaW5nTGFuZXM9MDt0aGlzLmVudGFuZ2xlbWVudHM9emMoMCk7dGhpcy5pZGVudGlmaWVyUHJlZml4PWQ7dGhpcy5vblJlY292ZXJhYmxlRXJyb3I9ZTt0aGlzLm11dGFibGVTb3VyY2VFYWdlckh5ZHJhdGlvbkRhdGE9XG5udWxsfWZ1bmN0aW9uIGNsKGEsYixjLGQsZSxmLGcsaCxrKXthPW5ldyBibChhLGIsYyxoLGspOzE9PT1iPyhiPTEsITA9PT1mJiYoYnw9OCkpOmI9MDtmPUJnKDMsbnVsbCxudWxsLGIpO2EuY3VycmVudD1mO2Yuc3RhdGVOb2RlPWE7Zi5tZW1vaXplZFN0YXRlPXtlbGVtZW50OmQsaXNEZWh5ZHJhdGVkOmMsY2FjaGU6bnVsbCx0cmFuc2l0aW9uczpudWxsLHBlbmRpbmdTdXNwZW5zZUJvdW5kYXJpZXM6bnVsbH07YWgoZik7cmV0dXJuIGF9ZnVuY3Rpb24gZGwoYSxiLGMpe3ZhciBkPTM8YXJndW1lbnRzLmxlbmd0aCYmdm9pZCAwIT09YXJndW1lbnRzWzNdP2FyZ3VtZW50c1szXTpudWxsO3JldHVybnskJHR5cGVvZjp3YSxrZXk6bnVsbD09ZD9udWxsOlwiXCIrZCxjaGlsZHJlbjphLGNvbnRhaW5lckluZm86YixpbXBsZW1lbnRhdGlvbjpjfX1cbmZ1bmN0aW9uIGVsKGEpe2lmKCFhKXJldHVybiBWZjthPWEuX3JlYWN0SW50ZXJuYWxzO2E6e2lmKFZiKGEpIT09YXx8MSE9PWEudGFnKXRocm93IEVycm9yKHAoMTcwKSk7dmFyIGI9YTtkb3tzd2l0Y2goYi50YWcpe2Nhc2UgMzpiPWIuc3RhdGVOb2RlLmNvbnRleHQ7YnJlYWsgYTtjYXNlIDE6aWYoWmYoYi50eXBlKSl7Yj1iLnN0YXRlTm9kZS5fX3JlYWN0SW50ZXJuYWxNZW1vaXplZE1lcmdlZENoaWxkQ29udGV4dDticmVhayBhfX1iPWIucmV0dXJufXdoaWxlKG51bGwhPT1iKTt0aHJvdyBFcnJvcihwKDE3MSkpO31pZigxPT09YS50YWcpe3ZhciBjPWEudHlwZTtpZihaZihjKSlyZXR1cm4gYmcoYSxjLGIpfXJldHVybiBifVxuZnVuY3Rpb24gZmwoYSxiLGMsZCxlLGYsZyxoLGspe2E9Y2woYyxkLCEwLGEsZSxmLGcsaCxrKTthLmNvbnRleHQ9ZWwobnVsbCk7Yz1hLmN1cnJlbnQ7ZD1MKCk7ZT1saChjKTtmPWNoKGQsZSk7Zi5jYWxsYmFjaz12b2lkIDAhPT1iJiZudWxsIT09Yj9iOm51bGw7ZGgoYyxmLGUpO2EuY3VycmVudC5sYW5lcz1lO0FjKGEsZSxkKTtFayhhLGQpO3JldHVybiBhfWZ1bmN0aW9uIGdsKGEsYixjLGQpe3ZhciBlPWIuY3VycmVudCxmPUwoKSxnPWxoKGUpO2M9ZWwoYyk7bnVsbD09PWIuY29udGV4dD9iLmNvbnRleHQ9YzpiLnBlbmRpbmdDb250ZXh0PWM7Yj1jaChmLGcpO2IucGF5bG9hZD17ZWxlbWVudDphfTtkPXZvaWQgMD09PWQ/bnVsbDpkO251bGwhPT1kJiYoYi5jYWxsYmFjaz1kKTthPWRoKGUsYixnKTtudWxsIT09YSYmKG1oKGEsZSxnLGYpLGVoKGEsZSxnKSk7cmV0dXJuIGd9XG5mdW5jdGlvbiBobChhKXthPWEuY3VycmVudDtpZighYS5jaGlsZClyZXR1cm4gbnVsbDtzd2l0Y2goYS5jaGlsZC50YWcpe2Nhc2UgNTpyZXR1cm4gYS5jaGlsZC5zdGF0ZU5vZGU7ZGVmYXVsdDpyZXR1cm4gYS5jaGlsZC5zdGF0ZU5vZGV9fWZ1bmN0aW9uIGlsKGEsYil7YT1hLm1lbW9pemVkU3RhdGU7aWYobnVsbCE9PWEmJm51bGwhPT1hLmRlaHlkcmF0ZWQpe3ZhciBjPWEucmV0cnlMYW5lO2EucmV0cnlMYW5lPTAhPT1jJiZjPGI/YzpifX1mdW5jdGlvbiBqbChhLGIpe2lsKGEsYik7KGE9YS5hbHRlcm5hdGUpJiZpbChhLGIpfWZ1bmN0aW9uIGtsKCl7cmV0dXJuIG51bGx9dmFyIGxsPVwiZnVuY3Rpb25cIj09PXR5cGVvZiByZXBvcnRFcnJvcj9yZXBvcnRFcnJvcjpmdW5jdGlvbihhKXtjb25zb2xlLmVycm9yKGEpfTtmdW5jdGlvbiBtbChhKXt0aGlzLl9pbnRlcm5hbFJvb3Q9YX1cbm5sLnByb3RvdHlwZS5yZW5kZXI9bWwucHJvdG90eXBlLnJlbmRlcj1mdW5jdGlvbihhKXt2YXIgYj10aGlzLl9pbnRlcm5hbFJvb3Q7aWYobnVsbD09PWIpdGhyb3cgRXJyb3IocCg0MDkpKTtnbChhLGIsbnVsbCxudWxsKX07bmwucHJvdG90eXBlLnVubW91bnQ9bWwucHJvdG90eXBlLnVubW91bnQ9ZnVuY3Rpb24oKXt2YXIgYT10aGlzLl9pbnRlcm5hbFJvb3Q7aWYobnVsbCE9PWEpe3RoaXMuX2ludGVybmFsUm9vdD1udWxsO3ZhciBiPWEuY29udGFpbmVySW5mbztTayhmdW5jdGlvbigpe2dsKG51bGwsYSxudWxsLG51bGwpfSk7Ylt1Zl09bnVsbH19O2Z1bmN0aW9uIG5sKGEpe3RoaXMuX2ludGVybmFsUm9vdD1hfVxubmwucHJvdG90eXBlLnVuc3RhYmxlX3NjaGVkdWxlSHlkcmF0aW9uPWZ1bmN0aW9uKGEpe2lmKGEpe3ZhciBiPUhjKCk7YT17YmxvY2tlZE9uOm51bGwsdGFyZ2V0OmEscHJpb3JpdHk6Yn07Zm9yKHZhciBjPTA7YzxRYy5sZW5ndGgmJjAhPT1iJiZiPFFjW2NdLnByaW9yaXR5O2MrKyk7UWMuc3BsaWNlKGMsMCxhKTswPT09YyYmVmMoYSl9fTtmdW5jdGlvbiBvbChhKXtyZXR1cm4hKCFhfHwxIT09YS5ub2RlVHlwZSYmOSE9PWEubm9kZVR5cGUmJjExIT09YS5ub2RlVHlwZSl9ZnVuY3Rpb24gcGwoYSl7cmV0dXJuISghYXx8MSE9PWEubm9kZVR5cGUmJjkhPT1hLm5vZGVUeXBlJiYxMSE9PWEubm9kZVR5cGUmJig4IT09YS5ub2RlVHlwZXx8XCIgcmVhY3QtbW91bnQtcG9pbnQtdW5zdGFibGUgXCIhPT1hLm5vZGVWYWx1ZSkpfWZ1bmN0aW9uIHFsKCl7fVxuZnVuY3Rpb24gcmwoYSxiLGMsZCxlKXtpZihlKXtpZihcImZ1bmN0aW9uXCI9PT10eXBlb2YgZCl7dmFyIGY9ZDtkPWZ1bmN0aW9uKCl7dmFyIGE9aGwoZyk7Zi5jYWxsKGEpfX12YXIgZz1mbChiLGQsYSwwLG51bGwsITEsITEsXCJcIixxbCk7YS5fcmVhY3RSb290Q29udGFpbmVyPWc7YVt1Zl09Zy5jdXJyZW50O3NmKDg9PT1hLm5vZGVUeXBlP2EucGFyZW50Tm9kZTphKTtTaygpO3JldHVybiBnfWZvcig7ZT1hLmxhc3RDaGlsZDspYS5yZW1vdmVDaGlsZChlKTtpZihcImZ1bmN0aW9uXCI9PT10eXBlb2YgZCl7dmFyIGg9ZDtkPWZ1bmN0aW9uKCl7dmFyIGE9aGwoayk7aC5jYWxsKGEpfX12YXIgaz1jbChhLDAsITEsbnVsbCxudWxsLCExLCExLFwiXCIscWwpO2EuX3JlYWN0Um9vdENvbnRhaW5lcj1rO2FbdWZdPWsuY3VycmVudDtzZig4PT09YS5ub2RlVHlwZT9hLnBhcmVudE5vZGU6YSk7U2soZnVuY3Rpb24oKXtnbChiLGssYyxkKX0pO3JldHVybiBrfVxuZnVuY3Rpb24gc2woYSxiLGMsZCxlKXt2YXIgZj1jLl9yZWFjdFJvb3RDb250YWluZXI7aWYoZil7dmFyIGc9ZjtpZihcImZ1bmN0aW9uXCI9PT10eXBlb2YgZSl7dmFyIGg9ZTtlPWZ1bmN0aW9uKCl7dmFyIGE9aGwoZyk7aC5jYWxsKGEpfX1nbChiLGcsYSxlKX1lbHNlIGc9cmwoYyxiLGEsZSxkKTtyZXR1cm4gaGwoZyl9RWM9ZnVuY3Rpb24oYSl7c3dpdGNoKGEudGFnKXtjYXNlIDM6dmFyIGI9YS5zdGF0ZU5vZGU7aWYoYi5jdXJyZW50Lm1lbW9pemVkU3RhdGUuaXNEZWh5ZHJhdGVkKXt2YXIgYz10YyhiLnBlbmRpbmdMYW5lcyk7MCE9PWMmJihDYyhiLGN8MSksRWsoYixCKCkpLDA9PT0oSyY2KSYmKEhqPUIoKSs1MDAsamcoKSkpfWJyZWFrO2Nhc2UgMTM6U2soZnVuY3Rpb24oKXt2YXIgYj1aZyhhLDEpO2lmKG51bGwhPT1iKXt2YXIgYz1MKCk7bWgoYixhLDEsYyl9fSksamwoYSwxKX19O1xuRmM9ZnVuY3Rpb24oYSl7aWYoMTM9PT1hLnRhZyl7dmFyIGI9WmcoYSwxMzQyMTc3MjgpO2lmKG51bGwhPT1iKXt2YXIgYz1MKCk7bWgoYixhLDEzNDIxNzcyOCxjKX1qbChhLDEzNDIxNzcyOCl9fTtHYz1mdW5jdGlvbihhKXtpZigxMz09PWEudGFnKXt2YXIgYj1saChhKSxjPVpnKGEsYik7aWYobnVsbCE9PWMpe3ZhciBkPUwoKTttaChjLGEsYixkKX1qbChhLGIpfX07SGM9ZnVuY3Rpb24oKXtyZXR1cm4gQ307SWM9ZnVuY3Rpb24oYSxiKXt2YXIgYz1DO3RyeXtyZXR1cm4gQz1hLGIoKX1maW5hbGx5e0M9Y319O1xueWI9ZnVuY3Rpb24oYSxiLGMpe3N3aXRjaChiKXtjYXNlIFwiaW5wdXRcIjpiYihhLGMpO2I9Yy5uYW1lO2lmKFwicmFkaW9cIj09PWMudHlwZSYmbnVsbCE9Yil7Zm9yKGM9YTtjLnBhcmVudE5vZGU7KWM9Yy5wYXJlbnROb2RlO2M9Yy5xdWVyeVNlbGVjdG9yQWxsKFwiaW5wdXRbbmFtZT1cIitKU09OLnN0cmluZ2lmeShcIlwiK2IpKyddW3R5cGU9XCJyYWRpb1wiXScpO2ZvcihiPTA7YjxjLmxlbmd0aDtiKyspe3ZhciBkPWNbYl07aWYoZCE9PWEmJmQuZm9ybT09PWEuZm9ybSl7dmFyIGU9RGIoZCk7aWYoIWUpdGhyb3cgRXJyb3IocCg5MCkpO1dhKGQpO2JiKGQsZSl9fX1icmVhaztjYXNlIFwidGV4dGFyZWFcIjppYihhLGMpO2JyZWFrO2Nhc2UgXCJzZWxlY3RcIjpiPWMudmFsdWUsbnVsbCE9YiYmZmIoYSwhIWMubXVsdGlwbGUsYiwhMSl9fTtHYj1SaztIYj1TaztcbnZhciB0bD17dXNpbmdDbGllbnRFbnRyeVBvaW50OiExLEV2ZW50czpbQ2IsdWUsRGIsRWIsRmIsUmtdfSx1bD17ZmluZEZpYmVyQnlIb3N0SW5zdGFuY2U6V2MsYnVuZGxlVHlwZTowLHZlcnNpb246XCIxOC4yLjBcIixyZW5kZXJlclBhY2thZ2VOYW1lOlwicmVhY3QtZG9tXCJ9O1xudmFyIHZsPXtidW5kbGVUeXBlOnVsLmJ1bmRsZVR5cGUsdmVyc2lvbjp1bC52ZXJzaW9uLHJlbmRlcmVyUGFja2FnZU5hbWU6dWwucmVuZGVyZXJQYWNrYWdlTmFtZSxyZW5kZXJlckNvbmZpZzp1bC5yZW5kZXJlckNvbmZpZyxvdmVycmlkZUhvb2tTdGF0ZTpudWxsLG92ZXJyaWRlSG9va1N0YXRlRGVsZXRlUGF0aDpudWxsLG92ZXJyaWRlSG9va1N0YXRlUmVuYW1lUGF0aDpudWxsLG92ZXJyaWRlUHJvcHM6bnVsbCxvdmVycmlkZVByb3BzRGVsZXRlUGF0aDpudWxsLG92ZXJyaWRlUHJvcHNSZW5hbWVQYXRoOm51bGwsc2V0RXJyb3JIYW5kbGVyOm51bGwsc2V0U3VzcGVuc2VIYW5kbGVyOm51bGwsc2NoZWR1bGVVcGRhdGU6bnVsbCxjdXJyZW50RGlzcGF0Y2hlclJlZjp1YS5SZWFjdEN1cnJlbnREaXNwYXRjaGVyLGZpbmRIb3N0SW5zdGFuY2VCeUZpYmVyOmZ1bmN0aW9uKGEpe2E9WmIoYSk7cmV0dXJuIG51bGw9PT1hP251bGw6YS5zdGF0ZU5vZGV9LGZpbmRGaWJlckJ5SG9zdEluc3RhbmNlOnVsLmZpbmRGaWJlckJ5SG9zdEluc3RhbmNlfHxcbmtsLGZpbmRIb3N0SW5zdGFuY2VzRm9yUmVmcmVzaDpudWxsLHNjaGVkdWxlUmVmcmVzaDpudWxsLHNjaGVkdWxlUm9vdDpudWxsLHNldFJlZnJlc2hIYW5kbGVyOm51bGwsZ2V0Q3VycmVudEZpYmVyOm51bGwscmVjb25jaWxlclZlcnNpb246XCIxOC4yLjAtbmV4dC05ZTNiNzcyYjgtMjAyMjA2MDhcIn07aWYoXCJ1bmRlZmluZWRcIiE9PXR5cGVvZiBfX1JFQUNUX0RFVlRPT0xTX0dMT0JBTF9IT09LX18pe3ZhciB3bD1fX1JFQUNUX0RFVlRPT0xTX0dMT0JBTF9IT09LX187aWYoIXdsLmlzRGlzYWJsZWQmJndsLnN1cHBvcnRzRmliZXIpdHJ5e2tjPXdsLmluamVjdCh2bCksbGM9d2x9Y2F0Y2goYSl7fX1leHBvcnRzLl9fU0VDUkVUX0lOVEVSTkFMU19ET19OT1RfVVNFX09SX1lPVV9XSUxMX0JFX0ZJUkVEPXRsO1xuZXhwb3J0cy5jcmVhdGVQb3J0YWw9ZnVuY3Rpb24oYSxiKXt2YXIgYz0yPGFyZ3VtZW50cy5sZW5ndGgmJnZvaWQgMCE9PWFyZ3VtZW50c1syXT9hcmd1bWVudHNbMl06bnVsbDtpZighb2woYikpdGhyb3cgRXJyb3IocCgyMDApKTtyZXR1cm4gZGwoYSxiLG51bGwsYyl9O2V4cG9ydHMuY3JlYXRlUm9vdD1mdW5jdGlvbihhLGIpe2lmKCFvbChhKSl0aHJvdyBFcnJvcihwKDI5OSkpO3ZhciBjPSExLGQ9XCJcIixlPWxsO251bGwhPT1iJiZ2b2lkIDAhPT1iJiYoITA9PT1iLnVuc3RhYmxlX3N0cmljdE1vZGUmJihjPSEwKSx2b2lkIDAhPT1iLmlkZW50aWZpZXJQcmVmaXgmJihkPWIuaWRlbnRpZmllclByZWZpeCksdm9pZCAwIT09Yi5vblJlY292ZXJhYmxlRXJyb3ImJihlPWIub25SZWNvdmVyYWJsZUVycm9yKSk7Yj1jbChhLDEsITEsbnVsbCxudWxsLGMsITEsZCxlKTthW3VmXT1iLmN1cnJlbnQ7c2YoOD09PWEubm9kZVR5cGU/YS5wYXJlbnROb2RlOmEpO3JldHVybiBuZXcgbWwoYil9O1xuZXhwb3J0cy5maW5kRE9NTm9kZT1mdW5jdGlvbihhKXtpZihudWxsPT1hKXJldHVybiBudWxsO2lmKDE9PT1hLm5vZGVUeXBlKXJldHVybiBhO3ZhciBiPWEuX3JlYWN0SW50ZXJuYWxzO2lmKHZvaWQgMD09PWIpe2lmKFwiZnVuY3Rpb25cIj09PXR5cGVvZiBhLnJlbmRlcil0aHJvdyBFcnJvcihwKDE4OCkpO2E9T2JqZWN0LmtleXMoYSkuam9pbihcIixcIik7dGhyb3cgRXJyb3IocCgyNjgsYSkpO31hPVpiKGIpO2E9bnVsbD09PWE/bnVsbDphLnN0YXRlTm9kZTtyZXR1cm4gYX07ZXhwb3J0cy5mbHVzaFN5bmM9ZnVuY3Rpb24oYSl7cmV0dXJuIFNrKGEpfTtleHBvcnRzLmh5ZHJhdGU9ZnVuY3Rpb24oYSxiLGMpe2lmKCFwbChiKSl0aHJvdyBFcnJvcihwKDIwMCkpO3JldHVybiBzbChudWxsLGEsYiwhMCxjKX07XG5leHBvcnRzLmh5ZHJhdGVSb290PWZ1bmN0aW9uKGEsYixjKXtpZighb2woYSkpdGhyb3cgRXJyb3IocCg0MDUpKTt2YXIgZD1udWxsIT1jJiZjLmh5ZHJhdGVkU291cmNlc3x8bnVsbCxlPSExLGY9XCJcIixnPWxsO251bGwhPT1jJiZ2b2lkIDAhPT1jJiYoITA9PT1jLnVuc3RhYmxlX3N0cmljdE1vZGUmJihlPSEwKSx2b2lkIDAhPT1jLmlkZW50aWZpZXJQcmVmaXgmJihmPWMuaWRlbnRpZmllclByZWZpeCksdm9pZCAwIT09Yy5vblJlY292ZXJhYmxlRXJyb3ImJihnPWMub25SZWNvdmVyYWJsZUVycm9yKSk7Yj1mbChiLG51bGwsYSwxLG51bGwhPWM/YzpudWxsLGUsITEsZixnKTthW3VmXT1iLmN1cnJlbnQ7c2YoYSk7aWYoZClmb3IoYT0wO2E8ZC5sZW5ndGg7YSsrKWM9ZFthXSxlPWMuX2dldFZlcnNpb24sZT1lKGMuX3NvdXJjZSksbnVsbD09Yi5tdXRhYmxlU291cmNlRWFnZXJIeWRyYXRpb25EYXRhP2IubXV0YWJsZVNvdXJjZUVhZ2VySHlkcmF0aW9uRGF0YT1bYyxlXTpiLm11dGFibGVTb3VyY2VFYWdlckh5ZHJhdGlvbkRhdGEucHVzaChjLFxuZSk7cmV0dXJuIG5ldyBubChiKX07ZXhwb3J0cy5yZW5kZXI9ZnVuY3Rpb24oYSxiLGMpe2lmKCFwbChiKSl0aHJvdyBFcnJvcihwKDIwMCkpO3JldHVybiBzbChudWxsLGEsYiwhMSxjKX07ZXhwb3J0cy51bm1vdW50Q29tcG9uZW50QXROb2RlPWZ1bmN0aW9uKGEpe2lmKCFwbChhKSl0aHJvdyBFcnJvcihwKDQwKSk7cmV0dXJuIGEuX3JlYWN0Um9vdENvbnRhaW5lcj8oU2soZnVuY3Rpb24oKXtzbChudWxsLG51bGwsYSwhMSxmdW5jdGlvbigpe2EuX3JlYWN0Um9vdENvbnRhaW5lcj1udWxsO2FbdWZdPW51bGx9KX0pLCEwKTohMX07ZXhwb3J0cy51bnN0YWJsZV9iYXRjaGVkVXBkYXRlcz1SaztcbmV4cG9ydHMudW5zdGFibGVfcmVuZGVyU3VidHJlZUludG9Db250YWluZXI9ZnVuY3Rpb24oYSxiLGMsZCl7aWYoIXBsKGMpKXRocm93IEVycm9yKHAoMjAwKSk7aWYobnVsbD09YXx8dm9pZCAwPT09YS5fcmVhY3RJbnRlcm5hbHMpdGhyb3cgRXJyb3IocCgzOCkpO3JldHVybiBzbChhLGIsYywhMSxkKX07ZXhwb3J0cy52ZXJzaW9uPVwiMTguMi4wLW5leHQtOWUzYjc3MmI4LTIwMjIwNjA4XCI7XG4iLCIndXNlIHN0cmljdCc7XG5cbnZhciBtID0gcmVxdWlyZSgncmVhY3QtZG9tJyk7XG5pZiAocHJvY2Vzcy5lbnYuTk9ERV9FTlYgPT09ICdwcm9kdWN0aW9uJykge1xuICBleHBvcnRzLmNyZWF0ZVJvb3QgPSBtLmNyZWF0ZVJvb3Q7XG4gIGV4cG9ydHMuaHlkcmF0ZVJvb3QgPSBtLmh5ZHJhdGVSb290O1xufSBlbHNlIHtcbiAgdmFyIGkgPSBtLl9fU0VDUkVUX0lOVEVSTkFMU19ET19OT1RfVVNFX09SX1lPVV9XSUxMX0JFX0ZJUkVEO1xuICBleHBvcnRzLmNyZWF0ZVJvb3QgPSBmdW5jdGlvbihjLCBvKSB7XG4gICAgaS51c2luZ0NsaWVudEVudHJ5UG9pbnQgPSB0cnVlO1xuICAgIHRyeSB7XG4gICAgICByZXR1cm4gbS5jcmVhdGVSb290KGMsIG8pO1xuICAgIH0gZmluYWxseSB7XG4gICAgICBpLnVzaW5nQ2xpZW50RW50cnlQb2ludCA9IGZhbHNlO1xuICAgIH1cbiAgfTtcbiAgZXhwb3J0cy5oeWRyYXRlUm9vdCA9IGZ1bmN0aW9uKGMsIGgsIG8pIHtcbiAgICBpLnVzaW5nQ2xpZW50RW50cnlQb2ludCA9IHRydWU7XG4gICAgdHJ5IHtcbiAgICAgIHJldHVybiBtLmh5ZHJhdGVSb290KGMsIGgsIG8pO1xuICAgIH0gZmluYWxseSB7XG4gICAgICBpLnVzaW5nQ2xpZW50RW50cnlQb2ludCA9IGZhbHNlO1xuICAgIH1cbiAgfTtcbn1cbiIsIid1c2Ugc3RyaWN0JztcblxuZnVuY3Rpb24gY2hlY2tEQ0UoKSB7XG4gIC8qIGdsb2JhbCBfX1JFQUNUX0RFVlRPT0xTX0dMT0JBTF9IT09LX18gKi9cbiAgaWYgKFxuICAgIHR5cGVvZiBfX1JFQUNUX0RFVlRPT0xTX0dMT0JBTF9IT09LX18gPT09ICd1bmRlZmluZWQnIHx8XG4gICAgdHlwZW9mIF9fUkVBQ1RfREVWVE9PTFNfR0xPQkFMX0hPT0tfXy5jaGVja0RDRSAhPT0gJ2Z1bmN0aW9uJ1xuICApIHtcbiAgICByZXR1cm47XG4gIH1cbiAgaWYgKHByb2Nlc3MuZW52Lk5PREVfRU5WICE9PSAncHJvZHVjdGlvbicpIHtcbiAgICAvLyBUaGlzIGJyYW5jaCBpcyB1bnJlYWNoYWJsZSBiZWNhdXNlIHRoaXMgZnVuY3Rpb24gaXMgb25seSBjYWxsZWRcbiAgICAvLyBpbiBwcm9kdWN0aW9uLCBidXQgdGhlIGNvbmRpdGlvbiBpcyB0cnVlIG9ubHkgaW4gZGV2ZWxvcG1lbnQuXG4gICAgLy8gVGhlcmVmb3JlIGlmIHRoZSBicmFuY2ggaXMgc3RpbGwgaGVyZSwgZGVhZCBjb2RlIGVsaW1pbmF0aW9uIHdhc24ndFxuICAgIC8vIHByb3Blcmx5IGFwcGxpZWQuXG4gICAgLy8gRG9uJ3QgY2hhbmdlIHRoZSBtZXNzYWdlLiBSZWFjdCBEZXZUb29scyByZWxpZXMgb24gaXQuIEFsc28gbWFrZSBzdXJlXG4gICAgLy8gdGhpcyBtZXNzYWdlIGRvZXNuJ3Qgb2NjdXIgZWxzZXdoZXJlIGluIHRoaXMgZnVuY3Rpb24sIG9yIGl0IHdpbGwgY2F1c2VcbiAgICAvLyBhIGZhbHNlIHBvc2l0aXZlLlxuICAgIHRocm93IG5ldyBFcnJvcignXl9eJyk7XG4gIH1cbiAgdHJ5IHtcbiAgICAvLyBWZXJpZnkgdGhhdCB0aGUgY29kZSBhYm92ZSBoYXMgYmVlbiBkZWFkIGNvZGUgZWxpbWluYXRlZCAoRENFJ2QpLlxuICAgIF9fUkVBQ1RfREVWVE9PTFNfR0xPQkFMX0hPT0tfXy5jaGVja0RDRShjaGVja0RDRSk7XG4gIH0gY2F0Y2ggKGVycikge1xuICAgIC8vIERldlRvb2xzIHNob3VsZG4ndCBjcmFzaCBSZWFjdCwgbm8gbWF0dGVyIHdoYXQuXG4gICAgLy8gV2Ugc2hvdWxkIHN0aWxsIHJlcG9ydCBpbiBjYXNlIHdlIGJyZWFrIHRoaXMgY29kZS5cbiAgICBjb25zb2xlLmVycm9yKGVycik7XG4gIH1cbn1cblxuaWYgKHByb2Nlc3MuZW52Lk5PREVfRU5WID09PSAncHJvZHVjdGlvbicpIHtcbiAgLy8gRENFIGNoZWNrIHNob3VsZCBoYXBwZW4gYmVmb3JlIFJlYWN0RE9NIGJ1bmRsZSBleGVjdXRlcyBzbyB0aGF0XG4gIC8vIERldlRvb2xzIGNhbiByZXBvcnQgYmFkIG1pbmlmaWNhdGlvbiBkdXJpbmcgaW5qZWN0aW9uLlxuICBjaGVja0RDRSgpO1xuICBtb2R1bGUuZXhwb3J0cyA9IHJlcXVpcmUoJy4vY2pzL3JlYWN0LWRvbS5wcm9kdWN0aW9uLm1pbi5qcycpO1xufSBlbHNlIHtcbiAgbW9kdWxlLmV4cG9ydHMgPSByZXF1aXJlKCcuL2Nqcy9yZWFjdC1kb20uZGV2ZWxvcG1lbnQuanMnKTtcbn1cbiIsIi8qKlxuICogQGxpY2Vuc2UgUmVhY3RcbiAqIHJlYWN0LnByb2R1Y3Rpb24ubWluLmpzXG4gKlxuICogQ29weXJpZ2h0IChjKSBGYWNlYm9vaywgSW5jLiBhbmQgaXRzIGFmZmlsaWF0ZXMuXG4gKlxuICogVGhpcyBzb3VyY2UgY29kZSBpcyBsaWNlbnNlZCB1bmRlciB0aGUgTUlUIGxpY2Vuc2UgZm91bmQgaW4gdGhlXG4gKiBMSUNFTlNFIGZpbGUgaW4gdGhlIHJvb3QgZGlyZWN0b3J5IG9mIHRoaXMgc291cmNlIHRyZWUuXG4gKi9cbid1c2Ugc3RyaWN0Jzt2YXIgbD1TeW1ib2wuZm9yKFwicmVhY3QuZWxlbWVudFwiKSxuPVN5bWJvbC5mb3IoXCJyZWFjdC5wb3J0YWxcIikscD1TeW1ib2wuZm9yKFwicmVhY3QuZnJhZ21lbnRcIikscT1TeW1ib2wuZm9yKFwicmVhY3Quc3RyaWN0X21vZGVcIikscj1TeW1ib2wuZm9yKFwicmVhY3QucHJvZmlsZXJcIiksdD1TeW1ib2wuZm9yKFwicmVhY3QucHJvdmlkZXJcIiksdT1TeW1ib2wuZm9yKFwicmVhY3QuY29udGV4dFwiKSx2PVN5bWJvbC5mb3IoXCJyZWFjdC5mb3J3YXJkX3JlZlwiKSx3PVN5bWJvbC5mb3IoXCJyZWFjdC5zdXNwZW5zZVwiKSx4PVN5bWJvbC5mb3IoXCJyZWFjdC5tZW1vXCIpLHk9U3ltYm9sLmZvcihcInJlYWN0LmxhenlcIiksej1TeW1ib2wuaXRlcmF0b3I7ZnVuY3Rpb24gQShhKXtpZihudWxsPT09YXx8XCJvYmplY3RcIiE9PXR5cGVvZiBhKXJldHVybiBudWxsO2E9eiYmYVt6XXx8YVtcIkBAaXRlcmF0b3JcIl07cmV0dXJuXCJmdW5jdGlvblwiPT09dHlwZW9mIGE/YTpudWxsfVxudmFyIEI9e2lzTW91bnRlZDpmdW5jdGlvbigpe3JldHVybiExfSxlbnF1ZXVlRm9yY2VVcGRhdGU6ZnVuY3Rpb24oKXt9LGVucXVldWVSZXBsYWNlU3RhdGU6ZnVuY3Rpb24oKXt9LGVucXVldWVTZXRTdGF0ZTpmdW5jdGlvbigpe319LEM9T2JqZWN0LmFzc2lnbixEPXt9O2Z1bmN0aW9uIEUoYSxiLGUpe3RoaXMucHJvcHM9YTt0aGlzLmNvbnRleHQ9Yjt0aGlzLnJlZnM9RDt0aGlzLnVwZGF0ZXI9ZXx8Qn1FLnByb3RvdHlwZS5pc1JlYWN0Q29tcG9uZW50PXt9O1xuRS5wcm90b3R5cGUuc2V0U3RhdGU9ZnVuY3Rpb24oYSxiKXtpZihcIm9iamVjdFwiIT09dHlwZW9mIGEmJlwiZnVuY3Rpb25cIiE9PXR5cGVvZiBhJiZudWxsIT1hKXRocm93IEVycm9yKFwic2V0U3RhdGUoLi4uKTogdGFrZXMgYW4gb2JqZWN0IG9mIHN0YXRlIHZhcmlhYmxlcyB0byB1cGRhdGUgb3IgYSBmdW5jdGlvbiB3aGljaCByZXR1cm5zIGFuIG9iamVjdCBvZiBzdGF0ZSB2YXJpYWJsZXMuXCIpO3RoaXMudXBkYXRlci5lbnF1ZXVlU2V0U3RhdGUodGhpcyxhLGIsXCJzZXRTdGF0ZVwiKX07RS5wcm90b3R5cGUuZm9yY2VVcGRhdGU9ZnVuY3Rpb24oYSl7dGhpcy51cGRhdGVyLmVucXVldWVGb3JjZVVwZGF0ZSh0aGlzLGEsXCJmb3JjZVVwZGF0ZVwiKX07ZnVuY3Rpb24gRigpe31GLnByb3RvdHlwZT1FLnByb3RvdHlwZTtmdW5jdGlvbiBHKGEsYixlKXt0aGlzLnByb3BzPWE7dGhpcy5jb250ZXh0PWI7dGhpcy5yZWZzPUQ7dGhpcy51cGRhdGVyPWV8fEJ9dmFyIEg9Ry5wcm90b3R5cGU9bmV3IEY7XG5ILmNvbnN0cnVjdG9yPUc7QyhILEUucHJvdG90eXBlKTtILmlzUHVyZVJlYWN0Q29tcG9uZW50PSEwO3ZhciBJPUFycmF5LmlzQXJyYXksSj1PYmplY3QucHJvdG90eXBlLmhhc093blByb3BlcnR5LEs9e2N1cnJlbnQ6bnVsbH0sTD17a2V5OiEwLHJlZjohMCxfX3NlbGY6ITAsX19zb3VyY2U6ITB9O1xuZnVuY3Rpb24gTShhLGIsZSl7dmFyIGQsYz17fSxrPW51bGwsaD1udWxsO2lmKG51bGwhPWIpZm9yKGQgaW4gdm9pZCAwIT09Yi5yZWYmJihoPWIucmVmKSx2b2lkIDAhPT1iLmtleSYmKGs9XCJcIitiLmtleSksYilKLmNhbGwoYixkKSYmIUwuaGFzT3duUHJvcGVydHkoZCkmJihjW2RdPWJbZF0pO3ZhciBnPWFyZ3VtZW50cy5sZW5ndGgtMjtpZigxPT09ZyljLmNoaWxkcmVuPWU7ZWxzZSBpZigxPGcpe2Zvcih2YXIgZj1BcnJheShnKSxtPTA7bTxnO20rKylmW21dPWFyZ3VtZW50c1ttKzJdO2MuY2hpbGRyZW49Zn1pZihhJiZhLmRlZmF1bHRQcm9wcylmb3IoZCBpbiBnPWEuZGVmYXVsdFByb3BzLGcpdm9pZCAwPT09Y1tkXSYmKGNbZF09Z1tkXSk7cmV0dXJueyQkdHlwZW9mOmwsdHlwZTphLGtleTprLHJlZjpoLHByb3BzOmMsX293bmVyOksuY3VycmVudH19XG5mdW5jdGlvbiBOKGEsYil7cmV0dXJueyQkdHlwZW9mOmwsdHlwZTphLnR5cGUsa2V5OmIscmVmOmEucmVmLHByb3BzOmEucHJvcHMsX293bmVyOmEuX293bmVyfX1mdW5jdGlvbiBPKGEpe3JldHVyblwib2JqZWN0XCI9PT10eXBlb2YgYSYmbnVsbCE9PWEmJmEuJCR0eXBlb2Y9PT1sfWZ1bmN0aW9uIGVzY2FwZShhKXt2YXIgYj17XCI9XCI6XCI9MFwiLFwiOlwiOlwiPTJcIn07cmV0dXJuXCIkXCIrYS5yZXBsYWNlKC9bPTpdL2csZnVuY3Rpb24oYSl7cmV0dXJuIGJbYV19KX12YXIgUD0vXFwvKy9nO2Z1bmN0aW9uIFEoYSxiKXtyZXR1cm5cIm9iamVjdFwiPT09dHlwZW9mIGEmJm51bGwhPT1hJiZudWxsIT1hLmtleT9lc2NhcGUoXCJcIithLmtleSk6Yi50b1N0cmluZygzNil9XG5mdW5jdGlvbiBSKGEsYixlLGQsYyl7dmFyIGs9dHlwZW9mIGE7aWYoXCJ1bmRlZmluZWRcIj09PWt8fFwiYm9vbGVhblwiPT09aylhPW51bGw7dmFyIGg9ITE7aWYobnVsbD09PWEpaD0hMDtlbHNlIHN3aXRjaChrKXtjYXNlIFwic3RyaW5nXCI6Y2FzZSBcIm51bWJlclwiOmg9ITA7YnJlYWs7Y2FzZSBcIm9iamVjdFwiOnN3aXRjaChhLiQkdHlwZW9mKXtjYXNlIGw6Y2FzZSBuOmg9ITB9fWlmKGgpcmV0dXJuIGg9YSxjPWMoaCksYT1cIlwiPT09ZD9cIi5cIitRKGgsMCk6ZCxJKGMpPyhlPVwiXCIsbnVsbCE9YSYmKGU9YS5yZXBsYWNlKFAsXCIkJi9cIikrXCIvXCIpLFIoYyxiLGUsXCJcIixmdW5jdGlvbihhKXtyZXR1cm4gYX0pKTpudWxsIT1jJiYoTyhjKSYmKGM9TihjLGUrKCFjLmtleXx8aCYmaC5rZXk9PT1jLmtleT9cIlwiOihcIlwiK2Mua2V5KS5yZXBsYWNlKFAsXCIkJi9cIikrXCIvXCIpK2EpKSxiLnB1c2goYykpLDE7aD0wO2Q9XCJcIj09PWQ/XCIuXCI6ZCtcIjpcIjtpZihJKGEpKWZvcih2YXIgZz0wO2c8YS5sZW5ndGg7ZysrKXtrPVxuYVtnXTt2YXIgZj1kK1EoayxnKTtoKz1SKGssYixlLGYsYyl9ZWxzZSBpZihmPUEoYSksXCJmdW5jdGlvblwiPT09dHlwZW9mIGYpZm9yKGE9Zi5jYWxsKGEpLGc9MDshKGs9YS5uZXh0KCkpLmRvbmU7KWs9ay52YWx1ZSxmPWQrUShrLGcrKyksaCs9UihrLGIsZSxmLGMpO2Vsc2UgaWYoXCJvYmplY3RcIj09PWspdGhyb3cgYj1TdHJpbmcoYSksRXJyb3IoXCJPYmplY3RzIGFyZSBub3QgdmFsaWQgYXMgYSBSZWFjdCBjaGlsZCAoZm91bmQ6IFwiKyhcIltvYmplY3QgT2JqZWN0XVwiPT09Yj9cIm9iamVjdCB3aXRoIGtleXMge1wiK09iamVjdC5rZXlzKGEpLmpvaW4oXCIsIFwiKStcIn1cIjpiKStcIikuIElmIHlvdSBtZWFudCB0byByZW5kZXIgYSBjb2xsZWN0aW9uIG9mIGNoaWxkcmVuLCB1c2UgYW4gYXJyYXkgaW5zdGVhZC5cIik7cmV0dXJuIGh9XG5mdW5jdGlvbiBTKGEsYixlKXtpZihudWxsPT1hKXJldHVybiBhO3ZhciBkPVtdLGM9MDtSKGEsZCxcIlwiLFwiXCIsZnVuY3Rpb24oYSl7cmV0dXJuIGIuY2FsbChlLGEsYysrKX0pO3JldHVybiBkfWZ1bmN0aW9uIFQoYSl7aWYoLTE9PT1hLl9zdGF0dXMpe3ZhciBiPWEuX3Jlc3VsdDtiPWIoKTtiLnRoZW4oZnVuY3Rpb24oYil7aWYoMD09PWEuX3N0YXR1c3x8LTE9PT1hLl9zdGF0dXMpYS5fc3RhdHVzPTEsYS5fcmVzdWx0PWJ9LGZ1bmN0aW9uKGIpe2lmKDA9PT1hLl9zdGF0dXN8fC0xPT09YS5fc3RhdHVzKWEuX3N0YXR1cz0yLGEuX3Jlc3VsdD1ifSk7LTE9PT1hLl9zdGF0dXMmJihhLl9zdGF0dXM9MCxhLl9yZXN1bHQ9Yil9aWYoMT09PWEuX3N0YXR1cylyZXR1cm4gYS5fcmVzdWx0LmRlZmF1bHQ7dGhyb3cgYS5fcmVzdWx0O31cbnZhciBVPXtjdXJyZW50Om51bGx9LFY9e3RyYW5zaXRpb246bnVsbH0sVz17UmVhY3RDdXJyZW50RGlzcGF0Y2hlcjpVLFJlYWN0Q3VycmVudEJhdGNoQ29uZmlnOlYsUmVhY3RDdXJyZW50T3duZXI6S307ZXhwb3J0cy5DaGlsZHJlbj17bWFwOlMsZm9yRWFjaDpmdW5jdGlvbihhLGIsZSl7UyhhLGZ1bmN0aW9uKCl7Yi5hcHBseSh0aGlzLGFyZ3VtZW50cyl9LGUpfSxjb3VudDpmdW5jdGlvbihhKXt2YXIgYj0wO1MoYSxmdW5jdGlvbigpe2IrK30pO3JldHVybiBifSx0b0FycmF5OmZ1bmN0aW9uKGEpe3JldHVybiBTKGEsZnVuY3Rpb24oYSl7cmV0dXJuIGF9KXx8W119LG9ubHk6ZnVuY3Rpb24oYSl7aWYoIU8oYSkpdGhyb3cgRXJyb3IoXCJSZWFjdC5DaGlsZHJlbi5vbmx5IGV4cGVjdGVkIHRvIHJlY2VpdmUgYSBzaW5nbGUgUmVhY3QgZWxlbWVudCBjaGlsZC5cIik7cmV0dXJuIGF9fTtleHBvcnRzLkNvbXBvbmVudD1FO2V4cG9ydHMuRnJhZ21lbnQ9cDtcbmV4cG9ydHMuUHJvZmlsZXI9cjtleHBvcnRzLlB1cmVDb21wb25lbnQ9RztleHBvcnRzLlN0cmljdE1vZGU9cTtleHBvcnRzLlN1c3BlbnNlPXc7ZXhwb3J0cy5fX1NFQ1JFVF9JTlRFUk5BTFNfRE9fTk9UX1VTRV9PUl9ZT1VfV0lMTF9CRV9GSVJFRD1XO1xuZXhwb3J0cy5jbG9uZUVsZW1lbnQ9ZnVuY3Rpb24oYSxiLGUpe2lmKG51bGw9PT1hfHx2b2lkIDA9PT1hKXRocm93IEVycm9yKFwiUmVhY3QuY2xvbmVFbGVtZW50KC4uLik6IFRoZSBhcmd1bWVudCBtdXN0IGJlIGEgUmVhY3QgZWxlbWVudCwgYnV0IHlvdSBwYXNzZWQgXCIrYStcIi5cIik7dmFyIGQ9Qyh7fSxhLnByb3BzKSxjPWEua2V5LGs9YS5yZWYsaD1hLl9vd25lcjtpZihudWxsIT1iKXt2b2lkIDAhPT1iLnJlZiYmKGs9Yi5yZWYsaD1LLmN1cnJlbnQpO3ZvaWQgMCE9PWIua2V5JiYoYz1cIlwiK2Iua2V5KTtpZihhLnR5cGUmJmEudHlwZS5kZWZhdWx0UHJvcHMpdmFyIGc9YS50eXBlLmRlZmF1bHRQcm9wcztmb3IoZiBpbiBiKUouY2FsbChiLGYpJiYhTC5oYXNPd25Qcm9wZXJ0eShmKSYmKGRbZl09dm9pZCAwPT09YltmXSYmdm9pZCAwIT09Zz9nW2ZdOmJbZl0pfXZhciBmPWFyZ3VtZW50cy5sZW5ndGgtMjtpZigxPT09ZilkLmNoaWxkcmVuPWU7ZWxzZSBpZigxPGYpe2c9QXJyYXkoZik7XG5mb3IodmFyIG09MDttPGY7bSsrKWdbbV09YXJndW1lbnRzW20rMl07ZC5jaGlsZHJlbj1nfXJldHVybnskJHR5cGVvZjpsLHR5cGU6YS50eXBlLGtleTpjLHJlZjprLHByb3BzOmQsX293bmVyOmh9fTtleHBvcnRzLmNyZWF0ZUNvbnRleHQ9ZnVuY3Rpb24oYSl7YT17JCR0eXBlb2Y6dSxfY3VycmVudFZhbHVlOmEsX2N1cnJlbnRWYWx1ZTI6YSxfdGhyZWFkQ291bnQ6MCxQcm92aWRlcjpudWxsLENvbnN1bWVyOm51bGwsX2RlZmF1bHRWYWx1ZTpudWxsLF9nbG9iYWxOYW1lOm51bGx9O2EuUHJvdmlkZXI9eyQkdHlwZW9mOnQsX2NvbnRleHQ6YX07cmV0dXJuIGEuQ29uc3VtZXI9YX07ZXhwb3J0cy5jcmVhdGVFbGVtZW50PU07ZXhwb3J0cy5jcmVhdGVGYWN0b3J5PWZ1bmN0aW9uKGEpe3ZhciBiPU0uYmluZChudWxsLGEpO2IudHlwZT1hO3JldHVybiBifTtleHBvcnRzLmNyZWF0ZVJlZj1mdW5jdGlvbigpe3JldHVybntjdXJyZW50Om51bGx9fTtcbmV4cG9ydHMuZm9yd2FyZFJlZj1mdW5jdGlvbihhKXtyZXR1cm57JCR0eXBlb2Y6dixyZW5kZXI6YX19O2V4cG9ydHMuaXNWYWxpZEVsZW1lbnQ9TztleHBvcnRzLmxhenk9ZnVuY3Rpb24oYSl7cmV0dXJueyQkdHlwZW9mOnksX3BheWxvYWQ6e19zdGF0dXM6LTEsX3Jlc3VsdDphfSxfaW5pdDpUfX07ZXhwb3J0cy5tZW1vPWZ1bmN0aW9uKGEsYil7cmV0dXJueyQkdHlwZW9mOngsdHlwZTphLGNvbXBhcmU6dm9pZCAwPT09Yj9udWxsOmJ9fTtleHBvcnRzLnN0YXJ0VHJhbnNpdGlvbj1mdW5jdGlvbihhKXt2YXIgYj1WLnRyYW5zaXRpb247Vi50cmFuc2l0aW9uPXt9O3RyeXthKCl9ZmluYWxseXtWLnRyYW5zaXRpb249Yn19O2V4cG9ydHMudW5zdGFibGVfYWN0PWZ1bmN0aW9uKCl7dGhyb3cgRXJyb3IoXCJhY3QoLi4uKSBpcyBub3Qgc3VwcG9ydGVkIGluIHByb2R1Y3Rpb24gYnVpbGRzIG9mIFJlYWN0LlwiKTt9O1xuZXhwb3J0cy51c2VDYWxsYmFjaz1mdW5jdGlvbihhLGIpe3JldHVybiBVLmN1cnJlbnQudXNlQ2FsbGJhY2soYSxiKX07ZXhwb3J0cy51c2VDb250ZXh0PWZ1bmN0aW9uKGEpe3JldHVybiBVLmN1cnJlbnQudXNlQ29udGV4dChhKX07ZXhwb3J0cy51c2VEZWJ1Z1ZhbHVlPWZ1bmN0aW9uKCl7fTtleHBvcnRzLnVzZURlZmVycmVkVmFsdWU9ZnVuY3Rpb24oYSl7cmV0dXJuIFUuY3VycmVudC51c2VEZWZlcnJlZFZhbHVlKGEpfTtleHBvcnRzLnVzZUVmZmVjdD1mdW5jdGlvbihhLGIpe3JldHVybiBVLmN1cnJlbnQudXNlRWZmZWN0KGEsYil9O2V4cG9ydHMudXNlSWQ9ZnVuY3Rpb24oKXtyZXR1cm4gVS5jdXJyZW50LnVzZUlkKCl9O2V4cG9ydHMudXNlSW1wZXJhdGl2ZUhhbmRsZT1mdW5jdGlvbihhLGIsZSl7cmV0dXJuIFUuY3VycmVudC51c2VJbXBlcmF0aXZlSGFuZGxlKGEsYixlKX07XG5leHBvcnRzLnVzZUluc2VydGlvbkVmZmVjdD1mdW5jdGlvbihhLGIpe3JldHVybiBVLmN1cnJlbnQudXNlSW5zZXJ0aW9uRWZmZWN0KGEsYil9O2V4cG9ydHMudXNlTGF5b3V0RWZmZWN0PWZ1bmN0aW9uKGEsYil7cmV0dXJuIFUuY3VycmVudC51c2VMYXlvdXRFZmZlY3QoYSxiKX07ZXhwb3J0cy51c2VNZW1vPWZ1bmN0aW9uKGEsYil7cmV0dXJuIFUuY3VycmVudC51c2VNZW1vKGEsYil9O2V4cG9ydHMudXNlUmVkdWNlcj1mdW5jdGlvbihhLGIsZSl7cmV0dXJuIFUuY3VycmVudC51c2VSZWR1Y2VyKGEsYixlKX07ZXhwb3J0cy51c2VSZWY9ZnVuY3Rpb24oYSl7cmV0dXJuIFUuY3VycmVudC51c2VSZWYoYSl9O2V4cG9ydHMudXNlU3RhdGU9ZnVuY3Rpb24oYSl7cmV0dXJuIFUuY3VycmVudC51c2VTdGF0ZShhKX07ZXhwb3J0cy51c2VTeW5jRXh0ZXJuYWxTdG9yZT1mdW5jdGlvbihhLGIsZSl7cmV0dXJuIFUuY3VycmVudC51c2VTeW5jRXh0ZXJuYWxTdG9yZShhLGIsZSl9O1xuZXhwb3J0cy51c2VUcmFuc2l0aW9uPWZ1bmN0aW9uKCl7cmV0dXJuIFUuY3VycmVudC51c2VUcmFuc2l0aW9uKCl9O2V4cG9ydHMudmVyc2lvbj1cIjE4LjIuMFwiO1xuIiwiJ3VzZSBzdHJpY3QnO1xuXG5pZiAocHJvY2Vzcy5lbnYuTk9ERV9FTlYgPT09ICdwcm9kdWN0aW9uJykge1xuICBtb2R1bGUuZXhwb3J0cyA9IHJlcXVpcmUoJy4vY2pzL3JlYWN0LnByb2R1Y3Rpb24ubWluLmpzJyk7XG59IGVsc2Uge1xuICBtb2R1bGUuZXhwb3J0cyA9IHJlcXVpcmUoJy4vY2pzL3JlYWN0LmRldmVsb3BtZW50LmpzJyk7XG59XG4iLCIvKipcbiAqIEBsaWNlbnNlIFJlYWN0XG4gKiBzY2hlZHVsZXIucHJvZHVjdGlvbi5taW4uanNcbiAqXG4gKiBDb3B5cmlnaHQgKGMpIEZhY2Vib29rLCBJbmMuIGFuZCBpdHMgYWZmaWxpYXRlcy5cbiAqXG4gKiBUaGlzIHNvdXJjZSBjb2RlIGlzIGxpY2Vuc2VkIHVuZGVyIHRoZSBNSVQgbGljZW5zZSBmb3VuZCBpbiB0aGVcbiAqIExJQ0VOU0UgZmlsZSBpbiB0aGUgcm9vdCBkaXJlY3Rvcnkgb2YgdGhpcyBzb3VyY2UgdHJlZS5cbiAqL1xuJ3VzZSBzdHJpY3QnO2Z1bmN0aW9uIGYoYSxiKXt2YXIgYz1hLmxlbmd0aDthLnB1c2goYik7YTpmb3IoOzA8Yzspe3ZhciBkPWMtMT4+PjEsZT1hW2RdO2lmKDA8ZyhlLGIpKWFbZF09YixhW2NdPWUsYz1kO2Vsc2UgYnJlYWsgYX19ZnVuY3Rpb24gaChhKXtyZXR1cm4gMD09PWEubGVuZ3RoP251bGw6YVswXX1mdW5jdGlvbiBrKGEpe2lmKDA9PT1hLmxlbmd0aClyZXR1cm4gbnVsbDt2YXIgYj1hWzBdLGM9YS5wb3AoKTtpZihjIT09Yil7YVswXT1jO2E6Zm9yKHZhciBkPTAsZT1hLmxlbmd0aCx3PWU+Pj4xO2Q8dzspe3ZhciBtPTIqKGQrMSktMSxDPWFbbV0sbj1tKzEseD1hW25dO2lmKDA+ZyhDLGMpKW48ZSYmMD5nKHgsQyk/KGFbZF09eCxhW25dPWMsZD1uKTooYVtkXT1DLGFbbV09YyxkPW0pO2Vsc2UgaWYobjxlJiYwPmcoeCxjKSlhW2RdPXgsYVtuXT1jLGQ9bjtlbHNlIGJyZWFrIGF9fXJldHVybiBifVxuZnVuY3Rpb24gZyhhLGIpe3ZhciBjPWEuc29ydEluZGV4LWIuc29ydEluZGV4O3JldHVybiAwIT09Yz9jOmEuaWQtYi5pZH1pZihcIm9iamVjdFwiPT09dHlwZW9mIHBlcmZvcm1hbmNlJiZcImZ1bmN0aW9uXCI9PT10eXBlb2YgcGVyZm9ybWFuY2Uubm93KXt2YXIgbD1wZXJmb3JtYW5jZTtleHBvcnRzLnVuc3RhYmxlX25vdz1mdW5jdGlvbigpe3JldHVybiBsLm5vdygpfX1lbHNle3ZhciBwPURhdGUscT1wLm5vdygpO2V4cG9ydHMudW5zdGFibGVfbm93PWZ1bmN0aW9uKCl7cmV0dXJuIHAubm93KCktcX19dmFyIHI9W10sdD1bXSx1PTEsdj1udWxsLHk9Myx6PSExLEE9ITEsQj0hMSxEPVwiZnVuY3Rpb25cIj09PXR5cGVvZiBzZXRUaW1lb3V0P3NldFRpbWVvdXQ6bnVsbCxFPVwiZnVuY3Rpb25cIj09PXR5cGVvZiBjbGVhclRpbWVvdXQ/Y2xlYXJUaW1lb3V0Om51bGwsRj1cInVuZGVmaW5lZFwiIT09dHlwZW9mIHNldEltbWVkaWF0ZT9zZXRJbW1lZGlhdGU6bnVsbDtcblwidW5kZWZpbmVkXCIhPT10eXBlb2YgbmF2aWdhdG9yJiZ2b2lkIDAhPT1uYXZpZ2F0b3Iuc2NoZWR1bGluZyYmdm9pZCAwIT09bmF2aWdhdG9yLnNjaGVkdWxpbmcuaXNJbnB1dFBlbmRpbmcmJm5hdmlnYXRvci5zY2hlZHVsaW5nLmlzSW5wdXRQZW5kaW5nLmJpbmQobmF2aWdhdG9yLnNjaGVkdWxpbmcpO2Z1bmN0aW9uIEcoYSl7Zm9yKHZhciBiPWgodCk7bnVsbCE9PWI7KXtpZihudWxsPT09Yi5jYWxsYmFjaylrKHQpO2Vsc2UgaWYoYi5zdGFydFRpbWU8PWEpayh0KSxiLnNvcnRJbmRleD1iLmV4cGlyYXRpb25UaW1lLGYocixiKTtlbHNlIGJyZWFrO2I9aCh0KX19ZnVuY3Rpb24gSChhKXtCPSExO0coYSk7aWYoIUEpaWYobnVsbCE9PWgocikpQT0hMCxJKEopO2Vsc2V7dmFyIGI9aCh0KTtudWxsIT09YiYmSyhILGIuc3RhcnRUaW1lLWEpfX1cbmZ1bmN0aW9uIEooYSxiKXtBPSExO0ImJihCPSExLEUoTCksTD0tMSk7ej0hMDt2YXIgYz15O3RyeXtHKGIpO2Zvcih2PWgocik7bnVsbCE9PXYmJighKHYuZXhwaXJhdGlvblRpbWU+Yil8fGEmJiFNKCkpOyl7dmFyIGQ9di5jYWxsYmFjaztpZihcImZ1bmN0aW9uXCI9PT10eXBlb2YgZCl7di5jYWxsYmFjaz1udWxsO3k9di5wcmlvcml0eUxldmVsO3ZhciBlPWQodi5leHBpcmF0aW9uVGltZTw9Yik7Yj1leHBvcnRzLnVuc3RhYmxlX25vdygpO1wiZnVuY3Rpb25cIj09PXR5cGVvZiBlP3YuY2FsbGJhY2s9ZTp2PT09aChyKSYmayhyKTtHKGIpfWVsc2UgayhyKTt2PWgocil9aWYobnVsbCE9PXYpdmFyIHc9ITA7ZWxzZXt2YXIgbT1oKHQpO251bGwhPT1tJiZLKEgsbS5zdGFydFRpbWUtYik7dz0hMX1yZXR1cm4gd31maW5hbGx5e3Y9bnVsbCx5PWMsej0hMX19dmFyIE49ITEsTz1udWxsLEw9LTEsUD01LFE9LTE7XG5mdW5jdGlvbiBNKCl7cmV0dXJuIGV4cG9ydHMudW5zdGFibGVfbm93KCktUTxQPyExOiEwfWZ1bmN0aW9uIFIoKXtpZihudWxsIT09Tyl7dmFyIGE9ZXhwb3J0cy51bnN0YWJsZV9ub3coKTtRPWE7dmFyIGI9ITA7dHJ5e2I9TyghMCxhKX1maW5hbGx5e2I/UygpOihOPSExLE89bnVsbCl9fWVsc2UgTj0hMX12YXIgUztpZihcImZ1bmN0aW9uXCI9PT10eXBlb2YgRilTPWZ1bmN0aW9uKCl7RihSKX07ZWxzZSBpZihcInVuZGVmaW5lZFwiIT09dHlwZW9mIE1lc3NhZ2VDaGFubmVsKXt2YXIgVD1uZXcgTWVzc2FnZUNoYW5uZWwsVT1ULnBvcnQyO1QucG9ydDEub25tZXNzYWdlPVI7Uz1mdW5jdGlvbigpe1UucG9zdE1lc3NhZ2UobnVsbCl9fWVsc2UgUz1mdW5jdGlvbigpe0QoUiwwKX07ZnVuY3Rpb24gSShhKXtPPWE7Tnx8KE49ITAsUygpKX1mdW5jdGlvbiBLKGEsYil7TD1EKGZ1bmN0aW9uKCl7YShleHBvcnRzLnVuc3RhYmxlX25vdygpKX0sYil9XG5leHBvcnRzLnVuc3RhYmxlX0lkbGVQcmlvcml0eT01O2V4cG9ydHMudW5zdGFibGVfSW1tZWRpYXRlUHJpb3JpdHk9MTtleHBvcnRzLnVuc3RhYmxlX0xvd1ByaW9yaXR5PTQ7ZXhwb3J0cy51bnN0YWJsZV9Ob3JtYWxQcmlvcml0eT0zO2V4cG9ydHMudW5zdGFibGVfUHJvZmlsaW5nPW51bGw7ZXhwb3J0cy51bnN0YWJsZV9Vc2VyQmxvY2tpbmdQcmlvcml0eT0yO2V4cG9ydHMudW5zdGFibGVfY2FuY2VsQ2FsbGJhY2s9ZnVuY3Rpb24oYSl7YS5jYWxsYmFjaz1udWxsfTtleHBvcnRzLnVuc3RhYmxlX2NvbnRpbnVlRXhlY3V0aW9uPWZ1bmN0aW9uKCl7QXx8enx8KEE9ITAsSShKKSl9O1xuZXhwb3J0cy51bnN0YWJsZV9mb3JjZUZyYW1lUmF0ZT1mdW5jdGlvbihhKXswPmF8fDEyNTxhP2NvbnNvbGUuZXJyb3IoXCJmb3JjZUZyYW1lUmF0ZSB0YWtlcyBhIHBvc2l0aXZlIGludCBiZXR3ZWVuIDAgYW5kIDEyNSwgZm9yY2luZyBmcmFtZSByYXRlcyBoaWdoZXIgdGhhbiAxMjUgZnBzIGlzIG5vdCBzdXBwb3J0ZWRcIik6UD0wPGE/TWF0aC5mbG9vcigxRTMvYSk6NX07ZXhwb3J0cy51bnN0YWJsZV9nZXRDdXJyZW50UHJpb3JpdHlMZXZlbD1mdW5jdGlvbigpe3JldHVybiB5fTtleHBvcnRzLnVuc3RhYmxlX2dldEZpcnN0Q2FsbGJhY2tOb2RlPWZ1bmN0aW9uKCl7cmV0dXJuIGgocil9O2V4cG9ydHMudW5zdGFibGVfbmV4dD1mdW5jdGlvbihhKXtzd2l0Y2goeSl7Y2FzZSAxOmNhc2UgMjpjYXNlIDM6dmFyIGI9MzticmVhaztkZWZhdWx0OmI9eX12YXIgYz15O3k9Yjt0cnl7cmV0dXJuIGEoKX1maW5hbGx5e3k9Y319O2V4cG9ydHMudW5zdGFibGVfcGF1c2VFeGVjdXRpb249ZnVuY3Rpb24oKXt9O1xuZXhwb3J0cy51bnN0YWJsZV9yZXF1ZXN0UGFpbnQ9ZnVuY3Rpb24oKXt9O2V4cG9ydHMudW5zdGFibGVfcnVuV2l0aFByaW9yaXR5PWZ1bmN0aW9uKGEsYil7c3dpdGNoKGEpe2Nhc2UgMTpjYXNlIDI6Y2FzZSAzOmNhc2UgNDpjYXNlIDU6YnJlYWs7ZGVmYXVsdDphPTN9dmFyIGM9eTt5PWE7dHJ5e3JldHVybiBiKCl9ZmluYWxseXt5PWN9fTtcbmV4cG9ydHMudW5zdGFibGVfc2NoZWR1bGVDYWxsYmFjaz1mdW5jdGlvbihhLGIsYyl7dmFyIGQ9ZXhwb3J0cy51bnN0YWJsZV9ub3coKTtcIm9iamVjdFwiPT09dHlwZW9mIGMmJm51bGwhPT1jPyhjPWMuZGVsYXksYz1cIm51bWJlclwiPT09dHlwZW9mIGMmJjA8Yz9kK2M6ZCk6Yz1kO3N3aXRjaChhKXtjYXNlIDE6dmFyIGU9LTE7YnJlYWs7Y2FzZSAyOmU9MjUwO2JyZWFrO2Nhc2UgNTplPTEwNzM3NDE4MjM7YnJlYWs7Y2FzZSA0OmU9MUU0O2JyZWFrO2RlZmF1bHQ6ZT01RTN9ZT1jK2U7YT17aWQ6dSsrLGNhbGxiYWNrOmIscHJpb3JpdHlMZXZlbDphLHN0YXJ0VGltZTpjLGV4cGlyYXRpb25UaW1lOmUsc29ydEluZGV4Oi0xfTtjPmQ/KGEuc29ydEluZGV4PWMsZih0LGEpLG51bGw9PT1oKHIpJiZhPT09aCh0KSYmKEI/KEUoTCksTD0tMSk6Qj0hMCxLKEgsYy1kKSkpOihhLnNvcnRJbmRleD1lLGYocixhKSxBfHx6fHwoQT0hMCxJKEopKSk7cmV0dXJuIGF9O1xuZXhwb3J0cy51bnN0YWJsZV9zaG91bGRZaWVsZD1NO2V4cG9ydHMudW5zdGFibGVfd3JhcENhbGxiYWNrPWZ1bmN0aW9uKGEpe3ZhciBiPXk7cmV0dXJuIGZ1bmN0aW9uKCl7dmFyIGM9eTt5PWI7dHJ5e3JldHVybiBhLmFwcGx5KHRoaXMsYXJndW1lbnRzKX1maW5hbGx5e3k9Y319fTtcbiIsIid1c2Ugc3RyaWN0JztcblxuaWYgKHByb2Nlc3MuZW52Lk5PREVfRU5WID09PSAncHJvZHVjdGlvbicpIHtcbiAgbW9kdWxlLmV4cG9ydHMgPSByZXF1aXJlKCcuL2Nqcy9zY2hlZHVsZXIucHJvZHVjdGlvbi5taW4uanMnKTtcbn0gZWxzZSB7XG4gIG1vZHVsZS5leHBvcnRzID0gcmVxdWlyZSgnLi9janMvc2NoZWR1bGVyLmRldmVsb3BtZW50LmpzJyk7XG59XG4iLCIvLyBUaGUgbW9kdWxlIGNhY2hlXG52YXIgX193ZWJwYWNrX21vZHVsZV9jYWNoZV9fID0ge307XG5cbi8vIFRoZSByZXF1aXJlIGZ1bmN0aW9uXG5mdW5jdGlvbiBfX3dlYnBhY2tfcmVxdWlyZV9fKG1vZHVsZUlkKSB7XG5cdC8vIENoZWNrIGlmIG1vZHVsZSBpcyBpbiBjYWNoZVxuXHR2YXIgY2FjaGVkTW9kdWxlID0gX193ZWJwYWNrX21vZHVsZV9jYWNoZV9fW21vZHVsZUlkXTtcblx0aWYgKGNhY2hlZE1vZHVsZSAhPT0gdW5kZWZpbmVkKSB7XG5cdFx0aWYgKGNhY2hlZE1vZHVsZS5lcnJvciAhPT0gdW5kZWZpbmVkKSB0aHJvdyBjYWNoZWRNb2R1bGUuZXJyb3I7XG5cdFx0cmV0dXJuIGNhY2hlZE1vZHVsZS5leHBvcnRzO1xuXHR9XG5cdC8vIENyZWF0ZSBhIG5ldyBtb2R1bGUgKGFuZCBwdXQgaXQgaW50byB0aGUgY2FjaGUpXG5cdHZhciBtb2R1bGUgPSBfX3dlYnBhY2tfbW9kdWxlX2NhY2hlX19bbW9kdWxlSWRdID0ge1xuXHRcdC8vIG5vIG1vZHVsZS5pZCBuZWVkZWRcblx0XHQvLyBubyBtb2R1bGUubG9hZGVkIG5lZWRlZFxuXHRcdGV4cG9ydHM6IHt9XG5cdH07XG5cblx0Ly8gRXhlY3V0ZSB0aGUgbW9kdWxlIGZ1bmN0aW9uXG5cdHRyeSB7XG5cdFx0dmFyIGV4ZWNPcHRpb25zID0geyBpZDogbW9kdWxlSWQsIG1vZHVsZTogbW9kdWxlLCBmYWN0b3J5OiBfX3dlYnBhY2tfbW9kdWxlc19fW21vZHVsZUlkXSwgcmVxdWlyZTogX193ZWJwYWNrX3JlcXVpcmVfXyB9O1xuXHRcdF9fd2VicGFja19yZXF1aXJlX18uaS5mb3JFYWNoKGZ1bmN0aW9uKGhhbmRsZXIpIHsgaGFuZGxlcihleGVjT3B0aW9ucyk7IH0pO1xuXHRcdG1vZHVsZSA9IGV4ZWNPcHRpb25zLm1vZHVsZTtcblx0XHRleGVjT3B0aW9ucy5mYWN0b3J5LmNhbGwobW9kdWxlLmV4cG9ydHMsIG1vZHVsZSwgbW9kdWxlLmV4cG9ydHMsIGV4ZWNPcHRpb25zLnJlcXVpcmUpO1xuXHR9IGNhdGNoKGUpIHtcblx0XHRtb2R1bGUuZXJyb3IgPSBlO1xuXHRcdHRocm93IGU7XG5cdH1cblxuXHQvLyBSZXR1cm4gdGhlIGV4cG9ydHMgb2YgdGhlIG1vZHVsZVxuXHRyZXR1cm4gbW9kdWxlLmV4cG9ydHM7XG59XG5cbi8vIGV4cG9zZSB0aGUgbW9kdWxlcyBvYmplY3QgKF9fd2VicGFja19tb2R1bGVzX18pXG5fX3dlYnBhY2tfcmVxdWlyZV9fLm0gPSBfX3dlYnBhY2tfbW9kdWxlc19fO1xuXG4vLyBleHBvc2UgdGhlIG1vZHVsZSBjYWNoZVxuX193ZWJwYWNrX3JlcXVpcmVfXy5jID0gX193ZWJwYWNrX21vZHVsZV9jYWNoZV9fO1xuXG4vLyBleHBvc2UgdGhlIG1vZHVsZSBleGVjdXRpb24gaW50ZXJjZXB0b3Jcbl9fd2VicGFja19yZXF1aXJlX18uaSA9IFtdO1xuXG4iLCIvLyBkZWZpbmUgZ2V0dGVyIGZ1bmN0aW9ucyBmb3IgaGFybW9ueSBleHBvcnRzXG5fX3dlYnBhY2tfcmVxdWlyZV9fLmQgPSAoZXhwb3J0cywgZGVmaW5pdGlvbikgPT4ge1xuXHRmb3IodmFyIGtleSBpbiBkZWZpbml0aW9uKSB7XG5cdFx0aWYoX193ZWJwYWNrX3JlcXVpcmVfXy5vKGRlZmluaXRpb24sIGtleSkgJiYgIV9fd2VicGFja19yZXF1aXJlX18ubyhleHBvcnRzLCBrZXkpKSB7XG5cdFx0XHRPYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywga2V5LCB7IGVudW1lcmFibGU6IHRydWUsIGdldDogZGVmaW5pdGlvbltrZXldIH0pO1xuXHRcdH1cblx0fVxufTsiLCIvLyBUaGlzIGZ1bmN0aW9uIGFsbG93IHRvIHJlZmVyZW5jZSBhbGwgY2h1bmtzXG5fX3dlYnBhY2tfcmVxdWlyZV9fLmh1ID0gKGNodW5rSWQpID0+IHtcblx0Ly8gcmV0dXJuIHVybCBmb3IgZmlsZW5hbWVzIGJhc2VkIG9uIHRlbXBsYXRlXG5cdHJldHVybiBcIlwiICsgY2h1bmtJZCArIFwiLlwiICsgX193ZWJwYWNrX3JlcXVpcmVfXy5oKCkgKyBcIi5ob3QtdXBkYXRlLmpzXCI7XG59OyIsIi8vIFRoaXMgZnVuY3Rpb24gYWxsb3cgdG8gcmVmZXJlbmNlIGFzeW5jIGNodW5rc1xuX193ZWJwYWNrX3JlcXVpcmVfXy5taW5pQ3NzRiA9IChjaHVua0lkKSA9PiB7XG5cdC8vIHJldHVybiB1cmwgZm9yIGZpbGVuYW1lcyBiYXNlZCBvbiB0ZW1wbGF0ZVxuXHRyZXR1cm4gdW5kZWZpbmVkO1xufTsiLCJfX3dlYnBhY2tfcmVxdWlyZV9fLmhtckYgPSAoKSA9PiAoXCJtYWluLlwiICsgX193ZWJwYWNrX3JlcXVpcmVfXy5oKCkgKyBcIi5ob3QtdXBkYXRlLmpzb25cIik7IiwiX193ZWJwYWNrX3JlcXVpcmVfXy5oID0gKCkgPT4gKFwiY2M1NDFjYmM2NTdlNThiNzY1NThcIikiLCJfX3dlYnBhY2tfcmVxdWlyZV9fLmcgPSAoZnVuY3Rpb24oKSB7XG5cdGlmICh0eXBlb2YgZ2xvYmFsVGhpcyA9PT0gJ29iamVjdCcpIHJldHVybiBnbG9iYWxUaGlzO1xuXHR0cnkge1xuXHRcdHJldHVybiB0aGlzIHx8IG5ldyBGdW5jdGlvbigncmV0dXJuIHRoaXMnKSgpO1xuXHR9IGNhdGNoIChlKSB7XG5cdFx0aWYgKHR5cGVvZiB3aW5kb3cgPT09ICdvYmplY3QnKSByZXR1cm4gd2luZG93O1xuXHR9XG59KSgpOyIsIl9fd2VicGFja19yZXF1aXJlX18ubyA9IChvYmosIHByb3ApID0+IChPYmplY3QucHJvdG90eXBlLmhhc093blByb3BlcnR5LmNhbGwob2JqLCBwcm9wKSkiLCIvLyBkZWZpbmUgX19lc01vZHVsZSBvbiBleHBvcnRzXG5fX3dlYnBhY2tfcmVxdWlyZV9fLnIgPSAoZXhwb3J0cykgPT4ge1xuXHRpZih0eXBlb2YgU3ltYm9sICE9PSAndW5kZWZpbmVkJyAmJiBTeW1ib2wudG9TdHJpbmdUYWcpIHtcblx0XHRPYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgU3ltYm9sLnRvU3RyaW5nVGFnLCB7IHZhbHVlOiAnTW9kdWxlJyB9KTtcblx0fVxuXHRPYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgJ19fZXNNb2R1bGUnLCB7IHZhbHVlOiB0cnVlIH0pO1xufTsiLCJ2YXIgY3VycmVudE1vZHVsZURhdGEgPSB7fTtcbnZhciBpbnN0YWxsZWRNb2R1bGVzID0gX193ZWJwYWNrX3JlcXVpcmVfXy5jO1xuXG4vLyBtb2R1bGUgYW5kIHJlcXVpcmUgY3JlYXRpb25cbnZhciBjdXJyZW50Q2hpbGRNb2R1bGU7XG52YXIgY3VycmVudFBhcmVudHMgPSBbXTtcblxuLy8gc3RhdHVzXG52YXIgcmVnaXN0ZXJlZFN0YXR1c0hhbmRsZXJzID0gW107XG52YXIgY3VycmVudFN0YXR1cyA9IFwiaWRsZVwiO1xuXG4vLyB3aGlsZSBkb3dubG9hZGluZ1xudmFyIGJsb2NraW5nUHJvbWlzZXMgPSAwO1xudmFyIGJsb2NraW5nUHJvbWlzZXNXYWl0aW5nID0gW107XG5cbi8vIFRoZSB1cGRhdGUgaW5mb1xudmFyIGN1cnJlbnRVcGRhdGVBcHBseUhhbmRsZXJzO1xudmFyIHF1ZXVlZEludmFsaWRhdGVkTW9kdWxlcztcblxuLy8gZXNsaW50LWRpc2FibGUtbmV4dC1saW5lIG5vLXVudXNlZC12YXJzXG5fX3dlYnBhY2tfcmVxdWlyZV9fLmhtckQgPSBjdXJyZW50TW9kdWxlRGF0YTtcblxuX193ZWJwYWNrX3JlcXVpcmVfXy5pLnB1c2goZnVuY3Rpb24gKG9wdGlvbnMpIHtcblx0dmFyIG1vZHVsZSA9IG9wdGlvbnMubW9kdWxlO1xuXHR2YXIgcmVxdWlyZSA9IGNyZWF0ZVJlcXVpcmUob3B0aW9ucy5yZXF1aXJlLCBvcHRpb25zLmlkKTtcblx0bW9kdWxlLmhvdCA9IGNyZWF0ZU1vZHVsZUhvdE9iamVjdChvcHRpb25zLmlkLCBtb2R1bGUpO1xuXHRtb2R1bGUucGFyZW50cyA9IGN1cnJlbnRQYXJlbnRzO1xuXHRtb2R1bGUuY2hpbGRyZW4gPSBbXTtcblx0Y3VycmVudFBhcmVudHMgPSBbXTtcblx0b3B0aW9ucy5yZXF1aXJlID0gcmVxdWlyZTtcbn0pO1xuXG5fX3dlYnBhY2tfcmVxdWlyZV9fLmhtckMgPSB7fTtcbl9fd2VicGFja19yZXF1aXJlX18uaG1ySSA9IHt9O1xuXG5mdW5jdGlvbiBjcmVhdGVSZXF1aXJlKHJlcXVpcmUsIG1vZHVsZUlkKSB7XG5cdHZhciBtZSA9IGluc3RhbGxlZE1vZHVsZXNbbW9kdWxlSWRdO1xuXHRpZiAoIW1lKSByZXR1cm4gcmVxdWlyZTtcblx0dmFyIGZuID0gZnVuY3Rpb24gKHJlcXVlc3QpIHtcblx0XHRpZiAobWUuaG90LmFjdGl2ZSkge1xuXHRcdFx0aWYgKGluc3RhbGxlZE1vZHVsZXNbcmVxdWVzdF0pIHtcblx0XHRcdFx0dmFyIHBhcmVudHMgPSBpbnN0YWxsZWRNb2R1bGVzW3JlcXVlc3RdLnBhcmVudHM7XG5cdFx0XHRcdGlmIChwYXJlbnRzLmluZGV4T2YobW9kdWxlSWQpID09PSAtMSkge1xuXHRcdFx0XHRcdHBhcmVudHMucHVzaChtb2R1bGVJZCk7XG5cdFx0XHRcdH1cblx0XHRcdH0gZWxzZSB7XG5cdFx0XHRcdGN1cnJlbnRQYXJlbnRzID0gW21vZHVsZUlkXTtcblx0XHRcdFx0Y3VycmVudENoaWxkTW9kdWxlID0gcmVxdWVzdDtcblx0XHRcdH1cblx0XHRcdGlmIChtZS5jaGlsZHJlbi5pbmRleE9mKHJlcXVlc3QpID09PSAtMSkge1xuXHRcdFx0XHRtZS5jaGlsZHJlbi5wdXNoKHJlcXVlc3QpO1xuXHRcdFx0fVxuXHRcdH0gZWxzZSB7XG5cdFx0XHRjb25zb2xlLndhcm4oXG5cdFx0XHRcdFwiW0hNUl0gdW5leHBlY3RlZCByZXF1aXJlKFwiICtcblx0XHRcdFx0XHRyZXF1ZXN0ICtcblx0XHRcdFx0XHRcIikgZnJvbSBkaXNwb3NlZCBtb2R1bGUgXCIgK1xuXHRcdFx0XHRcdG1vZHVsZUlkXG5cdFx0XHQpO1xuXHRcdFx0Y3VycmVudFBhcmVudHMgPSBbXTtcblx0XHR9XG5cdFx0cmV0dXJuIHJlcXVpcmUocmVxdWVzdCk7XG5cdH07XG5cdHZhciBjcmVhdGVQcm9wZXJ0eURlc2NyaXB0b3IgPSBmdW5jdGlvbiAobmFtZSkge1xuXHRcdHJldHVybiB7XG5cdFx0XHRjb25maWd1cmFibGU6IHRydWUsXG5cdFx0XHRlbnVtZXJhYmxlOiB0cnVlLFxuXHRcdFx0Z2V0OiBmdW5jdGlvbiAoKSB7XG5cdFx0XHRcdHJldHVybiByZXF1aXJlW25hbWVdO1xuXHRcdFx0fSxcblx0XHRcdHNldDogZnVuY3Rpb24gKHZhbHVlKSB7XG5cdFx0XHRcdHJlcXVpcmVbbmFtZV0gPSB2YWx1ZTtcblx0XHRcdH1cblx0XHR9O1xuXHR9O1xuXHRmb3IgKHZhciBuYW1lIGluIHJlcXVpcmUpIHtcblx0XHRpZiAoT2JqZWN0LnByb3RvdHlwZS5oYXNPd25Qcm9wZXJ0eS5jYWxsKHJlcXVpcmUsIG5hbWUpICYmIG5hbWUgIT09IFwiZVwiKSB7XG5cdFx0XHRPYmplY3QuZGVmaW5lUHJvcGVydHkoZm4sIG5hbWUsIGNyZWF0ZVByb3BlcnR5RGVzY3JpcHRvcihuYW1lKSk7XG5cdFx0fVxuXHR9XG5cdGZuLmUgPSBmdW5jdGlvbiAoY2h1bmtJZCkge1xuXHRcdHJldHVybiB0cmFja0Jsb2NraW5nUHJvbWlzZShyZXF1aXJlLmUoY2h1bmtJZCkpO1xuXHR9O1xuXHRyZXR1cm4gZm47XG59XG5cbmZ1bmN0aW9uIGNyZWF0ZU1vZHVsZUhvdE9iamVjdChtb2R1bGVJZCwgbWUpIHtcblx0dmFyIF9tYWluID0gY3VycmVudENoaWxkTW9kdWxlICE9PSBtb2R1bGVJZDtcblx0dmFyIGhvdCA9IHtcblx0XHQvLyBwcml2YXRlIHN0dWZmXG5cdFx0X2FjY2VwdGVkRGVwZW5kZW5jaWVzOiB7fSxcblx0XHRfYWNjZXB0ZWRFcnJvckhhbmRsZXJzOiB7fSxcblx0XHRfZGVjbGluZWREZXBlbmRlbmNpZXM6IHt9LFxuXHRcdF9zZWxmQWNjZXB0ZWQ6IGZhbHNlLFxuXHRcdF9zZWxmRGVjbGluZWQ6IGZhbHNlLFxuXHRcdF9zZWxmSW52YWxpZGF0ZWQ6IGZhbHNlLFxuXHRcdF9kaXNwb3NlSGFuZGxlcnM6IFtdLFxuXHRcdF9tYWluOiBfbWFpbixcblx0XHRfcmVxdWlyZVNlbGY6IGZ1bmN0aW9uICgpIHtcblx0XHRcdGN1cnJlbnRQYXJlbnRzID0gbWUucGFyZW50cy5zbGljZSgpO1xuXHRcdFx0Y3VycmVudENoaWxkTW9kdWxlID0gX21haW4gPyB1bmRlZmluZWQgOiBtb2R1bGVJZDtcblx0XHRcdF9fd2VicGFja19yZXF1aXJlX18obW9kdWxlSWQpO1xuXHRcdH0sXG5cblx0XHQvLyBNb2R1bGUgQVBJXG5cdFx0YWN0aXZlOiB0cnVlLFxuXHRcdGFjY2VwdDogZnVuY3Rpb24gKGRlcCwgY2FsbGJhY2ssIGVycm9ySGFuZGxlcikge1xuXHRcdFx0aWYgKGRlcCA9PT0gdW5kZWZpbmVkKSBob3QuX3NlbGZBY2NlcHRlZCA9IHRydWU7XG5cdFx0XHRlbHNlIGlmICh0eXBlb2YgZGVwID09PSBcImZ1bmN0aW9uXCIpIGhvdC5fc2VsZkFjY2VwdGVkID0gZGVwO1xuXHRcdFx0ZWxzZSBpZiAodHlwZW9mIGRlcCA9PT0gXCJvYmplY3RcIiAmJiBkZXAgIT09IG51bGwpIHtcblx0XHRcdFx0Zm9yICh2YXIgaSA9IDA7IGkgPCBkZXAubGVuZ3RoOyBpKyspIHtcblx0XHRcdFx0XHRob3QuX2FjY2VwdGVkRGVwZW5kZW5jaWVzW2RlcFtpXV0gPSBjYWxsYmFjayB8fCBmdW5jdGlvbiAoKSB7fTtcblx0XHRcdFx0XHRob3QuX2FjY2VwdGVkRXJyb3JIYW5kbGVyc1tkZXBbaV1dID0gZXJyb3JIYW5kbGVyO1xuXHRcdFx0XHR9XG5cdFx0XHR9IGVsc2Uge1xuXHRcdFx0XHRob3QuX2FjY2VwdGVkRGVwZW5kZW5jaWVzW2RlcF0gPSBjYWxsYmFjayB8fCBmdW5jdGlvbiAoKSB7fTtcblx0XHRcdFx0aG90Ll9hY2NlcHRlZEVycm9ySGFuZGxlcnNbZGVwXSA9IGVycm9ySGFuZGxlcjtcblx0XHRcdH1cblx0XHR9LFxuXHRcdGRlY2xpbmU6IGZ1bmN0aW9uIChkZXApIHtcblx0XHRcdGlmIChkZXAgPT09IHVuZGVmaW5lZCkgaG90Ll9zZWxmRGVjbGluZWQgPSB0cnVlO1xuXHRcdFx0ZWxzZSBpZiAodHlwZW9mIGRlcCA9PT0gXCJvYmplY3RcIiAmJiBkZXAgIT09IG51bGwpXG5cdFx0XHRcdGZvciAodmFyIGkgPSAwOyBpIDwgZGVwLmxlbmd0aDsgaSsrKVxuXHRcdFx0XHRcdGhvdC5fZGVjbGluZWREZXBlbmRlbmNpZXNbZGVwW2ldXSA9IHRydWU7XG5cdFx0XHRlbHNlIGhvdC5fZGVjbGluZWREZXBlbmRlbmNpZXNbZGVwXSA9IHRydWU7XG5cdFx0fSxcblx0XHRkaXNwb3NlOiBmdW5jdGlvbiAoY2FsbGJhY2spIHtcblx0XHRcdGhvdC5fZGlzcG9zZUhhbmRsZXJzLnB1c2goY2FsbGJhY2spO1xuXHRcdH0sXG5cdFx0YWRkRGlzcG9zZUhhbmRsZXI6IGZ1bmN0aW9uIChjYWxsYmFjaykge1xuXHRcdFx0aG90Ll9kaXNwb3NlSGFuZGxlcnMucHVzaChjYWxsYmFjayk7XG5cdFx0fSxcblx0XHRyZW1vdmVEaXNwb3NlSGFuZGxlcjogZnVuY3Rpb24gKGNhbGxiYWNrKSB7XG5cdFx0XHR2YXIgaWR4ID0gaG90Ll9kaXNwb3NlSGFuZGxlcnMuaW5kZXhPZihjYWxsYmFjayk7XG5cdFx0XHRpZiAoaWR4ID49IDApIGhvdC5fZGlzcG9zZUhhbmRsZXJzLnNwbGljZShpZHgsIDEpO1xuXHRcdH0sXG5cdFx0aW52YWxpZGF0ZTogZnVuY3Rpb24gKCkge1xuXHRcdFx0dGhpcy5fc2VsZkludmFsaWRhdGVkID0gdHJ1ZTtcblx0XHRcdHN3aXRjaCAoY3VycmVudFN0YXR1cykge1xuXHRcdFx0XHRjYXNlIFwiaWRsZVwiOlxuXHRcdFx0XHRcdGN1cnJlbnRVcGRhdGVBcHBseUhhbmRsZXJzID0gW107XG5cdFx0XHRcdFx0T2JqZWN0LmtleXMoX193ZWJwYWNrX3JlcXVpcmVfXy5obXJJKS5mb3JFYWNoKGZ1bmN0aW9uIChrZXkpIHtcblx0XHRcdFx0XHRcdF9fd2VicGFja19yZXF1aXJlX18uaG1ySVtrZXldKFxuXHRcdFx0XHRcdFx0XHRtb2R1bGVJZCxcblx0XHRcdFx0XHRcdFx0Y3VycmVudFVwZGF0ZUFwcGx5SGFuZGxlcnNcblx0XHRcdFx0XHRcdCk7XG5cdFx0XHRcdFx0fSk7XG5cdFx0XHRcdFx0c2V0U3RhdHVzKFwicmVhZHlcIik7XG5cdFx0XHRcdFx0YnJlYWs7XG5cdFx0XHRcdGNhc2UgXCJyZWFkeVwiOlxuXHRcdFx0XHRcdE9iamVjdC5rZXlzKF9fd2VicGFja19yZXF1aXJlX18uaG1ySSkuZm9yRWFjaChmdW5jdGlvbiAoa2V5KSB7XG5cdFx0XHRcdFx0XHRfX3dlYnBhY2tfcmVxdWlyZV9fLmhtcklba2V5XShcblx0XHRcdFx0XHRcdFx0bW9kdWxlSWQsXG5cdFx0XHRcdFx0XHRcdGN1cnJlbnRVcGRhdGVBcHBseUhhbmRsZXJzXG5cdFx0XHRcdFx0XHQpO1xuXHRcdFx0XHRcdH0pO1xuXHRcdFx0XHRcdGJyZWFrO1xuXHRcdFx0XHRjYXNlIFwicHJlcGFyZVwiOlxuXHRcdFx0XHRjYXNlIFwiY2hlY2tcIjpcblx0XHRcdFx0Y2FzZSBcImRpc3Bvc2VcIjpcblx0XHRcdFx0Y2FzZSBcImFwcGx5XCI6XG5cdFx0XHRcdFx0KHF1ZXVlZEludmFsaWRhdGVkTW9kdWxlcyA9IHF1ZXVlZEludmFsaWRhdGVkTW9kdWxlcyB8fCBbXSkucHVzaChcblx0XHRcdFx0XHRcdG1vZHVsZUlkXG5cdFx0XHRcdFx0KTtcblx0XHRcdFx0XHRicmVhaztcblx0XHRcdFx0ZGVmYXVsdDpcblx0XHRcdFx0XHQvLyBpZ25vcmUgcmVxdWVzdHMgaW4gZXJyb3Igc3RhdGVzXG5cdFx0XHRcdFx0YnJlYWs7XG5cdFx0XHR9XG5cdFx0fSxcblxuXHRcdC8vIE1hbmFnZW1lbnQgQVBJXG5cdFx0Y2hlY2s6IGhvdENoZWNrLFxuXHRcdGFwcGx5OiBob3RBcHBseSxcblx0XHRzdGF0dXM6IGZ1bmN0aW9uIChsKSB7XG5cdFx0XHRpZiAoIWwpIHJldHVybiBjdXJyZW50U3RhdHVzO1xuXHRcdFx0cmVnaXN0ZXJlZFN0YXR1c0hhbmRsZXJzLnB1c2gobCk7XG5cdFx0fSxcblx0XHRhZGRTdGF0dXNIYW5kbGVyOiBmdW5jdGlvbiAobCkge1xuXHRcdFx0cmVnaXN0ZXJlZFN0YXR1c0hhbmRsZXJzLnB1c2gobCk7XG5cdFx0fSxcblx0XHRyZW1vdmVTdGF0dXNIYW5kbGVyOiBmdW5jdGlvbiAobCkge1xuXHRcdFx0dmFyIGlkeCA9IHJlZ2lzdGVyZWRTdGF0dXNIYW5kbGVycy5pbmRleE9mKGwpO1xuXHRcdFx0aWYgKGlkeCA+PSAwKSByZWdpc3RlcmVkU3RhdHVzSGFuZGxlcnMuc3BsaWNlKGlkeCwgMSk7XG5cdFx0fSxcblxuXHRcdC8vaW5oZXJpdCBmcm9tIHByZXZpb3VzIGRpc3Bvc2UgY2FsbFxuXHRcdGRhdGE6IGN1cnJlbnRNb2R1bGVEYXRhW21vZHVsZUlkXVxuXHR9O1xuXHRjdXJyZW50Q2hpbGRNb2R1bGUgPSB1bmRlZmluZWQ7XG5cdHJldHVybiBob3Q7XG59XG5cbmZ1bmN0aW9uIHNldFN0YXR1cyhuZXdTdGF0dXMpIHtcblx0Y3VycmVudFN0YXR1cyA9IG5ld1N0YXR1cztcblx0dmFyIHJlc3VsdHMgPSBbXTtcblxuXHRmb3IgKHZhciBpID0gMDsgaSA8IHJlZ2lzdGVyZWRTdGF0dXNIYW5kbGVycy5sZW5ndGg7IGkrKylcblx0XHRyZXN1bHRzW2ldID0gcmVnaXN0ZXJlZFN0YXR1c0hhbmRsZXJzW2ldLmNhbGwobnVsbCwgbmV3U3RhdHVzKTtcblxuXHRyZXR1cm4gUHJvbWlzZS5hbGwocmVzdWx0cyk7XG59XG5cbmZ1bmN0aW9uIHVuYmxvY2soKSB7XG5cdGlmICgtLWJsb2NraW5nUHJvbWlzZXMgPT09IDApIHtcblx0XHRzZXRTdGF0dXMoXCJyZWFkeVwiKS50aGVuKGZ1bmN0aW9uICgpIHtcblx0XHRcdGlmIChibG9ja2luZ1Byb21pc2VzID09PSAwKSB7XG5cdFx0XHRcdHZhciBsaXN0ID0gYmxvY2tpbmdQcm9taXNlc1dhaXRpbmc7XG5cdFx0XHRcdGJsb2NraW5nUHJvbWlzZXNXYWl0aW5nID0gW107XG5cdFx0XHRcdGZvciAodmFyIGkgPSAwOyBpIDwgbGlzdC5sZW5ndGg7IGkrKykge1xuXHRcdFx0XHRcdGxpc3RbaV0oKTtcblx0XHRcdFx0fVxuXHRcdFx0fVxuXHRcdH0pO1xuXHR9XG59XG5cbmZ1bmN0aW9uIHRyYWNrQmxvY2tpbmdQcm9taXNlKHByb21pc2UpIHtcblx0c3dpdGNoIChjdXJyZW50U3RhdHVzKSB7XG5cdFx0Y2FzZSBcInJlYWR5XCI6XG5cdFx0XHRzZXRTdGF0dXMoXCJwcmVwYXJlXCIpO1xuXHRcdC8qIGZhbGx0aHJvdWdoICovXG5cdFx0Y2FzZSBcInByZXBhcmVcIjpcblx0XHRcdGJsb2NraW5nUHJvbWlzZXMrKztcblx0XHRcdHByb21pc2UudGhlbih1bmJsb2NrLCB1bmJsb2NrKTtcblx0XHRcdHJldHVybiBwcm9taXNlO1xuXHRcdGRlZmF1bHQ6XG5cdFx0XHRyZXR1cm4gcHJvbWlzZTtcblx0fVxufVxuXG5mdW5jdGlvbiB3YWl0Rm9yQmxvY2tpbmdQcm9taXNlcyhmbikge1xuXHRpZiAoYmxvY2tpbmdQcm9taXNlcyA9PT0gMCkgcmV0dXJuIGZuKCk7XG5cdHJldHVybiBuZXcgUHJvbWlzZShmdW5jdGlvbiAocmVzb2x2ZSkge1xuXHRcdGJsb2NraW5nUHJvbWlzZXNXYWl0aW5nLnB1c2goZnVuY3Rpb24gKCkge1xuXHRcdFx0cmVzb2x2ZShmbigpKTtcblx0XHR9KTtcblx0fSk7XG59XG5cbmZ1bmN0aW9uIGhvdENoZWNrKGFwcGx5T25VcGRhdGUpIHtcblx0aWYgKGN1cnJlbnRTdGF0dXMgIT09IFwiaWRsZVwiKSB7XG5cdFx0dGhyb3cgbmV3IEVycm9yKFwiY2hlY2soKSBpcyBvbmx5IGFsbG93ZWQgaW4gaWRsZSBzdGF0dXNcIik7XG5cdH1cblx0cmV0dXJuIHNldFN0YXR1cyhcImNoZWNrXCIpXG5cdFx0LnRoZW4oX193ZWJwYWNrX3JlcXVpcmVfXy5obXJNKVxuXHRcdC50aGVuKGZ1bmN0aW9uICh1cGRhdGUpIHtcblx0XHRcdGlmICghdXBkYXRlKSB7XG5cdFx0XHRcdHJldHVybiBzZXRTdGF0dXMoYXBwbHlJbnZhbGlkYXRlZE1vZHVsZXMoKSA/IFwicmVhZHlcIiA6IFwiaWRsZVwiKS50aGVuKFxuXHRcdFx0XHRcdGZ1bmN0aW9uICgpIHtcblx0XHRcdFx0XHRcdHJldHVybiBudWxsO1xuXHRcdFx0XHRcdH1cblx0XHRcdFx0KTtcblx0XHRcdH1cblxuXHRcdFx0cmV0dXJuIHNldFN0YXR1cyhcInByZXBhcmVcIikudGhlbihmdW5jdGlvbiAoKSB7XG5cdFx0XHRcdHZhciB1cGRhdGVkTW9kdWxlcyA9IFtdO1xuXHRcdFx0XHRjdXJyZW50VXBkYXRlQXBwbHlIYW5kbGVycyA9IFtdO1xuXG5cdFx0XHRcdHJldHVybiBQcm9taXNlLmFsbChcblx0XHRcdFx0XHRPYmplY3Qua2V5cyhfX3dlYnBhY2tfcmVxdWlyZV9fLmhtckMpLnJlZHVjZShmdW5jdGlvbiAoXG5cdFx0XHRcdFx0XHRwcm9taXNlcyxcblx0XHRcdFx0XHRcdGtleVxuXHRcdFx0XHRcdCkge1xuXHRcdFx0XHRcdFx0X193ZWJwYWNrX3JlcXVpcmVfXy5obXJDW2tleV0oXG5cdFx0XHRcdFx0XHRcdHVwZGF0ZS5jLFxuXHRcdFx0XHRcdFx0XHR1cGRhdGUucixcblx0XHRcdFx0XHRcdFx0dXBkYXRlLm0sXG5cdFx0XHRcdFx0XHRcdHByb21pc2VzLFxuXHRcdFx0XHRcdFx0XHRjdXJyZW50VXBkYXRlQXBwbHlIYW5kbGVycyxcblx0XHRcdFx0XHRcdFx0dXBkYXRlZE1vZHVsZXNcblx0XHRcdFx0XHRcdCk7XG5cdFx0XHRcdFx0XHRyZXR1cm4gcHJvbWlzZXM7XG5cdFx0XHRcdFx0fSxcblx0XHRcdFx0XHRbXSlcblx0XHRcdFx0KS50aGVuKGZ1bmN0aW9uICgpIHtcblx0XHRcdFx0XHRyZXR1cm4gd2FpdEZvckJsb2NraW5nUHJvbWlzZXMoZnVuY3Rpb24gKCkge1xuXHRcdFx0XHRcdFx0aWYgKGFwcGx5T25VcGRhdGUpIHtcblx0XHRcdFx0XHRcdFx0cmV0dXJuIGludGVybmFsQXBwbHkoYXBwbHlPblVwZGF0ZSk7XG5cdFx0XHRcdFx0XHR9IGVsc2Uge1xuXHRcdFx0XHRcdFx0XHRyZXR1cm4gc2V0U3RhdHVzKFwicmVhZHlcIikudGhlbihmdW5jdGlvbiAoKSB7XG5cdFx0XHRcdFx0XHRcdFx0cmV0dXJuIHVwZGF0ZWRNb2R1bGVzO1xuXHRcdFx0XHRcdFx0XHR9KTtcblx0XHRcdFx0XHRcdH1cblx0XHRcdFx0XHR9KTtcblx0XHRcdFx0fSk7XG5cdFx0XHR9KTtcblx0XHR9KTtcbn1cblxuZnVuY3Rpb24gaG90QXBwbHkob3B0aW9ucykge1xuXHRpZiAoY3VycmVudFN0YXR1cyAhPT0gXCJyZWFkeVwiKSB7XG5cdFx0cmV0dXJuIFByb21pc2UucmVzb2x2ZSgpLnRoZW4oZnVuY3Rpb24gKCkge1xuXHRcdFx0dGhyb3cgbmV3IEVycm9yKFxuXHRcdFx0XHRcImFwcGx5KCkgaXMgb25seSBhbGxvd2VkIGluIHJlYWR5IHN0YXR1cyAoc3RhdGU6IFwiICtcblx0XHRcdFx0XHRjdXJyZW50U3RhdHVzICtcblx0XHRcdFx0XHRcIilcIlxuXHRcdFx0KTtcblx0XHR9KTtcblx0fVxuXHRyZXR1cm4gaW50ZXJuYWxBcHBseShvcHRpb25zKTtcbn1cblxuZnVuY3Rpb24gaW50ZXJuYWxBcHBseShvcHRpb25zKSB7XG5cdG9wdGlvbnMgPSBvcHRpb25zIHx8IHt9O1xuXG5cdGFwcGx5SW52YWxpZGF0ZWRNb2R1bGVzKCk7XG5cblx0dmFyIHJlc3VsdHMgPSBjdXJyZW50VXBkYXRlQXBwbHlIYW5kbGVycy5tYXAoZnVuY3Rpb24gKGhhbmRsZXIpIHtcblx0XHRyZXR1cm4gaGFuZGxlcihvcHRpb25zKTtcblx0fSk7XG5cdGN1cnJlbnRVcGRhdGVBcHBseUhhbmRsZXJzID0gdW5kZWZpbmVkO1xuXG5cdHZhciBlcnJvcnMgPSByZXN1bHRzXG5cdFx0Lm1hcChmdW5jdGlvbiAocikge1xuXHRcdFx0cmV0dXJuIHIuZXJyb3I7XG5cdFx0fSlcblx0XHQuZmlsdGVyKEJvb2xlYW4pO1xuXG5cdGlmIChlcnJvcnMubGVuZ3RoID4gMCkge1xuXHRcdHJldHVybiBzZXRTdGF0dXMoXCJhYm9ydFwiKS50aGVuKGZ1bmN0aW9uICgpIHtcblx0XHRcdHRocm93IGVycm9yc1swXTtcblx0XHR9KTtcblx0fVxuXG5cdC8vIE5vdyBpbiBcImRpc3Bvc2VcIiBwaGFzZVxuXHR2YXIgZGlzcG9zZVByb21pc2UgPSBzZXRTdGF0dXMoXCJkaXNwb3NlXCIpO1xuXG5cdHJlc3VsdHMuZm9yRWFjaChmdW5jdGlvbiAocmVzdWx0KSB7XG5cdFx0aWYgKHJlc3VsdC5kaXNwb3NlKSByZXN1bHQuZGlzcG9zZSgpO1xuXHR9KTtcblxuXHQvLyBOb3cgaW4gXCJhcHBseVwiIHBoYXNlXG5cdHZhciBhcHBseVByb21pc2UgPSBzZXRTdGF0dXMoXCJhcHBseVwiKTtcblxuXHR2YXIgZXJyb3I7XG5cdHZhciByZXBvcnRFcnJvciA9IGZ1bmN0aW9uIChlcnIpIHtcblx0XHRpZiAoIWVycm9yKSBlcnJvciA9IGVycjtcblx0fTtcblxuXHR2YXIgb3V0ZGF0ZWRNb2R1bGVzID0gW107XG5cdHJlc3VsdHMuZm9yRWFjaChmdW5jdGlvbiAocmVzdWx0KSB7XG5cdFx0aWYgKHJlc3VsdC5hcHBseSkge1xuXHRcdFx0dmFyIG1vZHVsZXMgPSByZXN1bHQuYXBwbHkocmVwb3J0RXJyb3IpO1xuXHRcdFx0aWYgKG1vZHVsZXMpIHtcblx0XHRcdFx0Zm9yICh2YXIgaSA9IDA7IGkgPCBtb2R1bGVzLmxlbmd0aDsgaSsrKSB7XG5cdFx0XHRcdFx0b3V0ZGF0ZWRNb2R1bGVzLnB1c2gobW9kdWxlc1tpXSk7XG5cdFx0XHRcdH1cblx0XHRcdH1cblx0XHR9XG5cdH0pO1xuXG5cdHJldHVybiBQcm9taXNlLmFsbChbZGlzcG9zZVByb21pc2UsIGFwcGx5UHJvbWlzZV0pLnRoZW4oZnVuY3Rpb24gKCkge1xuXHRcdC8vIGhhbmRsZSBlcnJvcnMgaW4gYWNjZXB0IGhhbmRsZXJzIGFuZCBzZWxmIGFjY2VwdGVkIG1vZHVsZSBsb2FkXG5cdFx0aWYgKGVycm9yKSB7XG5cdFx0XHRyZXR1cm4gc2V0U3RhdHVzKFwiZmFpbFwiKS50aGVuKGZ1bmN0aW9uICgpIHtcblx0XHRcdFx0dGhyb3cgZXJyb3I7XG5cdFx0XHR9KTtcblx0XHR9XG5cblx0XHRpZiAocXVldWVkSW52YWxpZGF0ZWRNb2R1bGVzKSB7XG5cdFx0XHRyZXR1cm4gaW50ZXJuYWxBcHBseShvcHRpb25zKS50aGVuKGZ1bmN0aW9uIChsaXN0KSB7XG5cdFx0XHRcdG91dGRhdGVkTW9kdWxlcy5mb3JFYWNoKGZ1bmN0aW9uIChtb2R1bGVJZCkge1xuXHRcdFx0XHRcdGlmIChsaXN0LmluZGV4T2YobW9kdWxlSWQpIDwgMCkgbGlzdC5wdXNoKG1vZHVsZUlkKTtcblx0XHRcdFx0fSk7XG5cdFx0XHRcdHJldHVybiBsaXN0O1xuXHRcdFx0fSk7XG5cdFx0fVxuXG5cdFx0cmV0dXJuIHNldFN0YXR1cyhcImlkbGVcIikudGhlbihmdW5jdGlvbiAoKSB7XG5cdFx0XHRyZXR1cm4gb3V0ZGF0ZWRNb2R1bGVzO1xuXHRcdH0pO1xuXHR9KTtcbn1cblxuZnVuY3Rpb24gYXBwbHlJbnZhbGlkYXRlZE1vZHVsZXMoKSB7XG5cdGlmIChxdWV1ZWRJbnZhbGlkYXRlZE1vZHVsZXMpIHtcblx0XHRpZiAoIWN1cnJlbnRVcGRhdGVBcHBseUhhbmRsZXJzKSBjdXJyZW50VXBkYXRlQXBwbHlIYW5kbGVycyA9IFtdO1xuXHRcdE9iamVjdC5rZXlzKF9fd2VicGFja19yZXF1aXJlX18uaG1ySSkuZm9yRWFjaChmdW5jdGlvbiAoa2V5KSB7XG5cdFx0XHRxdWV1ZWRJbnZhbGlkYXRlZE1vZHVsZXMuZm9yRWFjaChmdW5jdGlvbiAobW9kdWxlSWQpIHtcblx0XHRcdFx0X193ZWJwYWNrX3JlcXVpcmVfXy5obXJJW2tleV0oXG5cdFx0XHRcdFx0bW9kdWxlSWQsXG5cdFx0XHRcdFx0Y3VycmVudFVwZGF0ZUFwcGx5SGFuZGxlcnNcblx0XHRcdFx0KTtcblx0XHRcdH0pO1xuXHRcdH0pO1xuXHRcdHF1ZXVlZEludmFsaWRhdGVkTW9kdWxlcyA9IHVuZGVmaW5lZDtcblx0XHRyZXR1cm4gdHJ1ZTtcblx0fVxufSIsInZhciBzY3JpcHRVcmw7XG5pZiAoX193ZWJwYWNrX3JlcXVpcmVfXy5nLmltcG9ydFNjcmlwdHMpIHNjcmlwdFVybCA9IF9fd2VicGFja19yZXF1aXJlX18uZy5sb2NhdGlvbiArIFwiXCI7XG52YXIgZG9jdW1lbnQgPSBfX3dlYnBhY2tfcmVxdWlyZV9fLmcuZG9jdW1lbnQ7XG5pZiAoIXNjcmlwdFVybCAmJiBkb2N1bWVudCkge1xuXHRpZiAoZG9jdW1lbnQuY3VycmVudFNjcmlwdClcblx0XHRzY3JpcHRVcmwgPSBkb2N1bWVudC5jdXJyZW50U2NyaXB0LnNyY1xuXHRpZiAoIXNjcmlwdFVybCkge1xuXHRcdHZhciBzY3JpcHRzID0gZG9jdW1lbnQuZ2V0RWxlbWVudHNCeVRhZ05hbWUoXCJzY3JpcHRcIik7XG5cdFx0aWYoc2NyaXB0cy5sZW5ndGgpIHNjcmlwdFVybCA9IHNjcmlwdHNbc2NyaXB0cy5sZW5ndGggLSAxXS5zcmNcblx0fVxufVxuLy8gV2hlbiBzdXBwb3J0aW5nIGJyb3dzZXJzIHdoZXJlIGFuIGF1dG9tYXRpYyBwdWJsaWNQYXRoIGlzIG5vdCBzdXBwb3J0ZWQgeW91IG11c3Qgc3BlY2lmeSBhbiBvdXRwdXQucHVibGljUGF0aCBtYW51YWxseSB2aWEgY29uZmlndXJhdGlvblxuLy8gb3IgcGFzcyBhbiBlbXB0eSBzdHJpbmcgKFwiXCIpIGFuZCBzZXQgdGhlIF9fd2VicGFja19wdWJsaWNfcGF0aF9fIHZhcmlhYmxlIGZyb20geW91ciBjb2RlIHRvIHVzZSB5b3VyIG93biBsb2dpYy5cbmlmICghc2NyaXB0VXJsKSB0aHJvdyBuZXcgRXJyb3IoXCJBdXRvbWF0aWMgcHVibGljUGF0aCBpcyBub3Qgc3VwcG9ydGVkIGluIHRoaXMgYnJvd3NlclwiKTtcbnNjcmlwdFVybCA9IHNjcmlwdFVybC5yZXBsYWNlKC8jLiokLywgXCJcIikucmVwbGFjZSgvXFw/LiokLywgXCJcIikucmVwbGFjZSgvXFwvW15cXC9dKyQvLCBcIi9cIik7XG5fX3dlYnBhY2tfcmVxdWlyZV9fLnAgPSBzY3JpcHRVcmw7IiwiLy8gbm8gYmFzZVVSSVxuXG4vLyBvYmplY3QgdG8gc3RvcmUgbG9hZGVkIGFuZCBsb2FkaW5nIGNodW5rc1xuLy8gdW5kZWZpbmVkID0gY2h1bmsgbm90IGxvYWRlZCwgbnVsbCA9IGNodW5rIHByZWxvYWRlZC9wcmVmZXRjaGVkXG4vLyBbcmVzb2x2ZSwgcmVqZWN0LCBQcm9taXNlXSA9IGNodW5rIGxvYWRpbmcsIDAgPSBjaHVuayBsb2FkZWRcbnZhciBpbnN0YWxsZWRDaHVua3MgPSBfX3dlYnBhY2tfcmVxdWlyZV9fLmhtclNfanNvbnAgPSBfX3dlYnBhY2tfcmVxdWlyZV9fLmhtclNfanNvbnAgfHwge1xuXHQxNzk6IDBcbn07XG5cbi8vIG5vIGNodW5rIG9uIGRlbWFuZCBsb2FkaW5nXG5cbi8vIG5vIHByZWZldGNoaW5nXG5cbi8vIG5vIHByZWxvYWRlZFxuXG52YXIgY3VycmVudFVwZGF0ZWRNb2R1bGVzTGlzdDtcbnZhciB3YWl0aW5nVXBkYXRlUmVzb2x2ZXMgPSB7fTtcbmZ1bmN0aW9uIGxvYWRVcGRhdGVDaHVuayhjaHVua0lkLCB1cGRhdGVkTW9kdWxlc0xpc3QpIHtcblx0Y3VycmVudFVwZGF0ZWRNb2R1bGVzTGlzdCA9IHVwZGF0ZWRNb2R1bGVzTGlzdDtcblx0cmV0dXJuIG5ldyBQcm9taXNlKChyZXNvbHZlLCByZWplY3QpID0+IHtcblx0XHR3YWl0aW5nVXBkYXRlUmVzb2x2ZXNbY2h1bmtJZF0gPSByZXNvbHZlO1xuXHRcdC8vIHN0YXJ0IHVwZGF0ZSBjaHVuayBsb2FkaW5nXG5cdFx0dmFyIHVybCA9IF9fd2VicGFja19yZXF1aXJlX18ucCArIF9fd2VicGFja19yZXF1aXJlX18uaHUoY2h1bmtJZCk7XG5cdFx0Ly8gY3JlYXRlIGVycm9yIGJlZm9yZSBzdGFjayB1bndvdW5kIHRvIGdldCB1c2VmdWwgc3RhY2t0cmFjZSBsYXRlclxuXHRcdHZhciBlcnJvciA9IG5ldyBFcnJvcigpO1xuXHRcdHZhciBsb2FkaW5nRW5kZWQgPSAoZXZlbnQpID0+IHtcblx0XHRcdGlmKHdhaXRpbmdVcGRhdGVSZXNvbHZlc1tjaHVua0lkXSkge1xuXHRcdFx0XHR3YWl0aW5nVXBkYXRlUmVzb2x2ZXNbY2h1bmtJZF0gPSB1bmRlZmluZWRcblx0XHRcdFx0dmFyIGVycm9yVHlwZSA9IGV2ZW50ICYmIChldmVudC50eXBlID09PSAnbG9hZCcgPyAnbWlzc2luZycgOiBldmVudC50eXBlKTtcblx0XHRcdFx0dmFyIHJlYWxTcmMgPSBldmVudCAmJiBldmVudC50YXJnZXQgJiYgZXZlbnQudGFyZ2V0LnNyYztcblx0XHRcdFx0ZXJyb3IubWVzc2FnZSA9ICdMb2FkaW5nIGhvdCB1cGRhdGUgY2h1bmsgJyArIGNodW5rSWQgKyAnIGZhaWxlZC5cXG4oJyArIGVycm9yVHlwZSArICc6ICcgKyByZWFsU3JjICsgJyknO1xuXHRcdFx0XHRlcnJvci5uYW1lID0gJ0NodW5rTG9hZEVycm9yJztcblx0XHRcdFx0ZXJyb3IudHlwZSA9IGVycm9yVHlwZTtcblx0XHRcdFx0ZXJyb3IucmVxdWVzdCA9IHJlYWxTcmM7XG5cdFx0XHRcdHJlamVjdChlcnJvcik7XG5cdFx0XHR9XG5cdFx0fTtcblx0XHRfX3dlYnBhY2tfcmVxdWlyZV9fLmwodXJsLCBsb2FkaW5nRW5kZWQpO1xuXHR9KTtcbn1cblxuc2VsZltcIndlYnBhY2tIb3RVcGRhdGV0ZXN0XCJdID0gKGNodW5rSWQsIG1vcmVNb2R1bGVzLCBydW50aW1lKSA9PiB7XG5cdGZvcih2YXIgbW9kdWxlSWQgaW4gbW9yZU1vZHVsZXMpIHtcblx0XHRpZihfX3dlYnBhY2tfcmVxdWlyZV9fLm8obW9yZU1vZHVsZXMsIG1vZHVsZUlkKSkge1xuXHRcdFx0Y3VycmVudFVwZGF0ZVttb2R1bGVJZF0gPSBtb3JlTW9kdWxlc1ttb2R1bGVJZF07XG5cdFx0XHRpZihjdXJyZW50VXBkYXRlZE1vZHVsZXNMaXN0KSBjdXJyZW50VXBkYXRlZE1vZHVsZXNMaXN0LnB1c2gobW9kdWxlSWQpO1xuXHRcdH1cblx0fVxuXHRpZihydW50aW1lKSBjdXJyZW50VXBkYXRlUnVudGltZS5wdXNoKHJ1bnRpbWUpO1xuXHRpZih3YWl0aW5nVXBkYXRlUmVzb2x2ZXNbY2h1bmtJZF0pIHtcblx0XHR3YWl0aW5nVXBkYXRlUmVzb2x2ZXNbY2h1bmtJZF0oKTtcblx0XHR3YWl0aW5nVXBkYXRlUmVzb2x2ZXNbY2h1bmtJZF0gPSB1bmRlZmluZWQ7XG5cdH1cbn07XG5cbnZhciBjdXJyZW50VXBkYXRlQ2h1bmtzO1xudmFyIGN1cnJlbnRVcGRhdGU7XG52YXIgY3VycmVudFVwZGF0ZVJlbW92ZWRDaHVua3M7XG52YXIgY3VycmVudFVwZGF0ZVJ1bnRpbWU7XG5mdW5jdGlvbiBhcHBseUhhbmRsZXIob3B0aW9ucykge1xuXHRpZiAoX193ZWJwYWNrX3JlcXVpcmVfXy5mKSBkZWxldGUgX193ZWJwYWNrX3JlcXVpcmVfXy5mLmpzb25wSG1yO1xuXHRjdXJyZW50VXBkYXRlQ2h1bmtzID0gdW5kZWZpbmVkO1xuXHRmdW5jdGlvbiBnZXRBZmZlY3RlZE1vZHVsZUVmZmVjdHModXBkYXRlTW9kdWxlSWQpIHtcblx0XHR2YXIgb3V0ZGF0ZWRNb2R1bGVzID0gW3VwZGF0ZU1vZHVsZUlkXTtcblx0XHR2YXIgb3V0ZGF0ZWREZXBlbmRlbmNpZXMgPSB7fTtcblxuXHRcdHZhciBxdWV1ZSA9IG91dGRhdGVkTW9kdWxlcy5tYXAoZnVuY3Rpb24gKGlkKSB7XG5cdFx0XHRyZXR1cm4ge1xuXHRcdFx0XHRjaGFpbjogW2lkXSxcblx0XHRcdFx0aWQ6IGlkXG5cdFx0XHR9O1xuXHRcdH0pO1xuXHRcdHdoaWxlIChxdWV1ZS5sZW5ndGggPiAwKSB7XG5cdFx0XHR2YXIgcXVldWVJdGVtID0gcXVldWUucG9wKCk7XG5cdFx0XHR2YXIgbW9kdWxlSWQgPSBxdWV1ZUl0ZW0uaWQ7XG5cdFx0XHR2YXIgY2hhaW4gPSBxdWV1ZUl0ZW0uY2hhaW47XG5cdFx0XHR2YXIgbW9kdWxlID0gX193ZWJwYWNrX3JlcXVpcmVfXy5jW21vZHVsZUlkXTtcblx0XHRcdGlmIChcblx0XHRcdFx0IW1vZHVsZSB8fFxuXHRcdFx0XHQobW9kdWxlLmhvdC5fc2VsZkFjY2VwdGVkICYmICFtb2R1bGUuaG90Ll9zZWxmSW52YWxpZGF0ZWQpXG5cdFx0XHQpXG5cdFx0XHRcdGNvbnRpbnVlO1xuXHRcdFx0aWYgKG1vZHVsZS5ob3QuX3NlbGZEZWNsaW5lZCkge1xuXHRcdFx0XHRyZXR1cm4ge1xuXHRcdFx0XHRcdHR5cGU6IFwic2VsZi1kZWNsaW5lZFwiLFxuXHRcdFx0XHRcdGNoYWluOiBjaGFpbixcblx0XHRcdFx0XHRtb2R1bGVJZDogbW9kdWxlSWRcblx0XHRcdFx0fTtcblx0XHRcdH1cblx0XHRcdGlmIChtb2R1bGUuaG90Ll9tYWluKSB7XG5cdFx0XHRcdHJldHVybiB7XG5cdFx0XHRcdFx0dHlwZTogXCJ1bmFjY2VwdGVkXCIsXG5cdFx0XHRcdFx0Y2hhaW46IGNoYWluLFxuXHRcdFx0XHRcdG1vZHVsZUlkOiBtb2R1bGVJZFxuXHRcdFx0XHR9O1xuXHRcdFx0fVxuXHRcdFx0Zm9yICh2YXIgaSA9IDA7IGkgPCBtb2R1bGUucGFyZW50cy5sZW5ndGg7IGkrKykge1xuXHRcdFx0XHR2YXIgcGFyZW50SWQgPSBtb2R1bGUucGFyZW50c1tpXTtcblx0XHRcdFx0dmFyIHBhcmVudCA9IF9fd2VicGFja19yZXF1aXJlX18uY1twYXJlbnRJZF07XG5cdFx0XHRcdGlmICghcGFyZW50KSBjb250aW51ZTtcblx0XHRcdFx0aWYgKHBhcmVudC5ob3QuX2RlY2xpbmVkRGVwZW5kZW5jaWVzW21vZHVsZUlkXSkge1xuXHRcdFx0XHRcdHJldHVybiB7XG5cdFx0XHRcdFx0XHR0eXBlOiBcImRlY2xpbmVkXCIsXG5cdFx0XHRcdFx0XHRjaGFpbjogY2hhaW4uY29uY2F0KFtwYXJlbnRJZF0pLFxuXHRcdFx0XHRcdFx0bW9kdWxlSWQ6IG1vZHVsZUlkLFxuXHRcdFx0XHRcdFx0cGFyZW50SWQ6IHBhcmVudElkXG5cdFx0XHRcdFx0fTtcblx0XHRcdFx0fVxuXHRcdFx0XHRpZiAob3V0ZGF0ZWRNb2R1bGVzLmluZGV4T2YocGFyZW50SWQpICE9PSAtMSkgY29udGludWU7XG5cdFx0XHRcdGlmIChwYXJlbnQuaG90Ll9hY2NlcHRlZERlcGVuZGVuY2llc1ttb2R1bGVJZF0pIHtcblx0XHRcdFx0XHRpZiAoIW91dGRhdGVkRGVwZW5kZW5jaWVzW3BhcmVudElkXSlcblx0XHRcdFx0XHRcdG91dGRhdGVkRGVwZW5kZW5jaWVzW3BhcmVudElkXSA9IFtdO1xuXHRcdFx0XHRcdGFkZEFsbFRvU2V0KG91dGRhdGVkRGVwZW5kZW5jaWVzW3BhcmVudElkXSwgW21vZHVsZUlkXSk7XG5cdFx0XHRcdFx0Y29udGludWU7XG5cdFx0XHRcdH1cblx0XHRcdFx0ZGVsZXRlIG91dGRhdGVkRGVwZW5kZW5jaWVzW3BhcmVudElkXTtcblx0XHRcdFx0b3V0ZGF0ZWRNb2R1bGVzLnB1c2gocGFyZW50SWQpO1xuXHRcdFx0XHRxdWV1ZS5wdXNoKHtcblx0XHRcdFx0XHRjaGFpbjogY2hhaW4uY29uY2F0KFtwYXJlbnRJZF0pLFxuXHRcdFx0XHRcdGlkOiBwYXJlbnRJZFxuXHRcdFx0XHR9KTtcblx0XHRcdH1cblx0XHR9XG5cblx0XHRyZXR1cm4ge1xuXHRcdFx0dHlwZTogXCJhY2NlcHRlZFwiLFxuXHRcdFx0bW9kdWxlSWQ6IHVwZGF0ZU1vZHVsZUlkLFxuXHRcdFx0b3V0ZGF0ZWRNb2R1bGVzOiBvdXRkYXRlZE1vZHVsZXMsXG5cdFx0XHRvdXRkYXRlZERlcGVuZGVuY2llczogb3V0ZGF0ZWREZXBlbmRlbmNpZXNcblx0XHR9O1xuXHR9XG5cblx0ZnVuY3Rpb24gYWRkQWxsVG9TZXQoYSwgYikge1xuXHRcdGZvciAodmFyIGkgPSAwOyBpIDwgYi5sZW5ndGg7IGkrKykge1xuXHRcdFx0dmFyIGl0ZW0gPSBiW2ldO1xuXHRcdFx0aWYgKGEuaW5kZXhPZihpdGVtKSA9PT0gLTEpIGEucHVzaChpdGVtKTtcblx0XHR9XG5cdH1cblxuXHQvLyBhdCBiZWdpbiBhbGwgdXBkYXRlcyBtb2R1bGVzIGFyZSBvdXRkYXRlZFxuXHQvLyB0aGUgXCJvdXRkYXRlZFwiIHN0YXR1cyBjYW4gcHJvcGFnYXRlIHRvIHBhcmVudHMgaWYgdGhleSBkb24ndCBhY2NlcHQgdGhlIGNoaWxkcmVuXG5cdHZhciBvdXRkYXRlZERlcGVuZGVuY2llcyA9IHt9O1xuXHR2YXIgb3V0ZGF0ZWRNb2R1bGVzID0gW107XG5cdHZhciBhcHBsaWVkVXBkYXRlID0ge307XG5cblx0dmFyIHdhcm5VbmV4cGVjdGVkUmVxdWlyZSA9IGZ1bmN0aW9uIHdhcm5VbmV4cGVjdGVkUmVxdWlyZShtb2R1bGUpIHtcblx0XHRjb25zb2xlLndhcm4oXG5cdFx0XHRcIltITVJdIHVuZXhwZWN0ZWQgcmVxdWlyZShcIiArIG1vZHVsZS5pZCArIFwiKSB0byBkaXNwb3NlZCBtb2R1bGVcIlxuXHRcdCk7XG5cdH07XG5cblx0Zm9yICh2YXIgbW9kdWxlSWQgaW4gY3VycmVudFVwZGF0ZSkge1xuXHRcdGlmIChfX3dlYnBhY2tfcmVxdWlyZV9fLm8oY3VycmVudFVwZGF0ZSwgbW9kdWxlSWQpKSB7XG5cdFx0XHR2YXIgbmV3TW9kdWxlRmFjdG9yeSA9IGN1cnJlbnRVcGRhdGVbbW9kdWxlSWRdO1xuXHRcdFx0LyoqIEB0eXBlIHtUT0RPfSAqL1xuXHRcdFx0dmFyIHJlc3VsdDtcblx0XHRcdGlmIChuZXdNb2R1bGVGYWN0b3J5KSB7XG5cdFx0XHRcdHJlc3VsdCA9IGdldEFmZmVjdGVkTW9kdWxlRWZmZWN0cyhtb2R1bGVJZCk7XG5cdFx0XHR9IGVsc2Uge1xuXHRcdFx0XHRyZXN1bHQgPSB7XG5cdFx0XHRcdFx0dHlwZTogXCJkaXNwb3NlZFwiLFxuXHRcdFx0XHRcdG1vZHVsZUlkOiBtb2R1bGVJZFxuXHRcdFx0XHR9O1xuXHRcdFx0fVxuXHRcdFx0LyoqIEB0eXBlIHtFcnJvcnxmYWxzZX0gKi9cblx0XHRcdHZhciBhYm9ydEVycm9yID0gZmFsc2U7XG5cdFx0XHR2YXIgZG9BcHBseSA9IGZhbHNlO1xuXHRcdFx0dmFyIGRvRGlzcG9zZSA9IGZhbHNlO1xuXHRcdFx0dmFyIGNoYWluSW5mbyA9IFwiXCI7XG5cdFx0XHRpZiAocmVzdWx0LmNoYWluKSB7XG5cdFx0XHRcdGNoYWluSW5mbyA9IFwiXFxuVXBkYXRlIHByb3BhZ2F0aW9uOiBcIiArIHJlc3VsdC5jaGFpbi5qb2luKFwiIC0+IFwiKTtcblx0XHRcdH1cblx0XHRcdHN3aXRjaCAocmVzdWx0LnR5cGUpIHtcblx0XHRcdFx0Y2FzZSBcInNlbGYtZGVjbGluZWRcIjpcblx0XHRcdFx0XHRpZiAob3B0aW9ucy5vbkRlY2xpbmVkKSBvcHRpb25zLm9uRGVjbGluZWQocmVzdWx0KTtcblx0XHRcdFx0XHRpZiAoIW9wdGlvbnMuaWdub3JlRGVjbGluZWQpXG5cdFx0XHRcdFx0XHRhYm9ydEVycm9yID0gbmV3IEVycm9yKFxuXHRcdFx0XHRcdFx0XHRcIkFib3J0ZWQgYmVjYXVzZSBvZiBzZWxmIGRlY2xpbmU6IFwiICtcblx0XHRcdFx0XHRcdFx0XHRyZXN1bHQubW9kdWxlSWQgK1xuXHRcdFx0XHRcdFx0XHRcdGNoYWluSW5mb1xuXHRcdFx0XHRcdFx0KTtcblx0XHRcdFx0XHRicmVhaztcblx0XHRcdFx0Y2FzZSBcImRlY2xpbmVkXCI6XG5cdFx0XHRcdFx0aWYgKG9wdGlvbnMub25EZWNsaW5lZCkgb3B0aW9ucy5vbkRlY2xpbmVkKHJlc3VsdCk7XG5cdFx0XHRcdFx0aWYgKCFvcHRpb25zLmlnbm9yZURlY2xpbmVkKVxuXHRcdFx0XHRcdFx0YWJvcnRFcnJvciA9IG5ldyBFcnJvcihcblx0XHRcdFx0XHRcdFx0XCJBYm9ydGVkIGJlY2F1c2Ugb2YgZGVjbGluZWQgZGVwZW5kZW5jeTogXCIgK1xuXHRcdFx0XHRcdFx0XHRcdHJlc3VsdC5tb2R1bGVJZCArXG5cdFx0XHRcdFx0XHRcdFx0XCIgaW4gXCIgK1xuXHRcdFx0XHRcdFx0XHRcdHJlc3VsdC5wYXJlbnRJZCArXG5cdFx0XHRcdFx0XHRcdFx0Y2hhaW5JbmZvXG5cdFx0XHRcdFx0XHQpO1xuXHRcdFx0XHRcdGJyZWFrO1xuXHRcdFx0XHRjYXNlIFwidW5hY2NlcHRlZFwiOlxuXHRcdFx0XHRcdGlmIChvcHRpb25zLm9uVW5hY2NlcHRlZCkgb3B0aW9ucy5vblVuYWNjZXB0ZWQocmVzdWx0KTtcblx0XHRcdFx0XHRpZiAoIW9wdGlvbnMuaWdub3JlVW5hY2NlcHRlZClcblx0XHRcdFx0XHRcdGFib3J0RXJyb3IgPSBuZXcgRXJyb3IoXG5cdFx0XHRcdFx0XHRcdFwiQWJvcnRlZCBiZWNhdXNlIFwiICsgbW9kdWxlSWQgKyBcIiBpcyBub3QgYWNjZXB0ZWRcIiArIGNoYWluSW5mb1xuXHRcdFx0XHRcdFx0KTtcblx0XHRcdFx0XHRicmVhaztcblx0XHRcdFx0Y2FzZSBcImFjY2VwdGVkXCI6XG5cdFx0XHRcdFx0aWYgKG9wdGlvbnMub25BY2NlcHRlZCkgb3B0aW9ucy5vbkFjY2VwdGVkKHJlc3VsdCk7XG5cdFx0XHRcdFx0ZG9BcHBseSA9IHRydWU7XG5cdFx0XHRcdFx0YnJlYWs7XG5cdFx0XHRcdGNhc2UgXCJkaXNwb3NlZFwiOlxuXHRcdFx0XHRcdGlmIChvcHRpb25zLm9uRGlzcG9zZWQpIG9wdGlvbnMub25EaXNwb3NlZChyZXN1bHQpO1xuXHRcdFx0XHRcdGRvRGlzcG9zZSA9IHRydWU7XG5cdFx0XHRcdFx0YnJlYWs7XG5cdFx0XHRcdGRlZmF1bHQ6XG5cdFx0XHRcdFx0dGhyb3cgbmV3IEVycm9yKFwiVW5leGNlcHRpb24gdHlwZSBcIiArIHJlc3VsdC50eXBlKTtcblx0XHRcdH1cblx0XHRcdGlmIChhYm9ydEVycm9yKSB7XG5cdFx0XHRcdHJldHVybiB7XG5cdFx0XHRcdFx0ZXJyb3I6IGFib3J0RXJyb3Jcblx0XHRcdFx0fTtcblx0XHRcdH1cblx0XHRcdGlmIChkb0FwcGx5KSB7XG5cdFx0XHRcdGFwcGxpZWRVcGRhdGVbbW9kdWxlSWRdID0gbmV3TW9kdWxlRmFjdG9yeTtcblx0XHRcdFx0YWRkQWxsVG9TZXQob3V0ZGF0ZWRNb2R1bGVzLCByZXN1bHQub3V0ZGF0ZWRNb2R1bGVzKTtcblx0XHRcdFx0Zm9yIChtb2R1bGVJZCBpbiByZXN1bHQub3V0ZGF0ZWREZXBlbmRlbmNpZXMpIHtcblx0XHRcdFx0XHRpZiAoX193ZWJwYWNrX3JlcXVpcmVfXy5vKHJlc3VsdC5vdXRkYXRlZERlcGVuZGVuY2llcywgbW9kdWxlSWQpKSB7XG5cdFx0XHRcdFx0XHRpZiAoIW91dGRhdGVkRGVwZW5kZW5jaWVzW21vZHVsZUlkXSlcblx0XHRcdFx0XHRcdFx0b3V0ZGF0ZWREZXBlbmRlbmNpZXNbbW9kdWxlSWRdID0gW107XG5cdFx0XHRcdFx0XHRhZGRBbGxUb1NldChcblx0XHRcdFx0XHRcdFx0b3V0ZGF0ZWREZXBlbmRlbmNpZXNbbW9kdWxlSWRdLFxuXHRcdFx0XHRcdFx0XHRyZXN1bHQub3V0ZGF0ZWREZXBlbmRlbmNpZXNbbW9kdWxlSWRdXG5cdFx0XHRcdFx0XHQpO1xuXHRcdFx0XHRcdH1cblx0XHRcdFx0fVxuXHRcdFx0fVxuXHRcdFx0aWYgKGRvRGlzcG9zZSkge1xuXHRcdFx0XHRhZGRBbGxUb1NldChvdXRkYXRlZE1vZHVsZXMsIFtyZXN1bHQubW9kdWxlSWRdKTtcblx0XHRcdFx0YXBwbGllZFVwZGF0ZVttb2R1bGVJZF0gPSB3YXJuVW5leHBlY3RlZFJlcXVpcmU7XG5cdFx0XHR9XG5cdFx0fVxuXHR9XG5cdGN1cnJlbnRVcGRhdGUgPSB1bmRlZmluZWQ7XG5cblx0Ly8gU3RvcmUgc2VsZiBhY2NlcHRlZCBvdXRkYXRlZCBtb2R1bGVzIHRvIHJlcXVpcmUgdGhlbSBsYXRlciBieSB0aGUgbW9kdWxlIHN5c3RlbVxuXHR2YXIgb3V0ZGF0ZWRTZWxmQWNjZXB0ZWRNb2R1bGVzID0gW107XG5cdGZvciAodmFyIGogPSAwOyBqIDwgb3V0ZGF0ZWRNb2R1bGVzLmxlbmd0aDsgaisrKSB7XG5cdFx0dmFyIG91dGRhdGVkTW9kdWxlSWQgPSBvdXRkYXRlZE1vZHVsZXNbal07XG5cdFx0dmFyIG1vZHVsZSA9IF9fd2VicGFja19yZXF1aXJlX18uY1tvdXRkYXRlZE1vZHVsZUlkXTtcblx0XHRpZiAoXG5cdFx0XHRtb2R1bGUgJiZcblx0XHRcdChtb2R1bGUuaG90Ll9zZWxmQWNjZXB0ZWQgfHwgbW9kdWxlLmhvdC5fbWFpbikgJiZcblx0XHRcdC8vIHJlbW92ZWQgc2VsZi1hY2NlcHRlZCBtb2R1bGVzIHNob3VsZCBub3QgYmUgcmVxdWlyZWRcblx0XHRcdGFwcGxpZWRVcGRhdGVbb3V0ZGF0ZWRNb2R1bGVJZF0gIT09IHdhcm5VbmV4cGVjdGVkUmVxdWlyZSAmJlxuXHRcdFx0Ly8gd2hlbiBjYWxsZWQgaW52YWxpZGF0ZSBzZWxmLWFjY2VwdGluZyBpcyBub3QgcG9zc2libGVcblx0XHRcdCFtb2R1bGUuaG90Ll9zZWxmSW52YWxpZGF0ZWRcblx0XHQpIHtcblx0XHRcdG91dGRhdGVkU2VsZkFjY2VwdGVkTW9kdWxlcy5wdXNoKHtcblx0XHRcdFx0bW9kdWxlOiBvdXRkYXRlZE1vZHVsZUlkLFxuXHRcdFx0XHRyZXF1aXJlOiBtb2R1bGUuaG90Ll9yZXF1aXJlU2VsZixcblx0XHRcdFx0ZXJyb3JIYW5kbGVyOiBtb2R1bGUuaG90Ll9zZWxmQWNjZXB0ZWRcblx0XHRcdH0pO1xuXHRcdH1cblx0fVxuXG5cdHZhciBtb2R1bGVPdXRkYXRlZERlcGVuZGVuY2llcztcblxuXHRyZXR1cm4ge1xuXHRcdGRpc3Bvc2U6IGZ1bmN0aW9uICgpIHtcblx0XHRcdGN1cnJlbnRVcGRhdGVSZW1vdmVkQ2h1bmtzLmZvckVhY2goZnVuY3Rpb24gKGNodW5rSWQpIHtcblx0XHRcdFx0ZGVsZXRlIGluc3RhbGxlZENodW5rc1tjaHVua0lkXTtcblx0XHRcdH0pO1xuXHRcdFx0Y3VycmVudFVwZGF0ZVJlbW92ZWRDaHVua3MgPSB1bmRlZmluZWQ7XG5cblx0XHRcdHZhciBpZHg7XG5cdFx0XHR2YXIgcXVldWUgPSBvdXRkYXRlZE1vZHVsZXMuc2xpY2UoKTtcblx0XHRcdHdoaWxlIChxdWV1ZS5sZW5ndGggPiAwKSB7XG5cdFx0XHRcdHZhciBtb2R1bGVJZCA9IHF1ZXVlLnBvcCgpO1xuXHRcdFx0XHR2YXIgbW9kdWxlID0gX193ZWJwYWNrX3JlcXVpcmVfXy5jW21vZHVsZUlkXTtcblx0XHRcdFx0aWYgKCFtb2R1bGUpIGNvbnRpbnVlO1xuXG5cdFx0XHRcdHZhciBkYXRhID0ge307XG5cblx0XHRcdFx0Ly8gQ2FsbCBkaXNwb3NlIGhhbmRsZXJzXG5cdFx0XHRcdHZhciBkaXNwb3NlSGFuZGxlcnMgPSBtb2R1bGUuaG90Ll9kaXNwb3NlSGFuZGxlcnM7XG5cdFx0XHRcdGZvciAoaiA9IDA7IGogPCBkaXNwb3NlSGFuZGxlcnMubGVuZ3RoOyBqKyspIHtcblx0XHRcdFx0XHRkaXNwb3NlSGFuZGxlcnNbal0uY2FsbChudWxsLCBkYXRhKTtcblx0XHRcdFx0fVxuXHRcdFx0XHRfX3dlYnBhY2tfcmVxdWlyZV9fLmhtckRbbW9kdWxlSWRdID0gZGF0YTtcblxuXHRcdFx0XHQvLyBkaXNhYmxlIG1vZHVsZSAodGhpcyBkaXNhYmxlcyByZXF1aXJlcyBmcm9tIHRoaXMgbW9kdWxlKVxuXHRcdFx0XHRtb2R1bGUuaG90LmFjdGl2ZSA9IGZhbHNlO1xuXG5cdFx0XHRcdC8vIHJlbW92ZSBtb2R1bGUgZnJvbSBjYWNoZVxuXHRcdFx0XHRkZWxldGUgX193ZWJwYWNrX3JlcXVpcmVfXy5jW21vZHVsZUlkXTtcblxuXHRcdFx0XHQvLyB3aGVuIGRpc3Bvc2luZyB0aGVyZSBpcyBubyBuZWVkIHRvIGNhbGwgZGlzcG9zZSBoYW5kbGVyXG5cdFx0XHRcdGRlbGV0ZSBvdXRkYXRlZERlcGVuZGVuY2llc1ttb2R1bGVJZF07XG5cblx0XHRcdFx0Ly8gcmVtb3ZlIFwicGFyZW50c1wiIHJlZmVyZW5jZXMgZnJvbSBhbGwgY2hpbGRyZW5cblx0XHRcdFx0Zm9yIChqID0gMDsgaiA8IG1vZHVsZS5jaGlsZHJlbi5sZW5ndGg7IGorKykge1xuXHRcdFx0XHRcdHZhciBjaGlsZCA9IF9fd2VicGFja19yZXF1aXJlX18uY1ttb2R1bGUuY2hpbGRyZW5bal1dO1xuXHRcdFx0XHRcdGlmICghY2hpbGQpIGNvbnRpbnVlO1xuXHRcdFx0XHRcdGlkeCA9IGNoaWxkLnBhcmVudHMuaW5kZXhPZihtb2R1bGVJZCk7XG5cdFx0XHRcdFx0aWYgKGlkeCA+PSAwKSB7XG5cdFx0XHRcdFx0XHRjaGlsZC5wYXJlbnRzLnNwbGljZShpZHgsIDEpO1xuXHRcdFx0XHRcdH1cblx0XHRcdFx0fVxuXHRcdFx0fVxuXG5cdFx0XHQvLyByZW1vdmUgb3V0ZGF0ZWQgZGVwZW5kZW5jeSBmcm9tIG1vZHVsZSBjaGlsZHJlblxuXHRcdFx0dmFyIGRlcGVuZGVuY3k7XG5cdFx0XHRmb3IgKHZhciBvdXRkYXRlZE1vZHVsZUlkIGluIG91dGRhdGVkRGVwZW5kZW5jaWVzKSB7XG5cdFx0XHRcdGlmIChfX3dlYnBhY2tfcmVxdWlyZV9fLm8ob3V0ZGF0ZWREZXBlbmRlbmNpZXMsIG91dGRhdGVkTW9kdWxlSWQpKSB7XG5cdFx0XHRcdFx0bW9kdWxlID0gX193ZWJwYWNrX3JlcXVpcmVfXy5jW291dGRhdGVkTW9kdWxlSWRdO1xuXHRcdFx0XHRcdGlmIChtb2R1bGUpIHtcblx0XHRcdFx0XHRcdG1vZHVsZU91dGRhdGVkRGVwZW5kZW5jaWVzID1cblx0XHRcdFx0XHRcdFx0b3V0ZGF0ZWREZXBlbmRlbmNpZXNbb3V0ZGF0ZWRNb2R1bGVJZF07XG5cdFx0XHRcdFx0XHRmb3IgKGogPSAwOyBqIDwgbW9kdWxlT3V0ZGF0ZWREZXBlbmRlbmNpZXMubGVuZ3RoOyBqKyspIHtcblx0XHRcdFx0XHRcdFx0ZGVwZW5kZW5jeSA9IG1vZHVsZU91dGRhdGVkRGVwZW5kZW5jaWVzW2pdO1xuXHRcdFx0XHRcdFx0XHRpZHggPSBtb2R1bGUuY2hpbGRyZW4uaW5kZXhPZihkZXBlbmRlbmN5KTtcblx0XHRcdFx0XHRcdFx0aWYgKGlkeCA+PSAwKSBtb2R1bGUuY2hpbGRyZW4uc3BsaWNlKGlkeCwgMSk7XG5cdFx0XHRcdFx0XHR9XG5cdFx0XHRcdFx0fVxuXHRcdFx0XHR9XG5cdFx0XHR9XG5cdFx0fSxcblx0XHRhcHBseTogZnVuY3Rpb24gKHJlcG9ydEVycm9yKSB7XG5cdFx0XHQvLyBpbnNlcnQgbmV3IGNvZGVcblx0XHRcdGZvciAodmFyIHVwZGF0ZU1vZHVsZUlkIGluIGFwcGxpZWRVcGRhdGUpIHtcblx0XHRcdFx0aWYgKF9fd2VicGFja19yZXF1aXJlX18ubyhhcHBsaWVkVXBkYXRlLCB1cGRhdGVNb2R1bGVJZCkpIHtcblx0XHRcdFx0XHRfX3dlYnBhY2tfcmVxdWlyZV9fLm1bdXBkYXRlTW9kdWxlSWRdID0gYXBwbGllZFVwZGF0ZVt1cGRhdGVNb2R1bGVJZF07XG5cdFx0XHRcdH1cblx0XHRcdH1cblxuXHRcdFx0Ly8gcnVuIG5ldyBydW50aW1lIG1vZHVsZXNcblx0XHRcdGZvciAodmFyIGkgPSAwOyBpIDwgY3VycmVudFVwZGF0ZVJ1bnRpbWUubGVuZ3RoOyBpKyspIHtcblx0XHRcdFx0Y3VycmVudFVwZGF0ZVJ1bnRpbWVbaV0oX193ZWJwYWNrX3JlcXVpcmVfXyk7XG5cdFx0XHR9XG5cblx0XHRcdC8vIGNhbGwgYWNjZXB0IGhhbmRsZXJzXG5cdFx0XHRmb3IgKHZhciBvdXRkYXRlZE1vZHVsZUlkIGluIG91dGRhdGVkRGVwZW5kZW5jaWVzKSB7XG5cdFx0XHRcdGlmIChfX3dlYnBhY2tfcmVxdWlyZV9fLm8ob3V0ZGF0ZWREZXBlbmRlbmNpZXMsIG91dGRhdGVkTW9kdWxlSWQpKSB7XG5cdFx0XHRcdFx0dmFyIG1vZHVsZSA9IF9fd2VicGFja19yZXF1aXJlX18uY1tvdXRkYXRlZE1vZHVsZUlkXTtcblx0XHRcdFx0XHRpZiAobW9kdWxlKSB7XG5cdFx0XHRcdFx0XHRtb2R1bGVPdXRkYXRlZERlcGVuZGVuY2llcyA9XG5cdFx0XHRcdFx0XHRcdG91dGRhdGVkRGVwZW5kZW5jaWVzW291dGRhdGVkTW9kdWxlSWRdO1xuXHRcdFx0XHRcdFx0dmFyIGNhbGxiYWNrcyA9IFtdO1xuXHRcdFx0XHRcdFx0dmFyIGVycm9ySGFuZGxlcnMgPSBbXTtcblx0XHRcdFx0XHRcdHZhciBkZXBlbmRlbmNpZXNGb3JDYWxsYmFja3MgPSBbXTtcblx0XHRcdFx0XHRcdGZvciAodmFyIGogPSAwOyBqIDwgbW9kdWxlT3V0ZGF0ZWREZXBlbmRlbmNpZXMubGVuZ3RoOyBqKyspIHtcblx0XHRcdFx0XHRcdFx0dmFyIGRlcGVuZGVuY3kgPSBtb2R1bGVPdXRkYXRlZERlcGVuZGVuY2llc1tqXTtcblx0XHRcdFx0XHRcdFx0dmFyIGFjY2VwdENhbGxiYWNrID1cblx0XHRcdFx0XHRcdFx0XHRtb2R1bGUuaG90Ll9hY2NlcHRlZERlcGVuZGVuY2llc1tkZXBlbmRlbmN5XTtcblx0XHRcdFx0XHRcdFx0dmFyIGVycm9ySGFuZGxlciA9XG5cdFx0XHRcdFx0XHRcdFx0bW9kdWxlLmhvdC5fYWNjZXB0ZWRFcnJvckhhbmRsZXJzW2RlcGVuZGVuY3ldO1xuXHRcdFx0XHRcdFx0XHRpZiAoYWNjZXB0Q2FsbGJhY2spIHtcblx0XHRcdFx0XHRcdFx0XHRpZiAoY2FsbGJhY2tzLmluZGV4T2YoYWNjZXB0Q2FsbGJhY2spICE9PSAtMSkgY29udGludWU7XG5cdFx0XHRcdFx0XHRcdFx0Y2FsbGJhY2tzLnB1c2goYWNjZXB0Q2FsbGJhY2spO1xuXHRcdFx0XHRcdFx0XHRcdGVycm9ySGFuZGxlcnMucHVzaChlcnJvckhhbmRsZXIpO1xuXHRcdFx0XHRcdFx0XHRcdGRlcGVuZGVuY2llc0ZvckNhbGxiYWNrcy5wdXNoKGRlcGVuZGVuY3kpO1xuXHRcdFx0XHRcdFx0XHR9XG5cdFx0XHRcdFx0XHR9XG5cdFx0XHRcdFx0XHRmb3IgKHZhciBrID0gMDsgayA8IGNhbGxiYWNrcy5sZW5ndGg7IGsrKykge1xuXHRcdFx0XHRcdFx0XHR0cnkge1xuXHRcdFx0XHRcdFx0XHRcdGNhbGxiYWNrc1trXS5jYWxsKG51bGwsIG1vZHVsZU91dGRhdGVkRGVwZW5kZW5jaWVzKTtcblx0XHRcdFx0XHRcdFx0fSBjYXRjaCAoZXJyKSB7XG5cdFx0XHRcdFx0XHRcdFx0aWYgKHR5cGVvZiBlcnJvckhhbmRsZXJzW2tdID09PSBcImZ1bmN0aW9uXCIpIHtcblx0XHRcdFx0XHRcdFx0XHRcdHRyeSB7XG5cdFx0XHRcdFx0XHRcdFx0XHRcdGVycm9ySGFuZGxlcnNba10oZXJyLCB7XG5cdFx0XHRcdFx0XHRcdFx0XHRcdFx0bW9kdWxlSWQ6IG91dGRhdGVkTW9kdWxlSWQsXG5cdFx0XHRcdFx0XHRcdFx0XHRcdFx0ZGVwZW5kZW5jeUlkOiBkZXBlbmRlbmNpZXNGb3JDYWxsYmFja3Nba11cblx0XHRcdFx0XHRcdFx0XHRcdFx0fSk7XG5cdFx0XHRcdFx0XHRcdFx0XHR9IGNhdGNoIChlcnIyKSB7XG5cdFx0XHRcdFx0XHRcdFx0XHRcdGlmIChvcHRpb25zLm9uRXJyb3JlZCkge1xuXHRcdFx0XHRcdFx0XHRcdFx0XHRcdG9wdGlvbnMub25FcnJvcmVkKHtcblx0XHRcdFx0XHRcdFx0XHRcdFx0XHRcdHR5cGU6IFwiYWNjZXB0LWVycm9yLWhhbmRsZXItZXJyb3JlZFwiLFxuXHRcdFx0XHRcdFx0XHRcdFx0XHRcdFx0bW9kdWxlSWQ6IG91dGRhdGVkTW9kdWxlSWQsXG5cdFx0XHRcdFx0XHRcdFx0XHRcdFx0XHRkZXBlbmRlbmN5SWQ6IGRlcGVuZGVuY2llc0ZvckNhbGxiYWNrc1trXSxcblx0XHRcdFx0XHRcdFx0XHRcdFx0XHRcdGVycm9yOiBlcnIyLFxuXHRcdFx0XHRcdFx0XHRcdFx0XHRcdFx0b3JpZ2luYWxFcnJvcjogZXJyXG5cdFx0XHRcdFx0XHRcdFx0XHRcdFx0fSk7XG5cdFx0XHRcdFx0XHRcdFx0XHRcdH1cblx0XHRcdFx0XHRcdFx0XHRcdFx0aWYgKCFvcHRpb25zLmlnbm9yZUVycm9yZWQpIHtcblx0XHRcdFx0XHRcdFx0XHRcdFx0XHRyZXBvcnRFcnJvcihlcnIyKTtcblx0XHRcdFx0XHRcdFx0XHRcdFx0XHRyZXBvcnRFcnJvcihlcnIpO1xuXHRcdFx0XHRcdFx0XHRcdFx0XHR9XG5cdFx0XHRcdFx0XHRcdFx0XHR9XG5cdFx0XHRcdFx0XHRcdFx0fSBlbHNlIHtcblx0XHRcdFx0XHRcdFx0XHRcdGlmIChvcHRpb25zLm9uRXJyb3JlZCkge1xuXHRcdFx0XHRcdFx0XHRcdFx0XHRvcHRpb25zLm9uRXJyb3JlZCh7XG5cdFx0XHRcdFx0XHRcdFx0XHRcdFx0dHlwZTogXCJhY2NlcHQtZXJyb3JlZFwiLFxuXHRcdFx0XHRcdFx0XHRcdFx0XHRcdG1vZHVsZUlkOiBvdXRkYXRlZE1vZHVsZUlkLFxuXHRcdFx0XHRcdFx0XHRcdFx0XHRcdGRlcGVuZGVuY3lJZDogZGVwZW5kZW5jaWVzRm9yQ2FsbGJhY2tzW2tdLFxuXHRcdFx0XHRcdFx0XHRcdFx0XHRcdGVycm9yOiBlcnJcblx0XHRcdFx0XHRcdFx0XHRcdFx0fSk7XG5cdFx0XHRcdFx0XHRcdFx0XHR9XG5cdFx0XHRcdFx0XHRcdFx0XHRpZiAoIW9wdGlvbnMuaWdub3JlRXJyb3JlZCkge1xuXHRcdFx0XHRcdFx0XHRcdFx0XHRyZXBvcnRFcnJvcihlcnIpO1xuXHRcdFx0XHRcdFx0XHRcdFx0fVxuXHRcdFx0XHRcdFx0XHRcdH1cblx0XHRcdFx0XHRcdFx0fVxuXHRcdFx0XHRcdFx0fVxuXHRcdFx0XHRcdH1cblx0XHRcdFx0fVxuXHRcdFx0fVxuXG5cdFx0XHQvLyBMb2FkIHNlbGYgYWNjZXB0ZWQgbW9kdWxlc1xuXHRcdFx0Zm9yICh2YXIgbyA9IDA7IG8gPCBvdXRkYXRlZFNlbGZBY2NlcHRlZE1vZHVsZXMubGVuZ3RoOyBvKyspIHtcblx0XHRcdFx0dmFyIGl0ZW0gPSBvdXRkYXRlZFNlbGZBY2NlcHRlZE1vZHVsZXNbb107XG5cdFx0XHRcdHZhciBtb2R1bGVJZCA9IGl0ZW0ubW9kdWxlO1xuXHRcdFx0XHR0cnkge1xuXHRcdFx0XHRcdGl0ZW0ucmVxdWlyZShtb2R1bGVJZCk7XG5cdFx0XHRcdH0gY2F0Y2ggKGVycikge1xuXHRcdFx0XHRcdGlmICh0eXBlb2YgaXRlbS5lcnJvckhhbmRsZXIgPT09IFwiZnVuY3Rpb25cIikge1xuXHRcdFx0XHRcdFx0dHJ5IHtcblx0XHRcdFx0XHRcdFx0aXRlbS5lcnJvckhhbmRsZXIoZXJyLCB7XG5cdFx0XHRcdFx0XHRcdFx0bW9kdWxlSWQ6IG1vZHVsZUlkLFxuXHRcdFx0XHRcdFx0XHRcdG1vZHVsZTogX193ZWJwYWNrX3JlcXVpcmVfXy5jW21vZHVsZUlkXVxuXHRcdFx0XHRcdFx0XHR9KTtcblx0XHRcdFx0XHRcdH0gY2F0Y2ggKGVycjIpIHtcblx0XHRcdFx0XHRcdFx0aWYgKG9wdGlvbnMub25FcnJvcmVkKSB7XG5cdFx0XHRcdFx0XHRcdFx0b3B0aW9ucy5vbkVycm9yZWQoe1xuXHRcdFx0XHRcdFx0XHRcdFx0dHlwZTogXCJzZWxmLWFjY2VwdC1lcnJvci1oYW5kbGVyLWVycm9yZWRcIixcblx0XHRcdFx0XHRcdFx0XHRcdG1vZHVsZUlkOiBtb2R1bGVJZCxcblx0XHRcdFx0XHRcdFx0XHRcdGVycm9yOiBlcnIyLFxuXHRcdFx0XHRcdFx0XHRcdFx0b3JpZ2luYWxFcnJvcjogZXJyXG5cdFx0XHRcdFx0XHRcdFx0fSk7XG5cdFx0XHRcdFx0XHRcdH1cblx0XHRcdFx0XHRcdFx0aWYgKCFvcHRpb25zLmlnbm9yZUVycm9yZWQpIHtcblx0XHRcdFx0XHRcdFx0XHRyZXBvcnRFcnJvcihlcnIyKTtcblx0XHRcdFx0XHRcdFx0XHRyZXBvcnRFcnJvcihlcnIpO1xuXHRcdFx0XHRcdFx0XHR9XG5cdFx0XHRcdFx0XHR9XG5cdFx0XHRcdFx0fSBlbHNlIHtcblx0XHRcdFx0XHRcdGlmIChvcHRpb25zLm9uRXJyb3JlZCkge1xuXHRcdFx0XHRcdFx0XHRvcHRpb25zLm9uRXJyb3JlZCh7XG5cdFx0XHRcdFx0XHRcdFx0dHlwZTogXCJzZWxmLWFjY2VwdC1lcnJvcmVkXCIsXG5cdFx0XHRcdFx0XHRcdFx0bW9kdWxlSWQ6IG1vZHVsZUlkLFxuXHRcdFx0XHRcdFx0XHRcdGVycm9yOiBlcnJcblx0XHRcdFx0XHRcdFx0fSk7XG5cdFx0XHRcdFx0XHR9XG5cdFx0XHRcdFx0XHRpZiAoIW9wdGlvbnMuaWdub3JlRXJyb3JlZCkge1xuXHRcdFx0XHRcdFx0XHRyZXBvcnRFcnJvcihlcnIpO1xuXHRcdFx0XHRcdFx0fVxuXHRcdFx0XHRcdH1cblx0XHRcdFx0fVxuXHRcdFx0fVxuXG5cdFx0XHRyZXR1cm4gb3V0ZGF0ZWRNb2R1bGVzO1xuXHRcdH1cblx0fTtcbn1cbl9fd2VicGFja19yZXF1aXJlX18uaG1ySS5qc29ucCA9IGZ1bmN0aW9uIChtb2R1bGVJZCwgYXBwbHlIYW5kbGVycykge1xuXHRpZiAoIWN1cnJlbnRVcGRhdGUpIHtcblx0XHRjdXJyZW50VXBkYXRlID0ge307XG5cdFx0Y3VycmVudFVwZGF0ZVJ1bnRpbWUgPSBbXTtcblx0XHRjdXJyZW50VXBkYXRlUmVtb3ZlZENodW5rcyA9IFtdO1xuXHRcdGFwcGx5SGFuZGxlcnMucHVzaChhcHBseUhhbmRsZXIpO1xuXHR9XG5cdGlmICghX193ZWJwYWNrX3JlcXVpcmVfXy5vKGN1cnJlbnRVcGRhdGUsIG1vZHVsZUlkKSkge1xuXHRcdGN1cnJlbnRVcGRhdGVbbW9kdWxlSWRdID0gX193ZWJwYWNrX3JlcXVpcmVfXy5tW21vZHVsZUlkXTtcblx0fVxufTtcbl9fd2VicGFja19yZXF1aXJlX18uaG1yQy5qc29ucCA9IGZ1bmN0aW9uIChcblx0Y2h1bmtJZHMsXG5cdHJlbW92ZWRDaHVua3MsXG5cdHJlbW92ZWRNb2R1bGVzLFxuXHRwcm9taXNlcyxcblx0YXBwbHlIYW5kbGVycyxcblx0dXBkYXRlZE1vZHVsZXNMaXN0XG4pIHtcblx0YXBwbHlIYW5kbGVycy5wdXNoKGFwcGx5SGFuZGxlcik7XG5cdGN1cnJlbnRVcGRhdGVDaHVua3MgPSB7fTtcblx0Y3VycmVudFVwZGF0ZVJlbW92ZWRDaHVua3MgPSByZW1vdmVkQ2h1bmtzO1xuXHRjdXJyZW50VXBkYXRlID0gcmVtb3ZlZE1vZHVsZXMucmVkdWNlKGZ1bmN0aW9uIChvYmosIGtleSkge1xuXHRcdG9ialtrZXldID0gZmFsc2U7XG5cdFx0cmV0dXJuIG9iajtcblx0fSwge30pO1xuXHRjdXJyZW50VXBkYXRlUnVudGltZSA9IFtdO1xuXHRjaHVua0lkcy5mb3JFYWNoKGZ1bmN0aW9uIChjaHVua0lkKSB7XG5cdFx0aWYgKFxuXHRcdFx0X193ZWJwYWNrX3JlcXVpcmVfXy5vKGluc3RhbGxlZENodW5rcywgY2h1bmtJZCkgJiZcblx0XHRcdGluc3RhbGxlZENodW5rc1tjaHVua0lkXSAhPT0gdW5kZWZpbmVkXG5cdFx0KSB7XG5cdFx0XHRwcm9taXNlcy5wdXNoKGxvYWRVcGRhdGVDaHVuayhjaHVua0lkLCB1cGRhdGVkTW9kdWxlc0xpc3QpKTtcblx0XHRcdGN1cnJlbnRVcGRhdGVDaHVua3NbY2h1bmtJZF0gPSB0cnVlO1xuXHRcdH0gZWxzZSB7XG5cdFx0XHRjdXJyZW50VXBkYXRlQ2h1bmtzW2NodW5rSWRdID0gZmFsc2U7XG5cdFx0fVxuXHR9KTtcblx0aWYgKF9fd2VicGFja19yZXF1aXJlX18uZikge1xuXHRcdF9fd2VicGFja19yZXF1aXJlX18uZi5qc29ucEhtciA9IGZ1bmN0aW9uIChjaHVua0lkLCBwcm9taXNlcykge1xuXHRcdFx0aWYgKFxuXHRcdFx0XHRjdXJyZW50VXBkYXRlQ2h1bmtzICYmXG5cdFx0XHRcdF9fd2VicGFja19yZXF1aXJlX18ubyhjdXJyZW50VXBkYXRlQ2h1bmtzLCBjaHVua0lkKSAmJlxuXHRcdFx0XHQhY3VycmVudFVwZGF0ZUNodW5rc1tjaHVua0lkXVxuXHRcdFx0KSB7XG5cdFx0XHRcdHByb21pc2VzLnB1c2gobG9hZFVwZGF0ZUNodW5rKGNodW5rSWQpKTtcblx0XHRcdFx0Y3VycmVudFVwZGF0ZUNodW5rc1tjaHVua0lkXSA9IHRydWU7XG5cdFx0XHR9XG5cdFx0fTtcblx0fVxufTtcblxuX193ZWJwYWNrX3JlcXVpcmVfXy5obXJNID0gKCkgPT4ge1xuXHRpZiAodHlwZW9mIGZldGNoID09PSBcInVuZGVmaW5lZFwiKSB0aHJvdyBuZXcgRXJyb3IoXCJObyBicm93c2VyIHN1cHBvcnQ6IG5lZWQgZmV0Y2ggQVBJXCIpO1xuXHRyZXR1cm4gZmV0Y2goX193ZWJwYWNrX3JlcXVpcmVfXy5wICsgX193ZWJwYWNrX3JlcXVpcmVfXy5obXJGKCkpLnRoZW4oKHJlc3BvbnNlKSA9PiB7XG5cdFx0aWYocmVzcG9uc2Uuc3RhdHVzID09PSA0MDQpIHJldHVybjsgLy8gbm8gdXBkYXRlIGF2YWlsYWJsZVxuXHRcdGlmKCFyZXNwb25zZS5vaykgdGhyb3cgbmV3IEVycm9yKFwiRmFpbGVkIHRvIGZldGNoIHVwZGF0ZSBtYW5pZmVzdCBcIiArIHJlc3BvbnNlLnN0YXR1c1RleHQpO1xuXHRcdHJldHVybiByZXNwb25zZS5qc29uKCk7XG5cdH0pO1xufTtcblxuLy8gbm8gb24gY2h1bmtzIGxvYWRlZFxuXG4vLyBubyBqc29ucCBmdW5jdGlvbiIsIi8vIG1vZHVsZSBjYWNoZSBhcmUgdXNlZCBzbyBlbnRyeSBpbmxpbmluZyBpcyBkaXNhYmxlZFxuLy8gc3RhcnR1cFxuLy8gTG9hZCBlbnRyeSBtb2R1bGUgYW5kIHJldHVybiBleHBvcnRzXG52YXIgX193ZWJwYWNrX2V4cG9ydHNfXyA9IF9fd2VicGFja19yZXF1aXJlX18oNzkxKTtcbiJdLCJuYW1lcyI6WyJsZWFmUHJvdG90eXBlcyIsImdldFByb3RvIiwiaW5Qcm9ncmVzcyIsImRhdGFXZWJwYWNrUHJlZml4IiwiY3JlYXRlU3R5bGVzaGVldCIsImZpbmRTdHlsZXNoZWV0Iiwib2xkVGFncyIsIm5ld1RhZ3MiLCJhcHBseUhhbmRsZXIiLCJBY3Rpb24iLCJSZXN1bHRUeXBlIiwicm91dGVDb25maWciLCJwYXRoIiwiY29tcG9uZW50IiwiaW5kZXhSb3V0ZSIsImNoaWxkUm91dGVzIiwiRXJyb3IiLCJPYmplY3QiLCJpcyIsInVzZVN0YXRlIiwidXNlRWZmZWN0IiwidXNlTGF5b3V0RWZmZWN0IiwidXNlRGVidWdWYWx1ZSIsIndpbmRvdyIsImRvY3VtZW50IiwiY3JlYXRlRWxlbWVudCIsInVzZVN5bmNFeHRlcm5hbFN0b3JlIiwiTmF2aWdhdGlvbkNvbnRleHQiLCJMb2NhdGlvbkNvbnRleHQiLCJSZW5kZXJFcnJvckJvdW5kYXJ5IiwiY29uc3RydWN0b3IiLCJwcm9wcyIsInN1cGVyIiwidGhpcyIsInN0YXRlIiwibG9jYXRpb24iLCJlcnJvciIsInN0YXRpYyIsImNvbXBvbmVudERpZENhdGNoIiwiZXJyb3JJbmZvIiwiY29uc29sZSIsInJlbmRlciIsIlJlYWN0IiwiUm91dGVFcnJvckNvbnRleHQiLCJQcm92aWRlciIsInZhbHVlIiwiY2hpbGRyZW4iLCJEYXRhUm91dGVySG9vayIsIkRhdGFSb3V0ZXJTdGF0ZUhvb2siLCJBd2FpdFJlbmRlclN0YXR1cyIsIlJvdXRlciIsIl9yZWY0IiwiYmFzZW5hbWUiLCJiYXNlbmFtZVByb3AiLCJsb2NhdGlvblByb3AiLCJuYXZpZ2F0aW9uVHlwZSIsIm5hdmlnYXRvciIsInN0YXRpY1Byb3AiLCJtZXNzYWdlIiwicmVwbGFjZSIsIm5hdmlnYXRpb25Db250ZXh0IiwicGFyc2VkUGF0aCIsImhhc2hJbmRleCIsImluZGV4T2YiLCJoYXNoIiwic3Vic3RyIiwic2VhcmNoSW5kZXgiLCJzZWFyY2giLCJwYXRobmFtZSIsImtleSIsInRyYWlsaW5nUGF0aG5hbWUiLCJ0b0xvd2VyQ2FzZSIsInN0YXJ0c1dpdGgiLCJzdGFydEluZGV4IiwiZW5kc1dpdGgiLCJsZW5ndGgiLCJuZXh0Q2hhciIsImNoYXJBdCIsInNsaWNlIiwic3RyaXBCYXNlbmFtZSIsIlByb21pc2UiLCJBd2FpdEVycm9yQm91bmRhcnkiLCJlcnJvckVsZW1lbnQiLCJyZXNvbHZlIiwicHJvbWlzZSIsInN0YXR1cyIsInBlbmRpbmciLCJyZW5kZXJFcnJvciIsInJlamVjdCIsImNhdGNoIiwiZGVmaW5lUHJvcGVydHkiLCJnZXQiLCJfdHJhY2tlZCIsInVuZGVmaW5lZCIsIl9lcnJvciIsIl9kYXRhIiwic3VjY2VzcyIsInRoZW4iLCJkYXRhIiwiQWJvcnRlZERlZmVycmVkRXJyb3IiLCJuZXZlclNldHRsZWRQcm9taXNlIiwiQXdhaXRDb250ZXh0Iiwibm9kZSIsInF1ZXJ5U2VsZWN0b3IiLCJsb2ciLCJSZWFjdERPTSIsInJvdXRlcyIsImFhIiwiY2EiLCJwIiwiYSIsImIiLCJjIiwiYXJndW1lbnRzIiwiZW5jb2RlVVJJQ29tcG9uZW50IiwiZGEiLCJTZXQiLCJlYSIsImZhIiwiaGEiLCJhZGQiLCJpYSIsImphIiwicHJvdG90eXBlIiwiaGFzT3duUHJvcGVydHkiLCJrYSIsImxhIiwibWEiLCJ2IiwiZCIsImUiLCJmIiwiZyIsImFjY2VwdHNCb29sZWFucyIsImF0dHJpYnV0ZU5hbWUiLCJhdHRyaWJ1dGVOYW1lc3BhY2UiLCJtdXN0VXNlUHJvcGVydHkiLCJwcm9wZXJ0eU5hbWUiLCJ0eXBlIiwic2FuaXRpemVVUkwiLCJyZW1vdmVFbXB0eVN0cmluZyIsInoiLCJzcGxpdCIsImZvckVhY2giLCJyYSIsInNhIiwidG9VcHBlckNhc2UiLCJ0YSIsInBhIiwiaXNOYU4iLCJxYSIsImNhbGwiLCJ0ZXN0Iiwib2EiLCJyZW1vdmVBdHRyaWJ1dGUiLCJzZXRBdHRyaWJ1dGUiLCJzZXRBdHRyaWJ1dGVOUyIsInhsaW5rSHJlZiIsInVhIiwiX19TRUNSRVRfSU5URVJOQUxTX0RPX05PVF9VU0VfT1JfWU9VX1dJTExfQkVfRklSRUQiLCJ2YSIsIlN5bWJvbCIsImZvciIsIndhIiwieWEiLCJ6YSIsIkFhIiwiQmEiLCJDYSIsIkRhIiwiRWEiLCJGYSIsIkdhIiwiSGEiLCJJYSIsIkphIiwiaXRlcmF0b3IiLCJLYSIsIkxhIiwiQSIsImFzc2lnbiIsIk1hIiwic3RhY2siLCJ0cmltIiwibWF0Y2giLCJOYSIsIk9hIiwicHJlcGFyZVN0YWNrVHJhY2UiLCJzZXQiLCJSZWZsZWN0IiwiY29uc3RydWN0IiwibCIsImgiLCJrIiwiZGlzcGxheU5hbWUiLCJpbmNsdWRlcyIsIm5hbWUiLCJQYSIsInRhZyIsIlFhIiwiJCR0eXBlb2YiLCJfY29udGV4dCIsIl9wYXlsb2FkIiwiX2luaXQiLCJSYSIsIlNhIiwiVGEiLCJub2RlTmFtZSIsIlZhIiwiX3ZhbHVlVHJhY2tlciIsImdldE93blByb3BlcnR5RGVzY3JpcHRvciIsImNvbmZpZ3VyYWJsZSIsImVudW1lcmFibGUiLCJnZXRWYWx1ZSIsInNldFZhbHVlIiwic3RvcFRyYWNraW5nIiwiVWEiLCJXYSIsImNoZWNrZWQiLCJYYSIsImFjdGl2ZUVsZW1lbnQiLCJib2R5IiwiWWEiLCJkZWZhdWx0Q2hlY2tlZCIsImRlZmF1bHRWYWx1ZSIsIl93cmFwcGVyU3RhdGUiLCJpbml0aWFsQ2hlY2tlZCIsIlphIiwiaW5pdGlhbFZhbHVlIiwiY29udHJvbGxlZCIsImFiIiwiYmIiLCJjYiIsImRiIiwib3duZXJEb2N1bWVudCIsImViIiwiQXJyYXkiLCJpc0FycmF5IiwiZmIiLCJvcHRpb25zIiwic2VsZWN0ZWQiLCJkZWZhdWx0U2VsZWN0ZWQiLCJkaXNhYmxlZCIsImdiIiwiZGFuZ2Vyb3VzbHlTZXRJbm5lckhUTUwiLCJoYiIsImliIiwiamIiLCJ0ZXh0Q29udGVudCIsImtiIiwibGIiLCJtYiIsIm5iIiwibmFtZXNwYWNlVVJJIiwiaW5uZXJIVE1MIiwidmFsdWVPZiIsInRvU3RyaW5nIiwiZmlyc3RDaGlsZCIsInJlbW92ZUNoaWxkIiwiYXBwZW5kQ2hpbGQiLCJNU0FwcCIsImV4ZWNVbnNhZmVMb2NhbEZ1bmN0aW9uIiwib2IiLCJsYXN0Q2hpbGQiLCJub2RlVHlwZSIsIm5vZGVWYWx1ZSIsInBiIiwiYW5pbWF0aW9uSXRlcmF0aW9uQ291bnQiLCJhc3BlY3RSYXRpbyIsImJvcmRlckltYWdlT3V0c2V0IiwiYm9yZGVySW1hZ2VTbGljZSIsImJvcmRlckltYWdlV2lkdGgiLCJib3hGbGV4IiwiYm94RmxleEdyb3VwIiwiYm94T3JkaW5hbEdyb3VwIiwiY29sdW1uQ291bnQiLCJjb2x1bW5zIiwiZmxleCIsImZsZXhHcm93IiwiZmxleFBvc2l0aXZlIiwiZmxleFNocmluayIsImZsZXhOZWdhdGl2ZSIsImZsZXhPcmRlciIsImdyaWRBcmVhIiwiZ3JpZFJvdyIsImdyaWRSb3dFbmQiLCJncmlkUm93U3BhbiIsImdyaWRSb3dTdGFydCIsImdyaWRDb2x1bW4iLCJncmlkQ29sdW1uRW5kIiwiZ3JpZENvbHVtblNwYW4iLCJncmlkQ29sdW1uU3RhcnQiLCJmb250V2VpZ2h0IiwibGluZUNsYW1wIiwibGluZUhlaWdodCIsIm9wYWNpdHkiLCJvcmRlciIsIm9ycGhhbnMiLCJ0YWJTaXplIiwid2lkb3dzIiwiekluZGV4Iiwiem9vbSIsImZpbGxPcGFjaXR5IiwiZmxvb2RPcGFjaXR5Iiwic3RvcE9wYWNpdHkiLCJzdHJva2VEYXNoYXJyYXkiLCJzdHJva2VEYXNob2Zmc2V0Iiwic3Ryb2tlTWl0ZXJsaW1pdCIsInN0cm9rZU9wYWNpdHkiLCJzdHJva2VXaWR0aCIsInFiIiwicmIiLCJzYiIsInN0eWxlIiwic2V0UHJvcGVydHkiLCJrZXlzIiwic3Vic3RyaW5nIiwidGIiLCJtZW51aXRlbSIsImFyZWEiLCJiYXNlIiwiYnIiLCJjb2wiLCJlbWJlZCIsImhyIiwiaW1nIiwiaW5wdXQiLCJrZXlnZW4iLCJsaW5rIiwibWV0YSIsInBhcmFtIiwic291cmNlIiwidHJhY2siLCJ3YnIiLCJ1YiIsInZiIiwid2IiLCJ4YiIsInRhcmdldCIsInNyY0VsZW1lbnQiLCJjb3JyZXNwb25kaW5nVXNlRWxlbWVudCIsInBhcmVudE5vZGUiLCJ5YiIsInpiIiwiQWIiLCJCYiIsIkNiIiwic3RhdGVOb2RlIiwiRGIiLCJFYiIsInB1c2giLCJGYiIsIkdiIiwiSGIiLCJJYiIsIkpiIiwiS2IiLCJMYiIsIk1iIiwiYWRkRXZlbnRMaXN0ZW5lciIsInJlbW92ZUV2ZW50TGlzdGVuZXIiLCJOYiIsImFwcGx5IiwibSIsIm9uRXJyb3IiLCJPYiIsIlBiIiwiUWIiLCJSYiIsIlNiIiwiVGIiLCJWYiIsImFsdGVybmF0ZSIsInJldHVybiIsImZsYWdzIiwiV2IiLCJtZW1vaXplZFN0YXRlIiwiZGVoeWRyYXRlZCIsIlhiIiwiWmIiLCJjaGlsZCIsInNpYmxpbmciLCJjdXJyZW50IiwiWWIiLCIkYiIsImFjIiwidW5zdGFibGVfc2NoZWR1bGVDYWxsYmFjayIsImJjIiwidW5zdGFibGVfY2FuY2VsQ2FsbGJhY2siLCJjYyIsInVuc3RhYmxlX3Nob3VsZFlpZWxkIiwiZGMiLCJ1bnN0YWJsZV9yZXF1ZXN0UGFpbnQiLCJCIiwidW5zdGFibGVfbm93IiwiZWMiLCJ1bnN0YWJsZV9nZXRDdXJyZW50UHJpb3JpdHlMZXZlbCIsImZjIiwidW5zdGFibGVfSW1tZWRpYXRlUHJpb3JpdHkiLCJnYyIsInVuc3RhYmxlX1VzZXJCbG9ja2luZ1ByaW9yaXR5IiwiaGMiLCJ1bnN0YWJsZV9Ob3JtYWxQcmlvcml0eSIsImljIiwidW5zdGFibGVfTG93UHJpb3JpdHkiLCJqYyIsInVuc3RhYmxlX0lkbGVQcmlvcml0eSIsImtjIiwibGMiLCJvYyIsIk1hdGgiLCJjbHozMiIsInBjIiwicWMiLCJMTjIiLCJyYyIsInNjIiwidGMiLCJ1YyIsInBlbmRpbmdMYW5lcyIsInN1c3BlbmRlZExhbmVzIiwicGluZ2VkTGFuZXMiLCJlbnRhbmdsZWRMYW5lcyIsImVudGFuZ2xlbWVudHMiLCJ2YyIsInhjIiwieWMiLCJ6YyIsIkFjIiwiZXZlbnRUaW1lcyIsIkNjIiwiQyIsIkRjIiwiRWMiLCJGYyIsIkdjIiwiSGMiLCJJYyIsIkpjIiwiS2MiLCJMYyIsIk1jIiwiTmMiLCJPYyIsIk1hcCIsIlBjIiwiUWMiLCJSYyIsIlNjIiwiZGVsZXRlIiwicG9pbnRlcklkIiwiVGMiLCJuYXRpdmVFdmVudCIsImJsb2NrZWRPbiIsImRvbUV2ZW50TmFtZSIsImV2ZW50U3lzdGVtRmxhZ3MiLCJ0YXJnZXRDb250YWluZXJzIiwiVmMiLCJXYyIsInByaW9yaXR5IiwiaXNEZWh5ZHJhdGVkIiwiY29udGFpbmVySW5mbyIsIlhjIiwiWWMiLCJkaXNwYXRjaEV2ZW50Iiwic2hpZnQiLCJaYyIsIiRjIiwiYWQiLCJiZCIsImNkIiwiUmVhY3RDdXJyZW50QmF0Y2hDb25maWciLCJkZCIsImVkIiwidHJhbnNpdGlvbiIsImZkIiwiZ2QiLCJoZCIsImlkIiwiVWMiLCJzdG9wUHJvcGFnYXRpb24iLCJqZCIsImtkIiwibGQiLCJtZCIsIm5kIiwib2QiLCJrZXlDb2RlIiwiY2hhckNvZGUiLCJwZCIsInFkIiwicmQiLCJfcmVhY3ROYW1lIiwiX3RhcmdldEluc3QiLCJjdXJyZW50VGFyZ2V0IiwiaXNEZWZhdWx0UHJldmVudGVkIiwiZGVmYXVsdFByZXZlbnRlZCIsInJldHVyblZhbHVlIiwiaXNQcm9wYWdhdGlvblN0b3BwZWQiLCJwcmV2ZW50RGVmYXVsdCIsImNhbmNlbEJ1YmJsZSIsInBlcnNpc3QiLCJpc1BlcnNpc3RlbnQiLCJ3ZCIsInhkIiwieWQiLCJzZCIsImV2ZW50UGhhc2UiLCJidWJibGVzIiwiY2FuY2VsYWJsZSIsInRpbWVTdGFtcCIsIkRhdGUiLCJub3ciLCJpc1RydXN0ZWQiLCJ0ZCIsInVkIiwidmlldyIsImRldGFpbCIsInZkIiwiQWQiLCJzY3JlZW5YIiwic2NyZWVuWSIsImNsaWVudFgiLCJjbGllbnRZIiwicGFnZVgiLCJwYWdlWSIsImN0cmxLZXkiLCJzaGlmdEtleSIsImFsdEtleSIsIm1ldGFLZXkiLCJnZXRNb2RpZmllclN0YXRlIiwiemQiLCJidXR0b24iLCJidXR0b25zIiwicmVsYXRlZFRhcmdldCIsImZyb21FbGVtZW50IiwidG9FbGVtZW50IiwibW92ZW1lbnRYIiwibW92ZW1lbnRZIiwiQmQiLCJEZCIsImRhdGFUcmFuc2ZlciIsIkZkIiwiSGQiLCJhbmltYXRpb25OYW1lIiwiZWxhcHNlZFRpbWUiLCJwc2V1ZG9FbGVtZW50IiwiSWQiLCJjbGlwYm9hcmREYXRhIiwiSmQiLCJMZCIsIk1kIiwiRXNjIiwiU3BhY2ViYXIiLCJMZWZ0IiwiVXAiLCJSaWdodCIsIkRvd24iLCJEZWwiLCJXaW4iLCJNZW51IiwiQXBwcyIsIlNjcm9sbCIsIk1velByaW50YWJsZUtleSIsIk5kIiwiT2QiLCJBbHQiLCJDb250cm9sIiwiTWV0YSIsIlNoaWZ0IiwiUGQiLCJRZCIsIlN0cmluZyIsImZyb21DaGFyQ29kZSIsImNvZGUiLCJyZXBlYXQiLCJsb2NhbGUiLCJ3aGljaCIsIlJkIiwiVGQiLCJ3aWR0aCIsImhlaWdodCIsInByZXNzdXJlIiwidGFuZ2VudGlhbFByZXNzdXJlIiwidGlsdFgiLCJ0aWx0WSIsInR3aXN0IiwicG9pbnRlclR5cGUiLCJpc1ByaW1hcnkiLCJWZCIsInRvdWNoZXMiLCJ0YXJnZXRUb3VjaGVzIiwiY2hhbmdlZFRvdWNoZXMiLCJYZCIsIllkIiwiZGVsdGFYIiwid2hlZWxEZWx0YVgiLCJkZWx0YVkiLCJ3aGVlbERlbHRhWSIsIndoZWVsRGVsdGEiLCJkZWx0YVoiLCJkZWx0YU1vZGUiLCJaZCIsIiRkIiwiYWUiLCJiZSIsImRvY3VtZW50TW9kZSIsImNlIiwiZGUiLCJlZSIsImZlIiwiZ2UiLCJoZSIsImllIiwibGUiLCJjb2xvciIsImRhdGUiLCJkYXRldGltZSIsImVtYWlsIiwibW9udGgiLCJudW1iZXIiLCJwYXNzd29yZCIsInJhbmdlIiwidGVsIiwidGV4dCIsInRpbWUiLCJ1cmwiLCJ3ZWVrIiwibWUiLCJuZSIsIm9lIiwiZXZlbnQiLCJsaXN0ZW5lcnMiLCJwZSIsInFlIiwicmUiLCJzZSIsInRlIiwidWUiLCJ2ZSIsIndlIiwieGUiLCJ5ZSIsInplIiwib25pbnB1dCIsIkFlIiwiZGV0YWNoRXZlbnQiLCJCZSIsIkNlIiwiYXR0YWNoRXZlbnQiLCJEZSIsIkVlIiwiRmUiLCJIZSIsIkllIiwiSmUiLCJLZSIsIm9mZnNldCIsIm5leHRTaWJsaW5nIiwiTGUiLCJjb250YWlucyIsImNvbXBhcmVEb2N1bWVudFBvc2l0aW9uIiwiTWUiLCJIVE1MSUZyYW1lRWxlbWVudCIsImNvbnRlbnRXaW5kb3ciLCJocmVmIiwiTmUiLCJjb250ZW50RWRpdGFibGUiLCJPZSIsImZvY3VzZWRFbGVtIiwic2VsZWN0aW9uUmFuZ2UiLCJkb2N1bWVudEVsZW1lbnQiLCJzdGFydCIsImVuZCIsInNlbGVjdGlvblN0YXJ0Iiwic2VsZWN0aW9uRW5kIiwibWluIiwiZGVmYXVsdFZpZXciLCJnZXRTZWxlY3Rpb24iLCJleHRlbmQiLCJyYW5nZUNvdW50IiwiYW5jaG9yTm9kZSIsImFuY2hvck9mZnNldCIsImZvY3VzTm9kZSIsImZvY3VzT2Zmc2V0IiwiY3JlYXRlUmFuZ2UiLCJzZXRTdGFydCIsInJlbW92ZUFsbFJhbmdlcyIsImFkZFJhbmdlIiwic2V0RW5kIiwiZWxlbWVudCIsImxlZnQiLCJzY3JvbGxMZWZ0IiwidG9wIiwic2Nyb2xsVG9wIiwiZm9jdXMiLCJQZSIsIlFlIiwiUmUiLCJTZSIsIlRlIiwiVWUiLCJWZSIsIldlIiwiYW5pbWF0aW9uZW5kIiwiYW5pbWF0aW9uaXRlcmF0aW9uIiwiYW5pbWF0aW9uc3RhcnQiLCJ0cmFuc2l0aW9uZW5kIiwiWGUiLCJZZSIsIlplIiwiYW5pbWF0aW9uIiwiJGUiLCJhZiIsImJmIiwiY2YiLCJkZiIsImVmIiwiZmYiLCJnZiIsImhmIiwibGYiLCJtZiIsImNvbmNhdCIsIm5mIiwiVWIiLCJpbnN0YW5jZSIsImxpc3RlbmVyIiwiRCIsIm9mIiwiaGFzIiwicGYiLCJxZiIsInJmIiwicmFuZG9tIiwic2YiLCJiaW5kIiwiY2FwdHVyZSIsInBhc3NpdmUiLCJuIiwidCIsIkoiLCJ4IiwidSIsInciLCJGIiwidGYiLCJ1ZiIsInBhcmVudFdpbmRvdyIsInZmIiwid2YiLCJuYSIsInhhIiwiJGEiLCJiYSIsImplIiwiY2hhciIsImtlIiwidW5zaGlmdCIsInhmIiwieWYiLCJ6ZiIsIkFmIiwiQmYiLCJDZiIsIkRmIiwiRWYiLCJfX2h0bWwiLCJGZiIsInNldFRpbWVvdXQiLCJHZiIsImNsZWFyVGltZW91dCIsIkhmIiwiSmYiLCJxdWV1ZU1pY3JvdGFzayIsIklmIiwiS2YiLCJMZiIsIk1mIiwicHJldmlvdXNTaWJsaW5nIiwiTmYiLCJPZiIsIlBmIiwiUWYiLCJSZiIsIlNmIiwiVGYiLCJVZiIsIkUiLCJHIiwiVmYiLCJIIiwiV2YiLCJYZiIsIllmIiwiY29udGV4dFR5cGVzIiwiX19yZWFjdEludGVybmFsTWVtb2l6ZWRVbm1hc2tlZENoaWxkQ29udGV4dCIsIl9fcmVhY3RJbnRlcm5hbE1lbW9pemVkTWFza2VkQ2hpbGRDb250ZXh0IiwiWmYiLCJjaGlsZENvbnRleHRUeXBlcyIsIiRmIiwiYWciLCJiZyIsImdldENoaWxkQ29udGV4dCIsImNnIiwiX19yZWFjdEludGVybmFsTWVtb2l6ZWRNZXJnZWRDaGlsZENvbnRleHQiLCJkZyIsImVnIiwiZmciLCJnZyIsImhnIiwiamciLCJrZyIsImxnIiwibWciLCJuZyIsIm9nIiwicGciLCJxZyIsInJnIiwic2ciLCJ0ZyIsInVnIiwidmciLCJ3ZyIsInhnIiwieWciLCJJIiwiemciLCJBZyIsIkJnIiwiZWxlbWVudFR5cGUiLCJkZWxldGlvbnMiLCJDZyIsInBlbmRpbmdQcm9wcyIsIm92ZXJmbG93IiwidHJlZUNvbnRleHQiLCJyZXRyeUxhbmUiLCJEZyIsIm1vZGUiLCJFZyIsIkZnIiwiR2ciLCJtZW1vaXplZFByb3BzIiwiSGciLCJJZyIsIkpnIiwiS2ciLCJMZyIsImRlZmF1bHRQcm9wcyIsIk1nIiwiTmciLCJPZyIsIlBnIiwiUWciLCJSZyIsIl9jdXJyZW50VmFsdWUiLCJTZyIsImNoaWxkTGFuZXMiLCJUZyIsImRlcGVuZGVuY2llcyIsImZpcnN0Q29udGV4dCIsImxhbmVzIiwiVWciLCJWZyIsImNvbnRleHQiLCJtZW1vaXplZFZhbHVlIiwibmV4dCIsIldnIiwiWGciLCJZZyIsImludGVybGVhdmVkIiwiWmciLCIkZyIsImFoIiwidXBkYXRlUXVldWUiLCJiYXNlU3RhdGUiLCJmaXJzdEJhc2VVcGRhdGUiLCJsYXN0QmFzZVVwZGF0ZSIsInNoYXJlZCIsImVmZmVjdHMiLCJiaCIsImNoIiwiZXZlbnRUaW1lIiwibGFuZSIsInBheWxvYWQiLCJjYWxsYmFjayIsImRoIiwiSyIsImVoIiwiZmgiLCJnaCIsInEiLCJyIiwieSIsImhoIiwiaWgiLCJqaCIsIkNvbXBvbmVudCIsInJlZnMiLCJraCIsIm5oIiwiaXNNb3VudGVkIiwiX3JlYWN0SW50ZXJuYWxzIiwiZW5xdWV1ZVNldFN0YXRlIiwiTCIsImxoIiwibWgiLCJlbnF1ZXVlUmVwbGFjZVN0YXRlIiwiZW5xdWV1ZUZvcmNlVXBkYXRlIiwib2giLCJzaG91bGRDb21wb25lbnRVcGRhdGUiLCJpc1B1cmVSZWFjdENvbXBvbmVudCIsInBoIiwiY29udGV4dFR5cGUiLCJ1cGRhdGVyIiwicWgiLCJjb21wb25lbnRXaWxsUmVjZWl2ZVByb3BzIiwiVU5TQUZFX2NvbXBvbmVudFdpbGxSZWNlaXZlUHJvcHMiLCJyaCIsImdldERlcml2ZWRTdGF0ZUZyb21Qcm9wcyIsImdldFNuYXBzaG90QmVmb3JlVXBkYXRlIiwiVU5TQUZFX2NvbXBvbmVudFdpbGxNb3VudCIsImNvbXBvbmVudFdpbGxNb3VudCIsImNvbXBvbmVudERpZE1vdW50Iiwic2giLCJyZWYiLCJfb3duZXIiLCJfc3RyaW5nUmVmIiwidGgiLCJqb2luIiwidWgiLCJ2aCIsImluZGV4Iiwid2giLCJ4aCIsInloIiwiaW1wbGVtZW50YXRpb24iLCJ6aCIsIkFoIiwiZG9uZSIsIkJoIiwiQ2giLCJEaCIsIkVoIiwiRmgiLCJHaCIsIkhoIiwiSWgiLCJ0YWdOYW1lIiwiSmgiLCJLaCIsIkxoIiwiTSIsIk1oIiwicmV2ZWFsT3JkZXIiLCJOaCIsIk9oIiwiX3dvcmtJblByb2dyZXNzVmVyc2lvblByaW1hcnkiLCJQaCIsIlJlYWN0Q3VycmVudERpc3BhdGNoZXIiLCJRaCIsIlJoIiwiTiIsIk8iLCJQIiwiU2giLCJUaCIsIlVoIiwiVmgiLCJRIiwiV2giLCJYaCIsIlloIiwiWmgiLCIkaCIsImFpIiwiYmkiLCJjaSIsImJhc2VRdWV1ZSIsInF1ZXVlIiwiZGkiLCJlaSIsImZpIiwibGFzdFJlbmRlcmVkUmVkdWNlciIsImFjdGlvbiIsImhhc0VhZ2VyU3RhdGUiLCJlYWdlclN0YXRlIiwibGFzdFJlbmRlcmVkU3RhdGUiLCJkaXNwYXRjaCIsImdpIiwiaGkiLCJpaSIsImppIiwia2kiLCJnZXRTbmFwc2hvdCIsImxpIiwibWkiLCJSIiwibmkiLCJsYXN0RWZmZWN0Iiwic3RvcmVzIiwib2kiLCJwaSIsInFpIiwicmkiLCJjcmVhdGUiLCJkZXN0cm95IiwiZGVwcyIsInNpIiwidGkiLCJ1aSIsInZpIiwid2kiLCJ4aSIsInlpIiwiemkiLCJBaSIsIkJpIiwiQ2kiLCJEaSIsIkVpIiwiRmkiLCJHaSIsIkhpIiwiSWkiLCJKaSIsInJlYWRDb250ZXh0IiwidXNlQ2FsbGJhY2siLCJ1c2VDb250ZXh0IiwidXNlSW1wZXJhdGl2ZUhhbmRsZSIsInVzZUluc2VydGlvbkVmZmVjdCIsInVzZU1lbW8iLCJ1c2VSZWR1Y2VyIiwidXNlUmVmIiwidXNlRGVmZXJyZWRWYWx1ZSIsInVzZVRyYW5zaXRpb24iLCJ1c2VNdXRhYmxlU291cmNlIiwidXNlSWQiLCJ1bnN0YWJsZV9pc05ld1JlY29uY2lsZXIiLCJpZGVudGlmaWVyUHJlZml4IiwiS2kiLCJkaWdlc3QiLCJMaSIsIk1pIiwiTmkiLCJXZWFrTWFwIiwiT2kiLCJQaSIsIlFpIiwiUmkiLCJnZXREZXJpdmVkU3RhdGVGcm9tRXJyb3IiLCJTaSIsImNvbXBvbmVudFN0YWNrIiwiVGkiLCJwaW5nQ2FjaGUiLCJVaSIsIlZpIiwiV2kiLCJYaSIsIlJlYWN0Q3VycmVudE93bmVyIiwiWWkiLCJaaSIsIiRpIiwiYWoiLCJiaiIsImNvbXBhcmUiLCJjaiIsImRqIiwiZWoiLCJiYXNlTGFuZXMiLCJjYWNoZVBvb2wiLCJ0cmFuc2l0aW9ucyIsImZqIiwiZ2oiLCJoaiIsImlqIiwiamoiLCJVTlNBRkVfY29tcG9uZW50V2lsbFVwZGF0ZSIsImNvbXBvbmVudFdpbGxVcGRhdGUiLCJjb21wb25lbnREaWRVcGRhdGUiLCJraiIsImxqIiwicGVuZGluZ0NvbnRleHQiLCJtaiIsIkFqIiwiQ2oiLCJEaiIsIm5qIiwib2oiLCJwaiIsImZhbGxiYWNrIiwicWoiLCJyaiIsInRqIiwiZGF0YXNldCIsImRnc3QiLCJ1aiIsInZqIiwiX3JlYWN0UmV0cnkiLCJzaiIsInN1YnRyZWVGbGFncyIsIndqIiwieGoiLCJpc0JhY2t3YXJkcyIsInJlbmRlcmluZyIsInJlbmRlcmluZ1N0YXJ0VGltZSIsImxhc3QiLCJ0YWlsIiwidGFpbE1vZGUiLCJ5aiIsIkVqIiwiUyIsIkZqIiwiR2oiLCJ3YXNNdWx0aXBsZSIsIm11bHRpcGxlIiwic3VwcHJlc3NIeWRyYXRpb25XYXJuaW5nIiwib25DbGljayIsIm9uY2xpY2siLCJzaXplIiwiY3JlYXRlRWxlbWVudE5TIiwiYXV0b0ZvY3VzIiwiY3JlYXRlVGV4dE5vZGUiLCJUIiwiSGoiLCJJaiIsIkpqIiwiS2oiLCJVIiwiTGoiLCJXZWFrU2V0IiwiViIsIk1qIiwiVyIsIk5qIiwiT2oiLCJRaiIsIlJqIiwiU2oiLCJUaiIsIlVqIiwiVmoiLCJXaiIsImluc2VydEJlZm9yZSIsIl9yZWFjdFJvb3RDb250YWluZXIiLCJYaiIsIlgiLCJZaiIsIlpqIiwiYWsiLCJvbkNvbW1pdEZpYmVyVW5tb3VudCIsImNvbXBvbmVudFdpbGxVbm1vdW50IiwiYmsiLCJjayIsImRrIiwiZWsiLCJmayIsImlzSGlkZGVuIiwiZ2siLCJoayIsImRpc3BsYXkiLCJpayIsImprIiwia2siLCJsayIsIl9fcmVhY3RJbnRlcm5hbFNuYXBzaG90QmVmb3JlVXBkYXRlIiwic3JjIiwiV2siLCJtayIsImNlaWwiLCJuayIsIm9rIiwicGsiLCJZIiwiWiIsInFrIiwicmsiLCJzayIsInRrIiwidWsiLCJJbmZpbml0eSIsInZrIiwid2siLCJ4ayIsInlrIiwiemsiLCJBayIsIkJrIiwiQ2siLCJEayIsIkVrIiwiY2FsbGJhY2tOb2RlIiwiZXhwaXJhdGlvblRpbWVzIiwiZXhwaXJlZExhbmVzIiwid2MiLCJjYWxsYmFja1ByaW9yaXR5IiwiaWciLCJGayIsIkdrIiwiSGsiLCJJayIsIkprIiwiS2siLCJMayIsIk1rIiwiTmsiLCJPayIsIlBrIiwiZmluaXNoZWRXb3JrIiwiZmluaXNoZWRMYW5lcyIsIlFrIiwidGltZW91dEhhbmRsZSIsIlJrIiwiU2siLCJUayIsIlVrIiwiVmsiLCJtdXRhYmxlUmVhZExhbmVzIiwiQmMiLCJQaiIsIm9uQ29tbWl0RmliZXJSb290IiwibWMiLCJvblJlY292ZXJhYmxlRXJyb3IiLCJYayIsIm9uUG9zdENvbW1pdEZpYmVyUm9vdCIsIllrIiwiWmsiLCJhbCIsImlzUmVhY3RDb21wb25lbnQiLCJwZW5kaW5nQ2hpbGRyZW4iLCJibCIsIm11dGFibGVTb3VyY2VFYWdlckh5ZHJhdGlvbkRhdGEiLCJjbCIsImNhY2hlIiwicGVuZGluZ1N1c3BlbnNlQm91bmRhcmllcyIsImRsIiwiZWwiLCJmbCIsImdsIiwiaGwiLCJpbCIsImpsIiwiemoiLCIkayIsImxsIiwicmVwb3J0RXJyb3IiLCJtbCIsIl9pbnRlcm5hbFJvb3QiLCJubCIsIm9sIiwicGwiLCJxbCIsInNsIiwicmwiLCJ1bm1vdW50IiwidW5zdGFibGVfc2NoZWR1bGVIeWRyYXRpb24iLCJzcGxpY2UiLCJxdWVyeVNlbGVjdG9yQWxsIiwiSlNPTiIsInN0cmluZ2lmeSIsImZvcm0iLCJ0bCIsInVzaW5nQ2xpZW50RW50cnlQb2ludCIsIkV2ZW50cyIsInVsIiwiZmluZEZpYmVyQnlIb3N0SW5zdGFuY2UiLCJidW5kbGVUeXBlIiwidmVyc2lvbiIsInJlbmRlcmVyUGFja2FnZU5hbWUiLCJ2bCIsInJlbmRlcmVyQ29uZmlnIiwib3ZlcnJpZGVIb29rU3RhdGUiLCJvdmVycmlkZUhvb2tTdGF0ZURlbGV0ZVBhdGgiLCJvdmVycmlkZUhvb2tTdGF0ZVJlbmFtZVBhdGgiLCJvdmVycmlkZVByb3BzIiwib3ZlcnJpZGVQcm9wc0RlbGV0ZVBhdGgiLCJvdmVycmlkZVByb3BzUmVuYW1lUGF0aCIsInNldEVycm9ySGFuZGxlciIsInNldFN1c3BlbnNlSGFuZGxlciIsInNjaGVkdWxlVXBkYXRlIiwiY3VycmVudERpc3BhdGNoZXJSZWYiLCJmaW5kSG9zdEluc3RhbmNlQnlGaWJlciIsImZpbmRIb3N0SW5zdGFuY2VzRm9yUmVmcmVzaCIsInNjaGVkdWxlUmVmcmVzaCIsInNjaGVkdWxlUm9vdCIsInNldFJlZnJlc2hIYW5kbGVyIiwiZ2V0Q3VycmVudEZpYmVyIiwicmVjb25jaWxlclZlcnNpb24iLCJfX1JFQUNUX0RFVlRPT0xTX0dMT0JBTF9IT09LX18iLCJ3bCIsImlzRGlzYWJsZWQiLCJzdXBwb3J0c0ZpYmVyIiwiaW5qZWN0IiwiZXhwb3J0cyIsImNyZWF0ZVBvcnRhbCIsImNyZWF0ZVJvb3QiLCJ1bnN0YWJsZV9zdHJpY3RNb2RlIiwiZmluZERPTU5vZGUiLCJmbHVzaFN5bmMiLCJoeWRyYXRlIiwiaHlkcmF0ZVJvb3QiLCJoeWRyYXRlZFNvdXJjZXMiLCJfZ2V0VmVyc2lvbiIsIl9zb3VyY2UiLCJ1bm1vdW50Q29tcG9uZW50QXROb2RlIiwidW5zdGFibGVfYmF0Y2hlZFVwZGF0ZXMiLCJ1bnN0YWJsZV9yZW5kZXJTdWJ0cmVlSW50b0NvbnRhaW5lciIsImNoZWNrRENFIiwiZXJyIiwibW9kdWxlIiwic2V0U3RhdGUiLCJmb3JjZVVwZGF0ZSIsIl9fc2VsZiIsIl9fc291cmNlIiwiZXNjYXBlIiwiX3N0YXR1cyIsIl9yZXN1bHQiLCJkZWZhdWx0IiwiQ2hpbGRyZW4iLCJtYXAiLCJjb3VudCIsInRvQXJyYXkiLCJvbmx5IiwiRnJhZ21lbnQiLCJQcm9maWxlciIsIlB1cmVDb21wb25lbnQiLCJTdHJpY3RNb2RlIiwiU3VzcGVuc2UiLCJjbG9uZUVsZW1lbnQiLCJjcmVhdGVDb250ZXh0IiwiX2N1cnJlbnRWYWx1ZTIiLCJfdGhyZWFkQ291bnQiLCJDb25zdW1lciIsIl9kZWZhdWx0VmFsdWUiLCJfZ2xvYmFsTmFtZSIsImNyZWF0ZUZhY3RvcnkiLCJjcmVhdGVSZWYiLCJmb3J3YXJkUmVmIiwiaXNWYWxpZEVsZW1lbnQiLCJsYXp5IiwibWVtbyIsInN0YXJ0VHJhbnNpdGlvbiIsInVuc3RhYmxlX2FjdCIsInBvcCIsInNvcnRJbmRleCIsInBlcmZvcm1hbmNlIiwic2V0SW1tZWRpYXRlIiwic3RhcnRUaW1lIiwiZXhwaXJhdGlvblRpbWUiLCJwcmlvcml0eUxldmVsIiwic2NoZWR1bGluZyIsImlzSW5wdXRQZW5kaW5nIiwiTWVzc2FnZUNoYW5uZWwiLCJwb3J0MiIsInBvcnQxIiwib25tZXNzYWdlIiwicG9zdE1lc3NhZ2UiLCJ1bnN0YWJsZV9Qcm9maWxpbmciLCJ1bnN0YWJsZV9jb250aW51ZUV4ZWN1dGlvbiIsInVuc3RhYmxlX2ZvcmNlRnJhbWVSYXRlIiwiZmxvb3IiLCJ1bnN0YWJsZV9nZXRGaXJzdENhbGxiYWNrTm9kZSIsInVuc3RhYmxlX25leHQiLCJ1bnN0YWJsZV9wYXVzZUV4ZWN1dGlvbiIsInVuc3RhYmxlX3J1bldpdGhQcmlvcml0eSIsImRlbGF5IiwidW5zdGFibGVfd3JhcENhbGxiYWNrIiwiX193ZWJwYWNrX21vZHVsZV9jYWNoZV9fIiwiX193ZWJwYWNrX3JlcXVpcmVfXyIsIm1vZHVsZUlkIiwiY2FjaGVkTW9kdWxlIiwiZXhlY09wdGlvbnMiLCJmYWN0b3J5IiwiX193ZWJwYWNrX21vZHVsZXNfXyIsInJlcXVpcmUiLCJpIiwiaGFuZGxlciIsImdldFByb3RvdHlwZU9mIiwib2JqIiwiX19lc01vZHVsZSIsIm5zIiwiZGVmIiwiZ2V0T3duUHJvcGVydHlOYW1lcyIsImRlZmluaXRpb24iLCJvIiwiaHUiLCJjaHVua0lkIiwibWluaUNzc0YiLCJobXJGIiwiZ2xvYmFsVGhpcyIsIkZ1bmN0aW9uIiwicHJvcCIsInNjcmlwdCIsIm5lZWRBdHRhY2giLCJzY3JpcHRzIiwiZ2V0RWxlbWVudHNCeVRhZ05hbWUiLCJzIiwiZ2V0QXR0cmlidXRlIiwiY2hhcnNldCIsInRpbWVvdXQiLCJuYyIsIm9uU2NyaXB0Q29tcGxldGUiLCJwcmV2Iiwib25lcnJvciIsIm9ubG9hZCIsImRvbmVGbnMiLCJmbiIsImhlYWQiLCJ0b1N0cmluZ1RhZyIsImN1cnJlbnRDaGlsZE1vZHVsZSIsImN1cnJlbnRVcGRhdGVBcHBseUhhbmRsZXJzIiwicXVldWVkSW52YWxpZGF0ZWRNb2R1bGVzIiwiY3VycmVudE1vZHVsZURhdGEiLCJpbnN0YWxsZWRNb2R1bGVzIiwiY3VycmVudFBhcmVudHMiLCJyZWdpc3RlcmVkU3RhdHVzSGFuZGxlcnMiLCJjdXJyZW50U3RhdHVzIiwiYmxvY2tpbmdQcm9taXNlcyIsImJsb2NraW5nUHJvbWlzZXNXYWl0aW5nIiwic2V0U3RhdHVzIiwibmV3U3RhdHVzIiwicmVzdWx0cyIsImFsbCIsInVuYmxvY2siLCJsaXN0IiwiaG90Q2hlY2siLCJhcHBseU9uVXBkYXRlIiwiaG1yTSIsInVwZGF0ZSIsInVwZGF0ZWRNb2R1bGVzIiwiaG1yQyIsInJlZHVjZSIsInByb21pc2VzIiwiaW50ZXJuYWxBcHBseSIsImFwcGx5SW52YWxpZGF0ZWRNb2R1bGVzIiwiaG90QXBwbHkiLCJlcnJvcnMiLCJmaWx0ZXIiLCJCb29sZWFuIiwiZGlzcG9zZVByb21pc2UiLCJyZXN1bHQiLCJkaXNwb3NlIiwiYXBwbHlQcm9taXNlIiwib3V0ZGF0ZWRNb2R1bGVzIiwibW9kdWxlcyIsImhtckkiLCJobXJEIiwiX21haW4iLCJob3QiLCJyZXF1ZXN0IiwiYWN0aXZlIiwicGFyZW50cyIsIndhcm4iLCJjcmVhdGVQcm9wZXJ0eURlc2NyaXB0b3IiLCJ0cmFja0Jsb2NraW5nUHJvbWlzZSIsImNyZWF0ZVJlcXVpcmUiLCJfYWNjZXB0ZWREZXBlbmRlbmNpZXMiLCJfYWNjZXB0ZWRFcnJvckhhbmRsZXJzIiwiX2RlY2xpbmVkRGVwZW5kZW5jaWVzIiwiX3NlbGZBY2NlcHRlZCIsIl9zZWxmRGVjbGluZWQiLCJfc2VsZkludmFsaWRhdGVkIiwiX2Rpc3Bvc2VIYW5kbGVycyIsIl9yZXF1aXJlU2VsZiIsImFjY2VwdCIsImRlcCIsImVycm9ySGFuZGxlciIsImRlY2xpbmUiLCJhZGREaXNwb3NlSGFuZGxlciIsInJlbW92ZURpc3Bvc2VIYW5kbGVyIiwiaWR4IiwiaW52YWxpZGF0ZSIsImNoZWNrIiwiYWRkU3RhdHVzSGFuZGxlciIsInJlbW92ZVN0YXR1c0hhbmRsZXIiLCJzY3JpcHRVcmwiLCJpbXBvcnRTY3JpcHRzIiwiY3VycmVudFNjcmlwdCIsImZ1bGxocmVmIiwibGlua1RhZyIsInJlbCIsImVycm9yVHlwZSIsInJlYWxIcmVmIiwiZXhpc3RpbmdMaW5rVGFncyIsImRhdGFIcmVmIiwiZXhpc3RpbmdTdHlsZVRhZ3MiLCJvbGRUYWciLCJtaW5pQ3NzIiwiY2h1bmtJZHMiLCJyZW1vdmVkQ2h1bmtzIiwicmVtb3ZlZE1vZHVsZXMiLCJhcHBseUhhbmRsZXJzIiwidXBkYXRlZE1vZHVsZXNMaXN0IiwiYXMiLCJjdXJyZW50VXBkYXRlZE1vZHVsZXNMaXN0IiwiY3VycmVudFVwZGF0ZUNodW5rcyIsImN1cnJlbnRVcGRhdGUiLCJjdXJyZW50VXBkYXRlUmVtb3ZlZENodW5rcyIsImN1cnJlbnRVcGRhdGVSdW50aW1lIiwiaW5zdGFsbGVkQ2h1bmtzIiwiaG1yU19qc29ucCIsIndhaXRpbmdVcGRhdGVSZXNvbHZlcyIsImxvYWRVcGRhdGVDaHVuayIsInJlYWxTcmMiLCJnZXRBZmZlY3RlZE1vZHVsZUVmZmVjdHMiLCJ1cGRhdGVNb2R1bGVJZCIsIm91dGRhdGVkRGVwZW5kZW5jaWVzIiwiY2hhaW4iLCJxdWV1ZUl0ZW0iLCJwYXJlbnRJZCIsInBhcmVudCIsImFkZEFsbFRvU2V0IiwiaXRlbSIsImpzb25wSG1yIiwiYXBwbGllZFVwZGF0ZSIsIndhcm5VbmV4cGVjdGVkUmVxdWlyZSIsIm5ld01vZHVsZUZhY3RvcnkiLCJhYm9ydEVycm9yIiwiZG9BcHBseSIsImRvRGlzcG9zZSIsImNoYWluSW5mbyIsIm9uRGVjbGluZWQiLCJpZ25vcmVEZWNsaW5lZCIsIm9uVW5hY2NlcHRlZCIsImlnbm9yZVVuYWNjZXB0ZWQiLCJvbkFjY2VwdGVkIiwib25EaXNwb3NlZCIsIm1vZHVsZU91dGRhdGVkRGVwZW5kZW5jaWVzIiwib3V0ZGF0ZWRTZWxmQWNjZXB0ZWRNb2R1bGVzIiwiaiIsIm91dGRhdGVkTW9kdWxlSWQiLCJkZXBlbmRlbmN5IiwiZGlzcG9zZUhhbmRsZXJzIiwiY2FsbGJhY2tzIiwiZXJyb3JIYW5kbGVycyIsImRlcGVuZGVuY2llc0ZvckNhbGxiYWNrcyIsImFjY2VwdENhbGxiYWNrIiwiZGVwZW5kZW5jeUlkIiwiZXJyMiIsIm9uRXJyb3JlZCIsIm9yaWdpbmFsRXJyb3IiLCJpZ25vcmVFcnJvcmVkIiwic2VsZiIsIm1vcmVNb2R1bGVzIiwicnVudGltZSIsImpzb25wIiwiZmV0Y2giLCJyZXNwb25zZSIsInN0YXR1c1RleHQiLCJqc29uIl0sInNvdXJjZVJvb3QiOiIifQ==